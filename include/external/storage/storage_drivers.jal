-- Title: storage device drivers (aliases)
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4o
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: This lib contains storage device drivers (aliases), so any mass
--              storage device can be used for libraries such as fat32, usb_msd, etc.
--
-- Sources:
--

-- Alias storage device
if (STORAGE_DEVICE == PATA_HARD_DISK) then
   -- hard disk procedures
   alias storage_start_read is pata_hd_start_read              -- get hard disk ready for reading
   alias storage_stop_read is pata_hd_stop_read                -- tell hard disk we are done reading
   alias storage_start_write is pata_hd_start_write            -- tell hard disk we are done reading
   alias storage_stop_write is pata_hd_stop_write              -- tell hard disk we are done reading
   alias storage_raw_read_sector is pata_hd_read_sector        -- read one sector to sector buffer array
   alias storage_raw_read_sector_address is pata_hd_read_sector_address        -- read one sector to sector buffer array
   alias storage_raw_write_sector is pata_hd_write_sector      -- write one sector from sector buffer array
   alias storage_raw_write_sector_address is pata_hd_write_sector_address       -- write one sector from sector buffer ar
   alias storage_set_idle is pata_hd_set_idle                  -- sets hard disk to idle state
   alias storage_raw_data_byte is pata_hd_data_byte            -- read one data byte from storage device
   alias storage_read_pulse_byte is pata_hd_read_pulse_byte    -- one byte read pulse
   -- hard disk vars
   alias storage_sector_buffer is pata_hd_sector_buffer        -- sector buffer array
   alias storage_number_of_sectors is pata_hd_number_of_sectors     -- number of sectors
   -- extra speed vars
   alias STORAGE_READ_EXTRA_SPEED is PATA_HD_READ_EXTRA_SPEED
   alias STORAGE_WRITE_EXTRA_SPEED is PATA_HD_WRITE_EXTRA_SPEED
elsif STORAGE_DEVICE == SD_CARD then
   -- sd card procedures
   alias storage_start_read is sd_start_read                   -- get sd card ready for reading
   alias storage_stop_read  is sd_stop_read                    -- tell sd card we are done reading
   alias storage_start_write is sd_start_write
   alias storage_stop_write  is sd_stop_write                  -- tell sd card we are done reading
   alias storage_raw_read_sector is sd_read_sector             -- read one sector to sector buffer array
   alias storage_raw_write_sector is sd_write_sector           -- write one sector from sector buffer array
   alias storage_raw_write_sector_address is sd_write_sector_address        -- write one sector from sector buffer array
   alias storage_set_idle is sd_set_idle                       -- sets sd card to idle state
   alias storage_raw_read_sector_address is sd_read_sector_address
   alias storage_read_pulse_byte is sd_read_pulse_byte         -- one byte read pulse
   alias storage_raw_data_byte is sd_data_byte                 -- read one data byte from storage device
   -- sd card vars
   alias storage_sector_buffer is sd_sector_buffer             -- sector buffer array
   alias storage_number_of_sectors is sd_number_of_sectors     -- number of sectors on sd card
   alias storage_is_inserted is sd_is_inserted                 -- if the media is inserted or not
   alias storage_has_error is sd_has_error                     -- storage device reported an error.
   
   -- extra speed vars
   alias STORAGE_READ_EXTRA_SPEED is SD_READ_EXTRA_SPEED
   alias STORAGE_WRITE_EXTRA_SPEED is SD_WRITE_EXTRA_SPEED

   -- Callbacks for fastest read/writes. See usage in USB_MSD lib.
   alias storage_read_sector_with_callback is sd_read_sector_with_callback
   alias storage_write_sector_with_callback is sd_write_sector_with_callback
   ;storage_read_callback() is a prototype in sd card library, used in libraries such as USB_MSD.
   ;storage_write_callback() is a prototype in sd card library, used in libraries such as USB_MSD.
end if
