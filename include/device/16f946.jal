-- ------------------------------------------------
-- Title: JalV2 device include file for 16f946
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16f946, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures for shadowing of ports and pins
--      to circumvent the read-modify-write problem.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC16F946.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Sat Mar 22 19:15:17 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x1460            -- ID for PIC programmer
const  word  CHIP_ID     = 0xF946            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "16F946"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_14       -- (banks=4)
pragma  target  chip     16F946
pragma  target  bank     0x0080
pragma  target  page     0x0800
pragma  stack            8
pragma  code             8192
pragma  eeprom           0x2100,256
pragma  ID               0x2000,4
pragma  data             0x20-0x7F,0xA0-0xEF,0x120-0x16F,0x1A0-0x1EF
pragma  shared           0x70-0x7F
--
var volatile byte _pic_accum at 0x7F      -- (compiler)
var volatile byte _pic_isr_w at 0x7E      -- (compiler)
--
const word   _FUSES_CT             = 1
const word   _FUSE_BASE            = 0x2007
const word   _FUSES                = 0x3FFF
--
-- ------------------------------------------------
var volatile byte   INDF                      at { 0x0,0x80,0x100,0x180 }
var volatile byte   _ind                      at { 0x0,0x80,0x100,0x180 }
-- ------------------------------------------------
var volatile byte   TMR0                      at { 0x1,0x101 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x2,0x82,0x102,0x182 }
var volatile byte   _pcl                      at { 0x2,0x82,0x102,0x182 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x3,0x83,0x103,0x183 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_NPD                at STATUS : 3
var volatile bit    STATUS_NTO                at STATUS : 4
var volatile bit*2  STATUS_RP                 at STATUS : 5
var volatile bit    STATUS_IRP                at STATUS : 7
var volatile bit    STATUS_RP0                at STATUS : 5
var volatile bit    STATUS_RP1                at STATUS : 6
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile byte   _status                   at { 0x3,0x83,0x103,0x183 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _not_pd                   =  3
const        byte   _not_to                   =  4
const        byte   _irp                      =  7
const        byte   _rp0                      =  5
const        byte   _rp1                      =  6
const        byte   _carry                    =  0
const        byte   _zero                     =  2
-- ------------------------------------------------
var volatile byte   FSR                       at { 0x4,0x84,0x104,0x184 }
var volatile byte   _fsr                      at { 0x4,0x84,0x104,0x184 }
-- ------------------------------------------------
var volatile byte   PORTA_                    at { 0x5 }
--
var          byte   PORTA                     at PORTA_
var volatile byte   PORTA_shadow_             at 0x7D
--
procedure PORTA'put(byte in x at PORTA_shadow_) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
procedure PORTA_low'put(byte in x) is
   PORTA_shadow_ = (PORTA_shadow_ & 0xF0) | (x & 0x0F)
   PORTA_ = PORTA_shadow_
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   PORTA_shadow_ = (PORTA_shadow_ & 0x0F) | (x << 4)
   PORTA_ = PORTA_shadow_
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    pin_A0                    at PORTA_ : 0
alias               pin_AN0                   is pin_A0
alias               pin_C1_NEG                is pin_A0
alias               pin_SEG12                 is pin_A0
--
procedure pin_A0'put(bit in x at PORTA_shadow_ : 0) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    pin_A1                    at PORTA_ : 1
alias               pin_AN1                   is pin_A1
alias               pin_C2_NEG                is pin_A1
alias               pin_SEG7                  is pin_A1
--
procedure pin_A1'put(bit in x at PORTA_shadow_ : 1) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    pin_A2                    at PORTA_ : 2
alias               pin_AN2                   is pin_A2
alias               pin_C2_POS                is pin_A2
alias               pin_VREF_NEG              is pin_A2
alias               pin_COM2                  is pin_A2
--
procedure pin_A2'put(bit in x at PORTA_shadow_ : 2) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    pin_A3                    at PORTA_ : 3
alias               pin_AN3                   is pin_A3
alias               pin_C1_POS                is pin_A3
alias               pin_VREF_POS              is pin_A3
alias               pin_SEG15                 is pin_A3
--
procedure pin_A3'put(bit in x at PORTA_shadow_ : 3) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    pin_A4                    at PORTA_ : 4
alias               pin_C1OUT                 is pin_A4
alias               pin_T0CKI                 is pin_A4
alias               pin_SEG4                  is pin_A4
--
procedure pin_A4'put(bit in x at PORTA_shadow_ : 4) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    pin_A5                    at PORTA_ : 5
alias               pin_AN4                   is pin_A5
alias               pin_C2OUT                 is pin_A5
alias               pin_SS                    is pin_A5
alias               pin_SEG5                  is pin_A5
--
procedure pin_A5'put(bit in x at PORTA_shadow_ : 5) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA6                 at PORTA : 6
var volatile bit    pin_A6                    at PORTA_ : 6
alias               pin_OSC2                  is pin_A6
alias               pin_CLKOUT                is pin_A6
alias               pin_T1OSO                 is pin_A6
--
procedure pin_A6'put(bit in x at PORTA_shadow_ : 6) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
var volatile bit    PORTA_RA7                 at PORTA : 7
var volatile bit    pin_A7                    at PORTA_ : 7
alias               pin_OSC1                  is pin_A7
alias               pin_CLKIN                 is pin_A7
alias               pin_T1OSI                 is pin_A7
--
procedure pin_A7'put(bit in x at PORTA_shadow_ : 7) is
   pragma inline
   PORTA_ = PORTA_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTB_                    at { 0x6,0x106 }
--
var          byte   PORTB                     at PORTB_
var volatile byte   PORTB_shadow_             at 0x7C
--
procedure PORTB'put(byte in x at PORTB_shadow_) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
procedure PORTB_low'put(byte in x) is
   PORTB_shadow_ = (PORTB_shadow_ & 0xF0) | (x & 0x0F)
   PORTB_ = PORTB_shadow_
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   PORTB_shadow_ = (PORTB_shadow_ & 0x0F) | (x << 4)
   PORTB_ = PORTB_shadow_
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    PORTB_RB0                 at PORTB : 0
var volatile bit    pin_B0                    at PORTB_ : 0
alias               pin_SEG0                  is pin_B0
--
procedure pin_B0'put(bit in x at PORTB_shadow_ : 0) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB1                 at PORTB : 1
var volatile bit    pin_B1                    at PORTB_ : 1
alias               pin_SEG1                  is pin_B1
--
procedure pin_B1'put(bit in x at PORTB_shadow_ : 1) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB2                 at PORTB : 2
var volatile bit    pin_B2                    at PORTB_ : 2
alias               pin_SEG2                  is pin_B2
--
procedure pin_B2'put(bit in x at PORTB_shadow_ : 2) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB3                 at PORTB : 3
var volatile bit    pin_B3                    at PORTB_ : 3
alias               pin_SEG3                  is pin_B3
--
procedure pin_B3'put(bit in x at PORTB_shadow_ : 3) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    pin_B4                    at PORTB_ : 4
alias               pin_COM0                  is pin_B4
--
procedure pin_B4'put(bit in x at PORTB_shadow_ : 4) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    pin_B5                    at PORTB_ : 5
alias               pin_COM1                  is pin_B5
--
procedure pin_B5'put(bit in x at PORTB_shadow_ : 5) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    pin_B6                    at PORTB_ : 6
alias               pin_SEG14                 is pin_B6
--
procedure pin_B6'put(bit in x at PORTB_shadow_ : 6) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
var volatile bit    PORTB_RB7                 at PORTB : 7
var volatile bit    pin_B7                    at PORTB_ : 7
alias               pin_SEG13                 is pin_B7
--
procedure pin_B7'put(bit in x at PORTB_shadow_ : 7) is
   pragma inline
   PORTB_ = PORTB_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTC_                    at { 0x7 }
--
var          byte   PORTC                     at PORTC_
var volatile byte   PORTC_shadow_             at 0x7B
--
procedure PORTC'put(byte in x at PORTC_shadow_) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
procedure PORTC_low'put(byte in x) is
   PORTC_shadow_ = (PORTC_shadow_ & 0xF0) | (x & 0x0F)
   PORTC_ = PORTC_shadow_
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   PORTC_shadow_ = (PORTC_shadow_ & 0x0F) | (x << 4)
   PORTC_ = PORTC_shadow_
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    pin_C0                    at PORTC_ : 0
alias               pin_VLCD1                 is pin_C0
--
procedure pin_C0'put(bit in x at PORTC_shadow_ : 0) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    pin_C1                    at PORTC_ : 1
alias               pin_VLCD2                 is pin_C1
--
procedure pin_C1'put(bit in x at PORTC_shadow_ : 1) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    pin_C2                    at PORTC_ : 2
alias               pin_VLCD3                 is pin_C2
--
procedure pin_C2'put(bit in x at PORTC_shadow_ : 2) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    pin_C3                    at PORTC_ : 3
alias               pin_SEG6                  is pin_C3
--
procedure pin_C3'put(bit in x at PORTC_shadow_ : 3) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    pin_C4                    at PORTC_ : 4
alias               pin_T1G                   is pin_C4
alias               pin_SDO                   is pin_C4
alias               pin_SEG11                 is pin_C4
--
procedure pin_C4'put(bit in x at PORTC_shadow_ : 4) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    pin_C5                    at PORTC_ : 5
alias               pin_T1CKI                 is pin_C5
alias               pin_CCP1                  is pin_C5
alias               pin_SEG10                 is pin_C5
--
procedure pin_C5'put(bit in x at PORTC_shadow_ : 5) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    pin_C6                    at PORTC_ : 6
alias               pin_TX                    is pin_C6
alias               pin_CK                    is pin_C6
alias               pin_SCK                   is pin_C6
alias               pin_SCL                   is pin_C6
alias               pin_SEG9                  is pin_C6
--
procedure pin_C6'put(bit in x at PORTC_shadow_ : 6) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
var volatile bit    PORTC_RC7                 at PORTC : 7
var volatile bit    pin_C7                    at PORTC_ : 7
alias               pin_RX                    is pin_C7
alias               pin_DT                    is pin_C7
alias               pin_SDI                   is pin_C7
alias               pin_SDA                   is pin_C7
alias               pin_SEG8                  is pin_C7
--
procedure pin_C7'put(bit in x at PORTC_shadow_ : 7) is
   pragma inline
   PORTC_ = PORTC_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTD_                    at { 0x8 }
--
var          byte   PORTD                     at PORTD_
var volatile byte   PORTD_shadow_             at 0x7A
--
procedure PORTD'put(byte in x at PORTD_shadow_) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
procedure PORTD_low'put(byte in x) is
   PORTD_shadow_ = (PORTD_shadow_ & 0xF0) | (x & 0x0F)
   PORTD_ = PORTD_shadow_
end procedure
function PORTD_low'get() return byte is
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   PORTD_shadow_ = (PORTD_shadow_ & 0x0F) | (x << 4)
   PORTD_ = PORTD_shadow_
end procedure
function PORTD_high'get() return byte is
   return (PORTD >> 4)
end function
--
var volatile bit    PORTD_RD0                 at PORTD : 0
var volatile bit    pin_D0                    at PORTD_ : 0
alias               pin_COM3                  is pin_D0
--
procedure pin_D0'put(bit in x at PORTD_shadow_ : 0) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD1                 at PORTD : 1
var volatile bit    pin_D1                    at PORTD_ : 1
--
procedure pin_D1'put(bit in x at PORTD_shadow_ : 1) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD2                 at PORTD : 2
var volatile bit    pin_D2                    at PORTD_ : 2
alias               pin_CCP2                  is pin_D2
--
procedure pin_D2'put(bit in x at PORTD_shadow_ : 2) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD3                 at PORTD : 3
var volatile bit    pin_D3                    at PORTD_ : 3
alias               pin_SEG16                 is pin_D3
--
procedure pin_D3'put(bit in x at PORTD_shadow_ : 3) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD4                 at PORTD : 4
var volatile bit    pin_D4                    at PORTD_ : 4
alias               pin_SEG17                 is pin_D4
--
procedure pin_D4'put(bit in x at PORTD_shadow_ : 4) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD5                 at PORTD : 5
var volatile bit    pin_D5                    at PORTD_ : 5
alias               pin_SEG18                 is pin_D5
--
procedure pin_D5'put(bit in x at PORTD_shadow_ : 5) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD6                 at PORTD : 6
var volatile bit    pin_D6                    at PORTD_ : 6
alias               pin_SEG19                 is pin_D6
--
procedure pin_D6'put(bit in x at PORTD_shadow_ : 6) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
var volatile bit    PORTD_RD7                 at PORTD : 7
var volatile bit    pin_D7                    at PORTD_ : 7
alias               pin_SEG20_RD7             is pin_D7
--
procedure pin_D7'put(bit in x at PORTD_shadow_ : 7) is
   pragma inline
   PORTD_ = PORTD_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTE_                    at { 0x9 }
--
var          byte   PORTE                     at PORTE_
var volatile byte   PORTE_shadow_             at 0x79
--
procedure PORTE'put(byte in x at PORTE_shadow_) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
procedure PORTE_low'put(byte in x) is
   PORTE_shadow_ = (PORTE_shadow_ & 0xF0) | (x & 0x0F)
   PORTE_ = PORTE_shadow_
end procedure
function PORTE_low'get() return byte is
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   PORTE_shadow_ = (PORTE_shadow_ & 0x0F) | (x << 4)
   PORTE_ = PORTE_shadow_
end procedure
function PORTE_high'get() return byte is
   return (PORTE >> 4)
end function
--
var volatile bit    PORTE_RE0                 at PORTE : 0
var volatile bit    pin_E0                    at PORTE_ : 0
alias               pin_AN5                   is pin_E0
alias               pin_SEG21                 is pin_E0
--
procedure pin_E0'put(bit in x at PORTE_shadow_ : 0) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE1                 at PORTE : 1
var volatile bit    pin_E1                    at PORTE_ : 1
alias               pin_AN6                   is pin_E1
alias               pin_SEG22                 is pin_E1
--
procedure pin_E1'put(bit in x at PORTE_shadow_ : 1) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE2                 at PORTE : 2
var volatile bit    pin_E2                    at PORTE_ : 2
alias               pin_AN7                   is pin_E2
alias               pin_SEG23                 is pin_E2
--
procedure pin_E2'put(bit in x at PORTE_shadow_ : 2) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE3                 at PORTE : 3
var volatile bit    pin_E3                    at PORTE_ : 3
--
procedure pin_E3'put(bit in x at PORTE_shadow_ : 3) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE4                 at PORTE : 4
var volatile bit    pin_E4                    at PORTE_ : 4
alias               pin_SEG24                 is pin_E4
--
procedure pin_E4'put(bit in x at PORTE_shadow_ : 4) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE5                 at PORTE : 5
var volatile bit    pin_E5                    at PORTE_ : 5
alias               pin_SEG25                 is pin_E5
--
procedure pin_E5'put(bit in x at PORTE_shadow_ : 5) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE6                 at PORTE : 6
var volatile bit    pin_E6                    at PORTE_ : 6
alias               pin_SEG26                 is pin_E6
--
procedure pin_E6'put(bit in x at PORTE_shadow_ : 6) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
var volatile bit    PORTE_RE7                 at PORTE : 7
var volatile bit    pin_E7                    at PORTE_ : 7
alias               pin_SEG27                 is pin_E7
--
procedure pin_E7'put(bit in x at PORTE_shadow_ : 7) is
   pragma inline
   PORTE_ = PORTE_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xA,0x8A,0x10A,0x18A }
var volatile bit*5  PCLATH_PCLATH             at PCLATH : 0
var volatile byte   _pclath                   at { 0xA,0x8A,0x10A,0x18A }
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xB,0x8B,0x10B,0x18B }
var volatile bit    INTCON_RBIF               at INTCON : 0
var volatile bit    INTCON_INTF               at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_RBIE               at INTCON : 3
var volatile bit    INTCON_INTE               at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_T0IE               at INTCON : 5
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0xC }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_CCP1IF               at PIR1 : 2
alias               PIR1_CCPIF                is PIR1_CCP1IF
var volatile bit    PIR1_SSPIF                at PIR1 : 3
var volatile bit    PIR1_TXIF                 at PIR1 : 4
var volatile bit    PIR1_RCIF                 at PIR1 : 5
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_EEIF                 at PIR1 : 7
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0xD }
var volatile bit    PIR2_CCP2IF               at PIR2 : 0
var volatile bit    PIR2_LVDIF                at PIR2 : 2
var volatile bit    PIR2_LCDIF                at PIR2 : 4
var volatile bit    PIR2_C1IF                 at PIR2 : 5
var volatile bit    PIR2_C2IF                 at PIR2 : 6
var volatile bit    PIR2_OSFIF                at PIR2 : 7
-- ------------------------------------------------
var volatile word   TMR1                      at { 0xE }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0xE }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0xF }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0x10 }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_TMR1CS              at T1CON : 1
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit    T1CON_T1OSCEN             at T1CON : 3
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit    T1CON_TMR1GE              at T1CON : 6
var volatile bit    T1CON_T1GINV              at T1CON : 7
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_T1GE                at T1CON : 6
var volatile bit    T1CON_T1INSYNC            at T1CON : 2
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0x11 }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x12 }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_TOUTPS              at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_TOUTPS0             at T2CON : 3
var volatile bit    T2CON_TOUTPS1             at T2CON : 4
var volatile bit    T2CON_TOUTPS2             at T2CON : 5
var volatile bit    T2CON_TOUTPS3             at T2CON : 6
-- ------------------------------------------------
var volatile byte   SSPBUF                    at { 0x13 }
-- ------------------------------------------------
var volatile byte   SSPCON                    at { 0x14 }
var volatile bit*4  SSPCON_SSPM               at SSPCON : 0
var volatile bit    SSPCON_CKP                at SSPCON : 4
var volatile bit    SSPCON_SSPEN              at SSPCON : 5
var volatile bit    SSPCON_SSPOV              at SSPCON : 6
var volatile bit    SSPCON_WCOL               at SSPCON : 7
var volatile bit    SSPCON_SSPM0              at SSPCON : 0
var volatile bit    SSPCON_SSPM1              at SSPCON : 1
var volatile bit    SSPCON_SSPM2              at SSPCON : 2
var volatile bit    SSPCON_SSPM3              at SSPCON : 3
--
alias               SSPCON1                   is SSPCON
alias               SSPCON1_SSPM              is SSPCON_SSPM
alias               SSPCON1_CKP               is SSPCON_CKP
alias               SSPCON1_SSPEN             is SSPCON_SSPEN
alias               SSPCON1_SSPOV             is SSPCON_SSPOV
alias               SSPCON1_WCOL              is SSPCON_WCOL
alias               SSPCON1_SSPM0             is SSPCON_SSPM0
alias               SSPCON1_SSPM1             is SSPCON_SSPM1
alias               SSPCON1_SSPM2             is SSPCON_SSPM2
alias               SSPCON1_SSPM3             is SSPCON_SSPM3
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0x15 }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0x15 }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0x16 }
-- ------------------------------------------------
var volatile byte   CCP1CON                   at { 0x17 }
var volatile bit*4  CCP1CON_CCP1M             at CCP1CON : 0
alias               CCP1CON_MODE              is CCP1CON_CCP1M
var volatile bit    CCP1CON_CCP1Y             at CCP1CON : 4
var volatile bit*2  CCP1CON_DC1B              at CCP1CON : 4
var volatile bit    CCP1CON_CCP1X             at CCP1CON : 5
var volatile bit    CCP1CON_CCP1M0            at CCP1CON : 0
var volatile bit    CCP1CON_CCP1M1            at CCP1CON : 1
var volatile bit    CCP1CON_CCP1M2            at CCP1CON : 2
var volatile bit    CCP1CON_CCP1M3            at CCP1CON : 3
-- ------------------------------------------------
var volatile byte   RCSTA                     at { 0x18 }
var volatile bit    RCSTA_RX9D                at RCSTA : 0
var volatile bit    RCSTA_OERR                at RCSTA : 1
var volatile bit    RCSTA_FERR                at RCSTA : 2
var volatile bit    RCSTA_ADDEN               at RCSTA : 3
var volatile bit    RCSTA_CREN                at RCSTA : 4
var volatile bit    RCSTA_SREN                at RCSTA : 5
var volatile bit    RCSTA_RX9                 at RCSTA : 6
var volatile bit    RCSTA_SPEN                at RCSTA : 7
var volatile bit    RCSTA_RCD8                at RCSTA : 0
var volatile bit    RCSTA_RC9                 at RCSTA : 6
var volatile bit    RCSTA_NRC8                at RCSTA : 6
var volatile bit    RCSTA_RC8_9               at RCSTA : 6
-- ------------------------------------------------
var volatile byte   TXREG                     at { 0x19 }
-- ------------------------------------------------
var volatile byte   RCREG                     at { 0x1A }
-- ------------------------------------------------
var volatile word   CCPR2                     at { 0x1B }
-- ------------------------------------------------
var volatile byte   CCPR2L                    at { 0x1B }
-- ------------------------------------------------
var volatile byte   CCPR2H                    at { 0x1C }
-- ------------------------------------------------
var volatile byte   CCP2CON                   at { 0x1D }
var volatile bit*4  CCP2CON_CCP2M             at CCP2CON : 0
alias               CCP2CON_MODE              is CCP2CON_CCP2M
var volatile bit    CCP2CON_CCP2Y             at CCP2CON : 4
var volatile bit*2  CCP2CON_DC2B              at CCP2CON : 4
var volatile bit    CCP2CON_CCP2X             at CCP2CON : 5
var volatile bit    CCP2CON_CCP2M0            at CCP2CON : 0
var volatile bit    CCP2CON_CCP2M1            at CCP2CON : 1
var volatile bit    CCP2CON_CCP2M2            at CCP2CON : 2
var volatile bit    CCP2CON_CCP2M3            at CCP2CON : 3
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0x1E }
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0x1F }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*3  ADCON0_CHS                at ADCON0 : 2
var volatile bit*2  ADCON0_VCFG               at ADCON0 : 5
var volatile bit    ADCON0_ADFM               at ADCON0 : 7
var volatile bit    ADCON0_NDONE              at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_VCFG0              at ADCON0 : 5
var volatile bit    ADCON0_VCFG1              at ADCON0 : 6
var volatile bit    ADCON0_GO_DONE            at ADCON0 : 1
var volatile bit    ADCON0_GO                 at ADCON0 : 1
-- ------------------------------------------------
var volatile byte   OPTION_REG                at { 0x81,0x181 }
var volatile bit*3  OPTION_REG_PS             at OPTION_REG : 0
var volatile bit    OPTION_REG_PSA            at OPTION_REG : 3
alias               T0CON_PSA                 is OPTION_REG_PSA
var volatile bit    OPTION_REG_T0SE           at OPTION_REG : 4
alias               T0CON_T0SE                is OPTION_REG_T0SE
var volatile bit    OPTION_REG_T0CS           at OPTION_REG : 5
alias               T0CON_T0CS                is OPTION_REG_T0CS
var volatile bit    OPTION_REG_INTEDG         at OPTION_REG : 6
var volatile bit    OPTION_REG_NRBPU          at OPTION_REG : 7
var volatile bit    OPTION_REG_PS0            at OPTION_REG : 0
var volatile bit    OPTION_REG_PS1            at OPTION_REG : 1
var volatile bit    OPTION_REG_PS2            at OPTION_REG : 2
alias               T0CON_T0PS                is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x85 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_AN0_direction         is pin_A0_direction
alias               pin_C1_NEG_direction      is pin_A0_direction
alias               pin_SEG12_direction       is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_AN1_direction         is pin_A1_direction
alias               pin_C2_NEG_direction      is pin_A1_direction
alias               pin_SEG7_direction        is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_AN2_direction         is pin_A2_direction
alias               pin_C2_POS_direction      is pin_A2_direction
alias               pin_VREF_NEG_direction    is pin_A2_direction
alias               pin_COM2_direction        is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_AN3_direction         is pin_A3_direction
alias               pin_C1_POS_direction      is pin_A3_direction
alias               pin_VREF_POS_direction    is pin_A3_direction
alias               pin_SEG15_direction       is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_C1OUT_direction       is pin_A4_direction
alias               pin_T0CKI_direction       is pin_A4_direction
alias               pin_SEG4_direction        is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_AN4_direction         is pin_A5_direction
alias               pin_C2OUT_direction       is pin_A5_direction
alias               pin_SS_direction          is pin_A5_direction
alias               pin_SEG5_direction        is pin_A5_direction
--
var volatile bit    TRISA_TRISA6              at TRISA : 6
var volatile bit    pin_A6_direction          at TRISA : 6
alias               pin_OSC2_direction        is pin_A6_direction
alias               pin_CLKOUT_direction      is pin_A6_direction
alias               pin_T1OSO_direction       is pin_A6_direction
--
var volatile bit    TRISA_TRISA7              at TRISA : 7
var volatile bit    pin_A7_direction          at TRISA : 7
alias               pin_OSC1_direction        is pin_A7_direction
alias               pin_CLKIN_direction       is pin_A7_direction
alias               pin_T1OSI_direction       is pin_A7_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0x86,0x186 }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB0              at TRISB : 0
var volatile bit    pin_B0_direction          at TRISB : 0
alias               pin_SEG0_direction        is pin_B0_direction
--
var volatile bit    TRISB_TRISB1              at TRISB : 1
var volatile bit    pin_B1_direction          at TRISB : 1
alias               pin_SEG1_direction        is pin_B1_direction
--
var volatile bit    TRISB_TRISB2              at TRISB : 2
var volatile bit    pin_B2_direction          at TRISB : 2
alias               pin_SEG2_direction        is pin_B2_direction
--
var volatile bit    TRISB_TRISB3              at TRISB : 3
var volatile bit    pin_B3_direction          at TRISB : 3
alias               pin_SEG3_direction        is pin_B3_direction
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_COM0_direction        is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_COM1_direction        is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_SEG14_direction       is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_SEG13_direction       is pin_B7_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0x87 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_VLCD1_direction       is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_VLCD2_direction       is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_VLCD3_direction       is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_SEG6_direction        is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_T1G_direction         is pin_C4_direction
alias               pin_SDO_direction         is pin_C4_direction
alias               pin_SEG11_direction       is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_T1CKI_direction       is pin_C5_direction
alias               pin_CCP1_direction        is pin_C5_direction
alias               pin_SEG10_direction       is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_TX_direction          is pin_C6_direction
alias               pin_CK_direction          is pin_C6_direction
alias               pin_SCK_direction         is pin_C6_direction
alias               pin_SCL_direction         is pin_C6_direction
alias               pin_SEG9_direction        is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_RX_direction          is pin_C7_direction
alias               pin_DT_direction          is pin_C7_direction
alias               pin_SDI_direction         is pin_C7_direction
alias               pin_SDA_direction         is pin_C7_direction
alias               pin_SEG8_direction        is pin_C7_direction
--
-- ------------------------------------------------
var volatile byte   TRISD                     at { 0x88 }
alias               PORTD_direction           is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD0              at TRISD : 0
var volatile bit    pin_D0_direction          at TRISD : 0
alias               pin_COM3_direction        is pin_D0_direction
--
var volatile bit    TRISD_TRISD1              at TRISD : 1
var volatile bit    pin_D1_direction          at TRISD : 1
--
var volatile bit    TRISD_TRISD2              at TRISD : 2
var volatile bit    pin_D2_direction          at TRISD : 2
alias               pin_CCP2_direction        is pin_D2_direction
--
var volatile bit    TRISD_TRISD3              at TRISD : 3
var volatile bit    pin_D3_direction          at TRISD : 3
alias               pin_SEG16_direction       is pin_D3_direction
--
var volatile bit    TRISD_TRISD4              at TRISD : 4
var volatile bit    pin_D4_direction          at TRISD : 4
alias               pin_SEG17_direction       is pin_D4_direction
--
var volatile bit    TRISD_TRISD5              at TRISD : 5
var volatile bit    pin_D5_direction          at TRISD : 5
alias               pin_SEG18_direction       is pin_D5_direction
--
var volatile bit    TRISD_TRISD6              at TRISD : 6
var volatile bit    pin_D6_direction          at TRISD : 6
alias               pin_SEG19_direction       is pin_D6_direction
--
var volatile bit    TRISD_TRISD7              at TRISD : 7
var volatile bit    pin_D7_direction          at TRISD : 7
alias               pin_SEG20_RD7_direction   is pin_D7_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     at { 0x89 }
alias               PORTE_direction           is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE0              at TRISE : 0
var volatile bit    pin_E0_direction          at TRISE : 0
alias               pin_AN5_direction         is pin_E0_direction
alias               pin_SEG21_direction       is pin_E0_direction
--
var volatile bit    TRISE_TRISE1              at TRISE : 1
var volatile bit    pin_E1_direction          at TRISE : 1
alias               pin_AN6_direction         is pin_E1_direction
alias               pin_SEG22_direction       is pin_E1_direction
--
var volatile bit    TRISE_TRISE2              at TRISE : 2
var volatile bit    pin_E2_direction          at TRISE : 2
alias               pin_AN7_direction         is pin_E2_direction
alias               pin_SEG23_direction       is pin_E2_direction
--
var volatile bit    TRISE_TRISE3              at TRISE : 3
var volatile bit    pin_E3_direction          at TRISE : 3
--
var volatile bit    TRISE_TRISE4              at TRISE : 4
var volatile bit    pin_E4_direction          at TRISE : 4
alias               pin_SEG24_direction       is pin_E4_direction
--
var volatile bit    TRISE_TRISE5              at TRISE : 5
var volatile bit    pin_E5_direction          at TRISE : 5
alias               pin_SEG25_direction       is pin_E5_direction
--
var volatile bit    TRISE_TRISE6              at TRISE : 6
var volatile bit    pin_E6_direction          at TRISE : 6
alias               pin_SEG26_direction       is pin_E6_direction
--
var volatile bit    TRISE_TRISE7              at TRISE : 7
var volatile bit    pin_E7_direction          at TRISE : 7
alias               pin_SEG27_direction       is pin_E7_direction
--
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0x8C }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_CCP1IE               at PIE1 : 2
alias               PIE1_CCPIE                is PIE1_CCP1IE
var volatile bit    PIE1_SSPIE                at PIE1 : 3
var volatile bit    PIE1_TXIE                 at PIE1 : 4
var volatile bit    PIE1_RCIE                 at PIE1 : 5
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_EEIE                 at PIE1 : 7
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0x8D }
var volatile bit    PIE2_CCP2IE               at PIE2 : 0
var volatile bit    PIE2_LVDIE                at PIE2 : 2
var volatile bit    PIE2_LCDIE                at PIE2 : 4
var volatile bit    PIE2_C1IE                 at PIE2 : 5
var volatile bit    PIE2_C2IE                 at PIE2 : 6
var volatile bit    PIE2_OSFIE                at PIE2 : 7
-- ------------------------------------------------
var volatile byte   PCON                      at { 0x8E }
var volatile bit    PCON_NBOR                 at PCON : 0
var volatile bit    PCON_NPOR                 at PCON : 1
var volatile bit    PCON_SBOREN               at PCON : 4
var volatile bit    PCON_NBO                  at PCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0x8F }
var volatile bit    OSCCON_SCS                at OSCCON : 0
var volatile bit    OSCCON_LTS                at OSCCON : 1
var volatile bit    OSCCON_HTS                at OSCCON : 2
var volatile bit    OSCCON_OSTS               at OSCCON : 3
var volatile bit*3  OSCCON_IRCF               at OSCCON : 4
var volatile bit    OSCCON_IRCF0              at OSCCON : 4
var volatile bit    OSCCON_IRCF1              at OSCCON : 5
var volatile bit    OSCCON_IRCF2              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0x90 }
var volatile bit*5  OSCTUNE_TUN               at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN0              at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN1              at OSCTUNE : 1
var volatile bit    OSCTUNE_TUN2              at OSCTUNE : 2
var volatile bit    OSCTUNE_TUN3              at OSCTUNE : 3
var volatile bit    OSCTUNE_TUN4              at OSCTUNE : 4
-- ------------------------------------------------
var volatile byte   ANSEL                     at { 0x91 }
var volatile bit    ANSEL_ANS0                at ANSEL : 0
var volatile bit    ANSEL_ANS1                at ANSEL : 1
var volatile bit    ANSEL_ANS2                at ANSEL : 2
var volatile bit    ANSEL_ANS3                at ANSEL : 3
var volatile bit    ANSEL_ANS4                at ANSEL : 4
var volatile bit    ANSEL_ANS5                at ANSEL : 5
var volatile bit    ANSEL_ANS6                at ANSEL : 6
var volatile bit    ANSEL_ANS7                at ANSEL : 7
var volatile bit    ANSEL_AN0                 at ANSEL : 0
var volatile bit    ANSEL_AN1                 at ANSEL : 1
var volatile bit    ANSEL_AN2                 at ANSEL : 2
var volatile bit    ANSEL_AN3                 at ANSEL : 3
var volatile bit    ANSEL_AN4                 at ANSEL : 4
var volatile bit    ANSEL_AN5                 at ANSEL : 5
var volatile bit    ANSEL_AN6                 at ANSEL : 6
var volatile bit    ANSEL_AN7                 at ANSEL : 7
-- ------------------------------------------------
var volatile byte   PR2                       at { 0x92 }
-- ------------------------------------------------
var volatile byte   SSPADD                    at { 0x93 }
-- ------------------------------------------------
var volatile byte   SSPSTAT                   at { 0x94 }
var volatile bit    SSPSTAT_BF                at SSPSTAT : 0
var volatile bit    SSPSTAT_UA                at SSPSTAT : 1
var volatile bit    SSPSTAT_R_NW              at SSPSTAT : 2
var volatile bit    SSPSTAT_S                 at SSPSTAT : 3
var volatile bit    SSPSTAT_P                 at SSPSTAT : 4
var volatile bit    SSPSTAT_D_NA              at SSPSTAT : 5
var volatile bit    SSPSTAT_CKE               at SSPSTAT : 6
var volatile bit    SSPSTAT_SMP               at SSPSTAT : 7
var volatile bit    SSPSTAT_R                 at SSPSTAT : 2
var volatile bit    SSPSTAT_D                 at SSPSTAT : 5
var volatile bit    SSPSTAT_I2C_READ          at SSPSTAT : 2
var volatile bit    SSPSTAT_I2C_START         at SSPSTAT : 3
var volatile bit    SSPSTAT_I2C_STOP          at SSPSTAT : 4
var volatile bit    SSPSTAT_I2C_DATA          at SSPSTAT : 5
var volatile bit    SSPSTAT_NW                at SSPSTAT : 2
var volatile bit    SSPSTAT_NA                at SSPSTAT : 5
var volatile bit    SSPSTAT_NWRITE            at SSPSTAT : 2
var volatile bit    SSPSTAT_NADDRESS          at SSPSTAT : 5
var volatile bit    SSPSTAT_R_W               at SSPSTAT : 2
var volatile bit    SSPSTAT_D_A               at SSPSTAT : 5
var volatile bit    SSPSTAT_READ_WRITE        at SSPSTAT : 2
var volatile bit    SSPSTAT_DATA_ADDRESS      at SSPSTAT : 5
-- ------------------------------------------------
var volatile byte   WPUB                      at { 0x95 }
var volatile bit    WPUB_WPUB0                at WPUB : 0
var volatile bit    WPUB_WPUB1                at WPUB : 1
var volatile bit    WPUB_WPUB2                at WPUB : 2
var volatile bit    WPUB_WPUB3                at WPUB : 3
var volatile bit    WPUB_WPUB4                at WPUB : 4
var volatile bit    WPUB_WPUB5                at WPUB : 5
var volatile bit    WPUB_WPUB6                at WPUB : 6
var volatile bit    WPUB_WPUB7                at WPUB : 7
var volatile bit    WPUB_WPU0                 at WPUB : 0
var volatile bit    WPUB_WPU1                 at WPUB : 1
var volatile bit    WPUB_WPU2                 at WPUB : 2
var volatile bit    WPUB_WPU3                 at WPUB : 3
var volatile bit    WPUB_WPU4                 at WPUB : 4
var volatile bit    WPUB_WPU5                 at WPUB : 5
var volatile bit    WPUB_WPU6                 at WPUB : 6
var volatile bit    WPUB_WPU7                 at WPUB : 7
-- ------------------------------------------------
var volatile byte   IOCB                      at { 0x96 }
var volatile bit*4  IOCB_IOCB                 at IOCB : 4
var volatile bit    IOCB_IOCB4                at IOCB : 4
var volatile bit    IOCB_IOCB5                at IOCB : 5
var volatile bit    IOCB_IOCB6                at IOCB : 6
var volatile bit    IOCB_IOCB7                at IOCB : 7
var volatile bit    IOCB_IOC4                 at IOCB : 4
var volatile bit    IOCB_IOC5                 at IOCB : 5
var volatile bit    IOCB_IOC6                 at IOCB : 6
var volatile bit    IOCB_IOC7                 at IOCB : 7
-- ------------------------------------------------
var volatile byte   CMCON1                    at { 0x97 }
var volatile bit    CMCON1_C2SYNC             at CMCON1 : 0
var volatile bit    CMCON1_T1GSS              at CMCON1 : 1
-- ------------------------------------------------
var volatile byte   TXSTA                     at { 0x98 }
var volatile bit    TXSTA_TX9D                at TXSTA : 0
var volatile bit    TXSTA_TRMT                at TXSTA : 1
var volatile bit    TXSTA_BRGH                at TXSTA : 2
var volatile bit    TXSTA_SYNC                at TXSTA : 4
var volatile bit    TXSTA_TXEN                at TXSTA : 5
var volatile bit    TXSTA_TX9                 at TXSTA : 6
var volatile bit    TXSTA_CSRC                at TXSTA : 7
var volatile bit    TXSTA_TXD8                at TXSTA : 0
var volatile bit    TXSTA_NTX8                at TXSTA : 6
var volatile bit    TXSTA_TX8_9               at TXSTA : 6
-- ------------------------------------------------
var volatile byte   SPBRG                     at { 0x99 }
alias               SPBRGL                    is SPBRG
-- ------------------------------------------------
var volatile byte   CMCON0                    at { 0x9C }
var volatile bit*3  CMCON0_CM                 at CMCON0 : 0
var volatile bit    CMCON0_CIS                at CMCON0 : 3
var volatile bit    CMCON0_C1INV              at CMCON0 : 4
var volatile bit    CMCON0_C2INV              at CMCON0 : 5
var volatile bit    CMCON0_C1OUT              at CMCON0 : 6
var volatile bit    CMCON0_C2OUT              at CMCON0 : 7
var volatile bit    CMCON0_CM0                at CMCON0 : 0
var volatile bit    CMCON0_CM1                at CMCON0 : 1
var volatile bit    CMCON0_CM2                at CMCON0 : 2
-- ------------------------------------------------
var volatile byte   VRCON                     at { 0x9D }
var volatile bit*4  VRCON_VR                  at VRCON : 0
var volatile bit    VRCON_VRR                 at VRCON : 5
var volatile bit    VRCON_VREN                at VRCON : 7
var volatile bit    VRCON_VR0                 at VRCON : 0
var volatile bit    VRCON_VR1                 at VRCON : 1
var volatile bit    VRCON_VR2                 at VRCON : 2
var volatile bit    VRCON_VR3                 at VRCON : 3
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0x9E }
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0x9F }
var volatile bit*3  ADCON1_ADCS               at ADCON1 : 4
var volatile bit    ADCON1_ADCS0              at ADCON1 : 4
var volatile bit    ADCON1_ADCS1              at ADCON1 : 5
var volatile bit    ADCON1_ADCS2              at ADCON1 : 6
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0x105 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit*4  WDTCON_WDTPS              at WDTCON : 1
var volatile bit    WDTCON_SWDTE              at WDTCON : 0
var volatile bit    WDTCON_WDTPS0             at WDTCON : 1
var volatile bit    WDTCON_WDTPS1             at WDTCON : 2
var volatile bit    WDTCON_WDTPS2             at WDTCON : 3
var volatile bit    WDTCON_WDTPS3             at WDTCON : 4
-- ------------------------------------------------
var volatile byte   LCDCON                    at { 0x107 }
var volatile bit*2  LCDCON_LMUX               at LCDCON : 0
var volatile bit*2  LCDCON_CS                 at LCDCON : 2
var volatile bit    LCDCON_VLCDEN             at LCDCON : 4
var volatile bit    LCDCON_WERR               at LCDCON : 5
var volatile bit    LCDCON_SLPEN              at LCDCON : 6
var volatile bit    LCDCON_LCDEN              at LCDCON : 7
var volatile bit    LCDCON_LMUX0              at LCDCON : 0
var volatile bit    LCDCON_LMUX1              at LCDCON : 1
var volatile bit    LCDCON_CS0                at LCDCON : 2
var volatile bit    LCDCON_CS1                at LCDCON : 3
-- ------------------------------------------------
var volatile byte   LCDPS                     at { 0x108 }
var volatile bit*4  LCDPS_LP                  at LCDPS : 0
var volatile bit    LCDPS_WA                  at LCDPS : 4
var volatile bit    LCDPS_LCDA                at LCDPS : 5
var volatile bit    LCDPS_BIASMD              at LCDPS : 6
var volatile bit    LCDPS_WFT                 at LCDPS : 7
var volatile bit    LCDPS_LP0                 at LCDPS : 0
var volatile bit    LCDPS_LP1                 at LCDPS : 1
var volatile bit    LCDPS_LP2                 at LCDPS : 2
var volatile bit    LCDPS_LP3                 at LCDPS : 3
-- ------------------------------------------------
var volatile byte   LVDCON                    at { 0x109 }
var volatile bit*3  LVDCON_LVDL               at LVDCON : 0
var volatile bit    LVDCON_LVDEN              at LVDCON : 4
var volatile bit    LVDCON_IRVST              at LVDCON : 5
var volatile bit    LVDCON_LVDL0              at LVDCON : 0
var volatile bit    LVDCON_LVDL1              at LVDCON : 1
var volatile bit    LVDCON_LVDL2              at LVDCON : 2
-- ------------------------------------------------
var volatile byte   EEDATL                    at { 0x10C }
var volatile bit    EEDATL_EEDATL0            at EEDATL : 0
var volatile bit    EEDATL_EEDATL1            at EEDATL : 1
var volatile bit    EEDATL_EEDATL2            at EEDATL : 2
var volatile bit    EEDATL_EEDATL3            at EEDATL : 3
var volatile bit    EEDATL_EEDATL4            at EEDATL : 4
var volatile bit    EEDATL_EEDATL5            at EEDATL : 5
var volatile bit    EEDATL_EEDATL6            at EEDATL : 6
var volatile bit    EEDATL_EEDATL7            at EEDATL : 7
-- ------------------------------------------------
var volatile byte   EEADRL                    at { 0x10D }
var volatile bit    EEADRL_EEADRL0            at EEADRL : 0
var volatile bit    EEADRL_EEADRL1            at EEADRL : 1
var volatile bit    EEADRL_EEADRL2            at EEADRL : 2
var volatile bit    EEADRL_EEADRL3            at EEADRL : 3
var volatile bit    EEADRL_EEADRL4            at EEADRL : 4
var volatile bit    EEADRL_EEADRL5            at EEADRL : 5
var volatile bit    EEADRL_EEADRL6            at EEADRL : 6
var volatile bit    EEADRL_EEADRL7            at EEADRL : 7
-- ------------------------------------------------
var volatile byte   EEDATH                    at { 0x10E }
var volatile bit*6  EEDATH_EEDATH             at EEDATH : 0
var volatile bit    EEDATH_EEDATH0            at EEDATH : 0
var volatile bit    EEDATH_EEDATH1            at EEDATH : 1
var volatile bit    EEDATH_EEDATH2            at EEDATH : 2
var volatile bit    EEDATH_EEDATH3            at EEDATH : 3
var volatile bit    EEDATH_EEDATH4            at EEDATH : 4
var volatile bit    EEDATH_EEDATH5            at EEDATH : 5
-- ------------------------------------------------
var volatile byte   EEADRH                    at { 0x10F }
var volatile bit*5  EEADRH_EEADRH             at EEADRH : 0
var volatile bit    EEADRH_EEADRH0            at EEADRH : 0
var volatile bit    EEADRH_EEADRH1            at EEADRH : 1
var volatile bit    EEADRH_EEADRH2            at EEADRH : 2
var volatile bit    EEADRH_EEADRH3            at EEADRH : 3
var volatile bit    EEADRH_EEADRH4            at EEADRH : 4
-- ------------------------------------------------
var volatile byte   LCDDATA0                  at { 0x110 }
var volatile bit    LCDDATA0_SEG0             at LCDDATA0 : 0
var volatile bit    LCDDATA0_SEG1             at LCDDATA0 : 1
var volatile bit    LCDDATA0_SEG2             at LCDDATA0 : 2
var volatile bit    LCDDATA0_SEG3             at LCDDATA0 : 3
var volatile bit    LCDDATA0_SEG4             at LCDDATA0 : 4
var volatile bit    LCDDATA0_SEG5             at LCDDATA0 : 5
var volatile bit    LCDDATA0_SEG6             at LCDDATA0 : 6
var volatile bit    LCDDATA0_SEG7             at LCDDATA0 : 7
var volatile bit    LCDDATA0_SEG0COM0         at LCDDATA0 : 0
var volatile bit    LCDDATA0_SEG1COM0         at LCDDATA0 : 1
var volatile bit    LCDDATA0_SEG2COM0         at LCDDATA0 : 2
var volatile bit    LCDDATA0_SEG3COM0         at LCDDATA0 : 3
var volatile bit    LCDDATA0_SEG4COM0         at LCDDATA0 : 4
var volatile bit    LCDDATA0_SEG5COM0         at LCDDATA0 : 5
var volatile bit    LCDDATA0_SEG6COM0         at LCDDATA0 : 6
var volatile bit    LCDDATA0_SEG7COM0         at LCDDATA0 : 7
var volatile bit    LCDDATA0_S0C0             at LCDDATA0 : 0
var volatile bit    LCDDATA0_S1C0             at LCDDATA0 : 1
var volatile bit    LCDDATA0_S2C0             at LCDDATA0 : 2
var volatile bit    LCDDATA0_S3C0             at LCDDATA0 : 3
var volatile bit    LCDDATA0_S4C0             at LCDDATA0 : 4
var volatile bit    LCDDATA0_S5C0             at LCDDATA0 : 5
var volatile bit    LCDDATA0_S6C0             at LCDDATA0 : 6
var volatile bit    LCDDATA0_S7C0             at LCDDATA0 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA1                  at { 0x111 }
var volatile bit    LCDDATA1_SEG8             at LCDDATA1 : 0
var volatile bit    LCDDATA1_SEG9             at LCDDATA1 : 1
var volatile bit    LCDDATA1_SEG10            at LCDDATA1 : 2
var volatile bit    LCDDATA1_SEG11            at LCDDATA1 : 3
var volatile bit    LCDDATA1_SEG12            at LCDDATA1 : 4
var volatile bit    LCDDATA1_SEG13            at LCDDATA1 : 5
var volatile bit    LCDDATA1_SEG14            at LCDDATA1 : 6
var volatile bit    LCDDATA1_SEG15            at LCDDATA1 : 7
var volatile bit    LCDDATA1_SEG8COM0         at LCDDATA1 : 0
var volatile bit    LCDDATA1_SEG9COM0         at LCDDATA1 : 1
var volatile bit    LCDDATA1_SEG10COM0        at LCDDATA1 : 2
var volatile bit    LCDDATA1_SEG11COM0        at LCDDATA1 : 3
var volatile bit    LCDDATA1_SEG12COM0        at LCDDATA1 : 4
var volatile bit    LCDDATA1_SEG13COM0        at LCDDATA1 : 5
var volatile bit    LCDDATA1_SEG14COM0        at LCDDATA1 : 6
var volatile bit    LCDDATA1_SEG15COM0        at LCDDATA1 : 7
var volatile bit    LCDDATA1_S8C0             at LCDDATA1 : 0
var volatile bit    LCDDATA1_S9C0             at LCDDATA1 : 1
var volatile bit    LCDDATA1_S10C0            at LCDDATA1 : 2
var volatile bit    LCDDATA1_S11C0            at LCDDATA1 : 3
var volatile bit    LCDDATA1_S12C0            at LCDDATA1 : 4
var volatile bit    LCDDATA1_S13C0            at LCDDATA1 : 5
var volatile bit    LCDDATA1_S14C0            at LCDDATA1 : 6
var volatile bit    LCDDATA1_S15C0            at LCDDATA1 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA2                  at { 0x112 }
var volatile bit    LCDDATA2_SEG16            at LCDDATA2 : 0
var volatile bit    LCDDATA2_SEG17            at LCDDATA2 : 1
var volatile bit    LCDDATA2_SEG18            at LCDDATA2 : 2
var volatile bit    LCDDATA2_SEG19            at LCDDATA2 : 3
var volatile bit    LCDDATA2_SEG20            at LCDDATA2 : 4
var volatile bit    LCDDATA2_SEG21            at LCDDATA2 : 5
var volatile bit    LCDDATA2_SEG22            at LCDDATA2 : 6
var volatile bit    LCDDATA2_SEG23            at LCDDATA2 : 7
var volatile bit    LCDDATA2_SEG16COM0        at LCDDATA2 : 0
var volatile bit    LCDDATA2_SEG17COM0        at LCDDATA2 : 1
var volatile bit    LCDDATA2_SEG18COM0        at LCDDATA2 : 2
var volatile bit    LCDDATA2_SEG19COM0        at LCDDATA2 : 3
var volatile bit    LCDDATA2_SEG20COM0        at LCDDATA2 : 4
var volatile bit    LCDDATA2_SEG21COM0        at LCDDATA2 : 5
var volatile bit    LCDDATA2_SEG22COM0        at LCDDATA2 : 6
var volatile bit    LCDDATA2_SEG23COM0        at LCDDATA2 : 7
var volatile bit    LCDDATA2_S16C0            at LCDDATA2 : 0
var volatile bit    LCDDATA2_S17C0            at LCDDATA2 : 1
var volatile bit    LCDDATA2_S18C0            at LCDDATA2 : 2
var volatile bit    LCDDATA2_S19C0            at LCDDATA2 : 3
var volatile bit    LCDDATA2_S20C0            at LCDDATA2 : 4
var volatile bit    LCDDATA2_S21C0            at LCDDATA2 : 5
var volatile bit    LCDDATA2_S22C0            at LCDDATA2 : 6
var volatile bit    LCDDATA2_S23C0            at LCDDATA2 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA3                  at { 0x113 }
var volatile bit    LCDDATA3_SEG0             at LCDDATA3 : 0
var volatile bit    LCDDATA3_SEG1             at LCDDATA3 : 1
var volatile bit    LCDDATA3_SEG2             at LCDDATA3 : 2
var volatile bit    LCDDATA3_SEG3             at LCDDATA3 : 3
var volatile bit    LCDDATA3_SEG4             at LCDDATA3 : 4
var volatile bit    LCDDATA3_SEG5             at LCDDATA3 : 5
var volatile bit    LCDDATA3_SEG6             at LCDDATA3 : 6
var volatile bit    LCDDATA3_SEG7             at LCDDATA3 : 7
var volatile bit    LCDDATA3_SEG0COM1         at LCDDATA3 : 0
var volatile bit    LCDDATA3_SEG1COM1         at LCDDATA3 : 1
var volatile bit    LCDDATA3_SEG2COM1         at LCDDATA3 : 2
var volatile bit    LCDDATA3_SEG3COM1         at LCDDATA3 : 3
var volatile bit    LCDDATA3_SEG4COM1         at LCDDATA3 : 4
var volatile bit    LCDDATA3_SEG5COM1         at LCDDATA3 : 5
var volatile bit    LCDDATA3_SEG6COM1         at LCDDATA3 : 6
var volatile bit    LCDDATA3_SEG7COM1         at LCDDATA3 : 7
var volatile bit    LCDDATA3_S0C1             at LCDDATA3 : 0
var volatile bit    LCDDATA3_S1C1             at LCDDATA3 : 1
var volatile bit    LCDDATA3_S2C1             at LCDDATA3 : 2
var volatile bit    LCDDATA3_S3C1             at LCDDATA3 : 3
var volatile bit    LCDDATA3_S4C1             at LCDDATA3 : 4
var volatile bit    LCDDATA3_S5C1             at LCDDATA3 : 5
var volatile bit    LCDDATA3_S6C1             at LCDDATA3 : 6
var volatile bit    LCDDATA3_S7C1             at LCDDATA3 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA4                  at { 0x114 }
var volatile bit    LCDDATA4_SEG8             at LCDDATA4 : 0
var volatile bit    LCDDATA4_SEG9             at LCDDATA4 : 1
var volatile bit    LCDDATA4_SEG10            at LCDDATA4 : 2
var volatile bit    LCDDATA4_SEG11            at LCDDATA4 : 3
var volatile bit    LCDDATA4_SEG12            at LCDDATA4 : 4
var volatile bit    LCDDATA4_SEG13            at LCDDATA4 : 5
var volatile bit    LCDDATA4_SEG14            at LCDDATA4 : 6
var volatile bit    LCDDATA4_SEG15            at LCDDATA4 : 7
var volatile bit    LCDDATA4_SEG8COM1         at LCDDATA4 : 0
var volatile bit    LCDDATA4_SEG9COM1         at LCDDATA4 : 1
var volatile bit    LCDDATA4_SEG10COM1        at LCDDATA4 : 2
var volatile bit    LCDDATA4_SEG11COM1        at LCDDATA4 : 3
var volatile bit    LCDDATA4_SEG12COM1        at LCDDATA4 : 4
var volatile bit    LCDDATA4_SEG13COM1        at LCDDATA4 : 5
var volatile bit    LCDDATA4_SEG14COM1        at LCDDATA4 : 6
var volatile bit    LCDDATA4_SEG15COM1        at LCDDATA4 : 7
var volatile bit    LCDDATA4_S8C1             at LCDDATA4 : 0
var volatile bit    LCDDATA4_S9C1             at LCDDATA4 : 1
var volatile bit    LCDDATA4_S10C1            at LCDDATA4 : 2
var volatile bit    LCDDATA4_S11C1            at LCDDATA4 : 3
var volatile bit    LCDDATA4_S12C1            at LCDDATA4 : 4
var volatile bit    LCDDATA4_S13C1            at LCDDATA4 : 5
var volatile bit    LCDDATA4_S14C1            at LCDDATA4 : 6
var volatile bit    LCDDATA4_S15C1            at LCDDATA4 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA5                  at { 0x115 }
var volatile bit    LCDDATA5_SEG16            at LCDDATA5 : 0
var volatile bit    LCDDATA5_SEG17            at LCDDATA5 : 1
var volatile bit    LCDDATA5_SEG18            at LCDDATA5 : 2
var volatile bit    LCDDATA5_SEG19            at LCDDATA5 : 3
var volatile bit    LCDDATA5_SEG20            at LCDDATA5 : 4
var volatile bit    LCDDATA5_SEG21            at LCDDATA5 : 5
var volatile bit    LCDDATA5_SEG22            at LCDDATA5 : 6
var volatile bit    LCDDATA5_SEG23            at LCDDATA5 : 7
var volatile bit    LCDDATA5_SEG16COM1        at LCDDATA5 : 0
var volatile bit    LCDDATA5_SEG17COM1        at LCDDATA5 : 1
var volatile bit    LCDDATA5_SEG18COM1        at LCDDATA5 : 2
var volatile bit    LCDDATA5_SEG19COM1        at LCDDATA5 : 3
var volatile bit    LCDDATA5_SEG20COM1        at LCDDATA5 : 4
var volatile bit    LCDDATA5_SEG21COM1        at LCDDATA5 : 5
var volatile bit    LCDDATA5_SEG22COM1        at LCDDATA5 : 6
var volatile bit    LCDDATA5_SEG23COM1        at LCDDATA5 : 7
var volatile bit    LCDDATA5_S16C1            at LCDDATA5 : 0
var volatile bit    LCDDATA5_S17C1            at LCDDATA5 : 1
var volatile bit    LCDDATA5_S18C1            at LCDDATA5 : 2
var volatile bit    LCDDATA5_S19C1            at LCDDATA5 : 3
var volatile bit    LCDDATA5_S20C1            at LCDDATA5 : 4
var volatile bit    LCDDATA5_S21C1            at LCDDATA5 : 5
var volatile bit    LCDDATA5_S22C1            at LCDDATA5 : 6
var volatile bit    LCDDATA5_S23C1            at LCDDATA5 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA6                  at { 0x116 }
var volatile bit    LCDDATA6_SEG0             at LCDDATA6 : 0
var volatile bit    LCDDATA6_SEG1             at LCDDATA6 : 1
var volatile bit    LCDDATA6_SEG2             at LCDDATA6 : 2
var volatile bit    LCDDATA6_SEG3             at LCDDATA6 : 3
var volatile bit    LCDDATA6_SEG4             at LCDDATA6 : 4
var volatile bit    LCDDATA6_SEG5             at LCDDATA6 : 5
var volatile bit    LCDDATA6_SEG6             at LCDDATA6 : 6
var volatile bit    LCDDATA6_SEG7             at LCDDATA6 : 7
var volatile bit    LCDDATA6_SEG0COM2         at LCDDATA6 : 0
var volatile bit    LCDDATA6_SEG1COM2         at LCDDATA6 : 1
var volatile bit    LCDDATA6_SEG2COM2         at LCDDATA6 : 2
var volatile bit    LCDDATA6_SEG3COM2         at LCDDATA6 : 3
var volatile bit    LCDDATA6_SEG4COM2         at LCDDATA6 : 4
var volatile bit    LCDDATA6_SEG5COM2         at LCDDATA6 : 5
var volatile bit    LCDDATA6_SEG6COM2         at LCDDATA6 : 6
var volatile bit    LCDDATA6_SEG7COM2         at LCDDATA6 : 7
var volatile bit    LCDDATA6_S0C2             at LCDDATA6 : 0
var volatile bit    LCDDATA6_S1C2             at LCDDATA6 : 1
var volatile bit    LCDDATA6_S2C2             at LCDDATA6 : 2
var volatile bit    LCDDATA6_S3C2             at LCDDATA6 : 3
var volatile bit    LCDDATA6_S4C2             at LCDDATA6 : 4
var volatile bit    LCDDATA6_S5C2             at LCDDATA6 : 5
var volatile bit    LCDDATA6_S6C2             at LCDDATA6 : 6
var volatile bit    LCDDATA6_S7C2             at LCDDATA6 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA7                  at { 0x117 }
var volatile bit    LCDDATA7_SEG8             at LCDDATA7 : 0
var volatile bit    LCDDATA7_SEG9             at LCDDATA7 : 1
var volatile bit    LCDDATA7_SEG10            at LCDDATA7 : 2
var volatile bit    LCDDATA7_SEG11            at LCDDATA7 : 3
var volatile bit    LCDDATA7_SEG12            at LCDDATA7 : 4
var volatile bit    LCDDATA7_SEG13            at LCDDATA7 : 5
var volatile bit    LCDDATA7_SEG14            at LCDDATA7 : 6
var volatile bit    LCDDATA7_SEG15            at LCDDATA7 : 7
var volatile bit    LCDDATA7_SEG8COM2         at LCDDATA7 : 0
var volatile bit    LCDDATA7_SEG9COM2         at LCDDATA7 : 1
var volatile bit    LCDDATA7_SEG10COM2        at LCDDATA7 : 2
var volatile bit    LCDDATA7_SEG11COM2        at LCDDATA7 : 3
var volatile bit    LCDDATA7_SEG12COM2        at LCDDATA7 : 4
var volatile bit    LCDDATA7_SEG13COM2        at LCDDATA7 : 5
var volatile bit    LCDDATA7_SEG14COM2        at LCDDATA7 : 6
var volatile bit    LCDDATA7_SEG15COM2        at LCDDATA7 : 7
var volatile bit    LCDDATA7_S8C2             at LCDDATA7 : 0
var volatile bit    LCDDATA7_S9C2             at LCDDATA7 : 1
var volatile bit    LCDDATA7_S10C2            at LCDDATA7 : 2
var volatile bit    LCDDATA7_S11C2            at LCDDATA7 : 3
var volatile bit    LCDDATA7_S12C2            at LCDDATA7 : 4
var volatile bit    LCDDATA7_S13C2            at LCDDATA7 : 5
var volatile bit    LCDDATA7_S14C2            at LCDDATA7 : 6
var volatile bit    LCDDATA7_S15C2            at LCDDATA7 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA8                  at { 0x118 }
var volatile bit    LCDDATA8_SEG16            at LCDDATA8 : 0
var volatile bit    LCDDATA8_SEG17            at LCDDATA8 : 1
var volatile bit    LCDDATA8_SEG18            at LCDDATA8 : 2
var volatile bit    LCDDATA8_SEG19            at LCDDATA8 : 3
var volatile bit    LCDDATA8_SEG20            at LCDDATA8 : 4
var volatile bit    LCDDATA8_SEG21            at LCDDATA8 : 5
var volatile bit    LCDDATA8_SEG22            at LCDDATA8 : 6
var volatile bit    LCDDATA8_SEG23            at LCDDATA8 : 7
var volatile bit    LCDDATA8_SEG16COM2        at LCDDATA8 : 0
var volatile bit    LCDDATA8_SEG17COM2        at LCDDATA8 : 1
var volatile bit    LCDDATA8_SEG18COM2        at LCDDATA8 : 2
var volatile bit    LCDDATA8_SEG19COM2        at LCDDATA8 : 3
var volatile bit    LCDDATA8_SEG20COM2        at LCDDATA8 : 4
var volatile bit    LCDDATA8_SEG21COM2        at LCDDATA8 : 5
var volatile bit    LCDDATA8_SEG22COM2        at LCDDATA8 : 6
var volatile bit    LCDDATA8_SEG23COM2        at LCDDATA8 : 7
var volatile bit    LCDDATA8_S16C2            at LCDDATA8 : 0
var volatile bit    LCDDATA8_S17C2            at LCDDATA8 : 1
var volatile bit    LCDDATA8_S18C2            at LCDDATA8 : 2
var volatile bit    LCDDATA8_S19C2            at LCDDATA8 : 3
var volatile bit    LCDDATA8_S20C2            at LCDDATA8 : 4
var volatile bit    LCDDATA8_S21C2            at LCDDATA8 : 5
var volatile bit    LCDDATA8_S22C2            at LCDDATA8 : 6
var volatile bit    LCDDATA8_S23C2            at LCDDATA8 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA9                  at { 0x119 }
var volatile bit    LCDDATA9_SEG0             at LCDDATA9 : 0
var volatile bit    LCDDATA9_SEG1             at LCDDATA9 : 1
var volatile bit    LCDDATA9_SEG2             at LCDDATA9 : 2
var volatile bit    LCDDATA9_SEG3             at LCDDATA9 : 3
var volatile bit    LCDDATA9_SEG4             at LCDDATA9 : 4
var volatile bit    LCDDATA9_SEG5             at LCDDATA9 : 5
var volatile bit    LCDDATA9_SEG6             at LCDDATA9 : 6
var volatile bit    LCDDATA9_SEG7             at LCDDATA9 : 7
var volatile bit    LCDDATA9_SEG0COM3         at LCDDATA9 : 0
var volatile bit    LCDDATA9_SEG1COM3         at LCDDATA9 : 1
var volatile bit    LCDDATA9_SEG2COM3         at LCDDATA9 : 2
var volatile bit    LCDDATA9_SEG3COM3         at LCDDATA9 : 3
var volatile bit    LCDDATA9_SEG4COM3         at LCDDATA9 : 4
var volatile bit    LCDDATA9_SEG5COM3         at LCDDATA9 : 5
var volatile bit    LCDDATA9_SEG6COM3         at LCDDATA9 : 6
var volatile bit    LCDDATA9_SEG7COM3         at LCDDATA9 : 7
var volatile bit    LCDDATA9_S0C3             at LCDDATA9 : 0
var volatile bit    LCDDATA9_S1C3             at LCDDATA9 : 1
var volatile bit    LCDDATA9_S2C3             at LCDDATA9 : 2
var volatile bit    LCDDATA9_S3C3             at LCDDATA9 : 3
var volatile bit    LCDDATA9_S4C3             at LCDDATA9 : 4
var volatile bit    LCDDATA9_S5C3             at LCDDATA9 : 5
var volatile bit    LCDDATA9_S6C3             at LCDDATA9 : 6
var volatile bit    LCDDATA9_S7C3             at LCDDATA9 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA10                 at { 0x11A }
var volatile bit    LCDDATA10_SEG8            at LCDDATA10 : 0
var volatile bit    LCDDATA10_SEG9            at LCDDATA10 : 1
var volatile bit    LCDDATA10_SEG10           at LCDDATA10 : 2
var volatile bit    LCDDATA10_SEG11           at LCDDATA10 : 3
var volatile bit    LCDDATA10_SEG12           at LCDDATA10 : 4
var volatile bit    LCDDATA10_SEG13           at LCDDATA10 : 5
var volatile bit    LCDDATA10_SEG14           at LCDDATA10 : 6
var volatile bit    LCDDATA10_SEG15           at LCDDATA10 : 7
var volatile bit    LCDDATA10_SEG8COM3        at LCDDATA10 : 0
var volatile bit    LCDDATA10_SEG9COM3        at LCDDATA10 : 1
var volatile bit    LCDDATA10_SEG10COM3       at LCDDATA10 : 2
var volatile bit    LCDDATA10_SEG11COM3       at LCDDATA10 : 3
var volatile bit    LCDDATA10_SEG12COM3       at LCDDATA10 : 4
var volatile bit    LCDDATA10_SEG13COM3       at LCDDATA10 : 5
var volatile bit    LCDDATA10_SEG14COM3       at LCDDATA10 : 6
var volatile bit    LCDDATA10_SEG15COM3       at LCDDATA10 : 7
var volatile bit    LCDDATA10_S8C3            at LCDDATA10 : 0
var volatile bit    LCDDATA10_S9C3            at LCDDATA10 : 1
var volatile bit    LCDDATA10_S10C3           at LCDDATA10 : 2
var volatile bit    LCDDATA10_S11C3           at LCDDATA10 : 3
var volatile bit    LCDDATA10_S12C3           at LCDDATA10 : 4
var volatile bit    LCDDATA10_S13C3           at LCDDATA10 : 5
var volatile bit    LCDDATA10_S14C3           at LCDDATA10 : 6
var volatile bit    LCDDATA10_S15C3           at LCDDATA10 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA11                 at { 0x11B }
var volatile bit    LCDDATA11_SEG16           at LCDDATA11 : 0
var volatile bit    LCDDATA11_SEG17           at LCDDATA11 : 1
var volatile bit    LCDDATA11_SEG18           at LCDDATA11 : 2
var volatile bit    LCDDATA11_SEG19           at LCDDATA11 : 3
var volatile bit    LCDDATA11_SEG20           at LCDDATA11 : 4
var volatile bit    LCDDATA11_SEG21           at LCDDATA11 : 5
var volatile bit    LCDDATA11_SEG22           at LCDDATA11 : 6
var volatile bit    LCDDATA11_SEG23           at LCDDATA11 : 7
var volatile bit    LCDDATA11_SEG16COM3       at LCDDATA11 : 0
var volatile bit    LCDDATA11_SEG17COM3       at LCDDATA11 : 1
var volatile bit    LCDDATA11_SEG18COM3       at LCDDATA11 : 2
var volatile bit    LCDDATA11_SEG19COM3       at LCDDATA11 : 3
var volatile bit    LCDDATA11_SEG20COM3       at LCDDATA11 : 4
var volatile bit    LCDDATA11_SEG21COM3       at LCDDATA11 : 5
var volatile bit    LCDDATA11_SEG22COM3       at LCDDATA11 : 6
var volatile bit    LCDDATA11_SEG23COM3       at LCDDATA11 : 7
var volatile bit    LCDDATA11_S16C3           at LCDDATA11 : 0
var volatile bit    LCDDATA11_S17C3           at LCDDATA11 : 1
var volatile bit    LCDDATA11_S18C3           at LCDDATA11 : 2
var volatile bit    LCDDATA11_S19C3           at LCDDATA11 : 3
var volatile bit    LCDDATA11_S20C3           at LCDDATA11 : 4
var volatile bit    LCDDATA11_S21C3           at LCDDATA11 : 5
var volatile bit    LCDDATA11_S22C3           at LCDDATA11 : 6
var volatile bit    LCDDATA11_S23C3           at LCDDATA11 : 7
-- ------------------------------------------------
var volatile byte   LCDSE0                    at { 0x11C }
var volatile bit    LCDSE0_SEG0               at LCDSE0 : 0
var volatile bit    LCDSE0_SEG1               at LCDSE0 : 1
var volatile bit    LCDSE0_SEG2               at LCDSE0 : 2
var volatile bit    LCDSE0_SEG3               at LCDSE0 : 3
var volatile bit    LCDSE0_SEG4               at LCDSE0 : 4
var volatile bit    LCDSE0_SEG5               at LCDSE0 : 5
var volatile bit    LCDSE0_SEG6               at LCDSE0 : 6
var volatile bit    LCDSE0_SEG7               at LCDSE0 : 7
var volatile bit    LCDSE0_SE0                at LCDSE0 : 0
var volatile bit    LCDSE0_SE1                at LCDSE0 : 1
var volatile bit    LCDSE0_SE2                at LCDSE0 : 2
var volatile bit    LCDSE0_SE3                at LCDSE0 : 3
var volatile bit    LCDSE0_SE4                at LCDSE0 : 4
var volatile bit    LCDSE0_SE5                at LCDSE0 : 5
var volatile bit    LCDSE0_SE6                at LCDSE0 : 6
var volatile bit    LCDSE0_SE7                at LCDSE0 : 7
var volatile bit    LCDSE0_SEGEN0             at LCDSE0 : 0
var volatile bit    LCDSE0_SEGEN1             at LCDSE0 : 1
var volatile bit    LCDSE0_SEGEN2             at LCDSE0 : 2
var volatile bit    LCDSE0_SEGEN3             at LCDSE0 : 3
var volatile bit    LCDSE0_SEGEN4             at LCDSE0 : 4
var volatile bit    LCDSE0_SEGEN5             at LCDSE0 : 5
var volatile bit    LCDSE0_SEGEN6             at LCDSE0 : 6
var volatile bit    LCDSE0_SEGEN7             at LCDSE0 : 7
-- ------------------------------------------------
var volatile byte   LCDSE1                    at { 0x11D }
var volatile bit    LCDSE1_SEG8               at LCDSE1 : 0
var volatile bit    LCDSE1_SEG9               at LCDSE1 : 1
var volatile bit    LCDSE1_SEG10              at LCDSE1 : 2
var volatile bit    LCDSE1_SEG11              at LCDSE1 : 3
var volatile bit    LCDSE1_SEG12              at LCDSE1 : 4
var volatile bit    LCDSE1_SEG13              at LCDSE1 : 5
var volatile bit    LCDSE1_SEG14              at LCDSE1 : 6
var volatile bit    LCDSE1_SEG15              at LCDSE1 : 7
var volatile bit    LCDSE1_SE8                at LCDSE1 : 0
var volatile bit    LCDSE1_SE9                at LCDSE1 : 1
var volatile bit    LCDSE1_SE10               at LCDSE1 : 2
var volatile bit    LCDSE1_SE11               at LCDSE1 : 3
var volatile bit    LCDSE1_SE12               at LCDSE1 : 4
var volatile bit    LCDSE1_SE13               at LCDSE1 : 5
var volatile bit    LCDSE1_SE14               at LCDSE1 : 6
var volatile bit    LCDSE1_SE15               at LCDSE1 : 7
var volatile bit    LCDSE1_SEGEN8             at LCDSE1 : 0
var volatile bit    LCDSE1_SEGEN9             at LCDSE1 : 1
var volatile bit    LCDSE1_SEGEN10            at LCDSE1 : 2
var volatile bit    LCDSE1_SEGEN11            at LCDSE1 : 3
var volatile bit    LCDSE1_SEGEN12            at LCDSE1 : 4
var volatile bit    LCDSE1_SEGEN13            at LCDSE1 : 5
var volatile bit    LCDSE1_SEGEN14            at LCDSE1 : 6
var volatile bit    LCDSE1_SEGEN15            at LCDSE1 : 7
-- ------------------------------------------------
var volatile byte   LCDSE2                    at { 0x11E }
var volatile bit    LCDSE2_SEG16              at LCDSE2 : 0
var volatile bit    LCDSE2_SEG17              at LCDSE2 : 1
var volatile bit    LCDSE2_SEG18              at LCDSE2 : 2
var volatile bit    LCDSE2_SEG19              at LCDSE2 : 3
var volatile bit    LCDSE2_SEG20              at LCDSE2 : 4
var volatile bit    LCDSE2_SEG21              at LCDSE2 : 5
var volatile bit    LCDSE2_SEG22              at LCDSE2 : 6
var volatile bit    LCDSE2_SEG23              at LCDSE2 : 7
var volatile bit    LCDSE2_SE16               at LCDSE2 : 0
var volatile bit    LCDSE2_SE17               at LCDSE2 : 1
var volatile bit    LCDSE2_SE18               at LCDSE2 : 2
var volatile bit    LCDSE2_SE19               at LCDSE2 : 3
var volatile bit    LCDSE2_SE20               at LCDSE2 : 4
var volatile bit    LCDSE2_SE21               at LCDSE2 : 5
var volatile bit    LCDSE2_SE22               at LCDSE2 : 6
var volatile bit    LCDSE2_SE23               at LCDSE2 : 7
var volatile bit    LCDSE2_SEGEN16            at LCDSE2 : 0
var volatile bit    LCDSE2_SEGEN17            at LCDSE2 : 1
var volatile bit    LCDSE2_SEGEN18            at LCDSE2 : 2
var volatile bit    LCDSE2_SEGEN19            at LCDSE2 : 3
var volatile bit    LCDSE2_SEGEN20            at LCDSE2 : 4
var volatile bit    LCDSE2_SEGEN21            at LCDSE2 : 5
var volatile bit    LCDSE2_SEGEN22            at LCDSE2 : 6
var volatile bit    LCDSE2_SEGEN23            at LCDSE2 : 7
-- ------------------------------------------------
var volatile byte   TRISF                     at { 0x185 }
alias               PORTF_direction           is TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF0              at TRISF : 0
var volatile bit    pin_F0_direction          at TRISF : 0
alias               pin_SEG32_direction       is pin_F0_direction
--
var volatile bit    TRISF_TRISF1              at TRISF : 1
var volatile bit    pin_F1_direction          at TRISF : 1
alias               pin_SEG33_direction       is pin_F1_direction
--
var volatile bit    TRISF_TRISF2              at TRISF : 2
var volatile bit    pin_F2_direction          at TRISF : 2
alias               pin_SEG34_direction       is pin_F2_direction
--
var volatile bit    TRISF_TRISF3              at TRISF : 3
var volatile bit    pin_F3_direction          at TRISF : 3
alias               pin_SEG35_direction       is pin_F3_direction
--
var volatile bit    TRISF_TRISF4              at TRISF : 4
var volatile bit    pin_F4_direction          at TRISF : 4
alias               pin_SEG28_direction       is pin_F4_direction
--
var volatile bit    TRISF_TRISF5              at TRISF : 5
var volatile bit    pin_F5_direction          at TRISF : 5
alias               pin_SEG29_direction       is pin_F5_direction
--
var volatile bit    TRISF_TRISF6              at TRISF : 6
var volatile bit    pin_F6_direction          at TRISF : 6
alias               pin_SEG20_RF6_direction   is pin_F6_direction
--
var volatile bit    TRISF_TRISF7              at TRISF : 7
var volatile bit    pin_F7_direction          at TRISF : 7
alias               pin_SEG31_direction       is pin_F7_direction
--
-- ------------------------------------------------
var volatile byte   TRISG                     at { 0x187 }
alias               PORTG_direction           is TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_TRISG0              at TRISG : 0
var volatile bit    pin_G0_direction          at TRISG : 0
alias               pin_SEG36_direction       is pin_G0_direction
--
var volatile bit    TRISG_TRISG1              at TRISG : 1
var volatile bit    pin_G1_direction          at TRISG : 1
alias               pin_SEG37_direction       is pin_G1_direction
--
var volatile bit    TRISG_TRISG2              at TRISG : 2
var volatile bit    pin_G2_direction          at TRISG : 2
alias               pin_SEG38_direction       is pin_G2_direction
--
var volatile bit    TRISG_TRISG3              at TRISG : 3
var volatile bit    pin_G3_direction          at TRISG : 3
alias               pin_SEG39_direction       is pin_G3_direction
--
var volatile bit    TRISG_TRISG4              at TRISG : 4
var volatile bit    pin_G4_direction          at TRISG : 4
alias               pin_SEG40_direction       is pin_G4_direction
--
var volatile bit    TRISG_TRISG5              at TRISG : 5
var volatile bit    pin_G5_direction          at TRISG : 5
alias               pin_SEG41_direction       is pin_G5_direction
--
-- ------------------------------------------------
var volatile byte   PORTF_                    at { 0x188 }
--
var          byte   PORTF                     at PORTF_
var volatile byte   PORTF_shadow_             at 0x78
--
procedure PORTF'put(byte in x at PORTF_shadow_) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
procedure PORTF_low'put(byte in x) is
   PORTF_shadow_ = (PORTF_shadow_ & 0xF0) | (x & 0x0F)
   PORTF_ = PORTF_shadow_
end procedure
function PORTF_low'get() return byte is
   return (PORTF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   PORTF_shadow_ = (PORTF_shadow_ & 0x0F) | (x << 4)
   PORTF_ = PORTF_shadow_
end procedure
function PORTF_high'get() return byte is
   return (PORTF >> 4)
end function
--
var volatile bit    PORTF_RF0                 at PORTF : 0
var volatile bit    pin_F0                    at PORTF_ : 0
alias               pin_SEG32                 is pin_F0
--
procedure pin_F0'put(bit in x at PORTF_shadow_ : 0) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF1                 at PORTF : 1
var volatile bit    pin_F1                    at PORTF_ : 1
alias               pin_SEG33                 is pin_F1
--
procedure pin_F1'put(bit in x at PORTF_shadow_ : 1) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF2                 at PORTF : 2
var volatile bit    pin_F2                    at PORTF_ : 2
alias               pin_SEG34                 is pin_F2
--
procedure pin_F2'put(bit in x at PORTF_shadow_ : 2) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF3                 at PORTF : 3
var volatile bit    pin_F3                    at PORTF_ : 3
alias               pin_SEG35                 is pin_F3
--
procedure pin_F3'put(bit in x at PORTF_shadow_ : 3) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF4                 at PORTF : 4
var volatile bit    pin_F4                    at PORTF_ : 4
alias               pin_SEG28                 is pin_F4
--
procedure pin_F4'put(bit in x at PORTF_shadow_ : 4) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF5                 at PORTF : 5
var volatile bit    pin_F5                    at PORTF_ : 5
alias               pin_SEG29                 is pin_F5
--
procedure pin_F5'put(bit in x at PORTF_shadow_ : 5) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF6                 at PORTF : 6
var volatile bit    pin_F6                    at PORTF_ : 6
alias               pin_SEG20_RF6             is pin_F6
--
procedure pin_F6'put(bit in x at PORTF_shadow_ : 6) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
var volatile bit    PORTF_RF7                 at PORTF : 7
var volatile bit    pin_F7                    at PORTF_ : 7
alias               pin_SEG31                 is pin_F7
--
procedure pin_F7'put(bit in x at PORTF_shadow_ : 7) is
   pragma inline
   PORTF_ = PORTF_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTG_                    at { 0x189 }
--
var          byte   PORTG                     at PORTG_
var volatile byte   PORTG_shadow_             at 0x77
--
procedure PORTG'put(byte in x at PORTG_shadow_) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
procedure PORTG_low'put(byte in x) is
   PORTG_shadow_ = (PORTG_shadow_ & 0xF0) | (x & 0x0F)
   PORTG_ = PORTG_shadow_
end procedure
function PORTG_low'get() return byte is
   return (PORTG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   PORTG_shadow_ = (PORTG_shadow_ & 0x0F) | (x << 4)
   PORTG_ = PORTG_shadow_
end procedure
function PORTG_high'get() return byte is
   return (PORTG >> 4)
end function
--
var volatile bit    PORTG_RG0                 at PORTG : 0
var volatile bit    pin_G0                    at PORTG_ : 0
alias               pin_SEG36                 is pin_G0
--
procedure pin_G0'put(bit in x at PORTG_shadow_ : 0) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
var volatile bit    PORTG_RG1                 at PORTG : 1
var volatile bit    pin_G1                    at PORTG_ : 1
alias               pin_SEG37                 is pin_G1
--
procedure pin_G1'put(bit in x at PORTG_shadow_ : 1) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
var volatile bit    PORTG_RG2                 at PORTG : 2
var volatile bit    pin_G2                    at PORTG_ : 2
alias               pin_SEG38                 is pin_G2
--
procedure pin_G2'put(bit in x at PORTG_shadow_ : 2) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
var volatile bit    PORTG_RG3                 at PORTG : 3
var volatile bit    pin_G3                    at PORTG_ : 3
alias               pin_SEG39                 is pin_G3
--
procedure pin_G3'put(bit in x at PORTG_shadow_ : 3) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
var volatile bit    PORTG_RG4                 at PORTG : 4
var volatile bit    pin_G4                    at PORTG_ : 4
alias               pin_SEG40                 is pin_G4
--
procedure pin_G4'put(bit in x at PORTG_shadow_ : 4) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
var volatile bit    PORTG_RG5                 at PORTG : 5
var volatile bit    pin_G5                    at PORTG_ : 5
alias               pin_SEG41                 is pin_G5
--
procedure pin_G5'put(bit in x at PORTG_shadow_ : 5) is
   pragma inline
   PORTG_ = PORTG_shadow_
end procedure
--
-- ------------------------------------------------
var volatile byte   EECON1                    at { 0x18C }
var volatile bit    EECON1_RD                 at EECON1 : 0
var volatile bit    EECON1_WR                 at EECON1 : 1
var volatile bit    EECON1_WREN               at EECON1 : 2
var volatile bit    EECON1_WRERR              at EECON1 : 3
var volatile bit    EECON1_EEPGD              at EECON1 : 7
var volatile bit    EECON1_EERD               at EECON1 : 0
var volatile bit    EECON1_EEWR               at EECON1 : 1
-- ------------------------------------------------
var volatile byte   EECON2                    at { 0x18D }
-- ------------------------------------------------
var volatile byte   LCDDATA12                 at { 0x190 }
var volatile bit    LCDDATA12_SEG24           at LCDDATA12 : 0
var volatile bit    LCDDATA12_SEG25           at LCDDATA12 : 1
var volatile bit    LCDDATA12_SEG26           at LCDDATA12 : 2
var volatile bit    LCDDATA12_SEG27           at LCDDATA12 : 3
var volatile bit    LCDDATA12_SEG28           at LCDDATA12 : 4
var volatile bit    LCDDATA12_SEG29           at LCDDATA12 : 5
var volatile bit    LCDDATA12_SEG30           at LCDDATA12 : 6
var volatile bit    LCDDATA12_SEG31           at LCDDATA12 : 7
var volatile bit    LCDDATA12_SEG24COM0       at LCDDATA12 : 0
var volatile bit    LCDDATA12_SEG25COM0       at LCDDATA12 : 1
var volatile bit    LCDDATA12_SEG26COM0       at LCDDATA12 : 2
var volatile bit    LCDDATA12_SEG27COM0       at LCDDATA12 : 3
var volatile bit    LCDDATA12_SEG28COM0       at LCDDATA12 : 4
var volatile bit    LCDDATA12_SEG29COM0       at LCDDATA12 : 5
var volatile bit    LCDDATA12_SEG30COM0       at LCDDATA12 : 6
var volatile bit    LCDDATA12_SEG31COM0       at LCDDATA12 : 7
var volatile bit    LCDDATA12_S24C0           at LCDDATA12 : 0
var volatile bit    LCDDATA12_S25C0           at LCDDATA12 : 1
var volatile bit    LCDDATA12_S26C0           at LCDDATA12 : 2
var volatile bit    LCDDATA12_S27C0           at LCDDATA12 : 3
var volatile bit    LCDDATA12_S28C0           at LCDDATA12 : 4
var volatile bit    LCDDATA12_S29C0           at LCDDATA12 : 5
var volatile bit    LCDDATA12_S30C0           at LCDDATA12 : 6
var volatile bit    LCDDATA12_S31C0           at LCDDATA12 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA13                 at { 0x191 }
var volatile bit    LCDDATA13_SEG32           at LCDDATA13 : 0
var volatile bit    LCDDATA13_SEG33           at LCDDATA13 : 1
var volatile bit    LCDDATA13_SEG34           at LCDDATA13 : 2
var volatile bit    LCDDATA13_SEG35           at LCDDATA13 : 3
var volatile bit    LCDDATA13_SEG36           at LCDDATA13 : 4
var volatile bit    LCDDATA13_SEG37           at LCDDATA13 : 5
var volatile bit    LCDDATA13_SEG38           at LCDDATA13 : 6
var volatile bit    LCDDATA13_SEG39           at LCDDATA13 : 7
var volatile bit    LCDDATA13_SEG32COM0       at LCDDATA13 : 0
var volatile bit    LCDDATA13_SEG33COM0       at LCDDATA13 : 1
var volatile bit    LCDDATA13_SEG34COM0       at LCDDATA13 : 2
var volatile bit    LCDDATA13_SEG35COM0       at LCDDATA13 : 3
var volatile bit    LCDDATA13_SEG36COM0       at LCDDATA13 : 4
var volatile bit    LCDDATA13_SEG37COM0       at LCDDATA13 : 5
var volatile bit    LCDDATA13_SEG38COM0       at LCDDATA13 : 6
var volatile bit    LCDDATA13_SEG39COM0       at LCDDATA13 : 7
var volatile bit    LCDDATA13_S32C0           at LCDDATA13 : 0
var volatile bit    LCDDATA13_S33C0           at LCDDATA13 : 1
var volatile bit    LCDDATA13_S34C0           at LCDDATA13 : 2
var volatile bit    LCDDATA13_S35C0           at LCDDATA13 : 3
var volatile bit    LCDDATA13_S36C0           at LCDDATA13 : 4
var volatile bit    LCDDATA13_S37C0           at LCDDATA13 : 5
var volatile bit    LCDDATA13_S38C0           at LCDDATA13 : 6
var volatile bit    LCDDATA13_S39C0           at LCDDATA13 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA14                 at { 0x192 }
var volatile bit    LCDDATA14_SEG40           at LCDDATA14 : 0
var volatile bit    LCDDATA14_SEG41           at LCDDATA14 : 1
var volatile bit    LCDDATA14_SEG40COM0       at LCDDATA14 : 0
var volatile bit    LCDDATA14_SEG41COM0       at LCDDATA14 : 1
var volatile bit    LCDDATA14_S40C0           at LCDDATA14 : 0
var volatile bit    LCDDATA14_S41C0           at LCDDATA14 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA15                 at { 0x193 }
var volatile bit    LCDDATA15_SEG24           at LCDDATA15 : 0
var volatile bit    LCDDATA15_SEG25           at LCDDATA15 : 1
var volatile bit    LCDDATA15_SEG26           at LCDDATA15 : 2
var volatile bit    LCDDATA15_SEG27           at LCDDATA15 : 3
var volatile bit    LCDDATA15_SEG28           at LCDDATA15 : 4
var volatile bit    LCDDATA15_SEG29           at LCDDATA15 : 5
var volatile bit    LCDDATA15_SEG30           at LCDDATA15 : 6
var volatile bit    LCDDATA15_SEG31           at LCDDATA15 : 7
var volatile bit    LCDDATA15_SEG24COM1       at LCDDATA15 : 0
var volatile bit    LCDDATA15_SEG25COM1       at LCDDATA15 : 1
var volatile bit    LCDDATA15_SEG26COM1       at LCDDATA15 : 2
var volatile bit    LCDDATA15_SEG27COM1       at LCDDATA15 : 3
var volatile bit    LCDDATA15_SEG28COM1       at LCDDATA15 : 4
var volatile bit    LCDDATA15_SEG29COM1       at LCDDATA15 : 5
var volatile bit    LCDDATA15_SEG30COM1       at LCDDATA15 : 6
var volatile bit    LCDDATA15_SEG31COM1       at LCDDATA15 : 7
var volatile bit    LCDDATA15_S24C1           at LCDDATA15 : 0
var volatile bit    LCDDATA15_S25C1           at LCDDATA15 : 1
var volatile bit    LCDDATA15_S26C1           at LCDDATA15 : 2
var volatile bit    LCDDATA15_S27C1           at LCDDATA15 : 3
var volatile bit    LCDDATA15_S28C1           at LCDDATA15 : 4
var volatile bit    LCDDATA15_S29C1           at LCDDATA15 : 5
var volatile bit    LCDDATA15_S30C1           at LCDDATA15 : 6
var volatile bit    LCDDATA15_S31C1           at LCDDATA15 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA16                 at { 0x194 }
var volatile bit    LCDDATA16_SEG32           at LCDDATA16 : 0
var volatile bit    LCDDATA16_SEG33           at LCDDATA16 : 1
var volatile bit    LCDDATA16_SEG34           at LCDDATA16 : 2
var volatile bit    LCDDATA16_SEG35           at LCDDATA16 : 3
var volatile bit    LCDDATA16_SEG36           at LCDDATA16 : 4
var volatile bit    LCDDATA16_SEG37           at LCDDATA16 : 5
var volatile bit    LCDDATA16_SEG38           at LCDDATA16 : 6
var volatile bit    LCDDATA16_SEG39           at LCDDATA16 : 7
var volatile bit    LCDDATA16_SEG32COM1       at LCDDATA16 : 0
var volatile bit    LCDDATA16_SEG33COM1       at LCDDATA16 : 1
var volatile bit    LCDDATA16_SEG34COM1       at LCDDATA16 : 2
var volatile bit    LCDDATA16_SEG35COM1       at LCDDATA16 : 3
var volatile bit    LCDDATA16_SEG36COM1       at LCDDATA16 : 4
var volatile bit    LCDDATA16_SEG37COM1       at LCDDATA16 : 5
var volatile bit    LCDDATA16_SEG38COM1       at LCDDATA16 : 6
var volatile bit    LCDDATA16_SEG39COM1       at LCDDATA16 : 7
var volatile bit    LCDDATA16_S32C1           at LCDDATA16 : 0
var volatile bit    LCDDATA16_S33C1           at LCDDATA16 : 1
var volatile bit    LCDDATA16_S34C1           at LCDDATA16 : 2
var volatile bit    LCDDATA16_S35C1           at LCDDATA16 : 3
var volatile bit    LCDDATA16_S36C1           at LCDDATA16 : 4
var volatile bit    LCDDATA16_S37C1           at LCDDATA16 : 5
var volatile bit    LCDDATA16_S38C1           at LCDDATA16 : 6
var volatile bit    LCDDATA16_S39C1           at LCDDATA16 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA17                 at { 0x195 }
var volatile bit    LCDDATA17_SEG40           at LCDDATA17 : 0
var volatile bit    LCDDATA17_SEG41           at LCDDATA17 : 1
var volatile bit    LCDDATA17_SEG40COM1       at LCDDATA17 : 0
var volatile bit    LCDDATA17_SEG41COM1       at LCDDATA17 : 1
var volatile bit    LCDDATA17_S40C1           at LCDDATA17 : 0
var volatile bit    LCDDATA17_S41C1           at LCDDATA17 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA18                 at { 0x196 }
var volatile bit    LCDDATA18_SEG24           at LCDDATA18 : 0
var volatile bit    LCDDATA18_SEG25           at LCDDATA18 : 1
var volatile bit    LCDDATA18_SEG26           at LCDDATA18 : 2
var volatile bit    LCDDATA18_SEG27           at LCDDATA18 : 3
var volatile bit    LCDDATA18_SEG28           at LCDDATA18 : 4
var volatile bit    LCDDATA18_SEG29           at LCDDATA18 : 5
var volatile bit    LCDDATA18_SEG30           at LCDDATA18 : 6
var volatile bit    LCDDATA18_SEG31           at LCDDATA18 : 7
var volatile bit    LCDDATA18_SEG24COM2       at LCDDATA18 : 0
var volatile bit    LCDDATA18_SEG25COM2       at LCDDATA18 : 1
var volatile bit    LCDDATA18_SEG26COM2       at LCDDATA18 : 2
var volatile bit    LCDDATA18_SEG27COM2       at LCDDATA18 : 3
var volatile bit    LCDDATA18_SEG28COM2       at LCDDATA18 : 4
var volatile bit    LCDDATA18_SEG29COM2       at LCDDATA18 : 5
var volatile bit    LCDDATA18_SEG30COM2       at LCDDATA18 : 6
var volatile bit    LCDDATA18_SEG31COM2       at LCDDATA18 : 7
var volatile bit    LCDDATA18_S24C2           at LCDDATA18 : 0
var volatile bit    LCDDATA18_S25C2           at LCDDATA18 : 1
var volatile bit    LCDDATA18_S26C2           at LCDDATA18 : 2
var volatile bit    LCDDATA18_S27C2           at LCDDATA18 : 3
var volatile bit    LCDDATA18_S28C2           at LCDDATA18 : 4
var volatile bit    LCDDATA18_S29C2           at LCDDATA18 : 5
var volatile bit    LCDDATA18_S30C2           at LCDDATA18 : 6
var volatile bit    LCDDATA18_S31C2           at LCDDATA18 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA19                 at { 0x197 }
var volatile bit    LCDDATA19_SEG32           at LCDDATA19 : 0
var volatile bit    LCDDATA19_SEG33           at LCDDATA19 : 1
var volatile bit    LCDDATA19_SEG34           at LCDDATA19 : 2
var volatile bit    LCDDATA19_SEG35           at LCDDATA19 : 3
var volatile bit    LCDDATA19_SEG36           at LCDDATA19 : 4
var volatile bit    LCDDATA19_SEG37           at LCDDATA19 : 5
var volatile bit    LCDDATA19_SEG38           at LCDDATA19 : 6
var volatile bit    LCDDATA19_SEG39           at LCDDATA19 : 7
var volatile bit    LCDDATA19_SEG32COM2       at LCDDATA19 : 0
var volatile bit    LCDDATA19_SEG33COM2       at LCDDATA19 : 1
var volatile bit    LCDDATA19_SEG34COM2       at LCDDATA19 : 2
var volatile bit    LCDDATA19_SEG35COM2       at LCDDATA19 : 3
var volatile bit    LCDDATA19_SEG36COM2       at LCDDATA19 : 4
var volatile bit    LCDDATA19_SEG37COM2       at LCDDATA19 : 5
var volatile bit    LCDDATA19_SEG38COM2       at LCDDATA19 : 6
var volatile bit    LCDDATA19_SEG39COM2       at LCDDATA19 : 7
var volatile bit    LCDDATA19_S32C2           at LCDDATA19 : 0
var volatile bit    LCDDATA19_S33C2           at LCDDATA19 : 1
var volatile bit    LCDDATA19_S34C2           at LCDDATA19 : 2
var volatile bit    LCDDATA19_S35C2           at LCDDATA19 : 3
var volatile bit    LCDDATA19_S36C2           at LCDDATA19 : 4
var volatile bit    LCDDATA19_S37C2           at LCDDATA19 : 5
var volatile bit    LCDDATA19_S38C2           at LCDDATA19 : 6
var volatile bit    LCDDATA19_S39C2           at LCDDATA19 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA20                 at { 0x198 }
var volatile bit    LCDDATA20_SEG40           at LCDDATA20 : 0
var volatile bit    LCDDATA20_SEG41           at LCDDATA20 : 1
var volatile bit    LCDDATA20_SEG40COM2       at LCDDATA20 : 0
var volatile bit    LCDDATA20_SEG41COM2       at LCDDATA20 : 1
var volatile bit    LCDDATA20_S40C2           at LCDDATA20 : 0
var volatile bit    LCDDATA20_S41C2           at LCDDATA20 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA21                 at { 0x199 }
var volatile bit    LCDDATA21_SEG24           at LCDDATA21 : 0
var volatile bit    LCDDATA21_SEG25           at LCDDATA21 : 1
var volatile bit    LCDDATA21_SEG26           at LCDDATA21 : 2
var volatile bit    LCDDATA21_SEG27           at LCDDATA21 : 3
var volatile bit    LCDDATA21_SEG28           at LCDDATA21 : 4
var volatile bit    LCDDATA21_SEG29           at LCDDATA21 : 5
var volatile bit    LCDDATA21_SEG30           at LCDDATA21 : 6
var volatile bit    LCDDATA21_SEG31           at LCDDATA21 : 7
var volatile bit    LCDDATA21_SEG24COM3       at LCDDATA21 : 0
var volatile bit    LCDDATA21_SEG25COM3       at LCDDATA21 : 1
var volatile bit    LCDDATA21_SEG26COM3       at LCDDATA21 : 2
var volatile bit    LCDDATA21_SEG27COM3       at LCDDATA21 : 3
var volatile bit    LCDDATA21_SEG28COM3       at LCDDATA21 : 4
var volatile bit    LCDDATA21_SEG29COM3       at LCDDATA21 : 5
var volatile bit    LCDDATA21_SEG30COM3       at LCDDATA21 : 6
var volatile bit    LCDDATA21_SEG31COM3       at LCDDATA21 : 7
var volatile bit    LCDDATA21_S24C3           at LCDDATA21 : 0
var volatile bit    LCDDATA21_S25C3           at LCDDATA21 : 1
var volatile bit    LCDDATA21_S26C3           at LCDDATA21 : 2
var volatile bit    LCDDATA21_S27C3           at LCDDATA21 : 3
var volatile bit    LCDDATA21_S28C3           at LCDDATA21 : 4
var volatile bit    LCDDATA21_S29C3           at LCDDATA21 : 5
var volatile bit    LCDDATA21_S30C3           at LCDDATA21 : 6
var volatile bit    LCDDATA21_S31C3           at LCDDATA21 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA22                 at { 0x19A }
var volatile bit    LCDDATA22_SEG32           at LCDDATA22 : 0
var volatile bit    LCDDATA22_SEG33           at LCDDATA22 : 1
var volatile bit    LCDDATA22_SEG34           at LCDDATA22 : 2
var volatile bit    LCDDATA22_SEG35           at LCDDATA22 : 3
var volatile bit    LCDDATA22_SEG36           at LCDDATA22 : 4
var volatile bit    LCDDATA22_SEG37           at LCDDATA22 : 5
var volatile bit    LCDDATA22_SEG38           at LCDDATA22 : 6
var volatile bit    LCDDATA22_SEG39           at LCDDATA22 : 7
var volatile bit    LCDDATA22_SEG32COM3       at LCDDATA22 : 0
var volatile bit    LCDDATA22_SEG33COM3       at LCDDATA22 : 1
var volatile bit    LCDDATA22_SEG34COM3       at LCDDATA22 : 2
var volatile bit    LCDDATA22_SEG35COM3       at LCDDATA22 : 3
var volatile bit    LCDDATA22_SEG36COM3       at LCDDATA22 : 4
var volatile bit    LCDDATA22_SEG37COM3       at LCDDATA22 : 5
var volatile bit    LCDDATA22_SEG38COM3       at LCDDATA22 : 6
var volatile bit    LCDDATA22_SEG39COM3       at LCDDATA22 : 7
var volatile bit    LCDDATA22_S32C3           at LCDDATA22 : 0
var volatile bit    LCDDATA22_S33C3           at LCDDATA22 : 1
var volatile bit    LCDDATA22_S34C3           at LCDDATA22 : 2
var volatile bit    LCDDATA22_S35C3           at LCDDATA22 : 3
var volatile bit    LCDDATA22_S36C3           at LCDDATA22 : 4
var volatile bit    LCDDATA22_S37C3           at LCDDATA22 : 5
var volatile bit    LCDDATA22_S38C3           at LCDDATA22 : 6
var volatile bit    LCDDATA22_S39C3           at LCDDATA22 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA23                 at { 0x19B }
var volatile bit    LCDDATA23_SEG40           at LCDDATA23 : 0
var volatile bit    LCDDATA23_SEG41           at LCDDATA23 : 1
var volatile bit    LCDDATA23_SEG40COM3       at LCDDATA23 : 0
var volatile bit    LCDDATA23_SEG41COM3       at LCDDATA23 : 1
var volatile bit    LCDDATA23_S40C3           at LCDDATA23 : 0
var volatile bit    LCDDATA23_S41C3           at LCDDATA23 : 1
-- ------------------------------------------------
var volatile byte   LCDSE3                    at { 0x19C }
var volatile bit    LCDSE3_SEG24              at LCDSE3 : 0
var volatile bit    LCDSE3_SEG25              at LCDSE3 : 1
var volatile bit    LCDSE3_SEG26              at LCDSE3 : 2
var volatile bit    LCDSE3_SEG27              at LCDSE3 : 3
var volatile bit    LCDSE3_SEG28              at LCDSE3 : 4
var volatile bit    LCDSE3_SEG29              at LCDSE3 : 5
var volatile bit    LCDSE3_SEG30              at LCDSE3 : 6
var volatile bit    LCDSE3_SEG31              at LCDSE3 : 7
var volatile bit    LCDSE3_SE24               at LCDSE3 : 0
var volatile bit    LCDSE3_SE25               at LCDSE3 : 1
var volatile bit    LCDSE3_SE26               at LCDSE3 : 2
var volatile bit    LCDSE3_SE27               at LCDSE3 : 3
var volatile bit    LCDSE3_SE28               at LCDSE3 : 4
var volatile bit    LCDSE3_SE29               at LCDSE3 : 5
var volatile bit    LCDSE3_SE30               at LCDSE3 : 6
var volatile bit    LCDSE3_SE31               at LCDSE3 : 7
var volatile bit    LCDSE3_SEGEN24            at LCDSE3 : 0
var volatile bit    LCDSE3_SEGEN25            at LCDSE3 : 1
var volatile bit    LCDSE3_SEGEN26            at LCDSE3 : 2
var volatile bit    LCDSE3_SEGEN27            at LCDSE3 : 3
var volatile bit    LCDSE3_SEGEN28            at LCDSE3 : 4
var volatile bit    LCDSE3_SEGEN29            at LCDSE3 : 5
var volatile bit    LCDSE3_SEGEN30            at LCDSE3 : 6
var volatile bit    LCDSE3_SEGEN31            at LCDSE3 : 7
-- ------------------------------------------------
var volatile byte   LCDSE4                    at { 0x19D }
var volatile bit    LCDSE4_SEG32              at LCDSE4 : 0
var volatile bit    LCDSE4_SEG33              at LCDSE4 : 1
var volatile bit    LCDSE4_SEG34              at LCDSE4 : 2
var volatile bit    LCDSE4_SEG35              at LCDSE4 : 3
var volatile bit    LCDSE4_SEG36              at LCDSE4 : 4
var volatile bit    LCDSE4_SEG37              at LCDSE4 : 5
var volatile bit    LCDSE4_SEG38              at LCDSE4 : 6
var volatile bit    LCDSE4_SEG39              at LCDSE4 : 7
var volatile bit    LCDSE4_SE32               at LCDSE4 : 0
var volatile bit    LCDSE4_SE33               at LCDSE4 : 1
var volatile bit    LCDSE4_SE34               at LCDSE4 : 2
var volatile bit    LCDSE4_SE35               at LCDSE4 : 3
var volatile bit    LCDSE4_SE36               at LCDSE4 : 4
var volatile bit    LCDSE4_SE37               at LCDSE4 : 5
var volatile bit    LCDSE4_SE38               at LCDSE4 : 6
var volatile bit    LCDSE4_SE39               at LCDSE4 : 7
var volatile bit    LCDSE4_SEGEN32            at LCDSE4 : 0
var volatile bit    LCDSE4_SEGEN33            at LCDSE4 : 1
var volatile bit    LCDSE4_SEGEN34            at LCDSE4 : 2
var volatile bit    LCDSE4_SEGEN35            at LCDSE4 : 3
var volatile bit    LCDSE4_SEGEN36            at LCDSE4 : 4
var volatile bit    LCDSE4_SEGEN37            at LCDSE4 : 5
var volatile bit    LCDSE4_SEGEN38            at LCDSE4 : 6
var volatile bit    LCDSE4_SEGEN39            at LCDSE4 : 7
-- ------------------------------------------------
var volatile byte   LCDSE5                    at { 0x19E }
var volatile bit    LCDSE5_SEG40              at LCDSE5 : 0
var volatile bit    LCDSE5_SEG41              at LCDSE5 : 1
var volatile bit    LCDSE5_SE40               at LCDSE5 : 0
var volatile bit    LCDSE5_SE41               at LCDSE5 : 1
var volatile bit    LCDSE5_SEGEN40            at LCDSE5 : 0
var volatile bit    LCDSE5_SEGEN41            at LCDSE5 : 1
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSEL  = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CMCON0 = 0b0000_0111
   CMCON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x70-0x76
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG (0x2007)
--
pragma fuse_def OSC 0x7 {                -- Oscillator Selection bits
       RC_CLKOUT = 0x7                   -- RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT/T1OSO pin, RC on RA7/OSC1/CLKIN/T1OSI
       RC_NOCLKOUT = 0x6                 -- RCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, RC on RA7/OSC1/CLKIN/T1OSI
       INTOSC_CLKOUT = 0x5               -- INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT/T1OSO pin, I/O function on RA7/OSC1/CLKIN/T1OSI
       INTOSC_NOCLKOUT = 0x4             -- INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, I/O function on RA7/OSC1/CLKIN/T1OSI
       EC_NOCLKOUT = 0x3                 -- EC: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, CLKIN on RA7/OSC1/CLKIN/T1OSI
       HS = 0x2                          -- HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT/T1OSO and RA7/OSC1/CLKIN/T1OSI
       XT = 0x1                          -- XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT/T1OSO and RA7/OSC1/CLKIN/T1OSI
       LP = 0x0                          -- LP oscillator: Low-power crystal on RA6/OSC2/CLKOUT/T1OSO and RA7/OSC1/CLKIN/T1OSI
       }
pragma fuse_def WDT 0x8 {                -- Watchdog Timer Enable bit
       ENABLED = 0x8                     -- WDT enabled
       CONTROL = 0x0                     -- WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
       }
pragma fuse_def PWRTE 0x10 {             -- Power Up Timer Enable bit
       DISABLED = 0x10                   -- PWRT disabled
       ENABLED = 0x0                     -- PWRT enabled
       }
pragma fuse_def MCLR 0x20 {              -- RE3/MCLR pin function select bit
       EXTERNAL = 0x20                   -- RE3/MCLR pin function is MCLR
       INTERNAL = 0x0                    -- RE3/MCLR pin function is digital input, MCLR internally tied to VDD
       }
pragma fuse_def CP 0x40 {                -- Code Protection bit
       DISABLED = 0x40                   -- Program memory code protection is disabled
       ENABLED = 0x0                     -- Program memory code protection is enabled
       }
pragma fuse_def CPD 0x80 {               -- Data Code Protection bit
       DISABLED = 0x80                   -- Data memory code protection is disabled
       ENABLED = 0x0                     -- Data memory code protection is enabled
       }
pragma fuse_def BROWNOUT 0x300 {         -- Brown-out Reset Selection bits
       ENABLED = 0x300                   -- BOR enabled
       RUNONLY = 0x200                   -- BOR enabled during operation and disabled in Sleep
       CONTROL = 0x100                   -- BOR controlled by SBOREN bit of the PCON register
       DISABLED = 0x0                    -- BOR disabled
       }
pragma fuse_def IESO 0x400 {             -- Internal External Switchover bit
       ENABLED = 0x400                   -- Internal/External Switchover mode is enabled
       DISABLED = 0x0                    -- Internal/External Switchover mode is disabled
       }
pragma fuse_def FCMEN 0x800 {            -- Fail-Safe Clock Monitor Enabled bit
       ENABLED = 0x800                   -- Fail-Safe Clock Monitor is enabled
       DISABLED = 0x0                    -- Fail-Safe Clock Monitor is disabled
       }
pragma fuse_def DEBUG 0x1000 {           -- In-Circuit Debugger Mode bit
       DISABLED = 0x1000                 -- In-Circuit Debugger disabled, RB6/ISCPCLK and RB7/ICSPDAT are general purpose I/O pins
       ENABLED = 0x0                     -- In-Circuit Debugger enabled, RB6/ICSPCLK and RB7/ICSPDAT are dedicated to the debugger
       }
--
