-- ------------------------------------------------
-- Title: JalV2 device include file for 18f27q83
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f27q83, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC18F27Q83.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Fri Mar  7 10:07:18 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x9909            -- ID for PIC programmer
const  word  CHIP_ID     = 0xA2EF            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "18F27Q83"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_16       -- (banks=55)
pragma  target  inst     2            -- instruction set : cpu_pic18f_v6
pragma  target  chip     18F27Q83
pragma  target  bank     0x0100
pragma  stack            127
pragma  code             131072
pragma  eeprom           0x380000,1024
pragma  ID               0x200000,64
pragma  data             0x500-0x36FF
pragma  shared           0x500-0x55F,0x460-0x4FF
--
var volatile byte _pic_accum at 0x500      -- (compiler)
--
const word   _FUSES_CT             = 35
const byte*3 _FUSE_BASE[_FUSES_CT] = {
                                       0x300000,
                                       0x300001,
                                       0x300002,
                                       0x300003,
                                       0x300004,
                                       0x300005,
                                       0x300006,
                                       0x300007,
                                       0x300008,
                                       0x300009,
                                       0x30000A,
                                       0x30000B,
                                       0x30000C,
                                       0x30000D,
                                       0x30000E,
                                       0x30000F,
                                       0x300010,
                                       0x300011,
                                       0x300012,
                                       0x300013,
                                       0x300014,
                                       0x300015,
                                       0x300016,
                                       0x300017,
                                       0x300018,
                                       0x300019,
                                       0x30001A,
                                       0x30001B,
                                       0x30001C,
                                       0x30001D,
                                       0x30001E,
                                       0x30001F,
                                       0x300020,
                                       0x300021,
                                       0x300022 
                                     }
const byte   _FUSES[_FUSES_CT]     = {
                                       0xFF,     -- CONFIG1
                                       0xFF,     -- CONFIG2
                                       0xFF,     -- CONFIG3
                                       0xFF,     -- CONFIG4
                                       0xFF,     -- CONFIG5
                                       0xFF,     -- CONFIG6
                                       0xFF,     -- CONFIG7
                                       0xFF,     -- CONFIG8
                                       0xFF,     -- CONFIG9
                                       0xFF,     -- CONFIG10
                                       0xFF,     -- CONFIG11
                                       0xFF,     -- CONFIG12
                                       0xFF,     -- CONFIG13
                                       0xFF,     -- CONFIG14
                                       0xFF,     -- CONFIG15
                                       0xFF,     -- CONFIG16
                                       0xFF,     -- CONFIG17
                                       0xFF,     -- CONFIG18
                                       0xFF,     -- CONFIG19
                                       0xFF,     -- CONFIG20
                                       0xFF,     -- CONFIG21
                                       0xFF,     -- CONFIG22
                                       0xFF,     -- CONFIG23
                                       0xFF,     -- CONFIG24
                                       0xFF,     -- CONFIG25
                                       0xFF,     -- CONFIG26
                                       0xFF,     -- CONFIG27
                                       0xFF,     -- CONFIG28
                                       0xFF,     -- CONFIG29
                                       0xFF,     -- CONFIG30
                                       0xFF,     -- CONFIG31
                                       0xFF,     -- CONFIG32
                                       0xFF,     -- CONFIG33
                                       0xFF,     -- CONFIG34
                                       0xFF      -- CONFIG35
                                     }
--
-- ------------------------------------------------
var volatile byte   BOOTREG                   at { 0x38 }
var volatile bit*6  BOOTREG_B                 at BOOTREG : 0
var volatile bit    BOOTREG_BOOTDONE          at BOOTREG : 6
var volatile bit    BOOTREG_BPOUT             at BOOTREG : 7
-- ------------------------------------------------
var volatile byte   CLKRCON                   at { 0x39 }
var volatile bit*3  CLKRCON_DIV               at CLKRCON : 0
var volatile bit*2  CLKRCON_DC                at CLKRCON : 3
var volatile bit    CLKRCON_EN                at CLKRCON : 7
var volatile bit    CLKRCON_CLKRDIV0          at CLKRCON : 0
var volatile bit    CLKRCON_CLKRDIV1          at CLKRCON : 1
var volatile bit    CLKRCON_CLKRDIV2          at CLKRCON : 2
var volatile bit    CLKRCON_CLKRDC0           at CLKRCON : 3
var volatile bit    CLKRCON_CLKRDC1           at CLKRCON : 4
var volatile bit    CLKRCON_CLKREN            at CLKRCON : 7
var volatile bit    CLKRCON_DIV0              at CLKRCON : 0
var volatile bit    CLKRCON_DIV1              at CLKRCON : 1
var volatile bit    CLKRCON_DIV2              at CLKRCON : 2
var volatile bit    CLKRCON_DC0               at CLKRCON : 3
var volatile bit    CLKRCON_DC1               at CLKRCON : 4
-- ------------------------------------------------
var volatile byte   CLKRCLK                   at { 0x3A }
var volatile bit*5  CLKRCLK_CLK               at CLKRCLK : 0
var volatile bit    CLKRCLK_CLKRCLK0          at CLKRCLK : 0
var volatile bit    CLKRCLK_CLKRCLK1          at CLKRCLK : 1
var volatile bit    CLKRCLK_CLKRCLK2          at CLKRCLK : 2
var volatile bit    CLKRCLK_CLKRCLK3          at CLKRCLK : 3
var volatile bit    CLKRCLK_CLKRCLK4          at CLKRCLK : 4
var volatile bit    CLKRCLK_CLK0              at CLKRCLK : 0
var volatile bit    CLKRCLK_CLK1              at CLKRCLK : 1
var volatile bit    CLKRCLK_CLK2              at CLKRCLK : 2
var volatile bit    CLKRCLK_CLK3              at CLKRCLK : 3
var volatile bit    CLKRCLK_CLK4              at CLKRCLK : 4
-- ------------------------------------------------
var volatile byte   NVMCON0                   at { 0x40 }
var volatile bit    NVMCON0_GO                at NVMCON0 : 0
var volatile bit    NVMCON0_NDONE             at NVMCON0 : 0
-- ------------------------------------------------
var volatile byte   NVMCON1                   at { 0x41 }
var volatile bit*3  NVMCON1_CMD               at NVMCON1 : 0
var volatile bit    NVMCON1_WRERR             at NVMCON1 : 7
var volatile bit*3  NVMCON1_NVMCMD            at NVMCON1 : 0
-- ------------------------------------------------
var volatile byte   NVMLOCK                   at { 0x42 }
-- ------------------------------------------------
var volatile byte*3 NVMADR                    at { 0x43 }
-- ------------------------------------------------
var volatile byte   NVMADRL                   at { 0x43 }
var volatile bit    NVMADRL_NVMADR0           at NVMADRL : 0
var volatile bit    NVMADRL_NVMADR1           at NVMADRL : 1
var volatile bit    NVMADRL_NVMADR2           at NVMADRL : 2
var volatile bit    NVMADRL_NVMADR3           at NVMADRL : 3
var volatile bit    NVMADRL_NVMADR4           at NVMADRL : 4
var volatile bit    NVMADRL_NVMADR5           at NVMADRL : 5
var volatile bit    NVMADRL_NVMADR6           at NVMADRL : 6
var volatile bit    NVMADRL_NVMADR7           at NVMADRL : 7
-- ------------------------------------------------
var volatile byte   NVMADRH                   at { 0x44 }
var volatile bit    NVMADRH_NVMADR8           at NVMADRH : 0
var volatile bit    NVMADRH_NVMADR9           at NVMADRH : 1
var volatile bit    NVMADRH_NVMADR10          at NVMADRH : 2
var volatile bit    NVMADRH_NVMADR11          at NVMADRH : 3
var volatile bit    NVMADRH_NVMADR12          at NVMADRH : 4
var volatile bit    NVMADRH_NVMADR13          at NVMADRH : 5
var volatile bit    NVMADRH_NVMADR14          at NVMADRH : 6
var volatile bit    NVMADRH_NVMADR15          at NVMADRH : 7
-- ------------------------------------------------
var volatile byte   NVMADRU                   at { 0x45 }
var volatile bit*6  NVMADRU_NVMADRU           at NVMADRU : 0
var volatile bit    NVMADRU_NVMADR16          at NVMADRU : 0
var volatile bit    NVMADRU_NVMADR17          at NVMADRU : 1
var volatile bit    NVMADRU_NVMADR18          at NVMADRU : 2
var volatile bit    NVMADRU_NVMADR19          at NVMADRU : 3
var volatile bit    NVMADRU_NVMADR20          at NVMADRU : 4
var volatile bit    NVMADRU_NVMADR21          at NVMADRU : 5
-- ------------------------------------------------
var volatile word   NVMDAT                    at { 0x46 }
-- ------------------------------------------------
var volatile byte   NVMDATL                   at { 0x46 }
var volatile bit    NVMDATL_NVMDAT0           at NVMDATL : 0
var volatile bit    NVMDATL_NVMDAT1           at NVMDATL : 1
var volatile bit    NVMDATL_NVMDAT2           at NVMDATL : 2
var volatile bit    NVMDATL_NVMDAT3           at NVMDATL : 3
var volatile bit    NVMDATL_NVMDAT4           at NVMDATL : 4
var volatile bit    NVMDATL_NVMDAT5           at NVMDATL : 5
var volatile bit    NVMDATL_NVMDAT6           at NVMDATL : 6
var volatile bit    NVMDATL_NVMDAT7           at NVMDATL : 7
-- ------------------------------------------------
var volatile byte   NVMDATH                   at { 0x47 }
var volatile bit    NVMDATH_NVMDAT8           at NVMDATH : 0
var volatile bit    NVMDATH_NVMDAT9           at NVMDATH : 1
var volatile bit    NVMDATH_NVMDAT10          at NVMDATH : 2
var volatile bit    NVMDATH_NVMDAT11          at NVMDATH : 3
var volatile bit    NVMDATH_NVMDAT12          at NVMDATH : 4
var volatile bit    NVMDATH_NVMDAT13          at NVMDATH : 5
var volatile bit    NVMDATH_NVMDAT14          at NVMDATH : 6
var volatile bit    NVMDATH_NVMDAT15          at NVMDATH : 7
-- ------------------------------------------------
var volatile byte   VREGCON                   at { 0x48 }
var volatile bit*2  VREGCON_VREGPM            at VREGCON : 0
var volatile bit*2  VREGCON_PMSYS             at VREGCON : 4
var volatile bit    VREGCON_VREGPM0           at VREGCON : 0
var volatile bit    VREGCON_VREGPM1           at VREGCON : 1
var volatile bit    VREGCON_PMSYS0            at VREGCON : 4
var volatile bit    VREGCON_PMSYS1            at VREGCON : 5
-- ------------------------------------------------
var volatile byte   BORCON                    at { 0x49 }
var volatile bit    BORCON_BORRDY             at BORCON : 0
var volatile bit    BORCON_SBOREN             at BORCON : 7
-- ------------------------------------------------
var volatile byte   HLVDCON0                  at { 0x4A }
var volatile bit    HLVDCON0_INTL             at HLVDCON0 : 0
var volatile bit    HLVDCON0_INTH             at HLVDCON0 : 1
var volatile bit    HLVDCON0_RDY              at HLVDCON0 : 4
var volatile bit    HLVDCON0_OUT              at HLVDCON0 : 5
var volatile bit    HLVDCON0_EN               at HLVDCON0 : 7
var volatile bit    HLVDCON0_HLVDINTL         at HLVDCON0 : 0
var volatile bit    HLVDCON0_HLVDINTH         at HLVDCON0 : 1
var volatile bit    HLVDCON0_HLVDRDY          at HLVDCON0 : 4
var volatile bit    HLVDCON0_HLVDOUT          at HLVDCON0 : 5
var volatile bit    HLVDCON0_HLVDEN           at HLVDCON0 : 7
-- ------------------------------------------------
var volatile byte   HLVDCON1                  at { 0x4B }
var volatile bit*4  HLVDCON1_SEL              at HLVDCON1 : 0
var volatile bit    HLVDCON1_SEL0             at HLVDCON1 : 0
var volatile bit    HLVDCON1_SEL1             at HLVDCON1 : 1
var volatile bit    HLVDCON1_SEL2             at HLVDCON1 : 2
var volatile bit    HLVDCON1_SEL3             at HLVDCON1 : 3
var volatile bit    HLVDCON1_HLVDSEL0         at HLVDCON1 : 0
var volatile bit    HLVDCON1_HLVDSEL1         at HLVDCON1 : 1
var volatile bit    HLVDCON1_HLVDSEL2         at HLVDCON1 : 2
var volatile bit    HLVDCON1_HLVDSEL3         at HLVDCON1 : 3
-- ------------------------------------------------
var volatile byte   ZCDCON                    at { 0x4C }
var volatile bit    ZCDCON_INTN               at ZCDCON : 0
var volatile bit    ZCDCON_INTP               at ZCDCON : 1
var volatile bit    ZCDCON_POL                at ZCDCON : 4
var volatile bit    ZCDCON_OUT                at ZCDCON : 5
var volatile bit    ZCDCON_SEN                at ZCDCON : 7
var volatile bit    ZCDCON_ZCDINTN            at ZCDCON : 0
var volatile bit    ZCDCON_ZCDINTP            at ZCDCON : 1
var volatile bit    ZCDCON_ZCDPOL             at ZCDCON : 4
var volatile bit    ZCDCON_ZCDOUT             at ZCDCON : 5
var volatile bit    ZCDCON_ZCDSEN             at ZCDCON : 7
-- ------------------------------------------------
var volatile byte   PMD0                      at { 0x60 }
var volatile bit    PMD0_IOCMD                at PMD0 : 0
var volatile bit    PMD0_CLKRMD               at PMD0 : 1
var volatile bit    PMD0_SCANMD               at PMD0 : 3
var volatile bit    PMD0_CRCMD                at PMD0 : 4
var volatile bit    PMD0_HLVDMD               at PMD0 : 5
var volatile bit    PMD0_FVRMD                at PMD0 : 6
var volatile bit    PMD0_SYSCMD               at PMD0 : 7
var volatile bit    PMD0_LVDMD                at PMD0 : 5
-- ------------------------------------------------
var volatile byte   PMD1                      at { 0x61 }
var volatile bit    PMD1_TMR0MD               at PMD1 : 0
var volatile bit    PMD1_TMR1MD               at PMD1 : 1
var volatile bit    PMD1_TMR2MD               at PMD1 : 2
var volatile bit    PMD1_TMR3MD               at PMD1 : 3
var volatile bit    PMD1_TMR4MD               at PMD1 : 4
var volatile bit    PMD1_TMR5MD               at PMD1 : 5
var volatile bit    PMD1_TMR6MD               at PMD1 : 6
var volatile bit    PMD1_SMT1MD               at PMD1 : 7
-- ------------------------------------------------
var volatile byte   PMD2                      at { 0x62 }
var volatile bit    PMD2_TU16AMD              at PMD2 : 0
var volatile bit    PMD2_TU16BMD              at PMD2 : 1
var volatile bit    PMD2_CANMD                at PMD2 : 7
var volatile bit    PMD2_TU1MD                at PMD2 : 0
var volatile bit    PMD2_TU2MD                at PMD2 : 1
-- ------------------------------------------------
var volatile byte   PMD3                      at { 0x63 }
var volatile bit    PMD3_ZCDMD                at PMD3 : 0
var volatile bit    PMD3_CM1MD                at PMD3 : 1
var volatile bit    PMD3_CM2MD                at PMD3 : 2
var volatile bit    PMD3_ADCMD                at PMD3 : 5
var volatile bit    PMD3_DACMD                at PMD3 : 6
var volatile bit    PMD3_ACTMD                at PMD3 : 7
-- ------------------------------------------------
var volatile byte   PMD4                      at { 0x64 }
var volatile bit    PMD4_NCO1MD               at PMD4 : 0
var volatile bit    PMD4_NCO2MD               at PMD4 : 1
var volatile bit    PMD4_NCO3MD               at PMD4 : 2
var volatile bit    PMD4_DSM1MD               at PMD4 : 3
var volatile bit    PMD4_CWG1MD               at PMD4 : 4
var volatile bit    PMD4_CWG2MD               at PMD4 : 5
var volatile bit    PMD4_CWG3MD               at PMD4 : 6
-- ------------------------------------------------
var volatile byte   PMD5                      at { 0x65 }
var volatile bit    PMD5_CCP1MD               at PMD5 : 0
var volatile bit    PMD5_CCP2MD               at PMD5 : 1
var volatile bit    PMD5_CCP3MD               at PMD5 : 2
var volatile bit    PMD5_PWM1MD               at PMD5 : 4
var volatile bit    PMD5_PWM2MD               at PMD5 : 5
var volatile bit    PMD5_PWM3MD               at PMD5 : 6
var volatile bit    PMD5_PWM4MD               at PMD5 : 7
-- ------------------------------------------------
var volatile byte   PMD6                      at { 0x66 }
var volatile bit    PMD6_I2C1MD               at PMD6 : 0
var volatile bit    PMD6_SPI1MD               at PMD6 : 1
var volatile bit    PMD6_SPI2MD               at PMD6 : 2
var volatile bit    PMD6_U1MD                 at PMD6 : 3
var volatile bit    PMD6_U2MD                 at PMD6 : 4
var volatile bit    PMD6_U3MD                 at PMD6 : 5
var volatile bit    PMD6_U4MD                 at PMD6 : 6
var volatile bit    PMD6_U5MD                 at PMD6 : 7
-- ------------------------------------------------
var volatile byte   PMD7                      at { 0x67 }
var volatile bit    PMD7_CLC1MD               at PMD7 : 0
var volatile bit    PMD7_CLC2MD               at PMD7 : 1
var volatile bit    PMD7_CLC3MD               at PMD7 : 2
var volatile bit    PMD7_CLC4MD               at PMD7 : 3
var volatile bit    PMD7_CLC5MD               at PMD7 : 4
var volatile bit    PMD7_CLC6MD               at PMD7 : 5
var volatile bit    PMD7_CLC7MD               at PMD7 : 6
var volatile bit    PMD7_CLC8MD               at PMD7 : 7
-- ------------------------------------------------
var volatile byte   PMD8                      at { 0x68 }
var volatile bit    PMD8_DMA1MD               at PMD8 : 0
var volatile bit    PMD8_DMA2MD               at PMD8 : 1
var volatile bit    PMD8_DMA3MD               at PMD8 : 2
var volatile bit    PMD8_DMA4MD               at PMD8 : 3
var volatile bit    PMD8_DMA5MD               at PMD8 : 4
var volatile bit    PMD8_DMA6MD               at PMD8 : 5
var volatile bit    PMD8_DMA7MD               at PMD8 : 6
var volatile bit    PMD8_DMA8MD               at PMD8 : 7
-- ------------------------------------------------
var volatile byte   MD1CON0                   at { 0x6A }
var volatile bit    MD1CON0_BIT               at MD1CON0 : 0
var volatile bit    MD1CON0_OPOL              at MD1CON0 : 4
var volatile bit    MD1CON0_OUT               at MD1CON0 : 5
var volatile bit    MD1CON0_EN                at MD1CON0 : 7
var volatile bit    MD1CON0_MD1BIT            at MD1CON0 : 0
var volatile bit    MD1CON0_MD1OPOL           at MD1CON0 : 4
var volatile bit    MD1CON0_MD1OUT            at MD1CON0 : 5
var volatile bit    MD1CON0_MD1EN             at MD1CON0 : 7
-- ------------------------------------------------
var volatile byte   MD1CON1                   at { 0x6B }
var volatile bit    MD1CON1_CLSYNC            at MD1CON1 : 0
var volatile bit    MD1CON1_CLPOL             at MD1CON1 : 1
var volatile bit    MD1CON1_CHSYNC            at MD1CON1 : 4
var volatile bit    MD1CON1_CHPOL             at MD1CON1 : 5
var volatile bit    MD1CON1_MD1CLSYNC         at MD1CON1 : 0
var volatile bit    MD1CON1_MD1CLPOL          at MD1CON1 : 1
var volatile bit    MD1CON1_MD1CHSYNC         at MD1CON1 : 4
var volatile bit    MD1CON1_MD1CHPOL          at MD1CON1 : 5
-- ------------------------------------------------
var volatile byte   MD1SRC                    at { 0x6C }
var volatile bit*6  MD1SRC_MS                 at MD1SRC : 0
var volatile bit    MD1SRC_MS0                at MD1SRC : 0
var volatile bit    MD1SRC_MS1                at MD1SRC : 1
var volatile bit    MD1SRC_MS2                at MD1SRC : 2
var volatile bit    MD1SRC_MS3                at MD1SRC : 3
var volatile bit    MD1SRC_MS4                at MD1SRC : 4
var volatile bit    MD1SRC_MS5                at MD1SRC : 5
var volatile bit*6  MD1SRC_MD1MS              at MD1SRC : 0
var volatile bit    MD1SRC_MD1MS0             at MD1SRC : 0
var volatile bit    MD1SRC_MD1MS1             at MD1SRC : 1
var volatile bit    MD1SRC_MD1MS2             at MD1SRC : 2
var volatile bit    MD1SRC_MD1MS3             at MD1SRC : 3
var volatile bit    MD1SRC_MD1MS4             at MD1SRC : 4
var volatile bit    MD1SRC_MD1MS5             at MD1SRC : 5
-- ------------------------------------------------
var volatile byte   MD1CARL                   at { 0x6D }
var volatile bit*5  MD1CARL_CL                at MD1CARL : 0
var volatile bit    MD1CARL_CL0               at MD1CARL : 0
var volatile bit    MD1CARL_CL1               at MD1CARL : 1
var volatile bit    MD1CARL_CL2               at MD1CARL : 2
var volatile bit    MD1CARL_CL3               at MD1CARL : 3
var volatile bit    MD1CARL_CL4               at MD1CARL : 4
var volatile bit*5  MD1CARL_MD1CL             at MD1CARL : 0
var volatile bit    MD1CARL_MD1CL0            at MD1CARL : 0
var volatile bit    MD1CARL_MD1CL1            at MD1CARL : 1
var volatile bit    MD1CARL_MD1CL2            at MD1CARL : 2
var volatile bit    MD1CARL_MD1CL3            at MD1CARL : 3
var volatile bit    MD1CARL_MD1CL4            at MD1CARL : 4
-- ------------------------------------------------
var volatile byte   MD1CARH                   at { 0x6E }
var volatile bit*5  MD1CARH_CH                at MD1CARH : 0
var volatile bit    MD1CARH_CH0               at MD1CARH : 0
var volatile bit    MD1CARH_CH1               at MD1CARH : 1
var volatile bit    MD1CARH_CH2               at MD1CARH : 2
var volatile bit    MD1CARH_CH3               at MD1CARH : 3
var volatile bit    MD1CARH_CH4               at MD1CARH : 4
var volatile bit*5  MD1CARH_MD1CH             at MD1CARH : 0
var volatile bit    MD1CARH_MD1CH0            at MD1CARH : 0
var volatile bit    MD1CARH_MD1CH1            at MD1CARH : 1
var volatile bit    MD1CARH_MD1CH2            at MD1CARH : 2
var volatile bit    MD1CARH_MD1CH3            at MD1CARH : 3
var volatile bit    MD1CARH_MD1CH4            at MD1CARH : 4
-- ------------------------------------------------
var volatile byte   CMOUT                     at { 0x6F }
var volatile bit    CMOUT_MC1OUT              at CMOUT : 0
var volatile bit    CMOUT_MC2OUT              at CMOUT : 1
-- ------------------------------------------------
var volatile byte   CM1CON0                   at { 0x70 }
var volatile bit    CM1CON0_SYNC              at CM1CON0 : 0
var volatile bit    CM1CON0_HYS               at CM1CON0 : 1
var volatile bit    CM1CON0_POL               at CM1CON0 : 4
var volatile bit    CM1CON0_OUT               at CM1CON0 : 6
var volatile bit    CM1CON0_EN                at CM1CON0 : 7
var volatile bit    CM1CON0_C1SYNC            at CM1CON0 : 0
var volatile bit    CM1CON0_C1HYS             at CM1CON0 : 1
var volatile bit    CM1CON0_C1POL             at CM1CON0 : 4
var volatile bit    CM1CON0_C1OUT             at CM1CON0 : 6
var volatile bit    CM1CON0_C1EN              at CM1CON0 : 7
-- ------------------------------------------------
var volatile byte   CM1CON1                   at { 0x71 }
var volatile bit    CM1CON1_INTN              at CM1CON1 : 0
var volatile bit    CM1CON1_INTP              at CM1CON1 : 1
var volatile bit    CM1CON1_C1INTN            at CM1CON1 : 0
var volatile bit    CM1CON1_C1INTP            at CM1CON1 : 1
-- ------------------------------------------------
var volatile byte   CM1NCH                    at { 0x72 }
var volatile bit*3  CM1NCH_NCH                at CM1NCH : 0
var volatile bit    CM1NCH_NCH0               at CM1NCH : 0
var volatile bit    CM1NCH_NCH1               at CM1NCH : 1
var volatile bit    CM1NCH_NCH2               at CM1NCH : 2
var volatile bit    CM1NCH_C1NCH0             at CM1NCH : 0
var volatile bit    CM1NCH_C1NCH1             at CM1NCH : 1
var volatile bit    CM1NCH_C1NCH2             at CM1NCH : 2
-- ------------------------------------------------
var volatile byte   CM1PCH                    at { 0x73 }
var volatile bit*3  CM1PCH_PCH                at CM1PCH : 0
var volatile bit    CM1PCH_PCH0               at CM1PCH : 0
var volatile bit    CM1PCH_PCH1               at CM1PCH : 1
var volatile bit    CM1PCH_PCH2               at CM1PCH : 2
var volatile bit    CM1PCH_C1PCH0             at CM1PCH : 0
var volatile bit    CM1PCH_C1PCH1             at CM1PCH : 1
var volatile bit    CM1PCH_C1PCH2             at CM1PCH : 2
-- ------------------------------------------------
var volatile byte   CM2CON0                   at { 0x74 }
var volatile bit    CM2CON0_SYNC              at CM2CON0 : 0
var volatile bit    CM2CON0_HYS               at CM2CON0 : 1
var volatile bit    CM2CON0_POL               at CM2CON0 : 4
var volatile bit    CM2CON0_OUT               at CM2CON0 : 6
var volatile bit    CM2CON0_EN                at CM2CON0 : 7
var volatile bit    CM2CON0_C2SYNC            at CM2CON0 : 0
var volatile bit    CM2CON0_C2HYS             at CM2CON0 : 1
var volatile bit    CM2CON0_C2POL             at CM2CON0 : 4
var volatile bit    CM2CON0_C2OUT             at CM2CON0 : 6
var volatile bit    CM2CON0_C2EN              at CM2CON0 : 7
-- ------------------------------------------------
var volatile byte   CM2CON1                   at { 0x75 }
var volatile bit    CM2CON1_INTN              at CM2CON1 : 0
var volatile bit    CM2CON1_INTP              at CM2CON1 : 1
var volatile bit    CM2CON1_C2INTN            at CM2CON1 : 0
var volatile bit    CM2CON1_C2INTP            at CM2CON1 : 1
-- ------------------------------------------------
var volatile byte   CM2NCH                    at { 0x76 }
var volatile bit*3  CM2NCH_NCH                at CM2NCH : 0
var volatile bit    CM2NCH_NCH0               at CM2NCH : 0
var volatile bit    CM2NCH_NCH1               at CM2NCH : 1
var volatile bit    CM2NCH_NCH2               at CM2NCH : 2
var volatile bit    CM2NCH_C2NCH0             at CM2NCH : 0
var volatile bit    CM2NCH_C2NCH1             at CM2NCH : 1
var volatile bit    CM2NCH_C2NCH2             at CM2NCH : 2
-- ------------------------------------------------
var volatile byte   CM2PCH                    at { 0x77 }
var volatile bit*3  CM2PCH_PCH                at CM2PCH : 0
var volatile bit    CM2PCH_PCH0               at CM2PCH : 0
var volatile bit    CM2PCH_PCH1               at CM2PCH : 1
var volatile bit    CM2PCH_PCH2               at CM2PCH : 2
var volatile bit    CM2PCH_C2PCH0             at CM2PCH : 0
var volatile bit    CM2PCH_C2PCH1             at CM2PCH : 1
var volatile bit    CM2PCH_C2PCH2             at CM2PCH : 2
-- ------------------------------------------------
var volatile byte   WDTCON0                   at { 0x78 }
var volatile bit    WDTCON0_SEN               at WDTCON0 : 0
var volatile bit*5  WDTCON0_WDTPS             at WDTCON0 : 1
var volatile bit    WDTCON0_SWDTEN            at WDTCON0 : 0
var volatile bit    WDTCON0_WDTSEN            at WDTCON0 : 0
var volatile bit    WDTCON0_WDTPS0            at WDTCON0 : 1
var volatile bit    WDTCON0_WDTPS1            at WDTCON0 : 2
var volatile bit    WDTCON0_WDTPS2            at WDTCON0 : 3
var volatile bit    WDTCON0_WDTPS3            at WDTCON0 : 4
var volatile bit    WDTCON0_WDTPS4            at WDTCON0 : 5
-- ------------------------------------------------
var volatile byte   WDTCON1                   at { 0x79 }
var volatile bit*3  WDTCON1_WINDOW            at WDTCON1 : 0
var volatile bit*3  WDTCON1_WDTCS             at WDTCON1 : 4
var volatile bit    WDTCON1_WINDOW0           at WDTCON1 : 0
var volatile bit    WDTCON1_WINDOW1           at WDTCON1 : 1
var volatile bit    WDTCON1_WINDOW2           at WDTCON1 : 2
var volatile bit*3  WDTCON1_WDTWINDOW         at WDTCON1 : 0
var volatile bit    WDTCON1_WDTWINDOW0        at WDTCON1 : 0
var volatile bit    WDTCON1_WDTWINDOW1        at WDTCON1 : 1
var volatile bit    WDTCON1_WDTWINDOW2        at WDTCON1 : 2
var volatile bit    WDTCON1_WDTCS0            at WDTCON1 : 4
var volatile bit    WDTCON1_WDTCS1            at WDTCON1 : 5
var volatile bit    WDTCON1_WDTCS2            at WDTCON1 : 6
-- ------------------------------------------------
var volatile byte   WDTPSL                    at { 0x7A }
var volatile bit    WDTPSL_PSCNT0             at WDTPSL : 0
var volatile bit    WDTPSL_PSCNT1             at WDTPSL : 1
var volatile bit    WDTPSL_PSCNT2             at WDTPSL : 2
var volatile bit    WDTPSL_PSCNT3             at WDTPSL : 3
var volatile bit    WDTPSL_PSCNT4             at WDTPSL : 4
var volatile bit    WDTPSL_PSCNT5             at WDTPSL : 5
var volatile bit    WDTPSL_PSCNT6             at WDTPSL : 6
var volatile bit    WDTPSL_PSCNT7             at WDTPSL : 7
var volatile bit    WDTPSL_WDTPSCNT0          at WDTPSL : 0
var volatile bit    WDTPSL_WDTPSCNT1          at WDTPSL : 1
var volatile bit    WDTPSL_WDTPSCNT2          at WDTPSL : 2
var volatile bit    WDTPSL_WDTPSCNT3          at WDTPSL : 3
var volatile bit    WDTPSL_WDTPSCNT4          at WDTPSL : 4
var volatile bit    WDTPSL_WDTPSCNT5          at WDTPSL : 5
var volatile bit    WDTPSL_WDTPSCNT6          at WDTPSL : 6
var volatile bit    WDTPSL_WDTPSCNT7          at WDTPSL : 7
-- ------------------------------------------------
var volatile byte   WDTPSH                    at { 0x7B }
var volatile bit    WDTPSH_PSCNT8             at WDTPSH : 0
var volatile bit    WDTPSH_PSCNT9             at WDTPSH : 1
var volatile bit    WDTPSH_PSCNT10            at WDTPSH : 2
var volatile bit    WDTPSH_PSCNT11            at WDTPSH : 3
var volatile bit    WDTPSH_PSCNT12            at WDTPSH : 4
var volatile bit    WDTPSH_PSCNT13            at WDTPSH : 5
var volatile bit    WDTPSH_PSCNT14            at WDTPSH : 6
var volatile bit    WDTPSH_PSCNT15            at WDTPSH : 7
var volatile bit    WDTPSH_WDTPSCNT8          at WDTPSH : 0
var volatile bit    WDTPSH_WDTPSCNT9          at WDTPSH : 1
var volatile bit    WDTPSH_WDTPSCNT10         at WDTPSH : 2
var volatile bit    WDTPSH_WDTPSCNT11         at WDTPSH : 3
var volatile bit    WDTPSH_WDTPSCNT12         at WDTPSH : 4
var volatile bit    WDTPSH_WDTPSCNT13         at WDTPSH : 5
var volatile bit    WDTPSH_WDTPSCNT14         at WDTPSH : 6
var volatile bit    WDTPSH_WDTPSCNT15         at WDTPSH : 7
-- ------------------------------------------------
var volatile byte   WDTTMR                    at { 0x7C }
var volatile bit    WDTTMR_PSCNT16            at WDTTMR : 0
var volatile bit    WDTTMR_PSCNT17            at WDTTMR : 1
var volatile bit    WDTTMR_STATE              at WDTTMR : 2
var volatile bit*5  WDTTMR_WDTTMR             at WDTTMR : 3
var volatile bit    WDTTMR_WDTPSCNT16         at WDTTMR : 0
var volatile bit    WDTTMR_WDTPSCNT17         at WDTTMR : 1
var volatile bit    WDTTMR_WDTSTATE           at WDTTMR : 2
var volatile bit    WDTTMR_WDTTMR0            at WDTTMR : 3
var volatile bit    WDTTMR_WDTTMR1            at WDTTMR : 4
var volatile bit    WDTTMR_WDTTMR2            at WDTTMR : 5
var volatile bit    WDTTMR_WDTTMR3            at WDTTMR : 6
var volatile bit    WDTTMR_WDTTMR4            at WDTTMR : 7
-- ------------------------------------------------
var volatile word   DAC1DAT                   at { 0x7D }
-- ------------------------------------------------
var volatile byte   DAC1DATL                  at { 0x7D }
var volatile bit    DAC1DATL_DAC1R0           at DAC1DATL : 0
var volatile bit    DAC1DATL_DAC1R1           at DAC1DATL : 1
var volatile bit    DAC1DATL_DAC1R2           at DAC1DATL : 2
var volatile bit    DAC1DATL_DAC1R3           at DAC1DATL : 3
var volatile bit    DAC1DATL_DAC1R4           at DAC1DATL : 4
var volatile bit    DAC1DATL_DAC1R5           at DAC1DATL : 5
var volatile bit    DAC1DATL_DAC1R6           at DAC1DATL : 6
var volatile bit    DAC1DATL_DAC1R7           at DAC1DATL : 7
-- ------------------------------------------------
var volatile byte   DAC1CON                   at { 0x7F }
var volatile bit*2  DAC1CON_NSS               at DAC1CON : 0
var volatile bit*2  DAC1CON_PSS               at DAC1CON : 2
var volatile bit*3  DAC1CON_OE                at DAC1CON : 4
var volatile bit    DAC1CON_EN                at DAC1CON : 7
var volatile bit*2  DAC1CON_DAC1NSS           at DAC1CON : 0
var volatile bit    DAC1CON_DAC1PSS0          at DAC1CON : 2
var volatile bit    DAC1CON_DAC1PSS1          at DAC1CON : 3
var volatile bit*3  DAC1CON_DAC1OE            at DAC1CON : 4
var volatile bit    DAC1CON_DAC1EN            at DAC1CON : 7
var volatile bit    DAC1CON_NSS0              at DAC1CON : 0
var volatile bit    DAC1CON_PSS0              at DAC1CON : 2
var volatile bit    DAC1CON_PSS1              at DAC1CON : 3
var volatile bit    DAC1CON_OE0               at DAC1CON : 4
var volatile bit    DAC1CON_OE1               at DAC1CON : 5
-- ------------------------------------------------
var volatile byte   SPI1RXB                   at { 0x80 }
var volatile bit    SPI1RXB_RXB0              at SPI1RXB : 0
var volatile bit    SPI1RXB_RXB1              at SPI1RXB : 1
var volatile bit    SPI1RXB_RXB2              at SPI1RXB : 2
var volatile bit    SPI1RXB_RXB3              at SPI1RXB : 3
var volatile bit    SPI1RXB_RXB4              at SPI1RXB : 4
var volatile bit    SPI1RXB_RXB5              at SPI1RXB : 5
var volatile bit    SPI1RXB_RXB6              at SPI1RXB : 6
var volatile bit    SPI1RXB_RXB7              at SPI1RXB : 7
-- ------------------------------------------------
var volatile byte   SPI1TXB                   at { 0x81 }
var volatile bit    SPI1TXB_TXB0              at SPI1TXB : 0
var volatile bit    SPI1TXB_TXB1              at SPI1TXB : 1
var volatile bit    SPI1TXB_TXB2              at SPI1TXB : 2
var volatile bit    SPI1TXB_TXB3              at SPI1TXB : 3
var volatile bit    SPI1TXB_TXB4              at SPI1TXB : 4
var volatile bit    SPI1TXB_TXB5              at SPI1TXB : 5
var volatile bit    SPI1TXB_TXB6              at SPI1TXB : 6
var volatile bit    SPI1TXB_TXB7              at SPI1TXB : 7
-- ------------------------------------------------
var volatile word   SPI1TCNT                  at { 0x82 }
-- ------------------------------------------------
var volatile byte   SPI1TCNTL                 at { 0x82 }
-- ------------------------------------------------
var volatile byte   SPI1TCNTH                 at { 0x83 }
var volatile bit*3  SPI1TCNTH_TCNTH           at SPI1TCNTH : 0
-- ------------------------------------------------
var volatile byte   SPI1CON0                  at { 0x84 }
var volatile bit    SPI1CON0_BMODE            at SPI1CON0 : 0
var volatile bit    SPI1CON0_MST              at SPI1CON0 : 1
var volatile bit    SPI1CON0_LSBF             at SPI1CON0 : 2
var volatile bit    SPI1CON0_EN               at SPI1CON0 : 7
var volatile bit    SPI1CON0_SPI1BMODE        at SPI1CON0 : 0
var volatile bit    SPI1CON0_SPI1MST          at SPI1CON0 : 1
var volatile bit    SPI1CON0_SPI1LSBF         at SPI1CON0 : 2
var volatile bit    SPI1CON0_SPI1SPIEN        at SPI1CON0 : 7
-- ------------------------------------------------
var volatile byte   SPI1CON1                  at { 0x85 }
var volatile bit    SPI1CON1_SDOP             at SPI1CON1 : 0
var volatile bit    SPI1CON1_SDIP             at SPI1CON1 : 1
var volatile bit    SPI1CON1_SSP              at SPI1CON1 : 2
var volatile bit    SPI1CON1_FST              at SPI1CON1 : 4
var volatile bit    SPI1CON1_CKP              at SPI1CON1 : 5
var volatile bit    SPI1CON1_CKE              at SPI1CON1 : 6
var volatile bit    SPI1CON1_SMP              at SPI1CON1 : 7
var volatile bit    SPI1CON1_SPI1SDOP         at SPI1CON1 : 0
var volatile bit    SPI1CON1_SPI1SDIP         at SPI1CON1 : 1
var volatile bit    SPI1CON1_SPI1SSP          at SPI1CON1 : 2
var volatile bit    SPI1CON1_SPI1FST          at SPI1CON1 : 4
var volatile bit    SPI1CON1_SPI1CKP          at SPI1CON1 : 5
var volatile bit    SPI1CON1_SPI1CKE          at SPI1CON1 : 6
var volatile bit    SPI1CON1_SPI1SMP          at SPI1CON1 : 7
-- ------------------------------------------------
var volatile byte   SPI1CON2                  at { 0x86 }
var volatile bit    SPI1CON2_RXR              at SPI1CON2 : 0
var volatile bit    SPI1CON2_TXR              at SPI1CON2 : 1
var volatile bit    SPI1CON2_SSET             at SPI1CON2 : 2
var volatile bit    SPI1CON2_SSFLT            at SPI1CON2 : 6
var volatile bit    SPI1CON2_BUSY             at SPI1CON2 : 7
var volatile bit    SPI1CON2_SPI1RXR          at SPI1CON2 : 0
var volatile bit    SPI1CON2_SPI1TXR          at SPI1CON2 : 1
var volatile bit    SPI1CON2_SPI1SSET         at SPI1CON2 : 2
var volatile bit    SPI1CON2_SPI1SSFLT        at SPI1CON2 : 6
var volatile bit    SPI1CON2_SPI1BUSY         at SPI1CON2 : 7
-- ------------------------------------------------
var volatile byte   SPI1STATUS                at { 0x87 }
var volatile bit    SPI1STATUS_RXBF           at SPI1STATUS : 0
var volatile bit    SPI1STATUS_CLRBF          at SPI1STATUS : 2
var volatile bit    SPI1STATUS_RXRE           at SPI1STATUS : 3
var volatile bit    SPI1STATUS_TXBE           at SPI1STATUS : 5
var volatile bit    SPI1STATUS_TXWE           at SPI1STATUS : 7
var volatile bit    SPI1STATUS_SPI1RXBF       at SPI1STATUS : 0
var volatile bit    SPI1STATUS_SPI1CLRBF      at SPI1STATUS : 2
var volatile bit    SPI1STATUS_SPI1RXRE       at SPI1STATUS : 3
var volatile bit    SPI1STATUS_SPI1TXBE       at SPI1STATUS : 5
var volatile bit    SPI1STATUS_SPI1TXWE       at SPI1STATUS : 7
-- ------------------------------------------------
var volatile byte   SPI1TWIDTH                at { 0x88 }
var volatile bit*3  SPI1TWIDTH_TWIDTH         at SPI1TWIDTH : 0
var volatile bit    SPI1TWIDTH_TWIDTH0        at SPI1TWIDTH : 0
var volatile bit    SPI1TWIDTH_TWIDTH1        at SPI1TWIDTH : 1
var volatile bit    SPI1TWIDTH_TWIDTH2        at SPI1TWIDTH : 2
-- ------------------------------------------------
var volatile byte   SPI1BAUD                  at { 0x89 }
var volatile bit    SPI1BAUD_BAUD0            at SPI1BAUD : 0
var volatile bit    SPI1BAUD_BAUD1            at SPI1BAUD : 1
var volatile bit    SPI1BAUD_BAUD2            at SPI1BAUD : 2
var volatile bit    SPI1BAUD_BAUD3            at SPI1BAUD : 3
var volatile bit    SPI1BAUD_BAUD4            at SPI1BAUD : 4
var volatile bit    SPI1BAUD_BAUD5            at SPI1BAUD : 5
var volatile bit    SPI1BAUD_BAUD6            at SPI1BAUD : 6
var volatile bit    SPI1BAUD_BAUD7            at SPI1BAUD : 7
-- ------------------------------------------------
var volatile byte   SPI1INTF                  at { 0x8A }
var volatile bit    SPI1INTF_TXUIF            at SPI1INTF : 1
var volatile bit    SPI1INTF_RXOIF            at SPI1INTF : 2
var volatile bit    SPI1INTF_EOSIF            at SPI1INTF : 4
var volatile bit    SPI1INTF_SOSIF            at SPI1INTF : 5
var volatile bit    SPI1INTF_TCZIF            at SPI1INTF : 6
var volatile bit    SPI1INTF_SRMTIF           at SPI1INTF : 7
var volatile bit    SPI1INTF_SPI1TXUIF        at SPI1INTF : 1
var volatile bit    SPI1INTF_SPI1RXOIF        at SPI1INTF : 2
var volatile bit    SPI1INTF_SPI1EOSIF        at SPI1INTF : 4
var volatile bit    SPI1INTF_SPI1SOSIF        at SPI1INTF : 5
var volatile bit    SPI1INTF_SPI1TCZIF        at SPI1INTF : 6
var volatile bit    SPI1INTF_SPI1SRMTIF       at SPI1INTF : 7
-- ------------------------------------------------
var volatile byte   SPI1INTE                  at { 0x8B }
var volatile bit    SPI1INTE_TXUIE            at SPI1INTE : 1
var volatile bit    SPI1INTE_RXOIE            at SPI1INTE : 2
var volatile bit    SPI1INTE_EOSIE            at SPI1INTE : 4
var volatile bit    SPI1INTE_SOSIE            at SPI1INTE : 5
var volatile bit    SPI1INTE_TCZIE            at SPI1INTE : 6
var volatile bit    SPI1INTE_SRMTIE           at SPI1INTE : 7
var volatile bit    SPI1INTE_SPI1TXUIE        at SPI1INTE : 1
var volatile bit    SPI1INTE_SPI1RXOIE        at SPI1INTE : 2
var volatile bit    SPI1INTE_SPI1EOSIE        at SPI1INTE : 4
var volatile bit    SPI1INTE_SPI1SOSIE        at SPI1INTE : 5
var volatile bit    SPI1INTE_SPI1TCZIE        at SPI1INTE : 6
var volatile bit    SPI1INTE_SPI1SRMTIE       at SPI1INTE : 7
-- ------------------------------------------------
var volatile byte   SPI1CLK                   at { 0x8C }
var volatile bit*5  SPI1CLK_CLKSEL            at SPI1CLK : 0
var volatile bit    SPI1CLK_CLKSEL0           at SPI1CLK : 0
var volatile bit    SPI1CLK_CLKSEL1           at SPI1CLK : 1
var volatile bit    SPI1CLK_CLKSEL2           at SPI1CLK : 2
var volatile bit    SPI1CLK_CLKSEL3           at SPI1CLK : 3
var volatile bit    SPI1CLK_CLKSEL4           at SPI1CLK : 4
var volatile bit*5  SPI1CLK_SPI1CLKSEL        at SPI1CLK : 0
var volatile bit    SPI1CLK_SPI1CLKSEL0       at SPI1CLK : 0
var volatile bit    SPI1CLK_SPI1CLKSEL1       at SPI1CLK : 1
var volatile bit    SPI1CLK_SPI1CLKSEL2       at SPI1CLK : 2
var volatile bit    SPI1CLK_SPI1CLKSEL3       at SPI1CLK : 3
var volatile bit    SPI1CLK_SPI1CLKSEL4       at SPI1CLK : 4
-- ------------------------------------------------
var volatile byte   SPI2RXB                   at { 0x8D }
var volatile bit    SPI2RXB_RXB0              at SPI2RXB : 0
var volatile bit    SPI2RXB_RXB1              at SPI2RXB : 1
var volatile bit    SPI2RXB_RXB2              at SPI2RXB : 2
var volatile bit    SPI2RXB_RXB3              at SPI2RXB : 3
var volatile bit    SPI2RXB_RXB4              at SPI2RXB : 4
var volatile bit    SPI2RXB_RXB5              at SPI2RXB : 5
var volatile bit    SPI2RXB_RXB6              at SPI2RXB : 6
var volatile bit    SPI2RXB_RXB7              at SPI2RXB : 7
-- ------------------------------------------------
var volatile byte   SPI2TXB                   at { 0x8E }
var volatile bit    SPI2TXB_TXB0              at SPI2TXB : 0
var volatile bit    SPI2TXB_TXB1              at SPI2TXB : 1
var volatile bit    SPI2TXB_TXB2              at SPI2TXB : 2
var volatile bit    SPI2TXB_TXB3              at SPI2TXB : 3
var volatile bit    SPI2TXB_TXB4              at SPI2TXB : 4
var volatile bit    SPI2TXB_TXB5              at SPI2TXB : 5
var volatile bit    SPI2TXB_TXB6              at SPI2TXB : 6
var volatile bit    SPI2TXB_TXB7              at SPI2TXB : 7
-- ------------------------------------------------
var volatile word   SPI2TCNT                  at { 0x8F }
-- ------------------------------------------------
var volatile byte   SPI2TCNTL                 at { 0x8F }
-- ------------------------------------------------
var volatile byte   SPI2TCNTH                 at { 0x90 }
var volatile bit*3  SPI2TCNTH_TCNTH           at SPI2TCNTH : 0
-- ------------------------------------------------
var volatile byte   SPI2CON0                  at { 0x91 }
var volatile bit    SPI2CON0_BMODE            at SPI2CON0 : 0
var volatile bit    SPI2CON0_MST              at SPI2CON0 : 1
var volatile bit    SPI2CON0_LSBF             at SPI2CON0 : 2
var volatile bit    SPI2CON0_EN               at SPI2CON0 : 7
var volatile bit    SPI2CON0_SPI2BMODE        at SPI2CON0 : 0
var volatile bit    SPI2CON0_SPI2MST          at SPI2CON0 : 1
var volatile bit    SPI2CON0_SPI2LSBF         at SPI2CON0 : 2
var volatile bit    SPI2CON0_SPI2SPIEN        at SPI2CON0 : 7
-- ------------------------------------------------
var volatile byte   SPI2CON1                  at { 0x92 }
var volatile bit    SPI2CON1_SDOP             at SPI2CON1 : 0
var volatile bit    SPI2CON1_SDIP             at SPI2CON1 : 1
var volatile bit    SPI2CON1_SSP              at SPI2CON1 : 2
var volatile bit    SPI2CON1_FST              at SPI2CON1 : 4
var volatile bit    SPI2CON1_CKP              at SPI2CON1 : 5
var volatile bit    SPI2CON1_CKE              at SPI2CON1 : 6
var volatile bit    SPI2CON1_SMP              at SPI2CON1 : 7
var volatile bit    SPI2CON1_SPI2SDOP         at SPI2CON1 : 0
var volatile bit    SPI2CON1_SPI2SDIP         at SPI2CON1 : 1
var volatile bit    SPI2CON1_SPI2SSP          at SPI2CON1 : 2
var volatile bit    SPI2CON1_SPI2FST          at SPI2CON1 : 4
var volatile bit    SPI2CON1_SPI2CKP          at SPI2CON1 : 5
var volatile bit    SPI2CON1_SPI2CKE          at SPI2CON1 : 6
var volatile bit    SPI2CON1_SPI2SMP          at SPI2CON1 : 7
-- ------------------------------------------------
var volatile byte   SPI2CON2                  at { 0x93 }
var volatile bit    SPI2CON2_RXR              at SPI2CON2 : 0
var volatile bit    SPI2CON2_TXR              at SPI2CON2 : 1
var volatile bit    SPI2CON2_SSET             at SPI2CON2 : 2
var volatile bit    SPI2CON2_SSFLT            at SPI2CON2 : 6
var volatile bit    SPI2CON2_BUSY             at SPI2CON2 : 7
var volatile bit    SPI2CON2_SPI2RXR          at SPI2CON2 : 0
var volatile bit    SPI2CON2_SPI2TXR          at SPI2CON2 : 1
var volatile bit    SPI2CON2_SPI2SSET         at SPI2CON2 : 2
var volatile bit    SPI2CON2_SPI2SSFLT        at SPI2CON2 : 6
var volatile bit    SPI2CON2_SPI2BUSY         at SPI2CON2 : 7
-- ------------------------------------------------
var volatile byte   SPI2STATUS                at { 0x94 }
var volatile bit    SPI2STATUS_RXBF           at SPI2STATUS : 0
var volatile bit    SPI2STATUS_CLRBF          at SPI2STATUS : 2
var volatile bit    SPI2STATUS_RXRE           at SPI2STATUS : 3
var volatile bit    SPI2STATUS_TXBE           at SPI2STATUS : 5
var volatile bit    SPI2STATUS_TXWE           at SPI2STATUS : 7
var volatile bit    SPI2STATUS_SPI2RXBF       at SPI2STATUS : 0
var volatile bit    SPI2STATUS_SPI2CLRBF      at SPI2STATUS : 2
var volatile bit    SPI2STATUS_SPI2RXRE       at SPI2STATUS : 3
var volatile bit    SPI2STATUS_SPI2TXBE       at SPI2STATUS : 5
var volatile bit    SPI2STATUS_SPI2TXWE       at SPI2STATUS : 7
-- ------------------------------------------------
var volatile byte   SPI2TWIDTH                at { 0x95 }
var volatile bit*3  SPI2TWIDTH_TWIDTH         at SPI2TWIDTH : 0
var volatile bit    SPI2TWIDTH_TWIDTH0        at SPI2TWIDTH : 0
var volatile bit    SPI2TWIDTH_TWIDTH1        at SPI2TWIDTH : 1
var volatile bit    SPI2TWIDTH_TWIDTH2        at SPI2TWIDTH : 2
-- ------------------------------------------------
var volatile byte   SPI2BAUD                  at { 0x96 }
var volatile bit    SPI2BAUD_BAUD0            at SPI2BAUD : 0
var volatile bit    SPI2BAUD_BAUD1            at SPI2BAUD : 1
var volatile bit    SPI2BAUD_BAUD2            at SPI2BAUD : 2
var volatile bit    SPI2BAUD_BAUD3            at SPI2BAUD : 3
var volatile bit    SPI2BAUD_BAUD4            at SPI2BAUD : 4
var volatile bit    SPI2BAUD_BAUD5            at SPI2BAUD : 5
var volatile bit    SPI2BAUD_BAUD6            at SPI2BAUD : 6
var volatile bit    SPI2BAUD_BAUD7            at SPI2BAUD : 7
-- ------------------------------------------------
var volatile byte   SPI2INTF                  at { 0x97 }
var volatile bit    SPI2INTF_TXUIF            at SPI2INTF : 1
var volatile bit    SPI2INTF_RXOIF            at SPI2INTF : 2
var volatile bit    SPI2INTF_EOSIF            at SPI2INTF : 4
var volatile bit    SPI2INTF_SOSIF            at SPI2INTF : 5
var volatile bit    SPI2INTF_TCZIF            at SPI2INTF : 6
var volatile bit    SPI2INTF_SRMTIF           at SPI2INTF : 7
var volatile bit    SPI2INTF_SPI2TXUIF        at SPI2INTF : 1
var volatile bit    SPI2INTF_SPI2RXOIF        at SPI2INTF : 2
var volatile bit    SPI2INTF_SPI2EOSIF        at SPI2INTF : 4
var volatile bit    SPI2INTF_SPI2SOSIF        at SPI2INTF : 5
var volatile bit    SPI2INTF_SPI2TCZIF        at SPI2INTF : 6
var volatile bit    SPI2INTF_SPI2SRMTIF       at SPI2INTF : 7
-- ------------------------------------------------
var volatile byte   SPI2INTE                  at { 0x98 }
var volatile bit    SPI2INTE_TXUIE            at SPI2INTE : 1
var volatile bit    SPI2INTE_RXOIE            at SPI2INTE : 2
var volatile bit    SPI2INTE_EOSIE            at SPI2INTE : 4
var volatile bit    SPI2INTE_SOSIE            at SPI2INTE : 5
var volatile bit    SPI2INTE_TCZIE            at SPI2INTE : 6
var volatile bit    SPI2INTE_SRMTIE           at SPI2INTE : 7
var volatile bit    SPI2INTE_SPI2TXUIE        at SPI2INTE : 1
var volatile bit    SPI2INTE_SPI2RXOIE        at SPI2INTE : 2
var volatile bit    SPI2INTE_SPI2EOSIE        at SPI2INTE : 4
var volatile bit    SPI2INTE_SPI2SOSIE        at SPI2INTE : 5
var volatile bit    SPI2INTE_SPI2TCZIE        at SPI2INTE : 6
var volatile bit    SPI2INTE_SPI2SRMTIE       at SPI2INTE : 7
-- ------------------------------------------------
var volatile byte   SPI2CLK                   at { 0x99 }
var volatile bit*5  SPI2CLK_CLKSEL            at SPI2CLK : 0
var volatile bit    SPI2CLK_CLKSEL0           at SPI2CLK : 0
var volatile bit    SPI2CLK_CLKSEL1           at SPI2CLK : 1
var volatile bit    SPI2CLK_CLKSEL2           at SPI2CLK : 2
var volatile bit    SPI2CLK_CLKSEL3           at SPI2CLK : 3
var volatile bit    SPI2CLK_CLKSEL4           at SPI2CLK : 4
var volatile bit*5  SPI2CLK_SPI2CLKSEL        at SPI2CLK : 0
var volatile bit    SPI2CLK_SPI2CLKSEL0       at SPI2CLK : 0
var volatile bit    SPI2CLK_SPI2CLKSEL1       at SPI2CLK : 1
var volatile bit    SPI2CLK_SPI2CLKSEL2       at SPI2CLK : 2
var volatile bit    SPI2CLK_SPI2CLKSEL3       at SPI2CLK : 3
var volatile bit    SPI2CLK_SPI2CLKSEL4       at SPI2CLK : 4
-- ------------------------------------------------
var volatile byte   ACTCON                    at { 0xAC }
var volatile bit    ACTCON_ACTORS             at ACTCON : 1
var volatile bit    ACTCON_ACTLOCK            at ACTCON : 3
var volatile bit    ACTCON_ACTUD              at ACTCON : 6
var volatile bit    ACTCON_ACTEN              at ACTCON : 7
-- ------------------------------------------------
var volatile byte   OSCCON1                   at { 0xAD }
var volatile bit*4  OSCCON1_NDIV              at OSCCON1 : 0
var volatile bit*3  OSCCON1_NOSC              at OSCCON1 : 4
var volatile bit    OSCCON1_NDIV0             at OSCCON1 : 0
var volatile bit    OSCCON1_NDIV1             at OSCCON1 : 1
var volatile bit    OSCCON1_NDIV2             at OSCCON1 : 2
var volatile bit    OSCCON1_NDIV3             at OSCCON1 : 3
var volatile bit    OSCCON1_NOSC0             at OSCCON1 : 4
var volatile bit    OSCCON1_NOSC1             at OSCCON1 : 5
var volatile bit    OSCCON1_NOSC2             at OSCCON1 : 6
-- ------------------------------------------------
var volatile byte   OSCCON2                   at { 0xAE }
var volatile bit*4  OSCCON2_CDIV              at OSCCON2 : 0
var volatile bit*3  OSCCON2_COSC              at OSCCON2 : 4
var volatile bit    OSCCON2_CDIV0             at OSCCON2 : 0
var volatile bit    OSCCON2_CDIV1             at OSCCON2 : 1
var volatile bit    OSCCON2_CDIV2             at OSCCON2 : 2
var volatile bit    OSCCON2_CDIV3             at OSCCON2 : 3
var volatile bit    OSCCON2_COSC0             at OSCCON2 : 4
var volatile bit    OSCCON2_COSC1             at OSCCON2 : 5
var volatile bit    OSCCON2_COSC2             at OSCCON2 : 6
-- ------------------------------------------------
var volatile byte   OSCCON3                   at { 0xAF }
var volatile bit    OSCCON3_NOSCR             at OSCCON3 : 3
var volatile bit    OSCCON3_ORDY              at OSCCON3 : 4
var volatile bit    OSCCON3_SOSCPWR           at OSCCON3 : 6
var volatile bit    OSCCON3_CSWHOLD           at OSCCON3 : 7
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0xB0 }
var volatile bit*6  OSCTUNE_TUN               at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN0              at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN1              at OSCTUNE : 1
var volatile bit    OSCTUNE_TUN2              at OSCTUNE : 2
var volatile bit    OSCTUNE_TUN3              at OSCTUNE : 3
var volatile bit    OSCTUNE_TUN4              at OSCTUNE : 4
var volatile bit    OSCTUNE_TUN5              at OSCTUNE : 5
-- ------------------------------------------------
var volatile byte   OSCFRQ                    at { 0xB1 }
var volatile bit*4  OSCFRQ_HFFRQ              at OSCFRQ : 0
var volatile bit    OSCFRQ_FRQ0               at OSCFRQ : 0
var volatile bit    OSCFRQ_FRQ1               at OSCFRQ : 1
var volatile bit    OSCFRQ_FRQ2               at OSCFRQ : 2
var volatile bit    OSCFRQ_FRQ3               at OSCFRQ : 3
-- ------------------------------------------------
var volatile byte   OSCSTAT                   at { 0xB2 }
var volatile bit    OSCSTAT_PLLR              at OSCSTAT : 0
var volatile bit    OSCSTAT_ADOR              at OSCSTAT : 2
var volatile bit    OSCSTAT_SOR               at OSCSTAT : 3
var volatile bit    OSCSTAT_LFOR              at OSCSTAT : 4
var volatile bit    OSCSTAT_MFOR              at OSCSTAT : 5
var volatile bit    OSCSTAT_HFOR              at OSCSTAT : 6
var volatile bit    OSCSTAT_EXTOR             at OSCSTAT : 7
-- ------------------------------------------------
var volatile byte   OSCEN                     at { 0xB3 }
var volatile bit    OSCEN_PLLEN               at OSCEN : 0
var volatile bit    OSCEN_ADOEN               at OSCEN : 2
var volatile bit    OSCEN_SOSCEN              at OSCEN : 3
var volatile bit    OSCEN_LFOEN               at OSCEN : 4
var volatile bit    OSCEN_MFOEN               at OSCEN : 5
var volatile bit    OSCEN_HFOEN               at OSCEN : 6
var volatile bit    OSCEN_EXTOEN              at OSCEN : 7
-- ------------------------------------------------
var volatile byte   PRLOCK                    at { 0xB4 }
var volatile bit    PRLOCK_PRLOCKED           at PRLOCK : 0
-- ------------------------------------------------
var volatile byte   SCANPR                    at { 0xB5 }
var volatile bit*3  SCANPR_PR                 at SCANPR : 0
var volatile bit    SCANPR_PR0                at SCANPR : 0
var volatile bit    SCANPR_PR1                at SCANPR : 1
var volatile bit    SCANPR_PR2                at SCANPR : 2
var volatile bit*3  SCANPR_SCANPR             at SCANPR : 0
var volatile bit    SCANPR_SCANPR0            at SCANPR : 0
var volatile bit    SCANPR_SCANPR1            at SCANPR : 1
var volatile bit    SCANPR_SCANPR2            at SCANPR : 2
-- ------------------------------------------------
var volatile byte   DMA1PR                    at { 0xB6 }
var volatile bit*3  DMA1PR_PR                 at DMA1PR : 0
var volatile bit    DMA1PR_PR0                at DMA1PR : 0
var volatile bit    DMA1PR_PR1                at DMA1PR : 1
var volatile bit    DMA1PR_PR2                at DMA1PR : 2
var volatile bit*3  DMA1PR_DMA1PR             at DMA1PR : 0
var volatile bit    DMA1PR_DMA1PR0            at DMA1PR : 0
var volatile bit    DMA1PR_DMA1PR1            at DMA1PR : 1
var volatile bit    DMA1PR_DMA1PR2            at DMA1PR : 2
-- ------------------------------------------------
var volatile byte   DMA2PR                    at { 0xB7 }
var volatile bit*3  DMA2PR_PR                 at DMA2PR : 0
var volatile bit    DMA2PR_PR0                at DMA2PR : 0
var volatile bit    DMA2PR_PR1                at DMA2PR : 1
var volatile bit    DMA2PR_PR2                at DMA2PR : 2
var volatile bit*3  DMA2PR_DMA2PR             at DMA2PR : 0
var volatile bit    DMA2PR_DMA2PR0            at DMA2PR : 0
var volatile bit    DMA2PR_DMA2PR1            at DMA2PR : 1
var volatile bit    DMA2PR_DMA2PR2            at DMA2PR : 2
-- ------------------------------------------------
var volatile byte   DMA3PR                    at { 0xB8 }
var volatile bit*3  DMA3PR_PR                 at DMA3PR : 0
var volatile bit    DMA3PR_PR0                at DMA3PR : 0
var volatile bit    DMA3PR_PR1                at DMA3PR : 1
var volatile bit    DMA3PR_PR2                at DMA3PR : 2
var volatile bit*3  DMA3PR_DMA3PR             at DMA3PR : 0
var volatile bit    DMA3PR_DMA3PR0            at DMA3PR : 0
var volatile bit    DMA3PR_DMA3PR1            at DMA3PR : 1
var volatile bit    DMA3PR_DMA3PR2            at DMA3PR : 2
-- ------------------------------------------------
var volatile byte   DMA4PR                    at { 0xB9 }
var volatile bit*3  DMA4PR_PR                 at DMA4PR : 0
var volatile bit    DMA4PR_PR0                at DMA4PR : 0
var volatile bit    DMA4PR_PR1                at DMA4PR : 1
var volatile bit    DMA4PR_PR2                at DMA4PR : 2
var volatile bit*3  DMA4PR_DMA4PR             at DMA4PR : 0
var volatile bit    DMA4PR_DMA4PR0            at DMA4PR : 0
var volatile bit    DMA4PR_DMA4PR1            at DMA4PR : 1
var volatile bit    DMA4PR_DMA4PR2            at DMA4PR : 2
-- ------------------------------------------------
var volatile byte   DMA5PR                    at { 0xBA }
var volatile bit*3  DMA5PR_PR                 at DMA5PR : 0
var volatile bit    DMA5PR_PR0                at DMA5PR : 0
var volatile bit    DMA5PR_PR1                at DMA5PR : 1
var volatile bit    DMA5PR_PR2                at DMA5PR : 2
var volatile bit*3  DMA5PR_DMA5PR             at DMA5PR : 0
var volatile bit    DMA5PR_DMA5PR0            at DMA5PR : 0
var volatile bit    DMA5PR_DMA5PR1            at DMA5PR : 1
var volatile bit    DMA5PR_DMA5PR2            at DMA5PR : 2
-- ------------------------------------------------
var volatile byte   DMA6PR                    at { 0xBB }
var volatile bit*3  DMA6PR_PR                 at DMA6PR : 0
var volatile bit    DMA6PR_PR0                at DMA6PR : 0
var volatile bit    DMA6PR_PR1                at DMA6PR : 1
var volatile bit    DMA6PR_PR2                at DMA6PR : 2
var volatile bit*3  DMA6PR_DMA6PR             at DMA6PR : 0
var volatile bit    DMA6PR_DMA6PR0            at DMA6PR : 0
var volatile bit    DMA6PR_DMA6PR1            at DMA6PR : 1
var volatile bit    DMA6PR_DMA6PR2            at DMA6PR : 2
-- ------------------------------------------------
var volatile byte   DMA7PR                    at { 0xBC }
var volatile bit*3  DMA7PR_PR                 at DMA7PR : 0
var volatile bit    DMA7PR_PR0                at DMA7PR : 0
var volatile bit    DMA7PR_PR1                at DMA7PR : 1
var volatile bit    DMA7PR_PR2                at DMA7PR : 2
var volatile bit*3  DMA7PR_DMA7PR             at DMA7PR : 0
var volatile bit    DMA7PR_DMA7PR0            at DMA7PR : 0
var volatile bit    DMA7PR_DMA7PR1            at DMA7PR : 1
var volatile bit    DMA7PR_DMA7PR2            at DMA7PR : 2
-- ------------------------------------------------
var volatile byte   DMA8PR                    at { 0xBD }
var volatile bit*3  DMA8PR_PR                 at DMA8PR : 0
var volatile bit    DMA8PR_PR0                at DMA8PR : 0
var volatile bit    DMA8PR_PR1                at DMA8PR : 1
var volatile bit    DMA8PR_PR2                at DMA8PR : 2
var volatile bit*3  DMA8PR_DMA8PR             at DMA8PR : 0
var volatile bit    DMA8PR_DMA8PR0            at DMA8PR : 0
var volatile bit    DMA8PR_DMA8PR1            at DMA8PR : 1
var volatile bit    DMA8PR_DMA8PR2            at DMA8PR : 2
-- ------------------------------------------------
var volatile byte   MAINPR                    at { 0xBE }
var volatile bit*3  MAINPR_PR                 at MAINPR : 0
var volatile bit    MAINPR_PR0                at MAINPR : 0
var volatile bit    MAINPR_PR1                at MAINPR : 1
var volatile bit    MAINPR_PR2                at MAINPR : 2
var volatile bit*3  MAINPR_MAINPR             at MAINPR : 0
var volatile bit    MAINPR_MAINPR0            at MAINPR : 0
var volatile bit    MAINPR_MAINPR1            at MAINPR : 1
var volatile bit    MAINPR_MAINPR2            at MAINPR : 2
-- ------------------------------------------------
var volatile byte   ISRPR                     at { 0xBF }
var volatile bit*3  ISRPR_PR                  at ISRPR : 0
var volatile bit    ISRPR_PR0                 at ISRPR : 0
var volatile bit    ISRPR_PR1                 at ISRPR : 1
var volatile bit    ISRPR_PR2                 at ISRPR : 2
var volatile bit*3  ISRPR_ISRPR               at ISRPR : 0
var volatile bit    ISRPR_ISRPR0              at ISRPR : 0
var volatile bit    ISRPR_ISRPR1              at ISRPR : 1
var volatile bit    ISRPR_ISRPR2              at ISRPR : 2
-- ------------------------------------------------
var volatile byte   CLCDATA                   at { 0xD4 }
var volatile bit    CLCDATA_MCLC0             at CLCDATA : 0
var volatile bit    CLCDATA_MCLC1             at CLCDATA : 1
var volatile bit    CLCDATA_MCLC2             at CLCDATA : 2
var volatile bit    CLCDATA_MCLC3             at CLCDATA : 3
var volatile bit    CLCDATA_MCLC4             at CLCDATA : 4
var volatile bit    CLCDATA_MCLC5             at CLCDATA : 5
var volatile bit    CLCDATA_MCLC6             at CLCDATA : 6
var volatile bit    CLCDATA_MCLC7             at CLCDATA : 7
var volatile bit    CLCDATA_CLC1OUT           at CLCDATA : 0
var volatile bit    CLCDATA_CLC2OUT           at CLCDATA : 1
var volatile bit    CLCDATA_CLC3OUT           at CLCDATA : 2
var volatile bit    CLCDATA_CLC4OUT           at CLCDATA : 3
var volatile bit    CLCDATA_CLC5OUT           at CLCDATA : 4
var volatile bit    CLCDATA_CLC6OUT           at CLCDATA : 5
var volatile bit    CLCDATA_CLC7OUT           at CLCDATA : 6
var volatile bit    CLCDATA_CLC8OUT           at CLCDATA : 7
-- ------------------------------------------------
var volatile byte   CLCSELECT                 at { 0xD5 }
var volatile bit*3  CLCSELECT_SLCT            at CLCSELECT : 0
var volatile bit    CLCSELECT_SLCT0           at CLCSELECT : 0
var volatile bit    CLCSELECT_SLCT1           at CLCSELECT : 1
var volatile bit    CLCSELECT_SLCT2           at CLCSELECT : 2
-- ------------------------------------------------
var volatile byte   CLCNCON                   at { 0xD6 }
var volatile bit*3  CLCNCON_MODE              at CLCNCON : 0
var volatile bit    CLCNCON_INTN              at CLCNCON : 3
var volatile bit    CLCNCON_INTP              at CLCNCON : 4
var volatile bit    CLCNCON_OUT               at CLCNCON : 5
var volatile bit    CLCNCON_OE                at CLCNCON : 6
var volatile bit    CLCNCON_EN                at CLCNCON : 7
var volatile bit    CLCNCON_MODE0             at CLCNCON : 0
var volatile bit    CLCNCON_MODE1             at CLCNCON : 1
var volatile bit    CLCNCON_MODE2             at CLCNCON : 2
-- ------------------------------------------------
var volatile byte   CLCNPOL                   at { 0xD7 }
var volatile bit    CLCNPOL_G1POL             at CLCNPOL : 0
var volatile bit    CLCNPOL_G2POL             at CLCNPOL : 1
var volatile bit    CLCNPOL_G3POL             at CLCNPOL : 2
var volatile bit    CLCNPOL_G4POL             at CLCNPOL : 3
var volatile bit    CLCNPOL_POL               at CLCNPOL : 7
-- ------------------------------------------------
var volatile byte   CLCNSEL0                  at { 0xD8 }
var volatile bit    CLCNSEL0_D1S0             at CLCNSEL0 : 0
var volatile bit    CLCNSEL0_D1S1             at CLCNSEL0 : 1
var volatile bit    CLCNSEL0_D1S2             at CLCNSEL0 : 2
var volatile bit    CLCNSEL0_D1S3             at CLCNSEL0 : 3
var volatile bit    CLCNSEL0_D1S4             at CLCNSEL0 : 4
var volatile bit    CLCNSEL0_D1S5             at CLCNSEL0 : 5
var volatile bit    CLCNSEL0_D1S6             at CLCNSEL0 : 6
var volatile bit    CLCNSEL0_D1S7             at CLCNSEL0 : 7
-- ------------------------------------------------
var volatile byte   CLCNSEL1                  at { 0xD9 }
var volatile bit    CLCNSEL1_D2S0             at CLCNSEL1 : 0
var volatile bit    CLCNSEL1_D2S1             at CLCNSEL1 : 1
var volatile bit    CLCNSEL1_D2S2             at CLCNSEL1 : 2
var volatile bit    CLCNSEL1_D2S3             at CLCNSEL1 : 3
var volatile bit    CLCNSEL1_D2S4             at CLCNSEL1 : 4
var volatile bit    CLCNSEL1_D2S5             at CLCNSEL1 : 5
var volatile bit    CLCNSEL1_D2S6             at CLCNSEL1 : 6
var volatile bit    CLCNSEL1_D2S7             at CLCNSEL1 : 7
-- ------------------------------------------------
var volatile byte   CLCNSEL2                  at { 0xDA }
var volatile bit    CLCNSEL2_D3S0             at CLCNSEL2 : 0
var volatile bit    CLCNSEL2_D3S1             at CLCNSEL2 : 1
var volatile bit    CLCNSEL2_D3S2             at CLCNSEL2 : 2
var volatile bit    CLCNSEL2_D3S3             at CLCNSEL2 : 3
var volatile bit    CLCNSEL2_D3S4             at CLCNSEL2 : 4
var volatile bit    CLCNSEL2_D3S5             at CLCNSEL2 : 5
var volatile bit    CLCNSEL2_D3S6             at CLCNSEL2 : 6
var volatile bit    CLCNSEL2_D3S7             at CLCNSEL2 : 7
-- ------------------------------------------------
var volatile byte   CLCNSEL3                  at { 0xDB }
var volatile bit    CLCNSEL3_D4S0             at CLCNSEL3 : 0
var volatile bit    CLCNSEL3_D4S1             at CLCNSEL3 : 1
var volatile bit    CLCNSEL3_D4S2             at CLCNSEL3 : 2
var volatile bit    CLCNSEL3_D4S3             at CLCNSEL3 : 3
var volatile bit    CLCNSEL3_D4S4             at CLCNSEL3 : 4
var volatile bit    CLCNSEL3_D4S5             at CLCNSEL3 : 5
var volatile bit    CLCNSEL3_D4S6             at CLCNSEL3 : 6
var volatile bit    CLCNSEL3_D4S7             at CLCNSEL3 : 7
-- ------------------------------------------------
var volatile byte   CLCNGLS0                  at { 0xDC }
var volatile bit    CLCNGLS0_G1D1N            at CLCNGLS0 : 0
var volatile bit    CLCNGLS0_G1D1T            at CLCNGLS0 : 1
var volatile bit    CLCNGLS0_G1D2N            at CLCNGLS0 : 2
var volatile bit    CLCNGLS0_G1D2T            at CLCNGLS0 : 3
var volatile bit    CLCNGLS0_G1D3N            at CLCNGLS0 : 4
var volatile bit    CLCNGLS0_G1D3T            at CLCNGLS0 : 5
var volatile bit    CLCNGLS0_G1D4N            at CLCNGLS0 : 6
var volatile bit    CLCNGLS0_G1D4T            at CLCNGLS0 : 7
-- ------------------------------------------------
var volatile byte   CLCNGLS1                  at { 0xDD }
var volatile bit    CLCNGLS1_G2D1N            at CLCNGLS1 : 0
var volatile bit    CLCNGLS1_G2D1T            at CLCNGLS1 : 1
var volatile bit    CLCNGLS1_G2D2N            at CLCNGLS1 : 2
var volatile bit    CLCNGLS1_G2D2T            at CLCNGLS1 : 3
var volatile bit    CLCNGLS1_G2D3N            at CLCNGLS1 : 4
var volatile bit    CLCNGLS1_G2D3T            at CLCNGLS1 : 5
var volatile bit    CLCNGLS1_G2D4N            at CLCNGLS1 : 6
var volatile bit    CLCNGLS1_G2D4T            at CLCNGLS1 : 7
-- ------------------------------------------------
var volatile byte   CLCNGLS2                  at { 0xDE }
var volatile bit    CLCNGLS2_G3D1N            at CLCNGLS2 : 0
var volatile bit    CLCNGLS2_G3D1T            at CLCNGLS2 : 1
var volatile bit    CLCNGLS2_G3D2N            at CLCNGLS2 : 2
var volatile bit    CLCNGLS2_G3D2T            at CLCNGLS2 : 3
var volatile bit    CLCNGLS2_G3D3N            at CLCNGLS2 : 4
var volatile bit    CLCNGLS2_G3D3T            at CLCNGLS2 : 5
var volatile bit    CLCNGLS2_G3D4N            at CLCNGLS2 : 6
var volatile bit    CLCNGLS2_G3D4T            at CLCNGLS2 : 7
-- ------------------------------------------------
var volatile byte   CLCNGLS3                  at { 0xDF }
var volatile bit    CLCNGLS3_G4D1N            at CLCNGLS3 : 0
var volatile bit    CLCNGLS3_G4D1T            at CLCNGLS3 : 1
var volatile bit    CLCNGLS3_G4D2N            at CLCNGLS3 : 2
var volatile bit    CLCNGLS3_G4D2T            at CLCNGLS3 : 3
var volatile bit    CLCNGLS3_G4D3N            at CLCNGLS3 : 4
var volatile bit    CLCNGLS3_G4D3T            at CLCNGLS3 : 5
var volatile bit    CLCNGLS3_G4D4N            at CLCNGLS3 : 6
var volatile bit    CLCNGLS3_G4D4T            at CLCNGLS3 : 7
-- ------------------------------------------------
var volatile byte   DMASELECT                 at { 0xE8 }
var volatile bit*3  DMASELECT_SLCT            at DMASELECT : 0
var volatile bit    DMASELECT_SLCT0           at DMASELECT : 0
var volatile bit    DMASELECT_SLCT1           at DMASELECT : 1
var volatile bit    DMASELECT_SLCT2           at DMASELECT : 2
-- ------------------------------------------------
var volatile byte   DMANBUF                   at { 0xE9 }
var volatile bit    DMANBUF_BUF0              at DMANBUF : 0
var volatile bit    DMANBUF_BUF1              at DMANBUF : 1
var volatile bit    DMANBUF_BUF2              at DMANBUF : 2
var volatile bit    DMANBUF_BUF3              at DMANBUF : 3
var volatile bit    DMANBUF_BUF4              at DMANBUF : 4
var volatile bit    DMANBUF_BUF5              at DMANBUF : 5
var volatile bit    DMANBUF_BUF6              at DMANBUF : 6
var volatile bit    DMANBUF_BUF7              at DMANBUF : 7
-- ------------------------------------------------
var volatile word   DMANDCNT                  at { 0xEA }
-- ------------------------------------------------
var volatile byte   DMANDCNTL                 at { 0xEA }
var volatile bit    DMANDCNTL_DCNT0           at DMANDCNTL : 0
var volatile bit    DMANDCNTL_DCNT1           at DMANDCNTL : 1
var volatile bit    DMANDCNTL_DCNT2           at DMANDCNTL : 2
var volatile bit    DMANDCNTL_DCNT3           at DMANDCNTL : 3
var volatile bit    DMANDCNTL_DCNT4           at DMANDCNTL : 4
var volatile bit    DMANDCNTL_DCNT5           at DMANDCNTL : 5
var volatile bit    DMANDCNTL_DCNT6           at DMANDCNTL : 6
var volatile bit    DMANDCNTL_DCNT7           at DMANDCNTL : 7
-- ------------------------------------------------
var volatile byte   DMANDCNTH                 at { 0xEB }
var volatile bit*4  DMANDCNTH_DCNT            at DMANDCNTH : 0
var volatile bit    DMANDCNTH_DCNT8           at DMANDCNTH : 0
var volatile bit    DMANDCNTH_DCNT9           at DMANDCNTH : 1
var volatile bit    DMANDCNTH_DCNT10          at DMANDCNTH : 2
var volatile bit    DMANDCNTH_DCNT11          at DMANDCNTH : 3
-- ------------------------------------------------
var volatile word   DMANDPTR                  at { 0xEC }
-- ------------------------------------------------
var volatile byte   DMANDPTRL                 at { 0xEC }
var volatile bit    DMANDPTRL_DPTR0           at DMANDPTRL : 0
var volatile bit    DMANDPTRL_DPTR1           at DMANDPTRL : 1
var volatile bit    DMANDPTRL_DPTR2           at DMANDPTRL : 2
var volatile bit    DMANDPTRL_DPTR3           at DMANDPTRL : 3
var volatile bit    DMANDPTRL_DPTR4           at DMANDPTRL : 4
var volatile bit    DMANDPTRL_DPTR5           at DMANDPTRL : 5
var volatile bit    DMANDPTRL_DPTR6           at DMANDPTRL : 6
var volatile bit    DMANDPTRL_DPTR7           at DMANDPTRL : 7
-- ------------------------------------------------
var volatile byte   DMANDPTRH                 at { 0xED }
var volatile bit    DMANDPTRH_DPTR8           at DMANDPTRH : 0
var volatile bit    DMANDPTRH_DPTR9           at DMANDPTRH : 1
var volatile bit    DMANDPTRH_DPTR10          at DMANDPTRH : 2
var volatile bit    DMANDPTRH_DPTR11          at DMANDPTRH : 3
var volatile bit    DMANDPTRH_DPTR12          at DMANDPTRH : 4
var volatile bit    DMANDPTRH_DPTR13          at DMANDPTRH : 5
var volatile bit    DMANDPTRH_DPTR14          at DMANDPTRH : 6
var volatile bit    DMANDPTRH_DPTR15          at DMANDPTRH : 7
-- ------------------------------------------------
var volatile word   DMANDSZ                   at { 0xEE }
-- ------------------------------------------------
var volatile byte   DMANDSZL                  at { 0xEE }
var volatile bit    DMANDSZL_DSZ0             at DMANDSZL : 0
var volatile bit    DMANDSZL_DSZ1             at DMANDSZL : 1
var volatile bit    DMANDSZL_DSZ2             at DMANDSZL : 2
var volatile bit    DMANDSZL_DSZ3             at DMANDSZL : 3
var volatile bit    DMANDSZL_DSZ4             at DMANDSZL : 4
var volatile bit    DMANDSZL_DSZ5             at DMANDSZL : 5
var volatile bit    DMANDSZL_DSZ6             at DMANDSZL : 6
var volatile bit    DMANDSZL_DSZ7             at DMANDSZL : 7
-- ------------------------------------------------
var volatile byte   DMANDSZH                  at { 0xEF }
var volatile bit*4  DMANDSZH_DSZ              at DMANDSZH : 0
var volatile bit    DMANDSZH_DSZ8             at DMANDSZH : 0
var volatile bit    DMANDSZH_DSZ9             at DMANDSZH : 1
var volatile bit    DMANDSZH_DSZ10            at DMANDSZH : 2
var volatile bit    DMANDSZH_DSZ11            at DMANDSZH : 3
-- ------------------------------------------------
var volatile word   DMANDSA                   at { 0xF0 }
-- ------------------------------------------------
var volatile byte   DMANDSAL                  at { 0xF0 }
var volatile bit    DMANDSAL_DSA0             at DMANDSAL : 0
var volatile bit    DMANDSAL_DSA1             at DMANDSAL : 1
var volatile bit    DMANDSAL_DSA2             at DMANDSAL : 2
var volatile bit    DMANDSAL_DSA3             at DMANDSAL : 3
var volatile bit    DMANDSAL_DSA4             at DMANDSAL : 4
var volatile bit    DMANDSAL_DSA5             at DMANDSAL : 5
var volatile bit    DMANDSAL_DSA6             at DMANDSAL : 6
var volatile bit    DMANDSAL_DSA7             at DMANDSAL : 7
-- ------------------------------------------------
var volatile byte   DMANDSAH                  at { 0xF1 }
var volatile bit    DMANDSAH_DSA8             at DMANDSAH : 0
var volatile bit    DMANDSAH_DSA9             at DMANDSAH : 1
var volatile bit    DMANDSAH_DSA10            at DMANDSAH : 2
var volatile bit    DMANDSAH_DSA11            at DMANDSAH : 3
var volatile bit    DMANDSAH_DSA12            at DMANDSAH : 4
var volatile bit    DMANDSAH_DSA13            at DMANDSAH : 5
var volatile bit    DMANDSAH_DSA14            at DMANDSAH : 6
var volatile bit    DMANDSAH_DSA15            at DMANDSAH : 7
-- ------------------------------------------------
var volatile word   DMANSCNT                  at { 0xF2 }
-- ------------------------------------------------
var volatile byte   DMANSCNTL                 at { 0xF2 }
var volatile bit    DMANSCNTL_SCNT0           at DMANSCNTL : 0
var volatile bit    DMANSCNTL_SCNT1           at DMANSCNTL : 1
var volatile bit    DMANSCNTL_SCNT2           at DMANSCNTL : 2
var volatile bit    DMANSCNTL_SCNT3           at DMANSCNTL : 3
var volatile bit    DMANSCNTL_SCNT4           at DMANSCNTL : 4
var volatile bit    DMANSCNTL_SCNT5           at DMANSCNTL : 5
var volatile bit    DMANSCNTL_SCNT6           at DMANSCNTL : 6
var volatile bit    DMANSCNTL_SCNT7           at DMANSCNTL : 7
-- ------------------------------------------------
var volatile byte   DMANSCNTH                 at { 0xF3 }
var volatile bit*4  DMANSCNTH_SCNT            at DMANSCNTH : 0
var volatile bit    DMANSCNTH_SCNT8           at DMANSCNTH : 0
var volatile bit    DMANSCNTH_SCNT9           at DMANSCNTH : 1
var volatile bit    DMANSCNTH_SCNT10          at DMANSCNTH : 2
var volatile bit    DMANSCNTH_SCNT11          at DMANSCNTH : 3
-- ------------------------------------------------
var volatile byte*3 DMANSPTR                  at { 0xF4 }
-- ------------------------------------------------
var volatile byte   DMANSPTRL                 at { 0xF4 }
var volatile bit    DMANSPTRL_SPTR0           at DMANSPTRL : 0
var volatile bit    DMANSPTRL_SPTR1           at DMANSPTRL : 1
var volatile bit    DMANSPTRL_SPTR2           at DMANSPTRL : 2
var volatile bit    DMANSPTRL_SPTR3           at DMANSPTRL : 3
var volatile bit    DMANSPTRL_SPTR4           at DMANSPTRL : 4
var volatile bit    DMANSPTRL_SPTR5           at DMANSPTRL : 5
var volatile bit    DMANSPTRL_SPTR6           at DMANSPTRL : 6
var volatile bit    DMANSPTRL_SPTR7           at DMANSPTRL : 7
-- ------------------------------------------------
var volatile byte   DMANSPTRH                 at { 0xF5 }
var volatile bit    DMANSPTRH_SPTR8           at DMANSPTRH : 0
var volatile bit    DMANSPTRH_SPTR9           at DMANSPTRH : 1
var volatile bit    DMANSPTRH_SPTR10          at DMANSPTRH : 2
var volatile bit    DMANSPTRH_SPTR11          at DMANSPTRH : 3
var volatile bit    DMANSPTRH_SPTR12          at DMANSPTRH : 4
var volatile bit    DMANSPTRH_SPTR13          at DMANSPTRH : 5
var volatile bit    DMANSPTRH_SPTR14          at DMANSPTRH : 6
var volatile bit    DMANSPTRH_SPTR15          at DMANSPTRH : 7
-- ------------------------------------------------
var volatile byte   DMANSPTRU                 at { 0xF6 }
var volatile bit*6  DMANSPTRU_SPTR            at DMANSPTRU : 0
var volatile bit    DMANSPTRU_SPTR16          at DMANSPTRU : 0
var volatile bit    DMANSPTRU_SPTR17          at DMANSPTRU : 1
var volatile bit    DMANSPTRU_SPTR18          at DMANSPTRU : 2
var volatile bit    DMANSPTRU_SPTR19          at DMANSPTRU : 3
var volatile bit    DMANSPTRU_SPTR20          at DMANSPTRU : 4
var volatile bit    DMANSPTRU_SPTR21          at DMANSPTRU : 5
-- ------------------------------------------------
var volatile word   DMANSSZ                   at { 0xF7 }
-- ------------------------------------------------
var volatile byte   DMANSSZL                  at { 0xF7 }
var volatile bit    DMANSSZL_SSZ0             at DMANSSZL : 0
var volatile bit    DMANSSZL_SSZ1             at DMANSSZL : 1
var volatile bit    DMANSSZL_SSZ2             at DMANSSZL : 2
var volatile bit    DMANSSZL_SSZ3             at DMANSSZL : 3
var volatile bit    DMANSSZL_SSZ4             at DMANSSZL : 4
var volatile bit    DMANSSZL_SSZ5             at DMANSSZL : 5
var volatile bit    DMANSSZL_SSZ6             at DMANSSZL : 6
var volatile bit    DMANSSZL_SSZ7             at DMANSSZL : 7
-- ------------------------------------------------
var volatile byte   DMANSSZH                  at { 0xF8 }
var volatile bit*4  DMANSSZH_SSZ              at DMANSSZH : 0
var volatile bit    DMANSSZH_SSZ8             at DMANSSZH : 0
var volatile bit    DMANSSZH_SSZ9             at DMANSSZH : 1
var volatile bit    DMANSSZH_SSZ10            at DMANSSZH : 2
var volatile bit    DMANSSZH_SSZ11            at DMANSSZH : 3
-- ------------------------------------------------
var volatile byte*3 DMANSSA                   at { 0xF9 }
-- ------------------------------------------------
var volatile byte   DMANSSAL                  at { 0xF9 }
var volatile bit    DMANSSAL_SSA0             at DMANSSAL : 0
var volatile bit    DMANSSAL_SSA1             at DMANSSAL : 1
var volatile bit    DMANSSAL_SSA2             at DMANSSAL : 2
var volatile bit    DMANSSAL_SSA3             at DMANSSAL : 3
var volatile bit    DMANSSAL_SSA4             at DMANSSAL : 4
var volatile bit    DMANSSAL_SSA5             at DMANSSAL : 5
var volatile bit    DMANSSAL_SSA6             at DMANSSAL : 6
var volatile bit    DMANSSAL_SSA7             at DMANSSAL : 7
-- ------------------------------------------------
var volatile byte   DMANSSAH                  at { 0xFA }
var volatile bit    DMANSSAH_SSA8             at DMANSSAH : 0
var volatile bit    DMANSSAH_SSA9             at DMANSSAH : 1
var volatile bit    DMANSSAH_SSA10            at DMANSSAH : 2
var volatile bit    DMANSSAH_SSA11            at DMANSSAH : 3
var volatile bit    DMANSSAH_SSA12            at DMANSSAH : 4
var volatile bit    DMANSSAH_SSA13            at DMANSSAH : 5
var volatile bit    DMANSSAH_SSA14            at DMANSSAH : 6
var volatile bit    DMANSSAH_SSA15            at DMANSSAH : 7
-- ------------------------------------------------
var volatile byte   DMANSSAU                  at { 0xFB }
var volatile bit*6  DMANSSAU_SSA              at DMANSSAU : 0
var volatile bit    DMANSSAU_SSA16            at DMANSSAU : 0
var volatile bit    DMANSSAU_SSA17            at DMANSSAU : 1
var volatile bit    DMANSSAU_SSA18            at DMANSSAU : 2
var volatile bit    DMANSSAU_SSA19            at DMANSSAU : 3
var volatile bit    DMANSSAU_SSA20            at DMANSSAU : 4
var volatile bit    DMANSSAU_SSA21            at DMANSSAU : 5
-- ------------------------------------------------
var volatile byte   DMANCON0                  at { 0xFC }
var volatile bit    DMANCON0_XIP              at DMANCON0 : 0
var volatile bit    DMANCON0_AIRQEN           at DMANCON0 : 2
var volatile bit    DMANCON0_DGO              at DMANCON0 : 5
var volatile bit    DMANCON0_SIRQEN           at DMANCON0 : 6
var volatile bit    DMANCON0_EN               at DMANCON0 : 7
-- ------------------------------------------------
var volatile byte   DMANCON1                  at { 0xFD }
var volatile bit    DMANCON1_SSTP             at DMANCON1 : 0
var volatile bit*2  DMANCON1_SMODE            at DMANCON1 : 1
var volatile bit*2  DMANCON1_SMR              at DMANCON1 : 3
var volatile bit    DMANCON1_DSTP             at DMANCON1 : 5
var volatile bit*2  DMANCON1_DMODE            at DMANCON1 : 6
-- ------------------------------------------------
var volatile byte   DMANAIRQ                  at { 0xFE }
var volatile bit    DMANAIRQ_AIRQ0            at DMANAIRQ : 0
var volatile bit    DMANAIRQ_AIRQ1            at DMANAIRQ : 1
var volatile bit    DMANAIRQ_AIRQ2            at DMANAIRQ : 2
var volatile bit    DMANAIRQ_AIRQ3            at DMANAIRQ : 3
var volatile bit    DMANAIRQ_AIRQ4            at DMANAIRQ : 4
var volatile bit    DMANAIRQ_AIRQ5            at DMANAIRQ : 5
var volatile bit    DMANAIRQ_AIRQ6            at DMANAIRQ : 6
var volatile bit    DMANAIRQ_AIRQ7            at DMANAIRQ : 7
-- ------------------------------------------------
var volatile byte   DMANSIRQ                  at { 0xFF }
var volatile bit    DMANSIRQ_SIRQ0            at DMANSIRQ : 0
var volatile bit    DMANSIRQ_SIRQ1            at DMANSIRQ : 1
var volatile bit    DMANSIRQ_SIRQ2            at DMANSIRQ : 2
var volatile bit    DMANSIRQ_SIRQ3            at DMANSIRQ : 3
var volatile bit    DMANSIRQ_SIRQ4            at DMANSIRQ : 4
var volatile bit    DMANSIRQ_SIRQ5            at DMANSIRQ : 5
var volatile bit    DMANSIRQ_SIRQ6            at DMANSIRQ : 6
var volatile bit    DMANSIRQ_SIRQ7            at DMANSIRQ : 7
-- ------------------------------------------------
var volatile byte   C1CONL                    at { 0x100 }
var volatile bit*5  C1CONL_DNCNT              at C1CONL : 0
var volatile bit    C1CONL_CLKSEL0            at C1CONL : 7
var volatile bit    C1CONL_DNCNT0             at C1CONL : 0
var volatile bit    C1CONL_DNCNT1             at C1CONL : 1
var volatile bit    C1CONL_DNCNT2             at C1CONL : 2
var volatile bit    C1CONL_DNCNT3             at C1CONL : 3
var volatile bit    C1CONL_DNCNT4             at C1CONL : 4
-- ------------------------------------------------
var volatile byte   C1CONH                    at { 0x101 }
var volatile bit    C1CONH_WAKFIL             at C1CONH : 0
var volatile bit*2  C1CONH_WFT                at C1CONH : 1
var volatile bit    C1CONH_BUSY               at C1CONH : 3
var volatile bit    C1CONH_SIDL               at C1CONH : 5
var volatile bit    C1CONH_FRZ                at C1CONH : 6
var volatile bit    C1CONH_ON                 at C1CONH : 7
var volatile bit    C1CONH_WFT0               at C1CONH : 1
var volatile bit    C1CONH_WFT1               at C1CONH : 2
-- ------------------------------------------------
var volatile byte   C1CONU                    at { 0x102 }
var volatile bit    C1CONU_RTXAT              at C1CONU : 0
var volatile bit    C1CONU_ESIGM              at C1CONU : 1
var volatile bit    C1CONU_SERR2LOM           at C1CONU : 2
var volatile bit    C1CONU_STEF               at C1CONU : 3
var volatile bit    C1CONU_TXQEN              at C1CONU : 4
var volatile bit*3  C1CONU_OPMOD              at C1CONU : 5
var volatile bit    C1CONU_OPMOD0             at C1CONU : 5
var volatile bit    C1CONU_OPMOD1             at C1CONU : 6
var volatile bit    C1CONU_OPMOD2             at C1CONU : 7
-- ------------------------------------------------
var volatile byte   C1CONT                    at { 0x103 }
var volatile bit*3  C1CONT_REQOP              at C1CONT : 0
var volatile bit    C1CONT_ABAT               at C1CONT : 3
var volatile bit*4  C1CONT_TXBWS              at C1CONT : 4
var volatile bit    C1CONT_REQOP0             at C1CONT : 0
var volatile bit    C1CONT_REQOP1             at C1CONT : 1
var volatile bit    C1CONT_REQOP2             at C1CONT : 2
var volatile bit    C1CONT_TXBWS0             at C1CONT : 4
var volatile bit    C1CONT_TXBWS1             at C1CONT : 5
var volatile bit    C1CONT_TXBWS2             at C1CONT : 6
var volatile bit    C1CONT_TXBWS3             at C1CONT : 7
-- ------------------------------------------------
var volatile byte   C1NBTCFGL                 at { 0x104 }
var volatile bit*7  C1NBTCFGL_SJW             at C1NBTCFGL : 0
var volatile bit    C1NBTCFGL_SJW0            at C1NBTCFGL : 0
var volatile bit    C1NBTCFGL_SJW1            at C1NBTCFGL : 1
var volatile bit    C1NBTCFGL_SJW2            at C1NBTCFGL : 2
var volatile bit    C1NBTCFGL_SJW3            at C1NBTCFGL : 3
var volatile bit    C1NBTCFGL_SJW4            at C1NBTCFGL : 4
var volatile bit    C1NBTCFGL_SJW5            at C1NBTCFGL : 5
var volatile bit    C1NBTCFGL_SJW6            at C1NBTCFGL : 6
-- ------------------------------------------------
var volatile byte   C1NBTCFGH                 at { 0x105 }
var volatile bit*7  C1NBTCFGH_TSEG2           at C1NBTCFGH : 0
var volatile bit    C1NBTCFGH_TSEG20          at C1NBTCFGH : 0
var volatile bit    C1NBTCFGH_TSEG21          at C1NBTCFGH : 1
var volatile bit    C1NBTCFGH_TSEG22          at C1NBTCFGH : 2
var volatile bit    C1NBTCFGH_TSEG23          at C1NBTCFGH : 3
var volatile bit    C1NBTCFGH_TSEG24          at C1NBTCFGH : 4
var volatile bit    C1NBTCFGH_TSEG25          at C1NBTCFGH : 5
var volatile bit    C1NBTCFGH_TSEG26          at C1NBTCFGH : 6
-- ------------------------------------------------
var volatile byte   C1NBTCFGU                 at { 0x106 }
var volatile bit    C1NBTCFGU_TSEG10          at C1NBTCFGU : 0
var volatile bit    C1NBTCFGU_TSEG11          at C1NBTCFGU : 1
var volatile bit    C1NBTCFGU_TSEG12          at C1NBTCFGU : 2
var volatile bit    C1NBTCFGU_TSEG13          at C1NBTCFGU : 3
var volatile bit    C1NBTCFGU_TSEG14          at C1NBTCFGU : 4
var volatile bit    C1NBTCFGU_TSEG15          at C1NBTCFGU : 5
var volatile bit    C1NBTCFGU_TSEG16          at C1NBTCFGU : 6
var volatile bit    C1NBTCFGU_TSEG17          at C1NBTCFGU : 7
-- ------------------------------------------------
var volatile byte   C1NBTCFGT                 at { 0x107 }
var volatile bit    C1NBTCFGT_BRP0            at C1NBTCFGT : 0
var volatile bit    C1NBTCFGT_BRP1            at C1NBTCFGT : 1
var volatile bit    C1NBTCFGT_BRP2            at C1NBTCFGT : 2
var volatile bit    C1NBTCFGT_BRP3            at C1NBTCFGT : 3
var volatile bit    C1NBTCFGT_BRP4            at C1NBTCFGT : 4
var volatile bit    C1NBTCFGT_BRP5            at C1NBTCFGT : 5
var volatile bit    C1NBTCFGT_BRP6            at C1NBTCFGT : 6
var volatile bit    C1NBTCFGT_BRP7            at C1NBTCFGT : 7
-- ------------------------------------------------
var volatile byte   C1DBTCFGL                 at { 0x108 }
var volatile bit*4  C1DBTCFGL_SJW             at C1DBTCFGL : 0
var volatile bit    C1DBTCFGL_SJW0            at C1DBTCFGL : 0
var volatile bit    C1DBTCFGL_SJW1            at C1DBTCFGL : 1
var volatile bit    C1DBTCFGL_SJW2            at C1DBTCFGL : 2
var volatile bit    C1DBTCFGL_SJW3            at C1DBTCFGL : 3
-- ------------------------------------------------
var volatile byte   C1DBTCFGH                 at { 0x109 }
var volatile bit*4  C1DBTCFGH_TSEG2           at C1DBTCFGH : 0
var volatile bit    C1DBTCFGH_TSEG20          at C1DBTCFGH : 0
var volatile bit    C1DBTCFGH_TSEG21          at C1DBTCFGH : 1
var volatile bit    C1DBTCFGH_TSEG22          at C1DBTCFGH : 2
var volatile bit    C1DBTCFGH_TSEG23          at C1DBTCFGH : 3
-- ------------------------------------------------
var volatile byte   C1DBTCFGU                 at { 0x10A }
var volatile bit*5  C1DBTCFGU_TSEG1           at C1DBTCFGU : 0
var volatile bit    C1DBTCFGU_TSEG10          at C1DBTCFGU : 0
var volatile bit    C1DBTCFGU_TSEG11          at C1DBTCFGU : 1
var volatile bit    C1DBTCFGU_TSEG12          at C1DBTCFGU : 2
var volatile bit    C1DBTCFGU_TSEG13          at C1DBTCFGU : 3
var volatile bit    C1DBTCFGU_TSEG14          at C1DBTCFGU : 4
-- ------------------------------------------------
var volatile byte   C1DBTCFGT                 at { 0x10B }
var volatile bit    C1DBTCFGT_BRP0            at C1DBTCFGT : 0
var volatile bit    C1DBTCFGT_BRP1            at C1DBTCFGT : 1
var volatile bit    C1DBTCFGT_BRP2            at C1DBTCFGT : 2
var volatile bit    C1DBTCFGT_BRP3            at C1DBTCFGT : 3
var volatile bit    C1DBTCFGT_BRP4            at C1DBTCFGT : 4
var volatile bit    C1DBTCFGT_BRP5            at C1DBTCFGT : 5
var volatile bit    C1DBTCFGT_BRP6            at C1DBTCFGT : 6
var volatile bit    C1DBTCFGT_BRP7            at C1DBTCFGT : 7
-- ------------------------------------------------
var volatile byte   C1TDCL                    at { 0x10C }
var volatile bit*6  C1TDCL_TDCV               at C1TDCL : 0
var volatile bit    C1TDCL_TDCV0              at C1TDCL : 0
var volatile bit    C1TDCL_TDCV1              at C1TDCL : 1
var volatile bit    C1TDCL_TDCV2              at C1TDCL : 2
var volatile bit    C1TDCL_TDCV3              at C1TDCL : 3
var volatile bit    C1TDCL_TDCV4              at C1TDCL : 4
var volatile bit    C1TDCL_TDCV5              at C1TDCL : 5
-- ------------------------------------------------
var volatile byte   C1TDCH                    at { 0x10D }
var volatile bit*7  C1TDCH_TDCO               at C1TDCH : 0
var volatile bit    C1TDCH_TDCO0              at C1TDCH : 0
var volatile bit    C1TDCH_TDCO1              at C1TDCH : 1
var volatile bit    C1TDCH_TDCO2              at C1TDCH : 2
var volatile bit    C1TDCH_TDCO3              at C1TDCH : 3
var volatile bit    C1TDCH_TDCO4              at C1TDCH : 4
var volatile bit    C1TDCH_TDCO5              at C1TDCH : 5
var volatile bit    C1TDCH_TDCO6              at C1TDCH : 6
-- ------------------------------------------------
var volatile byte   C1TDCU                    at { 0x10E }
var volatile bit*2  C1TDCU_TDCMOD             at C1TDCU : 0
var volatile bit    C1TDCU_TDCMOD0            at C1TDCU : 0
var volatile bit    C1TDCU_TDCMOD1            at C1TDCU : 1
-- ------------------------------------------------
var volatile dword  C1TBC                     at { 0x110 }
-- ------------------------------------------------
var volatile byte   C1TBCL                    at { 0x110 }
var volatile bit    C1TBCL_TBC0               at C1TBCL : 0
var volatile bit    C1TBCL_TBC1               at C1TBCL : 1
var volatile bit    C1TBCL_TBC2               at C1TBCL : 2
var volatile bit    C1TBCL_TBC3               at C1TBCL : 3
var volatile bit    C1TBCL_TBC4               at C1TBCL : 4
var volatile bit    C1TBCL_TBC5               at C1TBCL : 5
var volatile bit    C1TBCL_TBC6               at C1TBCL : 6
var volatile bit    C1TBCL_TBC7               at C1TBCL : 7
-- ------------------------------------------------
var volatile byte   C1TBCH                    at { 0x111 }
var volatile bit    C1TBCH_TBC8               at C1TBCH : 0
var volatile bit    C1TBCH_TBC9               at C1TBCH : 1
var volatile bit    C1TBCH_TBC10              at C1TBCH : 2
var volatile bit    C1TBCH_TBC11              at C1TBCH : 3
var volatile bit    C1TBCH_TBC12              at C1TBCH : 4
var volatile bit    C1TBCH_TBC13              at C1TBCH : 5
var volatile bit    C1TBCH_TBC14              at C1TBCH : 6
var volatile bit    C1TBCH_TBC15              at C1TBCH : 7
-- ------------------------------------------------
var volatile byte   C1TBCU                    at { 0x112 }
var volatile bit    C1TBCU_TBC16              at C1TBCU : 0
var volatile bit    C1TBCU_TBC17              at C1TBCU : 1
var volatile bit    C1TBCU_TBC18              at C1TBCU : 2
var volatile bit    C1TBCU_TBC19              at C1TBCU : 3
var volatile bit    C1TBCU_TBC20              at C1TBCU : 4
var volatile bit    C1TBCU_TBC21              at C1TBCU : 5
var volatile bit    C1TBCU_TBC22              at C1TBCU : 6
var volatile bit    C1TBCU_TBC23              at C1TBCU : 7
-- ------------------------------------------------
var volatile byte   C1TBCT                    at { 0x113 }
var volatile bit    C1TBCT_TBC24              at C1TBCT : 0
var volatile bit    C1TBCT_TBC25              at C1TBCT : 1
var volatile bit    C1TBCT_TBC26              at C1TBCT : 2
var volatile bit    C1TBCT_TBC27              at C1TBCT : 3
var volatile bit    C1TBCT_TBC28              at C1TBCT : 4
var volatile bit    C1TBCT_TBC29              at C1TBCT : 5
var volatile bit    C1TBCT_TBC30              at C1TBCT : 6
var volatile bit    C1TBCT_TBC31              at C1TBCT : 7
-- ------------------------------------------------
var volatile byte   C1TSCONL                  at { 0x114 }
var volatile bit    C1TSCONL_TBCPRE0          at C1TSCONL : 0
var volatile bit    C1TSCONL_TBCPRE1          at C1TSCONL : 1
var volatile bit    C1TSCONL_TBCPRE2          at C1TSCONL : 2
var volatile bit    C1TSCONL_TBCPRE3          at C1TSCONL : 3
var volatile bit    C1TSCONL_TBCPRE4          at C1TSCONL : 4
var volatile bit    C1TSCONL_TBCPRE5          at C1TSCONL : 5
var volatile bit    C1TSCONL_TBCPRE6          at C1TSCONL : 6
var volatile bit    C1TSCONL_TBCPRE7          at C1TSCONL : 7
-- ------------------------------------------------
var volatile byte   C1TSCONH                  at { 0x115 }
var volatile bit*2  C1TSCONH_TBCPRE           at C1TSCONH : 0
var volatile bit    C1TSCONH_TBCPRE8          at C1TSCONH : 0
var volatile bit    C1TSCONH_TBCPRE9          at C1TSCONH : 1
-- ------------------------------------------------
var volatile byte   C1TSCONU                  at { 0x116 }
var volatile bit    C1TSCONU_TBCEN            at C1TSCONU : 0
var volatile bit    C1TSCONU_TSEOF            at C1TSCONU : 1
-- ------------------------------------------------
var volatile byte   C1TSCONT                  at { 0x117 }
-- ------------------------------------------------
var volatile byte   C1VECL                    at { 0x118 }
var volatile bit*7  C1VECL_ICODE              at C1VECL : 0
-- ------------------------------------------------
var volatile byte   C1VECH                    at { 0x119 }
var volatile bit*5  C1VECH_FILHIT             at C1VECH : 0
-- ------------------------------------------------
var volatile byte   C1VECU                    at { 0x11A }
var volatile bit*7  C1VECU_TXCODE             at C1VECU : 0
-- ------------------------------------------------
var volatile byte   C1VECT                    at { 0x11B }
var volatile bit*7  C1VECT_RXCODE             at C1VECT : 0
-- ------------------------------------------------
var volatile byte   C1INTL                    at { 0x11C }
var volatile bit    C1INTL_TXIF               at C1INTL : 0
var volatile bit    C1INTL_RXIF               at C1INTL : 1
var volatile bit    C1INTL_TBCIF              at C1INTL : 2
var volatile bit    C1INTL_MODIF              at C1INTL : 3
var volatile bit    C1INTL_TEFIF              at C1INTL : 4
-- ------------------------------------------------
var volatile byte   C1INTH                    at { 0x11D }
var volatile bit    C1INTH_TXATIF             at C1INTH : 2
var volatile bit    C1INTH_RXOVIF             at C1INTH : 3
var volatile bit    C1INTH_SERRIF             at C1INTH : 4
var volatile bit    C1INTH_CERRIF             at C1INTH : 5
var volatile bit    C1INTH_WAKIF              at C1INTH : 6
var volatile bit    C1INTH_IVMIF              at C1INTH : 7
-- ------------------------------------------------
var volatile byte   C1INTU                    at { 0x11E }
var volatile bit    C1INTU_TXIE               at C1INTU : 0
var volatile bit    C1INTU_RXIE               at C1INTU : 1
var volatile bit    C1INTU_TBCIE              at C1INTU : 2
var volatile bit    C1INTU_MODIE              at C1INTU : 3
var volatile bit    C1INTU_TEFIE              at C1INTU : 4
-- ------------------------------------------------
var volatile byte   C1INTT                    at { 0x11F }
var volatile bit    C1INTT_TXATIE             at C1INTT : 2
var volatile bit    C1INTT_RXOVIE             at C1INTT : 3
var volatile bit    C1INTT_SERRIE             at C1INTT : 4
var volatile bit    C1INTT_CERRIE             at C1INTT : 5
var volatile bit    C1INTT_WAKIE              at C1INTT : 6
var volatile bit    C1INTT_IVMIE              at C1INTT : 7
-- ------------------------------------------------
var volatile dword  C1RXIF                    at { 0x120 }
-- ------------------------------------------------
var volatile byte   C1RXIFL                   at { 0x120 }
var volatile bit*7  C1RXIFL_RFIF              at C1RXIFL : 1
var volatile bit    C1RXIFL_RFIF1             at C1RXIFL : 1
var volatile bit    C1RXIFL_RFIF2             at C1RXIFL : 2
var volatile bit    C1RXIFL_RFIF3             at C1RXIFL : 3
var volatile bit    C1RXIFL_RFIF4             at C1RXIFL : 4
var volatile bit    C1RXIFL_RFIF5             at C1RXIFL : 5
var volatile bit    C1RXIFL_RFIF6             at C1RXIFL : 6
var volatile bit    C1RXIFL_RFIF7             at C1RXIFL : 7
-- ------------------------------------------------
var volatile byte   C1RXIFH                   at { 0x121 }
var volatile bit    C1RXIFH_RFIF8             at C1RXIFH : 0
var volatile bit    C1RXIFH_RFIF9             at C1RXIFH : 1
var volatile bit    C1RXIFH_RFIF10            at C1RXIFH : 2
var volatile bit    C1RXIFH_RFIF11            at C1RXIFH : 3
var volatile bit    C1RXIFH_RFIF12            at C1RXIFH : 4
var volatile bit    C1RXIFH_RFIF13            at C1RXIFH : 5
var volatile bit    C1RXIFH_RFIF14            at C1RXIFH : 6
var volatile bit    C1RXIFH_RFIF15            at C1RXIFH : 7
-- ------------------------------------------------
var volatile byte   C1RXIFU                   at { 0x122 }
var volatile bit    C1RXIFU_RFIF16            at C1RXIFU : 0
var volatile bit    C1RXIFU_RFIF17            at C1RXIFU : 1
var volatile bit    C1RXIFU_RFIF18            at C1RXIFU : 2
var volatile bit    C1RXIFU_RFIF19            at C1RXIFU : 3
var volatile bit    C1RXIFU_RFIF20            at C1RXIFU : 4
var volatile bit    C1RXIFU_RFIF21            at C1RXIFU : 5
var volatile bit    C1RXIFU_RFIF22            at C1RXIFU : 6
var volatile bit    C1RXIFU_RFIF23            at C1RXIFU : 7
-- ------------------------------------------------
var volatile byte   C1RXIFT                   at { 0x123 }
var volatile bit    C1RXIFT_RFIF24            at C1RXIFT : 0
var volatile bit    C1RXIFT_RFIF25            at C1RXIFT : 1
var volatile bit    C1RXIFT_RFIF26            at C1RXIFT : 2
var volatile bit    C1RXIFT_RFIF27            at C1RXIFT : 3
var volatile bit    C1RXIFT_RFIF28            at C1RXIFT : 4
var volatile bit    C1RXIFT_RFIF29            at C1RXIFT : 5
var volatile bit    C1RXIFT_RFIF30            at C1RXIFT : 6
var volatile bit    C1RXIFT_RFIF31            at C1RXIFT : 7
-- ------------------------------------------------
var volatile word   C1TXIF                    at { 0x124 }
-- ------------------------------------------------
var volatile byte   C1TXIFL                   at { 0x124 }
var volatile bit    C1TXIFL_TFIF0             at C1TXIFL : 0
var volatile bit    C1TXIFL_TFIF1             at C1TXIFL : 1
var volatile bit    C1TXIFL_TFIF2             at C1TXIFL : 2
var volatile bit    C1TXIFL_TFIF3             at C1TXIFL : 3
var volatile bit    C1TXIFL_TFIF4             at C1TXIFL : 4
var volatile bit    C1TXIFL_TFIF5             at C1TXIFL : 5
var volatile bit    C1TXIFL_TFIF6             at C1TXIFL : 6
var volatile bit    C1TXIFL_TFIF7             at C1TXIFL : 7
-- ------------------------------------------------
var volatile byte   C1TXIFH                   at { 0x125 }
var volatile bit    C1TXIFH_TFIF8             at C1TXIFH : 0
var volatile bit    C1TXIFH_TFIF9             at C1TXIFH : 1
var volatile bit    C1TXIFH_TFIF10            at C1TXIFH : 2
var volatile bit    C1TXIFH_TFIF11            at C1TXIFH : 3
var volatile bit    C1TXIFH_TFIF12            at C1TXIFH : 4
var volatile bit    C1TXIFH_TFIF13            at C1TXIFH : 5
var volatile bit    C1TXIFH_TFIF14            at C1TXIFH : 6
var volatile bit    C1TXIFH_TFIF15            at C1TXIFH : 7
-- ------------------------------------------------
var volatile byte   C1TXIFU                   at { 0x126 }
var volatile bit    C1TXIFU_TFIF16            at C1TXIFU : 0
var volatile bit    C1TXIFU_TFIF17            at C1TXIFU : 1
var volatile bit    C1TXIFU_TFIF18            at C1TXIFU : 2
var volatile bit    C1TXIFU_TFIF19            at C1TXIFU : 3
var volatile bit    C1TXIFU_TFIF20            at C1TXIFU : 4
var volatile bit    C1TXIFU_TFIF21            at C1TXIFU : 5
var volatile bit    C1TXIFU_TFIF22            at C1TXIFU : 6
var volatile bit    C1TXIFU_TFIF23            at C1TXIFU : 7
-- ------------------------------------------------
var volatile byte   C1TXIFT                   at { 0x127 }
var volatile bit    C1TXIFT_TFIF24            at C1TXIFT : 0
var volatile bit    C1TXIFT_TFIF25            at C1TXIFT : 1
var volatile bit    C1TXIFT_TFIF26            at C1TXIFT : 2
var volatile bit    C1TXIFT_TFIF27            at C1TXIFT : 3
var volatile bit    C1TXIFT_TFIF28            at C1TXIFT : 4
var volatile bit    C1TXIFT_TFIF29            at C1TXIFT : 5
var volatile bit    C1TXIFT_TFIF30            at C1TXIFT : 6
var volatile bit    C1TXIFT_TFIF31            at C1TXIFT : 7
-- ------------------------------------------------
var volatile dword  C1RXOVIF                  at { 0x128 }
-- ------------------------------------------------
var volatile byte   C1RXOVIFL                 at { 0x128 }
var volatile bit*7  C1RXOVIFL_RFOVIF          at C1RXOVIFL : 1
var volatile bit    C1RXOVIFL_RFOVIF1         at C1RXOVIFL : 1
var volatile bit    C1RXOVIFL_RFOVIF2         at C1RXOVIFL : 2
var volatile bit    C1RXOVIFL_RFOVIF3         at C1RXOVIFL : 3
var volatile bit    C1RXOVIFL_RFOVIF4         at C1RXOVIFL : 4
var volatile bit    C1RXOVIFL_RFOVIF5         at C1RXOVIFL : 5
var volatile bit    C1RXOVIFL_RFOVIF6         at C1RXOVIFL : 6
var volatile bit    C1RXOVIFL_RFOVIF7         at C1RXOVIFL : 7
-- ------------------------------------------------
var volatile byte   C1RXOVIFH                 at { 0x129 }
var volatile bit    C1RXOVIFH_RFOVIF8         at C1RXOVIFH : 0
var volatile bit    C1RXOVIFH_RFOVIF9         at C1RXOVIFH : 1
var volatile bit    C1RXOVIFH_RFOVIF10        at C1RXOVIFH : 2
var volatile bit    C1RXOVIFH_RFOVIF11        at C1RXOVIFH : 3
var volatile bit    C1RXOVIFH_RFOVIF12        at C1RXOVIFH : 4
var volatile bit    C1RXOVIFH_RFOVIF13        at C1RXOVIFH : 5
var volatile bit    C1RXOVIFH_RFOVIF14        at C1RXOVIFH : 6
var volatile bit    C1RXOVIFH_RFOVIF15        at C1RXOVIFH : 7
-- ------------------------------------------------
var volatile byte   C1RXOVIFU                 at { 0x12A }
var volatile bit    C1RXOVIFU_RFOVIF16        at C1RXOVIFU : 0
var volatile bit    C1RXOVIFU_RFOVIF17        at C1RXOVIFU : 1
var volatile bit    C1RXOVIFU_RFOVIF18        at C1RXOVIFU : 2
var volatile bit    C1RXOVIFU_RFOVIF19        at C1RXOVIFU : 3
var volatile bit    C1RXOVIFU_RFOVIF20        at C1RXOVIFU : 4
var volatile bit    C1RXOVIFU_RFOVIF21        at C1RXOVIFU : 5
var volatile bit    C1RXOVIFU_RFOVIF22        at C1RXOVIFU : 6
var volatile bit    C1RXOVIFU_RFOVIF23        at C1RXOVIFU : 7
-- ------------------------------------------------
var volatile byte   C1RXOVIFT                 at { 0x12B }
var volatile bit    C1RXOVIFT_RFOVIF24        at C1RXOVIFT : 0
var volatile bit    C1RXOVIFT_RFOVIF25        at C1RXOVIFT : 1
var volatile bit    C1RXOVIFT_RFOVIF26        at C1RXOVIFT : 2
var volatile bit    C1RXOVIFT_RFOVIF27        at C1RXOVIFT : 3
var volatile bit    C1RXOVIFT_RFOVIF28        at C1RXOVIFT : 4
var volatile bit    C1RXOVIFT_RFOVIF29        at C1RXOVIFT : 5
var volatile bit    C1RXOVIFT_RFOVIF30        at C1RXOVIFT : 6
var volatile bit    C1RXOVIFT_RFOVIF31        at C1RXOVIFT : 7
-- ------------------------------------------------
var volatile dword  C1TXATIF                  at { 0x12C }
-- ------------------------------------------------
var volatile byte   C1TXATIFL                 at { 0x12C }
var volatile bit    C1TXATIFL_TFATIF0         at C1TXATIFL : 0
var volatile bit    C1TXATIFL_TFATIF1         at C1TXATIFL : 1
var volatile bit    C1TXATIFL_TFATIF2         at C1TXATIFL : 2
var volatile bit    C1TXATIFL_TFATIF3         at C1TXATIFL : 3
var volatile bit    C1TXATIFL_TFATIF4         at C1TXATIFL : 4
var volatile bit    C1TXATIFL_TFATIF5         at C1TXATIFL : 5
var volatile bit    C1TXATIFL_TFATIF6         at C1TXATIFL : 6
var volatile bit    C1TXATIFL_TFATIF7         at C1TXATIFL : 7
-- ------------------------------------------------
var volatile byte   C1TXATIFH                 at { 0x12D }
var volatile bit    C1TXATIFH_TFATIF8         at C1TXATIFH : 0
var volatile bit    C1TXATIFH_TFATIF9         at C1TXATIFH : 1
var volatile bit    C1TXATIFH_TFATIF10        at C1TXATIFH : 2
var volatile bit    C1TXATIFH_TFATIF11        at C1TXATIFH : 3
var volatile bit    C1TXATIFH_TFATIF12        at C1TXATIFH : 4
var volatile bit    C1TXATIFH_TFATIF13        at C1TXATIFH : 5
var volatile bit    C1TXATIFH_TFATIF14        at C1TXATIFH : 6
var volatile bit    C1TXATIFH_TFATIF15        at C1TXATIFH : 7
-- ------------------------------------------------
var volatile byte   C1TXATIFU                 at { 0x12E }
var volatile bit    C1TXATIFU_TFATIF16        at C1TXATIFU : 0
var volatile bit    C1TXATIFU_TFATIF17        at C1TXATIFU : 1
var volatile bit    C1TXATIFU_TFATIF18        at C1TXATIFU : 2
var volatile bit    C1TXATIFU_TFATIF19        at C1TXATIFU : 3
var volatile bit    C1TXATIFU_TFATIF20        at C1TXATIFU : 4
var volatile bit    C1TXATIFU_TFATIF21        at C1TXATIFU : 5
var volatile bit    C1TXATIFU_TFATIF22        at C1TXATIFU : 6
var volatile bit    C1TXATIFU_TFATIF23        at C1TXATIFU : 7
-- ------------------------------------------------
var volatile byte   C1TXATIFT                 at { 0x12F }
var volatile bit    C1TXATIFT_TFATIF24        at C1TXATIFT : 0
var volatile bit    C1TXATIFT_TFATIF25        at C1TXATIFT : 1
var volatile bit    C1TXATIFT_TFATIF26        at C1TXATIFT : 2
var volatile bit    C1TXATIFT_TFATIF27        at C1TXATIFT : 3
var volatile bit    C1TXATIFT_TFATIF28        at C1TXATIFT : 4
var volatile bit    C1TXATIFT_TFATIF29        at C1TXATIFT : 5
var volatile bit    C1TXATIFT_TFATIF30        at C1TXATIFT : 6
var volatile bit    C1TXATIFT_TFATIF31        at C1TXATIFT : 7
-- ------------------------------------------------
var volatile dword  C1TXREQ                   at { 0x130 }
-- ------------------------------------------------
var volatile byte   C1TXREQL                  at { 0x130 }
var volatile bit    C1TXREQL_TXREQ0           at C1TXREQL : 0
var volatile bit    C1TXREQL_TXREQ1           at C1TXREQL : 1
var volatile bit    C1TXREQL_TXREQ2           at C1TXREQL : 2
var volatile bit    C1TXREQL_TXREQ3           at C1TXREQL : 3
var volatile bit    C1TXREQL_TXREQ4           at C1TXREQL : 4
var volatile bit    C1TXREQL_TXREQ5           at C1TXREQL : 5
var volatile bit    C1TXREQL_TXREQ6           at C1TXREQL : 6
var volatile bit    C1TXREQL_TXREQ7           at C1TXREQL : 7
-- ------------------------------------------------
var volatile byte   C1TXREQH                  at { 0x131 }
var volatile bit    C1TXREQH_TXREQ8           at C1TXREQH : 0
var volatile bit    C1TXREQH_TXREQ9           at C1TXREQH : 1
var volatile bit    C1TXREQH_TXREQ10          at C1TXREQH : 2
var volatile bit    C1TXREQH_TXREQ11          at C1TXREQH : 3
var volatile bit    C1TXREQH_TXREQ12          at C1TXREQH : 4
var volatile bit    C1TXREQH_TXREQ13          at C1TXREQH : 5
var volatile bit    C1TXREQH_TXREQ14          at C1TXREQH : 6
var volatile bit    C1TXREQH_TXREQ15          at C1TXREQH : 7
-- ------------------------------------------------
var volatile byte   C1TXREQU                  at { 0x132 }
var volatile bit    C1TXREQU_TXREQ16          at C1TXREQU : 0
var volatile bit    C1TXREQU_TXREQ17          at C1TXREQU : 1
var volatile bit    C1TXREQU_TXREQ18          at C1TXREQU : 2
var volatile bit    C1TXREQU_TXREQ19          at C1TXREQU : 3
var volatile bit    C1TXREQU_TXREQ20          at C1TXREQU : 4
var volatile bit    C1TXREQU_TXREQ21          at C1TXREQU : 5
var volatile bit    C1TXREQU_TXREQ22          at C1TXREQU : 6
var volatile bit    C1TXREQU_TXREQ23          at C1TXREQU : 7
-- ------------------------------------------------
var volatile byte   C1TXREQT                  at { 0x133 }
var volatile bit    C1TXREQT_TXREQ24          at C1TXREQT : 0
var volatile bit    C1TXREQT_TXREQ25          at C1TXREQT : 1
var volatile bit    C1TXREQT_TXREQ26          at C1TXREQT : 2
var volatile bit    C1TXREQT_TXREQ27          at C1TXREQT : 3
var volatile bit    C1TXREQT_TXREQ28          at C1TXREQT : 4
var volatile bit    C1TXREQT_TXREQ29          at C1TXREQT : 5
var volatile bit    C1TXREQT_TXREQ30          at C1TXREQT : 6
var volatile bit    C1TXREQT_TXREQ31          at C1TXREQT : 7
-- ------------------------------------------------
var volatile byte   C1TRECL                   at { 0x134 }
var volatile bit    C1TRECL_RERRCNT0          at C1TRECL : 0
var volatile bit    C1TRECL_RERRCNT1          at C1TRECL : 1
var volatile bit    C1TRECL_RERRCNT2          at C1TRECL : 2
var volatile bit    C1TRECL_RERRCNT3          at C1TRECL : 3
var volatile bit    C1TRECL_RERRCNT4          at C1TRECL : 4
var volatile bit    C1TRECL_RERRCNT5          at C1TRECL : 5
var volatile bit    C1TRECL_RERRCNT6          at C1TRECL : 6
var volatile bit    C1TRECL_RERRCNT7          at C1TRECL : 7
-- ------------------------------------------------
var volatile byte   C1TRECH                   at { 0x135 }
var volatile bit    C1TRECH_TERRCNT0          at C1TRECH : 0
var volatile bit    C1TRECH_TERRCNT1          at C1TRECH : 1
var volatile bit    C1TRECH_TERRCNT2          at C1TRECH : 2
var volatile bit    C1TRECH_TERRCNT3          at C1TRECH : 3
var volatile bit    C1TRECH_TERRCNT4          at C1TRECH : 4
var volatile bit    C1TRECH_TERRCNT5          at C1TRECH : 5
var volatile bit    C1TRECH_TERRCNT6          at C1TRECH : 6
var volatile bit    C1TRECH_TERRCNT7          at C1TRECH : 7
-- ------------------------------------------------
var volatile byte   C1TRECU                   at { 0x136 }
var volatile bit    C1TRECU_EWARN             at C1TRECU : 0
var volatile bit    C1TRECU_RXWARN            at C1TRECU : 1
var volatile bit    C1TRECU_TXWARN            at C1TRECU : 2
var volatile bit    C1TRECU_RXBP              at C1TRECU : 3
var volatile bit    C1TRECU_TXBP              at C1TRECU : 4
var volatile bit    C1TRECU_TXBO              at C1TRECU : 5
-- ------------------------------------------------
var volatile byte   C1TRECT                   at { 0x137 }
-- ------------------------------------------------
var volatile byte   C1BDIAG0L                 at { 0x138 }
var volatile bit    C1BDIAG0L_NRERRCNT0       at C1BDIAG0L : 0
var volatile bit    C1BDIAG0L_NRERRCNT1       at C1BDIAG0L : 1
var volatile bit    C1BDIAG0L_NRERRCNT2       at C1BDIAG0L : 2
var volatile bit    C1BDIAG0L_NRERRCNT3       at C1BDIAG0L : 3
var volatile bit    C1BDIAG0L_NRERRCNT4       at C1BDIAG0L : 4
var volatile bit    C1BDIAG0L_NRERRCNT5       at C1BDIAG0L : 5
var volatile bit    C1BDIAG0L_NRERRCNT6       at C1BDIAG0L : 6
var volatile bit    C1BDIAG0L_NRERRCNT7       at C1BDIAG0L : 7
-- ------------------------------------------------
var volatile byte   C1BDIAG0H                 at { 0x139 }
var volatile bit    C1BDIAG0H_NTERRCNT0       at C1BDIAG0H : 0
var volatile bit    C1BDIAG0H_NTERRCNT1       at C1BDIAG0H : 1
var volatile bit    C1BDIAG0H_NTERRCNT2       at C1BDIAG0H : 2
var volatile bit    C1BDIAG0H_NTERRCNT3       at C1BDIAG0H : 3
var volatile bit    C1BDIAG0H_NTERRCNT4       at C1BDIAG0H : 4
var volatile bit    C1BDIAG0H_NTERRCNT5       at C1BDIAG0H : 5
var volatile bit    C1BDIAG0H_NTERRCNT6       at C1BDIAG0H : 6
var volatile bit    C1BDIAG0H_NTERRCNT7       at C1BDIAG0H : 7
-- ------------------------------------------------
var volatile byte   C1BDIAG1L                 at { 0x13C }
var volatile bit    C1BDIAG1L_EFMSGCNT0       at C1BDIAG1L : 0
var volatile bit    C1BDIAG1L_EFMSGCNT1       at C1BDIAG1L : 1
var volatile bit    C1BDIAG1L_EFMSGCNT2       at C1BDIAG1L : 2
var volatile bit    C1BDIAG1L_EFMSGCNT3       at C1BDIAG1L : 3
var volatile bit    C1BDIAG1L_EFMSGCNT4       at C1BDIAG1L : 4
var volatile bit    C1BDIAG1L_EFMSGCNT5       at C1BDIAG1L : 5
var volatile bit    C1BDIAG1L_EFMSGCNT6       at C1BDIAG1L : 6
var volatile bit    C1BDIAG1L_EFMSGCNT7       at C1BDIAG1L : 7
-- ------------------------------------------------
var volatile byte   C1BDIAG1H                 at { 0x13D }
var volatile bit    C1BDIAG1H_EFMSGCNT8       at C1BDIAG1H : 0
var volatile bit    C1BDIAG1H_EFMSGCNT9       at C1BDIAG1H : 1
var volatile bit    C1BDIAG1H_EFMSGCNT10      at C1BDIAG1H : 2
var volatile bit    C1BDIAG1H_EFMSGCNT11      at C1BDIAG1H : 3
var volatile bit    C1BDIAG1H_EFMSGCNT12      at C1BDIAG1H : 4
var volatile bit    C1BDIAG1H_EFMSGCNT13      at C1BDIAG1H : 5
var volatile bit    C1BDIAG1H_EFMSGCNT14      at C1BDIAG1H : 6
var volatile bit    C1BDIAG1H_EFMSGCNT15      at C1BDIAG1H : 7
-- ------------------------------------------------
var volatile byte   C1BDIAG1U                 at { 0x13E }
var volatile bit    C1BDIAG1U_NBIT0ERR        at C1BDIAG1U : 0
var volatile bit    C1BDIAG1U_NBIT1ERR        at C1BDIAG1U : 1
var volatile bit    C1BDIAG1U_NACKERR         at C1BDIAG1U : 2
var volatile bit    C1BDIAG1U_NFORMERR        at C1BDIAG1U : 3
var volatile bit    C1BDIAG1U_NSTUFERR        at C1BDIAG1U : 4
var volatile bit    C1BDIAG1U_NCRCERR         at C1BDIAG1U : 5
var volatile bit    C1BDIAG1U_TXBOERR         at C1BDIAG1U : 7
-- ------------------------------------------------
var volatile byte   C1BDIAG1T                 at { 0x13F }
var volatile bit    C1BDIAG1T_DCRCERR         at C1BDIAG1T : 5
var volatile bit    C1BDIAG1T_ESI             at C1BDIAG1T : 6
-- ------------------------------------------------
var volatile byte   C1TEFCONL                 at { 0x140 }
var volatile bit    C1TEFCONL_TEFNEIE         at C1TEFCONL : 0
var volatile bit    C1TEFCONL_TEFHIE          at C1TEFCONL : 1
var volatile bit    C1TEFCONL_TEFFIE          at C1TEFCONL : 2
var volatile bit    C1TEFCONL_TEFOVIE         at C1TEFCONL : 3
var volatile bit    C1TEFCONL_TEFTSEN         at C1TEFCONL : 5
-- ------------------------------------------------
var volatile byte   C1TEFCONH                 at { 0x141 }
var volatile bit    C1TEFCONH_UINC            at C1TEFCONH : 0
var volatile bit    C1TEFCONH_FRESET          at C1TEFCONH : 2
-- ------------------------------------------------
var volatile byte   C1TEFCONU                 at { 0x142 }
-- ------------------------------------------------
var volatile byte   C1TEFCONT                 at { 0x143 }
var volatile bit*5  C1TEFCONT_FSIZE           at C1TEFCONT : 0
var volatile bit    C1TEFCONT_FSIZE0          at C1TEFCONT : 0
var volatile bit    C1TEFCONT_FSIZE1          at C1TEFCONT : 1
var volatile bit    C1TEFCONT_FSIZE2          at C1TEFCONT : 2
var volatile bit    C1TEFCONT_FSIZE3          at C1TEFCONT : 3
var volatile bit    C1TEFCONT_FSIZE4          at C1TEFCONT : 4
-- ------------------------------------------------
var volatile byte   C1TEFSTAL                 at { 0x144 }
var volatile bit    C1TEFSTAL_TEFNEIF         at C1TEFSTAL : 0
var volatile bit    C1TEFSTAL_TEFHIF          at C1TEFSTAL : 1
var volatile bit    C1TEFSTAL_TEFFIF          at C1TEFSTAL : 2
var volatile bit    C1TEFSTAL_TEFOVIF         at C1TEFSTAL : 3
-- ------------------------------------------------
var volatile byte   C1TEFSTAH                 at { 0x145 }
-- ------------------------------------------------
var volatile byte   C1TEFSTAU                 at { 0x146 }
-- ------------------------------------------------
var volatile byte   C1TEFSTAT                 at { 0x147 }
-- ------------------------------------------------
var volatile dword  C1TEFUA                   at { 0x148 }
-- ------------------------------------------------
var volatile byte   C1TEFUAL                  at { 0x148 }
var volatile bit    C1TEFUAL_TEFUA0           at C1TEFUAL : 0
var volatile bit    C1TEFUAL_TEFUA1           at C1TEFUAL : 1
var volatile bit    C1TEFUAL_TEFUA2           at C1TEFUAL : 2
var volatile bit    C1TEFUAL_TEFUA3           at C1TEFUAL : 3
var volatile bit    C1TEFUAL_TEFUA4           at C1TEFUAL : 4
var volatile bit    C1TEFUAL_TEFUA5           at C1TEFUAL : 5
var volatile bit    C1TEFUAL_TEFUA6           at C1TEFUAL : 6
var volatile bit    C1TEFUAL_TEFUA7           at C1TEFUAL : 7
-- ------------------------------------------------
var volatile byte   C1TEFUAH                  at { 0x149 }
var volatile bit    C1TEFUAH_TEFUA8           at C1TEFUAH : 0
var volatile bit    C1TEFUAH_TEFUA9           at C1TEFUAH : 1
var volatile bit    C1TEFUAH_TEFUA10          at C1TEFUAH : 2
var volatile bit    C1TEFUAH_TEFUA11          at C1TEFUAH : 3
var volatile bit    C1TEFUAH_TEFUA12          at C1TEFUAH : 4
var volatile bit    C1TEFUAH_TEFUA13          at C1TEFUAH : 5
var volatile bit    C1TEFUAH_TEFUA14          at C1TEFUAH : 6
var volatile bit    C1TEFUAH_TEFUA15          at C1TEFUAH : 7
-- ------------------------------------------------
var volatile byte   C1TEFUAU                  at { 0x14A }
var volatile bit    C1TEFUAU_TEFUA16          at C1TEFUAU : 0
var volatile bit    C1TEFUAU_TEFUA17          at C1TEFUAU : 1
var volatile bit    C1TEFUAU_TEFUA18          at C1TEFUAU : 2
var volatile bit    C1TEFUAU_TEFUA19          at C1TEFUAU : 3
var volatile bit    C1TEFUAU_TEFUA20          at C1TEFUAU : 4
var volatile bit    C1TEFUAU_TEFUA21          at C1TEFUAU : 5
var volatile bit    C1TEFUAU_TEFUA22          at C1TEFUAU : 6
var volatile bit    C1TEFUAU_TEFUA23          at C1TEFUAU : 7
-- ------------------------------------------------
var volatile byte   C1TEFUAT                  at { 0x14B }
var volatile bit    C1TEFUAT_TEFUA24          at C1TEFUAT : 0
var volatile bit    C1TEFUAT_TEFUA25          at C1TEFUAT : 1
var volatile bit    C1TEFUAT_TEFUA26          at C1TEFUAT : 2
var volatile bit    C1TEFUAT_TEFUA27          at C1TEFUAT : 3
var volatile bit    C1TEFUAT_TEFUA28          at C1TEFUAT : 4
var volatile bit    C1TEFUAT_TEFUA29          at C1TEFUAT : 5
var volatile bit    C1TEFUAT_TEFUA30          at C1TEFUAT : 6
var volatile bit    C1TEFUAT_TEFUA31          at C1TEFUAT : 7
-- ------------------------------------------------
var volatile dword  C1FIFOBA                  at { 0x14C }
-- ------------------------------------------------
var volatile byte   C1FIFOBAL                 at { 0x14C }
var volatile bit    C1FIFOBAL_FIFOBA0         at C1FIFOBAL : 0
var volatile bit    C1FIFOBAL_FIFOBA1         at C1FIFOBAL : 1
var volatile bit    C1FIFOBAL_FIFOBA2         at C1FIFOBAL : 2
var volatile bit    C1FIFOBAL_FIFOBA3         at C1FIFOBAL : 3
var volatile bit    C1FIFOBAL_FIFOBA4         at C1FIFOBAL : 4
var volatile bit    C1FIFOBAL_FIFOBA5         at C1FIFOBAL : 5
var volatile bit    C1FIFOBAL_FIFOBA6         at C1FIFOBAL : 6
var volatile bit    C1FIFOBAL_FIFOBA7         at C1FIFOBAL : 7
-- ------------------------------------------------
var volatile byte   C1FIFOBAH                 at { 0x14D }
var volatile bit    C1FIFOBAH_FIFOBA8         at C1FIFOBAH : 0
var volatile bit    C1FIFOBAH_FIFOBA9         at C1FIFOBAH : 1
var volatile bit    C1FIFOBAH_FIFOBA10        at C1FIFOBAH : 2
var volatile bit    C1FIFOBAH_FIFOBA11        at C1FIFOBAH : 3
var volatile bit    C1FIFOBAH_FIFOBA12        at C1FIFOBAH : 4
var volatile bit    C1FIFOBAH_FIFOBA13        at C1FIFOBAH : 5
var volatile bit    C1FIFOBAH_FIFOBA14        at C1FIFOBAH : 6
var volatile bit    C1FIFOBAH_FIFOBA15        at C1FIFOBAH : 7
-- ------------------------------------------------
var volatile byte   C1FIFOBAU                 at { 0x14E }
var volatile bit    C1FIFOBAU_FIFOBA16        at C1FIFOBAU : 0
var volatile bit    C1FIFOBAU_FIFOBA17        at C1FIFOBAU : 1
var volatile bit    C1FIFOBAU_FIFOBA18        at C1FIFOBAU : 2
var volatile bit    C1FIFOBAU_FIFOBA19        at C1FIFOBAU : 3
var volatile bit    C1FIFOBAU_FIFOBA20        at C1FIFOBAU : 4
var volatile bit    C1FIFOBAU_FIFOBA21        at C1FIFOBAU : 5
var volatile bit    C1FIFOBAU_FIFOBA22        at C1FIFOBAU : 6
var volatile bit    C1FIFOBAU_FIFOBA23        at C1FIFOBAU : 7
-- ------------------------------------------------
var volatile byte   C1FIFOBAT                 at { 0x14F }
var volatile bit    C1FIFOBAT_FIFOBA24        at C1FIFOBAT : 0
var volatile bit    C1FIFOBAT_FIFOBA25        at C1FIFOBAT : 1
var volatile bit    C1FIFOBAT_FIFOBA26        at C1FIFOBAT : 2
var volatile bit    C1FIFOBAT_FIFOBA27        at C1FIFOBAT : 3
var volatile bit    C1FIFOBAT_FIFOBA28        at C1FIFOBAT : 4
var volatile bit    C1FIFOBAT_FIFOBA29        at C1FIFOBAT : 5
var volatile bit    C1FIFOBAT_FIFOBA30        at C1FIFOBAT : 6
var volatile bit    C1FIFOBAT_FIFOBA31        at C1FIFOBAT : 7
-- ------------------------------------------------
var volatile byte   C1TXQCONL                 at { 0x150 }
var volatile bit    C1TXQCONL_TXQNIE          at C1TXQCONL : 0
var volatile bit    C1TXQCONL_TXQEIE          at C1TXQCONL : 2
var volatile bit    C1TXQCONL_TXATIE          at C1TXQCONL : 4
var volatile bit    C1TXQCONL_TXEN            at C1TXQCONL : 7
-- ------------------------------------------------
var volatile byte   C1TXQCONH                 at { 0x151 }
var volatile bit    C1TXQCONH_UINC            at C1TXQCONH : 0
var volatile bit    C1TXQCONH_TXREQ           at C1TXQCONH : 1
var volatile bit    C1TXQCONH_FRESET          at C1TXQCONH : 2
-- ------------------------------------------------
var volatile byte   C1TXQCONU                 at { 0x152 }
var volatile bit*5  C1TXQCONU_TXPRI           at C1TXQCONU : 0
var volatile bit*2  C1TXQCONU_TXAT            at C1TXQCONU : 5
var volatile bit    C1TXQCONU_TXPRI0          at C1TXQCONU : 0
var volatile bit    C1TXQCONU_TXPRI1          at C1TXQCONU : 1
var volatile bit    C1TXQCONU_TXPRI2          at C1TXQCONU : 2
var volatile bit    C1TXQCONU_TXPRI3          at C1TXQCONU : 3
var volatile bit    C1TXQCONU_TXPRI4          at C1TXQCONU : 4
var volatile bit    C1TXQCONU_TXAT0           at C1TXQCONU : 5
var volatile bit    C1TXQCONU_TXAT1           at C1TXQCONU : 6
-- ------------------------------------------------
var volatile byte   C1TXQCONT                 at { 0x153 }
var volatile bit*5  C1TXQCONT_FSIZE           at C1TXQCONT : 0
var volatile bit    C1TXQCONT_FSIZE0          at C1TXQCONT : 0
var volatile bit    C1TXQCONT_FSIZE1          at C1TXQCONT : 1
var volatile bit    C1TXQCONT_FSIZE2          at C1TXQCONT : 2
var volatile bit    C1TXQCONT_FSIZE3          at C1TXQCONT : 3
var volatile bit    C1TXQCONT_FSIZE4          at C1TXQCONT : 4
-- ------------------------------------------------
var volatile byte   C1TXQSTAL                 at { 0x154 }
var volatile bit    C1TXQSTAL_TXQNIF          at C1TXQSTAL : 0
var volatile bit    C1TXQSTAL_TXQEIF          at C1TXQSTAL : 2
var volatile bit    C1TXQSTAL_TXATIF          at C1TXQSTAL : 4
var volatile bit    C1TXQSTAL_TXERR           at C1TXQSTAL : 5
var volatile bit    C1TXQSTAL_TXLARB          at C1TXQSTAL : 6
var volatile bit    C1TXQSTAL_TXABT           at C1TXQSTAL : 7
-- ------------------------------------------------
var volatile byte   C1TXQSTAH                 at { 0x155 }
var volatile bit*5  C1TXQSTAH_TXQCI           at C1TXQSTAH : 0
var volatile bit    C1TXQSTAH_TXQCI0          at C1TXQSTAH : 0
var volatile bit    C1TXQSTAH_TXQCI1          at C1TXQSTAH : 1
var volatile bit    C1TXQSTAH_TXQCI2          at C1TXQSTAH : 2
var volatile bit    C1TXQSTAH_TXQCI3          at C1TXQSTAH : 3
var volatile bit    C1TXQSTAH_TXQCI4          at C1TXQSTAH : 4
-- ------------------------------------------------
var volatile byte   C1TXQSTAU                 at { 0x156 }
-- ------------------------------------------------
var volatile byte   C1TXQSTAT                 at { 0x157 }
-- ------------------------------------------------
var volatile dword  C1TXQUA                   at { 0x158 }
-- ------------------------------------------------
var volatile byte   C1TXQUAL                  at { 0x158 }
var volatile bit    C1TXQUAL_TXQUA0           at C1TXQUAL : 0
var volatile bit    C1TXQUAL_TXQUA1           at C1TXQUAL : 1
var volatile bit    C1TXQUAL_TXQUA2           at C1TXQUAL : 2
var volatile bit    C1TXQUAL_TXQUA3           at C1TXQUAL : 3
var volatile bit    C1TXQUAL_TXQUA4           at C1TXQUAL : 4
var volatile bit    C1TXQUAL_TXQUA5           at C1TXQUAL : 5
var volatile bit    C1TXQUAL_TXQUA6           at C1TXQUAL : 6
var volatile bit    C1TXQUAL_TXQUA7           at C1TXQUAL : 7
-- ------------------------------------------------
var volatile byte   C1TXQUAH                  at { 0x159 }
var volatile bit    C1TXQUAH_TXQUA8           at C1TXQUAH : 0
var volatile bit    C1TXQUAH_TXQUA9           at C1TXQUAH : 1
var volatile bit    C1TXQUAH_TXQUA10          at C1TXQUAH : 2
var volatile bit    C1TXQUAH_TXQUA11          at C1TXQUAH : 3
var volatile bit    C1TXQUAH_TXQUA12          at C1TXQUAH : 4
var volatile bit    C1TXQUAH_TXQUA13          at C1TXQUAH : 5
var volatile bit    C1TXQUAH_TXQUA14          at C1TXQUAH : 6
var volatile bit    C1TXQUAH_TXQUA15          at C1TXQUAH : 7
-- ------------------------------------------------
var volatile byte   C1TXQUAU                  at { 0x15A }
var volatile bit    C1TXQUAU_TXQUA16          at C1TXQUAU : 0
var volatile bit    C1TXQUAU_TXQUA17          at C1TXQUAU : 1
var volatile bit    C1TXQUAU_TXQUA18          at C1TXQUAU : 2
var volatile bit    C1TXQUAU_TXQUA19          at C1TXQUAU : 3
var volatile bit    C1TXQUAU_TXQUA20          at C1TXQUAU : 4
var volatile bit    C1TXQUAU_TXQUA21          at C1TXQUAU : 5
var volatile bit    C1TXQUAU_TXQUA22          at C1TXQUAU : 6
var volatile bit    C1TXQUAU_TXQUA23          at C1TXQUAU : 7
-- ------------------------------------------------
var volatile byte   C1TXQUAT                  at { 0x15B }
var volatile bit    C1TXQUAT_TXQUA24          at C1TXQUAT : 0
var volatile bit    C1TXQUAT_TXQUA25          at C1TXQUAT : 1
var volatile bit    C1TXQUAT_TXQUA26          at C1TXQUAT : 2
var volatile bit    C1TXQUAT_TXQUA27          at C1TXQUAT : 3
var volatile bit    C1TXQUAT_TXQUA28          at C1TXQUAT : 4
var volatile bit    C1TXQUAT_TXQUA29          at C1TXQUAT : 5
var volatile bit    C1TXQUAT_TXQUA30          at C1TXQUAT : 6
var volatile bit    C1TXQUAT_TXQUA31          at C1TXQUAT : 7
-- ------------------------------------------------
var volatile dword  C1FIFOCON1                at { 0x15C }
-- ------------------------------------------------
var volatile byte   C1FIFOCON1L               at { 0x15C }
var volatile bit    C1FIFOCON1L_TFNRFNIE      at C1FIFOCON1L : 0
var volatile bit    C1FIFOCON1L_TFHRFHIE      at C1FIFOCON1L : 1
var volatile bit    C1FIFOCON1L_TFERFFIE      at C1FIFOCON1L : 2
var volatile bit    C1FIFOCON1L_RXOVIE        at C1FIFOCON1L : 3
var volatile bit    C1FIFOCON1L_TXATIE        at C1FIFOCON1L : 4
var volatile bit    C1FIFOCON1L_RXTSEN        at C1FIFOCON1L : 5
var volatile bit    C1FIFOCON1L_RTREN         at C1FIFOCON1L : 6
var volatile bit    C1FIFOCON1L_TXEN          at C1FIFOCON1L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOCON1H               at { 0x15D }
var volatile bit    C1FIFOCON1H_UINC          at C1FIFOCON1H : 0
var volatile bit    C1FIFOCON1H_TXREQ         at C1FIFOCON1H : 1
var volatile bit    C1FIFOCON1H_FRESET        at C1FIFOCON1H : 2
-- ------------------------------------------------
var volatile byte   C1FIFOCON1U               at { 0x15E }
var volatile bit*5  C1FIFOCON1U_TXPRI         at C1FIFOCON1U : 0
var volatile bit*2  C1FIFOCON1U_TXAT          at C1FIFOCON1U : 5
var volatile bit    C1FIFOCON1U_TXPRI0        at C1FIFOCON1U : 0
var volatile bit    C1FIFOCON1U_TXPRI1        at C1FIFOCON1U : 1
var volatile bit    C1FIFOCON1U_TXPRI2        at C1FIFOCON1U : 2
var volatile bit    C1FIFOCON1U_TXPRI3        at C1FIFOCON1U : 3
var volatile bit    C1FIFOCON1U_TXPRI4        at C1FIFOCON1U : 4
var volatile bit    C1FIFOCON1U_TXAT0         at C1FIFOCON1U : 5
var volatile bit    C1FIFOCON1U_TXAT1         at C1FIFOCON1U : 6
-- ------------------------------------------------
var volatile byte   C1FIFOCON1T               at { 0x15F }
var volatile bit*5  C1FIFOCON1T_FSIZE         at C1FIFOCON1T : 0
var volatile bit    C1FIFOCON1T_FSIZE0        at C1FIFOCON1T : 0
var volatile bit    C1FIFOCON1T_FSIZE1        at C1FIFOCON1T : 1
var volatile bit    C1FIFOCON1T_FSIZE2        at C1FIFOCON1T : 2
var volatile bit    C1FIFOCON1T_FSIZE3        at C1FIFOCON1T : 3
var volatile bit    C1FIFOCON1T_FSIZE4        at C1FIFOCON1T : 4
-- ------------------------------------------------
var volatile dword  C1FIFOSTA1                at { 0x160 }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA1L               at { 0x160 }
var volatile bit    C1FIFOSTA1L_TFNRFNIF      at C1FIFOSTA1L : 0
var volatile bit    C1FIFOSTA1L_TFHRFHIF      at C1FIFOSTA1L : 1
var volatile bit    C1FIFOSTA1L_TFERFFIF      at C1FIFOSTA1L : 2
var volatile bit    C1FIFOSTA1L_RXOVIF        at C1FIFOSTA1L : 3
var volatile bit    C1FIFOSTA1L_TXATIF        at C1FIFOSTA1L : 4
var volatile bit    C1FIFOSTA1L_TXERR         at C1FIFOSTA1L : 5
var volatile bit    C1FIFOSTA1L_TXLARB        at C1FIFOSTA1L : 6
var volatile bit    C1FIFOSTA1L_TXABT         at C1FIFOSTA1L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOSTA1H               at { 0x161 }
var volatile bit*5  C1FIFOSTA1H_FIFOCI        at C1FIFOSTA1H : 0
var volatile bit    C1FIFOSTA1H_FIFOCI0       at C1FIFOSTA1H : 0
var volatile bit    C1FIFOSTA1H_FIFOCI1       at C1FIFOSTA1H : 1
var volatile bit    C1FIFOSTA1H_FIFOCI2       at C1FIFOSTA1H : 2
var volatile bit    C1FIFOSTA1H_FIFOCI3       at C1FIFOSTA1H : 3
var volatile bit    C1FIFOSTA1H_FIFOCI4       at C1FIFOSTA1H : 4
-- ------------------------------------------------
var volatile byte   C1FIFOSTA1U               at { 0x162 }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA1T               at { 0x163 }
-- ------------------------------------------------
var volatile dword  C1FIFOUA1                 at { 0x164 }
-- ------------------------------------------------
var volatile byte   C1FIFOUA1L                at { 0x164 }
var volatile bit    C1FIFOUA1L_FIFOUA0        at C1FIFOUA1L : 0
var volatile bit    C1FIFOUA1L_FIFOUA1        at C1FIFOUA1L : 1
var volatile bit    C1FIFOUA1L_FIFOUA2        at C1FIFOUA1L : 2
var volatile bit    C1FIFOUA1L_FIFOUA3        at C1FIFOUA1L : 3
var volatile bit    C1FIFOUA1L_FIFOUA4        at C1FIFOUA1L : 4
var volatile bit    C1FIFOUA1L_FIFOUA5        at C1FIFOUA1L : 5
var volatile bit    C1FIFOUA1L_FIFOUA6        at C1FIFOUA1L : 6
var volatile bit    C1FIFOUA1L_FIFOUA7        at C1FIFOUA1L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA1H                at { 0x165 }
var volatile bit    C1FIFOUA1H_FIFOUA8        at C1FIFOUA1H : 0
var volatile bit    C1FIFOUA1H_FIFOUA9        at C1FIFOUA1H : 1
var volatile bit    C1FIFOUA1H_FIFOUA10       at C1FIFOUA1H : 2
var volatile bit    C1FIFOUA1H_FIFOUA11       at C1FIFOUA1H : 3
var volatile bit    C1FIFOUA1H_FIFOUA12       at C1FIFOUA1H : 4
var volatile bit    C1FIFOUA1H_FIFOUA13       at C1FIFOUA1H : 5
var volatile bit    C1FIFOUA1H_FIFOUA14       at C1FIFOUA1H : 6
var volatile bit    C1FIFOUA1H_FIFOUA15       at C1FIFOUA1H : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA1U                at { 0x166 }
var volatile bit    C1FIFOUA1U_FIFOUA16       at C1FIFOUA1U : 0
var volatile bit    C1FIFOUA1U_FIFOUA17       at C1FIFOUA1U : 1
var volatile bit    C1FIFOUA1U_FIFOUA18       at C1FIFOUA1U : 2
var volatile bit    C1FIFOUA1U_FIFOUA19       at C1FIFOUA1U : 3
var volatile bit    C1FIFOUA1U_FIFOUA20       at C1FIFOUA1U : 4
var volatile bit    C1FIFOUA1U_FIFOUA21       at C1FIFOUA1U : 5
var volatile bit    C1FIFOUA1U_FIFOUA22       at C1FIFOUA1U : 6
var volatile bit    C1FIFOUA1U_FIFOUA23       at C1FIFOUA1U : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA1T                at { 0x167 }
var volatile bit    C1FIFOUA1T_FIFOUA24       at C1FIFOUA1T : 0
var volatile bit    C1FIFOUA1T_FIFOUA25       at C1FIFOUA1T : 1
var volatile bit    C1FIFOUA1T_FIFOUA26       at C1FIFOUA1T : 2
var volatile bit    C1FIFOUA1T_FIFOUA27       at C1FIFOUA1T : 3
var volatile bit    C1FIFOUA1T_FIFOUA28       at C1FIFOUA1T : 4
var volatile bit    C1FIFOUA1T_FIFOUA29       at C1FIFOUA1T : 5
var volatile bit    C1FIFOUA1T_FIFOUA30       at C1FIFOUA1T : 6
var volatile bit    C1FIFOUA1T_FIFOUA31       at C1FIFOUA1T : 7
-- ------------------------------------------------
var volatile dword  C1FIFOCON2                at { 0x168 }
-- ------------------------------------------------
var volatile byte   C1FIFOCON2L               at { 0x168 }
var volatile bit    C1FIFOCON2L_TFNRFNIE      at C1FIFOCON2L : 0
var volatile bit    C1FIFOCON2L_TFHRFHIE      at C1FIFOCON2L : 1
var volatile bit    C1FIFOCON2L_TFERFFIE      at C1FIFOCON2L : 2
var volatile bit    C1FIFOCON2L_RXOVIE        at C1FIFOCON2L : 3
var volatile bit    C1FIFOCON2L_TXATIE        at C1FIFOCON2L : 4
var volatile bit    C1FIFOCON2L_RXTSEN        at C1FIFOCON2L : 5
var volatile bit    C1FIFOCON2L_RTREN         at C1FIFOCON2L : 6
var volatile bit    C1FIFOCON2L_TXEN          at C1FIFOCON2L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOCON2H               at { 0x169 }
var volatile bit    C1FIFOCON2H_UINC          at C1FIFOCON2H : 0
var volatile bit    C1FIFOCON2H_TXREQ         at C1FIFOCON2H : 1
var volatile bit    C1FIFOCON2H_FRESET        at C1FIFOCON2H : 2
-- ------------------------------------------------
var volatile byte   C1FIFOCON2U               at { 0x16A }
var volatile bit*5  C1FIFOCON2U_TXPRI         at C1FIFOCON2U : 0
var volatile bit*2  C1FIFOCON2U_TXAT          at C1FIFOCON2U : 5
var volatile bit    C1FIFOCON2U_TXPRI0        at C1FIFOCON2U : 0
var volatile bit    C1FIFOCON2U_TXPRI1        at C1FIFOCON2U : 1
var volatile bit    C1FIFOCON2U_TXPRI2        at C1FIFOCON2U : 2
var volatile bit    C1FIFOCON2U_TXPRI3        at C1FIFOCON2U : 3
var volatile bit    C1FIFOCON2U_TXPRI4        at C1FIFOCON2U : 4
var volatile bit    C1FIFOCON2U_TXAT0         at C1FIFOCON2U : 5
var volatile bit    C1FIFOCON2U_TXAT1         at C1FIFOCON2U : 6
-- ------------------------------------------------
var volatile byte   C1FIFOCON2T               at { 0x16B }
var volatile bit*5  C1FIFOCON2T_FSIZE         at C1FIFOCON2T : 0
var volatile bit    C1FIFOCON2T_FSIZE0        at C1FIFOCON2T : 0
var volatile bit    C1FIFOCON2T_FSIZE1        at C1FIFOCON2T : 1
var volatile bit    C1FIFOCON2T_FSIZE2        at C1FIFOCON2T : 2
var volatile bit    C1FIFOCON2T_FSIZE3        at C1FIFOCON2T : 3
var volatile bit    C1FIFOCON2T_FSIZE4        at C1FIFOCON2T : 4
-- ------------------------------------------------
var volatile dword  C1FIFOSTA2                at { 0x16C }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA2L               at { 0x16C }
var volatile bit    C1FIFOSTA2L_TFNRFNIF      at C1FIFOSTA2L : 0
var volatile bit    C1FIFOSTA2L_TFHRFHIF      at C1FIFOSTA2L : 1
var volatile bit    C1FIFOSTA2L_TFERFFIF      at C1FIFOSTA2L : 2
var volatile bit    C1FIFOSTA2L_RXOVIF        at C1FIFOSTA2L : 3
var volatile bit    C1FIFOSTA2L_TXATIF        at C1FIFOSTA2L : 4
var volatile bit    C1FIFOSTA2L_TXERR         at C1FIFOSTA2L : 5
var volatile bit    C1FIFOSTA2L_TXLARB        at C1FIFOSTA2L : 6
var volatile bit    C1FIFOSTA2L_TXABT         at C1FIFOSTA2L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOSTA2H               at { 0x16D }
var volatile bit*5  C1FIFOSTA2H_FIFOCI        at C1FIFOSTA2H : 0
var volatile bit    C1FIFOSTA2H_FIFOCI0       at C1FIFOSTA2H : 0
var volatile bit    C1FIFOSTA2H_FIFOCI1       at C1FIFOSTA2H : 1
var volatile bit    C1FIFOSTA2H_FIFOCI2       at C1FIFOSTA2H : 2
var volatile bit    C1FIFOSTA2H_FIFOCI3       at C1FIFOSTA2H : 3
var volatile bit    C1FIFOSTA2H_FIFOCI4       at C1FIFOSTA2H : 4
-- ------------------------------------------------
var volatile byte   C1FIFOSTA2U               at { 0x16E }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA2T               at { 0x16F }
-- ------------------------------------------------
var volatile dword  C1FIFOUA2                 at { 0x170 }
-- ------------------------------------------------
var volatile byte   C1FIFOUA2L                at { 0x170 }
var volatile bit    C1FIFOUA2L_FIFOUA0        at C1FIFOUA2L : 0
var volatile bit    C1FIFOUA2L_FIFOUA1        at C1FIFOUA2L : 1
var volatile bit    C1FIFOUA2L_FIFOUA2        at C1FIFOUA2L : 2
var volatile bit    C1FIFOUA2L_FIFOUA3        at C1FIFOUA2L : 3
var volatile bit    C1FIFOUA2L_FIFOUA4        at C1FIFOUA2L : 4
var volatile bit    C1FIFOUA2L_FIFOUA5        at C1FIFOUA2L : 5
var volatile bit    C1FIFOUA2L_FIFOUA6        at C1FIFOUA2L : 6
var volatile bit    C1FIFOUA2L_FIFOUA7        at C1FIFOUA2L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA2H                at { 0x171 }
var volatile bit    C1FIFOUA2H_FIFOUA8        at C1FIFOUA2H : 0
var volatile bit    C1FIFOUA2H_FIFOUA9        at C1FIFOUA2H : 1
var volatile bit    C1FIFOUA2H_FIFOUA10       at C1FIFOUA2H : 2
var volatile bit    C1FIFOUA2H_FIFOUA11       at C1FIFOUA2H : 3
var volatile bit    C1FIFOUA2H_FIFOUA12       at C1FIFOUA2H : 4
var volatile bit    C1FIFOUA2H_FIFOUA13       at C1FIFOUA2H : 5
var volatile bit    C1FIFOUA2H_FIFOUA14       at C1FIFOUA2H : 6
var volatile bit    C1FIFOUA2H_FIFOUA15       at C1FIFOUA2H : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA2U                at { 0x172 }
var volatile bit    C1FIFOUA2U_FIFOUA16       at C1FIFOUA2U : 0
var volatile bit    C1FIFOUA2U_FIFOUA17       at C1FIFOUA2U : 1
var volatile bit    C1FIFOUA2U_FIFOUA18       at C1FIFOUA2U : 2
var volatile bit    C1FIFOUA2U_FIFOUA19       at C1FIFOUA2U : 3
var volatile bit    C1FIFOUA2U_FIFOUA20       at C1FIFOUA2U : 4
var volatile bit    C1FIFOUA2U_FIFOUA21       at C1FIFOUA2U : 5
var volatile bit    C1FIFOUA2U_FIFOUA22       at C1FIFOUA2U : 6
var volatile bit    C1FIFOUA2U_FIFOUA23       at C1FIFOUA2U : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA2T                at { 0x173 }
var volatile bit    C1FIFOUA2T_FIFOUA24       at C1FIFOUA2T : 0
var volatile bit    C1FIFOUA2T_FIFOUA25       at C1FIFOUA2T : 1
var volatile bit    C1FIFOUA2T_FIFOUA26       at C1FIFOUA2T : 2
var volatile bit    C1FIFOUA2T_FIFOUA27       at C1FIFOUA2T : 3
var volatile bit    C1FIFOUA2T_FIFOUA28       at C1FIFOUA2T : 4
var volatile bit    C1FIFOUA2T_FIFOUA29       at C1FIFOUA2T : 5
var volatile bit    C1FIFOUA2T_FIFOUA30       at C1FIFOUA2T : 6
var volatile bit    C1FIFOUA2T_FIFOUA31       at C1FIFOUA2T : 7
-- ------------------------------------------------
var volatile dword  C1FIFOCON3                at { 0x174 }
-- ------------------------------------------------
var volatile byte   C1FIFOCON3L               at { 0x174 }
var volatile bit    C1FIFOCON3L_TFNRFNIE      at C1FIFOCON3L : 0
var volatile bit    C1FIFOCON3L_TFHRFHIE      at C1FIFOCON3L : 1
var volatile bit    C1FIFOCON3L_TFERFFIE      at C1FIFOCON3L : 2
var volatile bit    C1FIFOCON3L_RXOVIE        at C1FIFOCON3L : 3
var volatile bit    C1FIFOCON3L_TXATIE        at C1FIFOCON3L : 4
var volatile bit    C1FIFOCON3L_RXTSEN        at C1FIFOCON3L : 5
var volatile bit    C1FIFOCON3L_RTREN         at C1FIFOCON3L : 6
var volatile bit    C1FIFOCON3L_TXEN          at C1FIFOCON3L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOCON3H               at { 0x175 }
var volatile bit    C1FIFOCON3H_UINC          at C1FIFOCON3H : 0
var volatile bit    C1FIFOCON3H_TXREQ         at C1FIFOCON3H : 1
var volatile bit    C1FIFOCON3H_FRESET        at C1FIFOCON3H : 2
-- ------------------------------------------------
var volatile byte   C1FIFOCON3U               at { 0x176 }
var volatile bit*5  C1FIFOCON3U_TXPRI         at C1FIFOCON3U : 0
var volatile bit*2  C1FIFOCON3U_TXAT          at C1FIFOCON3U : 5
var volatile bit    C1FIFOCON3U_TXPRI0        at C1FIFOCON3U : 0
var volatile bit    C1FIFOCON3U_TXPRI1        at C1FIFOCON3U : 1
var volatile bit    C1FIFOCON3U_TXPRI2        at C1FIFOCON3U : 2
var volatile bit    C1FIFOCON3U_TXPRI3        at C1FIFOCON3U : 3
var volatile bit    C1FIFOCON3U_TXPRI4        at C1FIFOCON3U : 4
var volatile bit    C1FIFOCON3U_TXAT0         at C1FIFOCON3U : 5
var volatile bit    C1FIFOCON3U_TXAT1         at C1FIFOCON3U : 6
-- ------------------------------------------------
var volatile byte   C1FIFOCON3T               at { 0x177 }
var volatile bit*5  C1FIFOCON3T_FSIZE         at C1FIFOCON3T : 0
var volatile bit    C1FIFOCON3T_FSIZE0        at C1FIFOCON3T : 0
var volatile bit    C1FIFOCON3T_FSIZE1        at C1FIFOCON3T : 1
var volatile bit    C1FIFOCON3T_FSIZE2        at C1FIFOCON3T : 2
var volatile bit    C1FIFOCON3T_FSIZE3        at C1FIFOCON3T : 3
var volatile bit    C1FIFOCON3T_FSIZE4        at C1FIFOCON3T : 4
-- ------------------------------------------------
var volatile dword  C1FIFOSTA3                at { 0x178 }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA3L               at { 0x178 }
var volatile bit    C1FIFOSTA3L_TFNRFNIF      at C1FIFOSTA3L : 0
var volatile bit    C1FIFOSTA3L_TFHRFHIF      at C1FIFOSTA3L : 1
var volatile bit    C1FIFOSTA3L_TFERFFIF      at C1FIFOSTA3L : 2
var volatile bit    C1FIFOSTA3L_RXOVIF        at C1FIFOSTA3L : 3
var volatile bit    C1FIFOSTA3L_TXATIF        at C1FIFOSTA3L : 4
var volatile bit    C1FIFOSTA3L_TXERR         at C1FIFOSTA3L : 5
var volatile bit    C1FIFOSTA3L_TXLARB        at C1FIFOSTA3L : 6
var volatile bit    C1FIFOSTA3L_TXABT         at C1FIFOSTA3L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOSTA3H               at { 0x179 }
var volatile bit*5  C1FIFOSTA3H_FIFOCI        at C1FIFOSTA3H : 0
var volatile bit    C1FIFOSTA3H_FIFOCI0       at C1FIFOSTA3H : 0
var volatile bit    C1FIFOSTA3H_FIFOCI1       at C1FIFOSTA3H : 1
var volatile bit    C1FIFOSTA3H_FIFOCI2       at C1FIFOSTA3H : 2
var volatile bit    C1FIFOSTA3H_FIFOCI3       at C1FIFOSTA3H : 3
var volatile bit    C1FIFOSTA3H_FIFOCI4       at C1FIFOSTA3H : 4
-- ------------------------------------------------
var volatile byte   C1FIFOSTA3U               at { 0x17A }
-- ------------------------------------------------
var volatile byte   C1FIFOSTA3T               at { 0x17B }
-- ------------------------------------------------
var volatile dword  C1FIFOUA3                 at { 0x17C }
-- ------------------------------------------------
var volatile byte   C1FIFOUA3L                at { 0x17C }
var volatile bit    C1FIFOUA3L_FIFOUA0        at C1FIFOUA3L : 0
var volatile bit    C1FIFOUA3L_FIFOUA1        at C1FIFOUA3L : 1
var volatile bit    C1FIFOUA3L_FIFOUA2        at C1FIFOUA3L : 2
var volatile bit    C1FIFOUA3L_FIFOUA3        at C1FIFOUA3L : 3
var volatile bit    C1FIFOUA3L_FIFOUA4        at C1FIFOUA3L : 4
var volatile bit    C1FIFOUA3L_FIFOUA5        at C1FIFOUA3L : 5
var volatile bit    C1FIFOUA3L_FIFOUA6        at C1FIFOUA3L : 6
var volatile bit    C1FIFOUA3L_FIFOUA7        at C1FIFOUA3L : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA3H                at { 0x17D }
var volatile bit    C1FIFOUA3H_FIFOUA8        at C1FIFOUA3H : 0
var volatile bit    C1FIFOUA3H_FIFOUA9        at C1FIFOUA3H : 1
var volatile bit    C1FIFOUA3H_FIFOUA10       at C1FIFOUA3H : 2
var volatile bit    C1FIFOUA3H_FIFOUA11       at C1FIFOUA3H : 3
var volatile bit    C1FIFOUA3H_FIFOUA12       at C1FIFOUA3H : 4
var volatile bit    C1FIFOUA3H_FIFOUA13       at C1FIFOUA3H : 5
var volatile bit    C1FIFOUA3H_FIFOUA14       at C1FIFOUA3H : 6
var volatile bit    C1FIFOUA3H_FIFOUA15       at C1FIFOUA3H : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA3U                at { 0x17E }
var volatile bit    C1FIFOUA3U_FIFOUA16       at C1FIFOUA3U : 0
var volatile bit    C1FIFOUA3U_FIFOUA17       at C1FIFOUA3U : 1
var volatile bit    C1FIFOUA3U_FIFOUA18       at C1FIFOUA3U : 2
var volatile bit    C1FIFOUA3U_FIFOUA19       at C1FIFOUA3U : 3
var volatile bit    C1FIFOUA3U_FIFOUA20       at C1FIFOUA3U : 4
var volatile bit    C1FIFOUA3U_FIFOUA21       at C1FIFOUA3U : 5
var volatile bit    C1FIFOUA3U_FIFOUA22       at C1FIFOUA3U : 6
var volatile bit    C1FIFOUA3U_FIFOUA23       at C1FIFOUA3U : 7
-- ------------------------------------------------
var volatile byte   C1FIFOUA3T                at { 0x17F }
var volatile bit    C1FIFOUA3T_FIFOUA24       at C1FIFOUA3T : 0
var volatile bit    C1FIFOUA3T_FIFOUA25       at C1FIFOUA3T : 1
var volatile bit    C1FIFOUA3T_FIFOUA26       at C1FIFOUA3T : 2
var volatile bit    C1FIFOUA3T_FIFOUA27       at C1FIFOUA3T : 3
var volatile bit    C1FIFOUA3T_FIFOUA28       at C1FIFOUA3T : 4
var volatile bit    C1FIFOUA3T_FIFOUA29       at C1FIFOUA3T : 5
var volatile bit    C1FIFOUA3T_FIFOUA30       at C1FIFOUA3T : 6
var volatile bit    C1FIFOUA3T_FIFOUA31       at C1FIFOUA3T : 7
-- ------------------------------------------------
var volatile byte   C1FLTCON0L                at { 0x180 }
var volatile bit*5  C1FLTCON0L_F0BP           at C1FLTCON0L : 0
var volatile bit    C1FLTCON0L_FLTEN0         at C1FLTCON0L : 7
var volatile bit    C1FLTCON0L_F0BP0          at C1FLTCON0L : 0
var volatile bit    C1FLTCON0L_F0BP1          at C1FLTCON0L : 1
var volatile bit    C1FLTCON0L_F0BP2          at C1FLTCON0L : 2
var volatile bit    C1FLTCON0L_F0BP3          at C1FLTCON0L : 3
var volatile bit    C1FLTCON0L_F0BP4          at C1FLTCON0L : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON0H                at { 0x181 }
var volatile bit*5  C1FLTCON0H_F1BP           at C1FLTCON0H : 0
var volatile bit    C1FLTCON0H_FLTEN1         at C1FLTCON0H : 7
var volatile bit    C1FLTCON0H_F1BP0          at C1FLTCON0H : 0
var volatile bit    C1FLTCON0H_F1BP1          at C1FLTCON0H : 1
var volatile bit    C1FLTCON0H_F1BP2          at C1FLTCON0H : 2
var volatile bit    C1FLTCON0H_F1BP3          at C1FLTCON0H : 3
var volatile bit    C1FLTCON0H_F1BP4          at C1FLTCON0H : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON0U                at { 0x182 }
var volatile bit*5  C1FLTCON0U_F2BP           at C1FLTCON0U : 0
var volatile bit    C1FLTCON0U_FLTEN2         at C1FLTCON0U : 7
var volatile bit    C1FLTCON0U_F2BP0          at C1FLTCON0U : 0
var volatile bit    C1FLTCON0U_F2BP1          at C1FLTCON0U : 1
var volatile bit    C1FLTCON0U_F2BP2          at C1FLTCON0U : 2
var volatile bit    C1FLTCON0U_F2BP3          at C1FLTCON0U : 3
var volatile bit    C1FLTCON0U_F2BP4          at C1FLTCON0U : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON0T                at { 0x183 }
var volatile bit*5  C1FLTCON0T_F3BP           at C1FLTCON0T : 0
var volatile bit    C1FLTCON0T_FLTEN3         at C1FLTCON0T : 7
var volatile bit    C1FLTCON0T_F3BP0          at C1FLTCON0T : 0
var volatile bit    C1FLTCON0T_F3BP1          at C1FLTCON0T : 1
var volatile bit    C1FLTCON0T_F3BP2          at C1FLTCON0T : 2
var volatile bit    C1FLTCON0T_F3BP3          at C1FLTCON0T : 3
var volatile bit    C1FLTCON0T_F3BP4          at C1FLTCON0T : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON1L                at { 0x184 }
var volatile bit*5  C1FLTCON1L_F4BP           at C1FLTCON1L : 0
var volatile bit    C1FLTCON1L_FLTEN4         at C1FLTCON1L : 7
var volatile bit    C1FLTCON1L_F4BP0          at C1FLTCON1L : 0
var volatile bit    C1FLTCON1L_F4BP1          at C1FLTCON1L : 1
var volatile bit    C1FLTCON1L_F4BP2          at C1FLTCON1L : 2
var volatile bit    C1FLTCON1L_F4BP3          at C1FLTCON1L : 3
var volatile bit    C1FLTCON1L_F4BP4          at C1FLTCON1L : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON1H                at { 0x185 }
var volatile bit*5  C1FLTCON1H_F5BP           at C1FLTCON1H : 0
var volatile bit    C1FLTCON1H_FLTEN5         at C1FLTCON1H : 7
var volatile bit    C1FLTCON1H_F5BP0          at C1FLTCON1H : 0
var volatile bit    C1FLTCON1H_F5BP1          at C1FLTCON1H : 1
var volatile bit    C1FLTCON1H_F5BP2          at C1FLTCON1H : 2
var volatile bit    C1FLTCON1H_F5BP3          at C1FLTCON1H : 3
var volatile bit    C1FLTCON1H_F5BP4          at C1FLTCON1H : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON1U                at { 0x186 }
var volatile bit*5  C1FLTCON1U_F6BP           at C1FLTCON1U : 0
var volatile bit    C1FLTCON1U_FLTEN6         at C1FLTCON1U : 7
var volatile bit    C1FLTCON1U_F6BP0          at C1FLTCON1U : 0
var volatile bit    C1FLTCON1U_F6BP1          at C1FLTCON1U : 1
var volatile bit    C1FLTCON1U_F6BP2          at C1FLTCON1U : 2
var volatile bit    C1FLTCON1U_F6BP3          at C1FLTCON1U : 3
var volatile bit    C1FLTCON1U_F6BP4          at C1FLTCON1U : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON1T                at { 0x187 }
var volatile bit*5  C1FLTCON1T_F7BP           at C1FLTCON1T : 0
var volatile bit    C1FLTCON1T_FLTEN7         at C1FLTCON1T : 7
var volatile bit    C1FLTCON1T_F7BP0          at C1FLTCON1T : 0
var volatile bit    C1FLTCON1T_F7BP1          at C1FLTCON1T : 1
var volatile bit    C1FLTCON1T_F7BP2          at C1FLTCON1T : 2
var volatile bit    C1FLTCON1T_F7BP3          at C1FLTCON1T : 3
var volatile bit    C1FLTCON1T_F7BP4          at C1FLTCON1T : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON2L                at { 0x188 }
var volatile bit*5  C1FLTCON2L_F8BP           at C1FLTCON2L : 0
var volatile bit    C1FLTCON2L_FLTEN8         at C1FLTCON2L : 7
var volatile bit    C1FLTCON2L_F8BP0          at C1FLTCON2L : 0
var volatile bit    C1FLTCON2L_F8BP1          at C1FLTCON2L : 1
var volatile bit    C1FLTCON2L_F8BP2          at C1FLTCON2L : 2
var volatile bit    C1FLTCON2L_F8BP3          at C1FLTCON2L : 3
var volatile bit    C1FLTCON2L_F8BP4          at C1FLTCON2L : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON2H                at { 0x189 }
var volatile bit*5  C1FLTCON2H_F9BP           at C1FLTCON2H : 0
var volatile bit    C1FLTCON2H_FLTEN9         at C1FLTCON2H : 7
var volatile bit    C1FLTCON2H_F9BP0          at C1FLTCON2H : 0
var volatile bit    C1FLTCON2H_F9BP1          at C1FLTCON2H : 1
var volatile bit    C1FLTCON2H_F9BP2          at C1FLTCON2H : 2
var volatile bit    C1FLTCON2H_F9BP3          at C1FLTCON2H : 3
var volatile bit    C1FLTCON2H_F9BP4          at C1FLTCON2H : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON2U                at { 0x18A }
var volatile bit*5  C1FLTCON2U_F10BP          at C1FLTCON2U : 0
var volatile bit    C1FLTCON2U_FLTEN10        at C1FLTCON2U : 7
var volatile bit    C1FLTCON2U_F10BP0         at C1FLTCON2U : 0
var volatile bit    C1FLTCON2U_F10BP1         at C1FLTCON2U : 1
var volatile bit    C1FLTCON2U_F10BP2         at C1FLTCON2U : 2
var volatile bit    C1FLTCON2U_F10BP3         at C1FLTCON2U : 3
var volatile bit    C1FLTCON2U_F10BP4         at C1FLTCON2U : 4
-- ------------------------------------------------
var volatile byte   C1FLTCON2T                at { 0x18B }
var volatile bit*5  C1FLTCON2T_F11BP          at C1FLTCON2T : 0
var volatile bit    C1FLTCON2T_FLTEN11        at C1FLTCON2T : 7
var volatile bit    C1FLTCON2T_F11BP0         at C1FLTCON2T : 0
var volatile bit    C1FLTCON2T_F11BP1         at C1FLTCON2T : 1
var volatile bit    C1FLTCON2T_F11BP2         at C1FLTCON2T : 2
var volatile bit    C1FLTCON2T_F11BP3         at C1FLTCON2T : 3
var volatile bit    C1FLTCON2T_F11BP4         at C1FLTCON2T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ0                 at { 0x18C }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ0L                at { 0x18C }
var volatile bit    C1FLTOBJ0L_SID0           at C1FLTOBJ0L : 0
var volatile bit    C1FLTOBJ0L_SID1           at C1FLTOBJ0L : 1
var volatile bit    C1FLTOBJ0L_SID2           at C1FLTOBJ0L : 2
var volatile bit    C1FLTOBJ0L_SID3           at C1FLTOBJ0L : 3
var volatile bit    C1FLTOBJ0L_SID4           at C1FLTOBJ0L : 4
var volatile bit    C1FLTOBJ0L_SID5           at C1FLTOBJ0L : 5
var volatile bit    C1FLTOBJ0L_SID6           at C1FLTOBJ0L : 6
var volatile bit    C1FLTOBJ0L_SID7           at C1FLTOBJ0L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ0H                at { 0x18D }
var volatile bit*3  C1FLTOBJ0H_SID            at C1FLTOBJ0H : 0
var volatile bit*5  C1FLTOBJ0H_EID            at C1FLTOBJ0H : 3
var volatile bit    C1FLTOBJ0H_SID8           at C1FLTOBJ0H : 0
var volatile bit    C1FLTOBJ0H_SID9           at C1FLTOBJ0H : 1
var volatile bit    C1FLTOBJ0H_SID10          at C1FLTOBJ0H : 2
var volatile bit    C1FLTOBJ0H_EID0           at C1FLTOBJ0H : 3
var volatile bit    C1FLTOBJ0H_EID1           at C1FLTOBJ0H : 4
var volatile bit    C1FLTOBJ0H_EID2           at C1FLTOBJ0H : 5
var volatile bit    C1FLTOBJ0H_EID3           at C1FLTOBJ0H : 6
var volatile bit    C1FLTOBJ0H_EID4           at C1FLTOBJ0H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ0U                at { 0x18E }
var volatile bit    C1FLTOBJ0U_EID5           at C1FLTOBJ0U : 0
var volatile bit    C1FLTOBJ0U_EID6           at C1FLTOBJ0U : 1
var volatile bit    C1FLTOBJ0U_EID7           at C1FLTOBJ0U : 2
var volatile bit    C1FLTOBJ0U_EID8           at C1FLTOBJ0U : 3
var volatile bit    C1FLTOBJ0U_EID9           at C1FLTOBJ0U : 4
var volatile bit    C1FLTOBJ0U_EID10          at C1FLTOBJ0U : 5
var volatile bit    C1FLTOBJ0U_EID11          at C1FLTOBJ0U : 6
var volatile bit    C1FLTOBJ0U_EID12          at C1FLTOBJ0U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ0T                at { 0x18F }
var volatile bit*5  C1FLTOBJ0T_EID            at C1FLTOBJ0T : 0
var volatile bit    C1FLTOBJ0T_SID11          at C1FLTOBJ0T : 5
var volatile bit    C1FLTOBJ0T_EXIDE          at C1FLTOBJ0T : 6
var volatile bit    C1FLTOBJ0T_EID13          at C1FLTOBJ0T : 0
var volatile bit    C1FLTOBJ0T_EID14          at C1FLTOBJ0T : 1
var volatile bit    C1FLTOBJ0T_EID15          at C1FLTOBJ0T : 2
var volatile bit    C1FLTOBJ0T_EID16          at C1FLTOBJ0T : 3
var volatile bit    C1FLTOBJ0T_EID17          at C1FLTOBJ0T : 4
-- ------------------------------------------------
var volatile dword  C1MASK0                   at { 0x190 }
-- ------------------------------------------------
var volatile byte   C1MASK0L                  at { 0x190 }
var volatile bit    C1MASK0L_MSID0            at C1MASK0L : 0
var volatile bit    C1MASK0L_MSID1            at C1MASK0L : 1
var volatile bit    C1MASK0L_MSID2            at C1MASK0L : 2
var volatile bit    C1MASK0L_MSID3            at C1MASK0L : 3
var volatile bit    C1MASK0L_MSID4            at C1MASK0L : 4
var volatile bit    C1MASK0L_MSID5            at C1MASK0L : 5
var volatile bit    C1MASK0L_MSID6            at C1MASK0L : 6
var volatile bit    C1MASK0L_MSID7            at C1MASK0L : 7
-- ------------------------------------------------
var volatile byte   C1MASK0H                  at { 0x191 }
var volatile bit*3  C1MASK0H_MSID             at C1MASK0H : 0
var volatile bit*5  C1MASK0H_MEID             at C1MASK0H : 3
var volatile bit    C1MASK0H_MSID8            at C1MASK0H : 0
var volatile bit    C1MASK0H_MSID9            at C1MASK0H : 1
var volatile bit    C1MASK0H_MSID10           at C1MASK0H : 2
var volatile bit    C1MASK0H_MEID0            at C1MASK0H : 3
var volatile bit    C1MASK0H_MEID1            at C1MASK0H : 4
var volatile bit    C1MASK0H_MEID2            at C1MASK0H : 5
var volatile bit    C1MASK0H_MEID3            at C1MASK0H : 6
var volatile bit    C1MASK0H_MEID4            at C1MASK0H : 7
-- ------------------------------------------------
var volatile byte   C1MASK0U                  at { 0x192 }
var volatile bit    C1MASK0U_MEID5            at C1MASK0U : 0
var volatile bit    C1MASK0U_MEID6            at C1MASK0U : 1
var volatile bit    C1MASK0U_MEID7            at C1MASK0U : 2
var volatile bit    C1MASK0U_MEID8            at C1MASK0U : 3
var volatile bit    C1MASK0U_MEID9            at C1MASK0U : 4
var volatile bit    C1MASK0U_MEID10           at C1MASK0U : 5
var volatile bit    C1MASK0U_MEID11           at C1MASK0U : 6
var volatile bit    C1MASK0U_MEID12           at C1MASK0U : 7
-- ------------------------------------------------
var volatile byte   C1MASK0T                  at { 0x193 }
var volatile bit*5  C1MASK0T_MEID             at C1MASK0T : 0
var volatile bit    C1MASK0T_MSID11           at C1MASK0T : 5
var volatile bit    C1MASK0T_MIDE             at C1MASK0T : 6
var volatile bit    C1MASK0T_MEID13           at C1MASK0T : 0
var volatile bit    C1MASK0T_MEID14           at C1MASK0T : 1
var volatile bit    C1MASK0T_MEID15           at C1MASK0T : 2
var volatile bit    C1MASK0T_MEID16           at C1MASK0T : 3
var volatile bit    C1MASK0T_MEID17           at C1MASK0T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ1                 at { 0x194 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ1L                at { 0x194 }
var volatile bit    C1FLTOBJ1L_SID0           at C1FLTOBJ1L : 0
var volatile bit    C1FLTOBJ1L_SID1           at C1FLTOBJ1L : 1
var volatile bit    C1FLTOBJ1L_SID2           at C1FLTOBJ1L : 2
var volatile bit    C1FLTOBJ1L_SID3           at C1FLTOBJ1L : 3
var volatile bit    C1FLTOBJ1L_SID4           at C1FLTOBJ1L : 4
var volatile bit    C1FLTOBJ1L_SID5           at C1FLTOBJ1L : 5
var volatile bit    C1FLTOBJ1L_SID6           at C1FLTOBJ1L : 6
var volatile bit    C1FLTOBJ1L_SID7           at C1FLTOBJ1L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ1H                at { 0x195 }
var volatile bit*3  C1FLTOBJ1H_SID            at C1FLTOBJ1H : 0
var volatile bit*5  C1FLTOBJ1H_EID            at C1FLTOBJ1H : 3
var volatile bit    C1FLTOBJ1H_SID8           at C1FLTOBJ1H : 0
var volatile bit    C1FLTOBJ1H_SID9           at C1FLTOBJ1H : 1
var volatile bit    C1FLTOBJ1H_SID10          at C1FLTOBJ1H : 2
var volatile bit    C1FLTOBJ1H_EID0           at C1FLTOBJ1H : 3
var volatile bit    C1FLTOBJ1H_EID1           at C1FLTOBJ1H : 4
var volatile bit    C1FLTOBJ1H_EID2           at C1FLTOBJ1H : 5
var volatile bit    C1FLTOBJ1H_EID3           at C1FLTOBJ1H : 6
var volatile bit    C1FLTOBJ1H_EID4           at C1FLTOBJ1H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ1U                at { 0x196 }
var volatile bit    C1FLTOBJ1U_EID5           at C1FLTOBJ1U : 0
var volatile bit    C1FLTOBJ1U_EID6           at C1FLTOBJ1U : 1
var volatile bit    C1FLTOBJ1U_EID7           at C1FLTOBJ1U : 2
var volatile bit    C1FLTOBJ1U_EID8           at C1FLTOBJ1U : 3
var volatile bit    C1FLTOBJ1U_EID9           at C1FLTOBJ1U : 4
var volatile bit    C1FLTOBJ1U_EID10          at C1FLTOBJ1U : 5
var volatile bit    C1FLTOBJ1U_EID11          at C1FLTOBJ1U : 6
var volatile bit    C1FLTOBJ1U_EID12          at C1FLTOBJ1U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ1T                at { 0x197 }
var volatile bit*5  C1FLTOBJ1T_EID            at C1FLTOBJ1T : 0
var volatile bit    C1FLTOBJ1T_SID11          at C1FLTOBJ1T : 5
var volatile bit    C1FLTOBJ1T_EXIDE          at C1FLTOBJ1T : 6
var volatile bit    C1FLTOBJ1T_EID13          at C1FLTOBJ1T : 0
var volatile bit    C1FLTOBJ1T_EID14          at C1FLTOBJ1T : 1
var volatile bit    C1FLTOBJ1T_EID15          at C1FLTOBJ1T : 2
var volatile bit    C1FLTOBJ1T_EID16          at C1FLTOBJ1T : 3
var volatile bit    C1FLTOBJ1T_EID17          at C1FLTOBJ1T : 4
-- ------------------------------------------------
var volatile dword  C1MASK1                   at { 0x198 }
-- ------------------------------------------------
var volatile byte   C1MASK1L                  at { 0x198 }
var volatile bit    C1MASK1L_MSID0            at C1MASK1L : 0
var volatile bit    C1MASK1L_MSID1            at C1MASK1L : 1
var volatile bit    C1MASK1L_MSID2            at C1MASK1L : 2
var volatile bit    C1MASK1L_MSID3            at C1MASK1L : 3
var volatile bit    C1MASK1L_MSID4            at C1MASK1L : 4
var volatile bit    C1MASK1L_MSID5            at C1MASK1L : 5
var volatile bit    C1MASK1L_MSID6            at C1MASK1L : 6
var volatile bit    C1MASK1L_MSID7            at C1MASK1L : 7
-- ------------------------------------------------
var volatile byte   C1MASK1H                  at { 0x199 }
var volatile bit*3  C1MASK1H_MSID             at C1MASK1H : 0
var volatile bit*5  C1MASK1H_MEID             at C1MASK1H : 3
var volatile bit    C1MASK1H_MSID8            at C1MASK1H : 0
var volatile bit    C1MASK1H_MSID9            at C1MASK1H : 1
var volatile bit    C1MASK1H_MSID10           at C1MASK1H : 2
var volatile bit    C1MASK1H_MEID0            at C1MASK1H : 3
var volatile bit    C1MASK1H_MEID1            at C1MASK1H : 4
var volatile bit    C1MASK1H_MEID2            at C1MASK1H : 5
var volatile bit    C1MASK1H_MEID3            at C1MASK1H : 6
var volatile bit    C1MASK1H_MEID4            at C1MASK1H : 7
-- ------------------------------------------------
var volatile byte   C1MASK1U                  at { 0x19A }
var volatile bit    C1MASK1U_MEID5            at C1MASK1U : 0
var volatile bit    C1MASK1U_MEID6            at C1MASK1U : 1
var volatile bit    C1MASK1U_MEID7            at C1MASK1U : 2
var volatile bit    C1MASK1U_MEID8            at C1MASK1U : 3
var volatile bit    C1MASK1U_MEID9            at C1MASK1U : 4
var volatile bit    C1MASK1U_MEID10           at C1MASK1U : 5
var volatile bit    C1MASK1U_MEID11           at C1MASK1U : 6
var volatile bit    C1MASK1U_MEID12           at C1MASK1U : 7
-- ------------------------------------------------
var volatile byte   C1MASK1T                  at { 0x19B }
var volatile bit*5  C1MASK1T_MEID             at C1MASK1T : 0
var volatile bit    C1MASK1T_MSID11           at C1MASK1T : 5
var volatile bit    C1MASK1T_MIDE             at C1MASK1T : 6
var volatile bit    C1MASK1T_MEID13           at C1MASK1T : 0
var volatile bit    C1MASK1T_MEID14           at C1MASK1T : 1
var volatile bit    C1MASK1T_MEID15           at C1MASK1T : 2
var volatile bit    C1MASK1T_MEID16           at C1MASK1T : 3
var volatile bit    C1MASK1T_MEID17           at C1MASK1T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ2                 at { 0x19C }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ2L                at { 0x19C }
var volatile bit    C1FLTOBJ2L_SID0           at C1FLTOBJ2L : 0
var volatile bit    C1FLTOBJ2L_SID1           at C1FLTOBJ2L : 1
var volatile bit    C1FLTOBJ2L_SID2           at C1FLTOBJ2L : 2
var volatile bit    C1FLTOBJ2L_SID3           at C1FLTOBJ2L : 3
var volatile bit    C1FLTOBJ2L_SID4           at C1FLTOBJ2L : 4
var volatile bit    C1FLTOBJ2L_SID5           at C1FLTOBJ2L : 5
var volatile bit    C1FLTOBJ2L_SID6           at C1FLTOBJ2L : 6
var volatile bit    C1FLTOBJ2L_SID7           at C1FLTOBJ2L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ2H                at { 0x19D }
var volatile bit*3  C1FLTOBJ2H_SID            at C1FLTOBJ2H : 0
var volatile bit*5  C1FLTOBJ2H_EID            at C1FLTOBJ2H : 3
var volatile bit    C1FLTOBJ2H_SID8           at C1FLTOBJ2H : 0
var volatile bit    C1FLTOBJ2H_SID9           at C1FLTOBJ2H : 1
var volatile bit    C1FLTOBJ2H_SID10          at C1FLTOBJ2H : 2
var volatile bit    C1FLTOBJ2H_EID0           at C1FLTOBJ2H : 3
var volatile bit    C1FLTOBJ2H_EID1           at C1FLTOBJ2H : 4
var volatile bit    C1FLTOBJ2H_EID2           at C1FLTOBJ2H : 5
var volatile bit    C1FLTOBJ2H_EID3           at C1FLTOBJ2H : 6
var volatile bit    C1FLTOBJ2H_EID4           at C1FLTOBJ2H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ2U                at { 0x19E }
var volatile bit    C1FLTOBJ2U_EID5           at C1FLTOBJ2U : 0
var volatile bit    C1FLTOBJ2U_EID6           at C1FLTOBJ2U : 1
var volatile bit    C1FLTOBJ2U_EID7           at C1FLTOBJ2U : 2
var volatile bit    C1FLTOBJ2U_EID8           at C1FLTOBJ2U : 3
var volatile bit    C1FLTOBJ2U_EID9           at C1FLTOBJ2U : 4
var volatile bit    C1FLTOBJ2U_EID10          at C1FLTOBJ2U : 5
var volatile bit    C1FLTOBJ2U_EID11          at C1FLTOBJ2U : 6
var volatile bit    C1FLTOBJ2U_EID12          at C1FLTOBJ2U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ2T                at { 0x19F }
var volatile bit*5  C1FLTOBJ2T_EID            at C1FLTOBJ2T : 0
var volatile bit    C1FLTOBJ2T_SID11          at C1FLTOBJ2T : 5
var volatile bit    C1FLTOBJ2T_EXIDE          at C1FLTOBJ2T : 6
var volatile bit    C1FLTOBJ2T_EID13          at C1FLTOBJ2T : 0
var volatile bit    C1FLTOBJ2T_EID14          at C1FLTOBJ2T : 1
var volatile bit    C1FLTOBJ2T_EID15          at C1FLTOBJ2T : 2
var volatile bit    C1FLTOBJ2T_EID16          at C1FLTOBJ2T : 3
var volatile bit    C1FLTOBJ2T_EID17          at C1FLTOBJ2T : 4
-- ------------------------------------------------
var volatile dword  C1MASK2                   at { 0x1A0 }
-- ------------------------------------------------
var volatile byte   C1MASK2L                  at { 0x1A0 }
var volatile bit    C1MASK2L_MSID0            at C1MASK2L : 0
var volatile bit    C1MASK2L_MSID1            at C1MASK2L : 1
var volatile bit    C1MASK2L_MSID2            at C1MASK2L : 2
var volatile bit    C1MASK2L_MSID3            at C1MASK2L : 3
var volatile bit    C1MASK2L_MSID4            at C1MASK2L : 4
var volatile bit    C1MASK2L_MSID5            at C1MASK2L : 5
var volatile bit    C1MASK2L_MSID6            at C1MASK2L : 6
var volatile bit    C1MASK2L_MSID7            at C1MASK2L : 7
-- ------------------------------------------------
var volatile byte   C1MASK2H                  at { 0x1A1 }
var volatile bit*3  C1MASK2H_MSID             at C1MASK2H : 0
var volatile bit*5  C1MASK2H_MEID             at C1MASK2H : 3
var volatile bit    C1MASK2H_MSID8            at C1MASK2H : 0
var volatile bit    C1MASK2H_MSID9            at C1MASK2H : 1
var volatile bit    C1MASK2H_MSID10           at C1MASK2H : 2
var volatile bit    C1MASK2H_MEID0            at C1MASK2H : 3
var volatile bit    C1MASK2H_MEID1            at C1MASK2H : 4
var volatile bit    C1MASK2H_MEID2            at C1MASK2H : 5
var volatile bit    C1MASK2H_MEID3            at C1MASK2H : 6
var volatile bit    C1MASK2H_MEID4            at C1MASK2H : 7
-- ------------------------------------------------
var volatile byte   C1MASK2U                  at { 0x1A2 }
var volatile bit    C1MASK2U_MEID5            at C1MASK2U : 0
var volatile bit    C1MASK2U_MEID6            at C1MASK2U : 1
var volatile bit    C1MASK2U_MEID7            at C1MASK2U : 2
var volatile bit    C1MASK2U_MEID8            at C1MASK2U : 3
var volatile bit    C1MASK2U_MEID9            at C1MASK2U : 4
var volatile bit    C1MASK2U_MEID10           at C1MASK2U : 5
var volatile bit    C1MASK2U_MEID11           at C1MASK2U : 6
var volatile bit    C1MASK2U_MEID12           at C1MASK2U : 7
-- ------------------------------------------------
var volatile byte   C1MASK2T                  at { 0x1A3 }
var volatile bit*5  C1MASK2T_MEID             at C1MASK2T : 0
var volatile bit    C1MASK2T_MSID11           at C1MASK2T : 5
var volatile bit    C1MASK2T_MIDE             at C1MASK2T : 6
var volatile bit    C1MASK2T_MEID13           at C1MASK2T : 0
var volatile bit    C1MASK2T_MEID14           at C1MASK2T : 1
var volatile bit    C1MASK2T_MEID15           at C1MASK2T : 2
var volatile bit    C1MASK2T_MEID16           at C1MASK2T : 3
var volatile bit    C1MASK2T_MEID17           at C1MASK2T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ3                 at { 0x1A4 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ3L                at { 0x1A4 }
var volatile bit    C1FLTOBJ3L_SID0           at C1FLTOBJ3L : 0
var volatile bit    C1FLTOBJ3L_SID1           at C1FLTOBJ3L : 1
var volatile bit    C1FLTOBJ3L_SID2           at C1FLTOBJ3L : 2
var volatile bit    C1FLTOBJ3L_SID3           at C1FLTOBJ3L : 3
var volatile bit    C1FLTOBJ3L_SID4           at C1FLTOBJ3L : 4
var volatile bit    C1FLTOBJ3L_SID5           at C1FLTOBJ3L : 5
var volatile bit    C1FLTOBJ3L_SID6           at C1FLTOBJ3L : 6
var volatile bit    C1FLTOBJ3L_SID7           at C1FLTOBJ3L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ3H                at { 0x1A5 }
var volatile bit*3  C1FLTOBJ3H_SID            at C1FLTOBJ3H : 0
var volatile bit*5  C1FLTOBJ3H_EID            at C1FLTOBJ3H : 3
var volatile bit    C1FLTOBJ3H_SID8           at C1FLTOBJ3H : 0
var volatile bit    C1FLTOBJ3H_SID9           at C1FLTOBJ3H : 1
var volatile bit    C1FLTOBJ3H_SID10          at C1FLTOBJ3H : 2
var volatile bit    C1FLTOBJ3H_EID0           at C1FLTOBJ3H : 3
var volatile bit    C1FLTOBJ3H_EID1           at C1FLTOBJ3H : 4
var volatile bit    C1FLTOBJ3H_EID2           at C1FLTOBJ3H : 5
var volatile bit    C1FLTOBJ3H_EID3           at C1FLTOBJ3H : 6
var volatile bit    C1FLTOBJ3H_EID4           at C1FLTOBJ3H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ3U                at { 0x1A6 }
var volatile bit    C1FLTOBJ3U_EID5           at C1FLTOBJ3U : 0
var volatile bit    C1FLTOBJ3U_EID6           at C1FLTOBJ3U : 1
var volatile bit    C1FLTOBJ3U_EID7           at C1FLTOBJ3U : 2
var volatile bit    C1FLTOBJ3U_EID8           at C1FLTOBJ3U : 3
var volatile bit    C1FLTOBJ3U_EID9           at C1FLTOBJ3U : 4
var volatile bit    C1FLTOBJ3U_EID10          at C1FLTOBJ3U : 5
var volatile bit    C1FLTOBJ3U_EID11          at C1FLTOBJ3U : 6
var volatile bit    C1FLTOBJ3U_EID12          at C1FLTOBJ3U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ3T                at { 0x1A7 }
var volatile bit*5  C1FLTOBJ3T_EID            at C1FLTOBJ3T : 0
var volatile bit    C1FLTOBJ3T_SID11          at C1FLTOBJ3T : 5
var volatile bit    C1FLTOBJ3T_EXIDE          at C1FLTOBJ3T : 6
var volatile bit    C1FLTOBJ3T_EID13          at C1FLTOBJ3T : 0
var volatile bit    C1FLTOBJ3T_EID14          at C1FLTOBJ3T : 1
var volatile bit    C1FLTOBJ3T_EID15          at C1FLTOBJ3T : 2
var volatile bit    C1FLTOBJ3T_EID16          at C1FLTOBJ3T : 3
var volatile bit    C1FLTOBJ3T_EID17          at C1FLTOBJ3T : 4
-- ------------------------------------------------
var volatile dword  C1MASK3                   at { 0x1A8 }
-- ------------------------------------------------
var volatile byte   C1MASK3L                  at { 0x1A8 }
var volatile bit    C1MASK3L_MSID0            at C1MASK3L : 0
var volatile bit    C1MASK3L_MSID1            at C1MASK3L : 1
var volatile bit    C1MASK3L_MSID2            at C1MASK3L : 2
var volatile bit    C1MASK3L_MSID3            at C1MASK3L : 3
var volatile bit    C1MASK3L_MSID4            at C1MASK3L : 4
var volatile bit    C1MASK3L_MSID5            at C1MASK3L : 5
var volatile bit    C1MASK3L_MSID6            at C1MASK3L : 6
var volatile bit    C1MASK3L_MSID7            at C1MASK3L : 7
-- ------------------------------------------------
var volatile byte   C1MASK3H                  at { 0x1A9 }
var volatile bit*3  C1MASK3H_MSID             at C1MASK3H : 0
var volatile bit*5  C1MASK3H_MEID             at C1MASK3H : 3
var volatile bit    C1MASK3H_MSID8            at C1MASK3H : 0
var volatile bit    C1MASK3H_MSID9            at C1MASK3H : 1
var volatile bit    C1MASK3H_MSID10           at C1MASK3H : 2
var volatile bit    C1MASK3H_MEID0            at C1MASK3H : 3
var volatile bit    C1MASK3H_MEID1            at C1MASK3H : 4
var volatile bit    C1MASK3H_MEID2            at C1MASK3H : 5
var volatile bit    C1MASK3H_MEID3            at C1MASK3H : 6
var volatile bit    C1MASK3H_MEID4            at C1MASK3H : 7
-- ------------------------------------------------
var volatile byte   C1MASK3U                  at { 0x1AA }
var volatile bit    C1MASK3U_MEID5            at C1MASK3U : 0
var volatile bit    C1MASK3U_MEID6            at C1MASK3U : 1
var volatile bit    C1MASK3U_MEID7            at C1MASK3U : 2
var volatile bit    C1MASK3U_MEID8            at C1MASK3U : 3
var volatile bit    C1MASK3U_MEID9            at C1MASK3U : 4
var volatile bit    C1MASK3U_MEID10           at C1MASK3U : 5
var volatile bit    C1MASK3U_MEID11           at C1MASK3U : 6
var volatile bit    C1MASK3U_MEID12           at C1MASK3U : 7
-- ------------------------------------------------
var volatile byte   C1MASK3T                  at { 0x1AB }
var volatile bit*5  C1MASK3T_MEID             at C1MASK3T : 0
var volatile bit    C1MASK3T_MSID11           at C1MASK3T : 5
var volatile bit    C1MASK3T_MIDE             at C1MASK3T : 6
var volatile bit    C1MASK3T_MEID13           at C1MASK3T : 0
var volatile bit    C1MASK3T_MEID14           at C1MASK3T : 1
var volatile bit    C1MASK3T_MEID15           at C1MASK3T : 2
var volatile bit    C1MASK3T_MEID16           at C1MASK3T : 3
var volatile bit    C1MASK3T_MEID17           at C1MASK3T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ4                 at { 0x1AC }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ4L                at { 0x1AC }
var volatile bit    C1FLTOBJ4L_SID0           at C1FLTOBJ4L : 0
var volatile bit    C1FLTOBJ4L_SID1           at C1FLTOBJ4L : 1
var volatile bit    C1FLTOBJ4L_SID2           at C1FLTOBJ4L : 2
var volatile bit    C1FLTOBJ4L_SID3           at C1FLTOBJ4L : 3
var volatile bit    C1FLTOBJ4L_SID4           at C1FLTOBJ4L : 4
var volatile bit    C1FLTOBJ4L_SID5           at C1FLTOBJ4L : 5
var volatile bit    C1FLTOBJ4L_SID6           at C1FLTOBJ4L : 6
var volatile bit    C1FLTOBJ4L_SID7           at C1FLTOBJ4L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ4H                at { 0x1AD }
var volatile bit*3  C1FLTOBJ4H_SID            at C1FLTOBJ4H : 0
var volatile bit*5  C1FLTOBJ4H_EID            at C1FLTOBJ4H : 3
var volatile bit    C1FLTOBJ4H_SID8           at C1FLTOBJ4H : 0
var volatile bit    C1FLTOBJ4H_SID9           at C1FLTOBJ4H : 1
var volatile bit    C1FLTOBJ4H_SID10          at C1FLTOBJ4H : 2
var volatile bit    C1FLTOBJ4H_EID0           at C1FLTOBJ4H : 3
var volatile bit    C1FLTOBJ4H_EID1           at C1FLTOBJ4H : 4
var volatile bit    C1FLTOBJ4H_EID2           at C1FLTOBJ4H : 5
var volatile bit    C1FLTOBJ4H_EID3           at C1FLTOBJ4H : 6
var volatile bit    C1FLTOBJ4H_EID4           at C1FLTOBJ4H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ4U                at { 0x1AE }
var volatile bit    C1FLTOBJ4U_EID5           at C1FLTOBJ4U : 0
var volatile bit    C1FLTOBJ4U_EID6           at C1FLTOBJ4U : 1
var volatile bit    C1FLTOBJ4U_EID7           at C1FLTOBJ4U : 2
var volatile bit    C1FLTOBJ4U_EID8           at C1FLTOBJ4U : 3
var volatile bit    C1FLTOBJ4U_EID9           at C1FLTOBJ4U : 4
var volatile bit    C1FLTOBJ4U_EID10          at C1FLTOBJ4U : 5
var volatile bit    C1FLTOBJ4U_EID11          at C1FLTOBJ4U : 6
var volatile bit    C1FLTOBJ4U_EID12          at C1FLTOBJ4U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ4T                at { 0x1AF }
var volatile bit*5  C1FLTOBJ4T_EID            at C1FLTOBJ4T : 0
var volatile bit    C1FLTOBJ4T_SID11          at C1FLTOBJ4T : 5
var volatile bit    C1FLTOBJ4T_EXIDE          at C1FLTOBJ4T : 6
var volatile bit    C1FLTOBJ4T_EID13          at C1FLTOBJ4T : 0
var volatile bit    C1FLTOBJ4T_EID14          at C1FLTOBJ4T : 1
var volatile bit    C1FLTOBJ4T_EID15          at C1FLTOBJ4T : 2
var volatile bit    C1FLTOBJ4T_EID16          at C1FLTOBJ4T : 3
var volatile bit    C1FLTOBJ4T_EID17          at C1FLTOBJ4T : 4
-- ------------------------------------------------
var volatile dword  C1MASK4                   at { 0x1B0 }
-- ------------------------------------------------
var volatile byte   C1MASK4L                  at { 0x1B0 }
var volatile bit    C1MASK4L_MSID0            at C1MASK4L : 0
var volatile bit    C1MASK4L_MSID1            at C1MASK4L : 1
var volatile bit    C1MASK4L_MSID2            at C1MASK4L : 2
var volatile bit    C1MASK4L_MSID3            at C1MASK4L : 3
var volatile bit    C1MASK4L_MSID4            at C1MASK4L : 4
var volatile bit    C1MASK4L_MSID5            at C1MASK4L : 5
var volatile bit    C1MASK4L_MSID6            at C1MASK4L : 6
var volatile bit    C1MASK4L_MSID7            at C1MASK4L : 7
-- ------------------------------------------------
var volatile byte   C1MASK4H                  at { 0x1B1 }
var volatile bit*3  C1MASK4H_MSID             at C1MASK4H : 0
var volatile bit*5  C1MASK4H_MEID             at C1MASK4H : 3
var volatile bit    C1MASK4H_MSID8            at C1MASK4H : 0
var volatile bit    C1MASK4H_MSID9            at C1MASK4H : 1
var volatile bit    C1MASK4H_MSID10           at C1MASK4H : 2
var volatile bit    C1MASK4H_MEID0            at C1MASK4H : 3
var volatile bit    C1MASK4H_MEID1            at C1MASK4H : 4
var volatile bit    C1MASK4H_MEID2            at C1MASK4H : 5
var volatile bit    C1MASK4H_MEID3            at C1MASK4H : 6
var volatile bit    C1MASK4H_MEID4            at C1MASK4H : 7
-- ------------------------------------------------
var volatile byte   C1MASK4U                  at { 0x1B2 }
var volatile bit    C1MASK4U_MEID5            at C1MASK4U : 0
var volatile bit    C1MASK4U_MEID6            at C1MASK4U : 1
var volatile bit    C1MASK4U_MEID7            at C1MASK4U : 2
var volatile bit    C1MASK4U_MEID8            at C1MASK4U : 3
var volatile bit    C1MASK4U_MEID9            at C1MASK4U : 4
var volatile bit    C1MASK4U_MEID10           at C1MASK4U : 5
var volatile bit    C1MASK4U_MEID11           at C1MASK4U : 6
var volatile bit    C1MASK4U_MEID12           at C1MASK4U : 7
-- ------------------------------------------------
var volatile byte   C1MASK4T                  at { 0x1B3 }
var volatile bit*5  C1MASK4T_MEID             at C1MASK4T : 0
var volatile bit    C1MASK4T_MSID11           at C1MASK4T : 5
var volatile bit    C1MASK4T_MIDE             at C1MASK4T : 6
var volatile bit    C1MASK4T_MEID13           at C1MASK4T : 0
var volatile bit    C1MASK4T_MEID14           at C1MASK4T : 1
var volatile bit    C1MASK4T_MEID15           at C1MASK4T : 2
var volatile bit    C1MASK4T_MEID16           at C1MASK4T : 3
var volatile bit    C1MASK4T_MEID17           at C1MASK4T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ5                 at { 0x1B4 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ5L                at { 0x1B4 }
var volatile bit    C1FLTOBJ5L_SID0           at C1FLTOBJ5L : 0
var volatile bit    C1FLTOBJ5L_SID1           at C1FLTOBJ5L : 1
var volatile bit    C1FLTOBJ5L_SID2           at C1FLTOBJ5L : 2
var volatile bit    C1FLTOBJ5L_SID3           at C1FLTOBJ5L : 3
var volatile bit    C1FLTOBJ5L_SID4           at C1FLTOBJ5L : 4
var volatile bit    C1FLTOBJ5L_SID5           at C1FLTOBJ5L : 5
var volatile bit    C1FLTOBJ5L_SID6           at C1FLTOBJ5L : 6
var volatile bit    C1FLTOBJ5L_SID7           at C1FLTOBJ5L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ5H                at { 0x1B5 }
var volatile bit*3  C1FLTOBJ5H_SID            at C1FLTOBJ5H : 0
var volatile bit*5  C1FLTOBJ5H_EID            at C1FLTOBJ5H : 3
var volatile bit    C1FLTOBJ5H_SID8           at C1FLTOBJ5H : 0
var volatile bit    C1FLTOBJ5H_SID9           at C1FLTOBJ5H : 1
var volatile bit    C1FLTOBJ5H_SID10          at C1FLTOBJ5H : 2
var volatile bit    C1FLTOBJ5H_EID0           at C1FLTOBJ5H : 3
var volatile bit    C1FLTOBJ5H_EID1           at C1FLTOBJ5H : 4
var volatile bit    C1FLTOBJ5H_EID2           at C1FLTOBJ5H : 5
var volatile bit    C1FLTOBJ5H_EID3           at C1FLTOBJ5H : 6
var volatile bit    C1FLTOBJ5H_EID4           at C1FLTOBJ5H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ5U                at { 0x1B6 }
var volatile bit    C1FLTOBJ5U_EID5           at C1FLTOBJ5U : 0
var volatile bit    C1FLTOBJ5U_EID6           at C1FLTOBJ5U : 1
var volatile bit    C1FLTOBJ5U_EID7           at C1FLTOBJ5U : 2
var volatile bit    C1FLTOBJ5U_EID8           at C1FLTOBJ5U : 3
var volatile bit    C1FLTOBJ5U_EID9           at C1FLTOBJ5U : 4
var volatile bit    C1FLTOBJ5U_EID10          at C1FLTOBJ5U : 5
var volatile bit    C1FLTOBJ5U_EID11          at C1FLTOBJ5U : 6
var volatile bit    C1FLTOBJ5U_EID12          at C1FLTOBJ5U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ5T                at { 0x1B7 }
var volatile bit*5  C1FLTOBJ5T_EID            at C1FLTOBJ5T : 0
var volatile bit    C1FLTOBJ5T_SID11          at C1FLTOBJ5T : 5
var volatile bit    C1FLTOBJ5T_EXIDE          at C1FLTOBJ5T : 6
var volatile bit    C1FLTOBJ5T_EID13          at C1FLTOBJ5T : 0
var volatile bit    C1FLTOBJ5T_EID14          at C1FLTOBJ5T : 1
var volatile bit    C1FLTOBJ5T_EID15          at C1FLTOBJ5T : 2
var volatile bit    C1FLTOBJ5T_EID16          at C1FLTOBJ5T : 3
var volatile bit    C1FLTOBJ5T_EID17          at C1FLTOBJ5T : 4
-- ------------------------------------------------
var volatile dword  C1MASK5                   at { 0x1B8 }
-- ------------------------------------------------
var volatile byte   C1MASK5L                  at { 0x1B8 }
var volatile bit    C1MASK5L_MSID0            at C1MASK5L : 0
var volatile bit    C1MASK5L_MSID1            at C1MASK5L : 1
var volatile bit    C1MASK5L_MSID2            at C1MASK5L : 2
var volatile bit    C1MASK5L_MSID3            at C1MASK5L : 3
var volatile bit    C1MASK5L_MSID4            at C1MASK5L : 4
var volatile bit    C1MASK5L_MSID5            at C1MASK5L : 5
var volatile bit    C1MASK5L_MSID6            at C1MASK5L : 6
var volatile bit    C1MASK5L_MSID7            at C1MASK5L : 7
-- ------------------------------------------------
var volatile byte   C1MASK5H                  at { 0x1B9 }
var volatile bit*3  C1MASK5H_MSID             at C1MASK5H : 0
var volatile bit*5  C1MASK5H_MEID             at C1MASK5H : 3
var volatile bit    C1MASK5H_MSID8            at C1MASK5H : 0
var volatile bit    C1MASK5H_MSID9            at C1MASK5H : 1
var volatile bit    C1MASK5H_MSID10           at C1MASK5H : 2
var volatile bit    C1MASK5H_MEID0            at C1MASK5H : 3
var volatile bit    C1MASK5H_MEID1            at C1MASK5H : 4
var volatile bit    C1MASK5H_MEID2            at C1MASK5H : 5
var volatile bit    C1MASK5H_MEID3            at C1MASK5H : 6
var volatile bit    C1MASK5H_MEID4            at C1MASK5H : 7
-- ------------------------------------------------
var volatile byte   C1MASK5U                  at { 0x1BA }
var volatile bit    C1MASK5U_MEID5            at C1MASK5U : 0
var volatile bit    C1MASK5U_MEID6            at C1MASK5U : 1
var volatile bit    C1MASK5U_MEID7            at C1MASK5U : 2
var volatile bit    C1MASK5U_MEID8            at C1MASK5U : 3
var volatile bit    C1MASK5U_MEID9            at C1MASK5U : 4
var volatile bit    C1MASK5U_MEID10           at C1MASK5U : 5
var volatile bit    C1MASK5U_MEID11           at C1MASK5U : 6
var volatile bit    C1MASK5U_MEID12           at C1MASK5U : 7
-- ------------------------------------------------
var volatile byte   C1MASK5T                  at { 0x1BB }
var volatile bit*5  C1MASK5T_MEID             at C1MASK5T : 0
var volatile bit    C1MASK5T_MSID11           at C1MASK5T : 5
var volatile bit    C1MASK5T_MIDE             at C1MASK5T : 6
var volatile bit    C1MASK5T_MEID13           at C1MASK5T : 0
var volatile bit    C1MASK5T_MEID14           at C1MASK5T : 1
var volatile bit    C1MASK5T_MEID15           at C1MASK5T : 2
var volatile bit    C1MASK5T_MEID16           at C1MASK5T : 3
var volatile bit    C1MASK5T_MEID17           at C1MASK5T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ6                 at { 0x1BC }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ6L                at { 0x1BC }
var volatile bit    C1FLTOBJ6L_SID0           at C1FLTOBJ6L : 0
var volatile bit    C1FLTOBJ6L_SID1           at C1FLTOBJ6L : 1
var volatile bit    C1FLTOBJ6L_SID2           at C1FLTOBJ6L : 2
var volatile bit    C1FLTOBJ6L_SID3           at C1FLTOBJ6L : 3
var volatile bit    C1FLTOBJ6L_SID4           at C1FLTOBJ6L : 4
var volatile bit    C1FLTOBJ6L_SID5           at C1FLTOBJ6L : 5
var volatile bit    C1FLTOBJ6L_SID6           at C1FLTOBJ6L : 6
var volatile bit    C1FLTOBJ6L_SID7           at C1FLTOBJ6L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ6H                at { 0x1BD }
var volatile bit*3  C1FLTOBJ6H_SID            at C1FLTOBJ6H : 0
var volatile bit*5  C1FLTOBJ6H_EID            at C1FLTOBJ6H : 3
var volatile bit    C1FLTOBJ6H_SID8           at C1FLTOBJ6H : 0
var volatile bit    C1FLTOBJ6H_SID9           at C1FLTOBJ6H : 1
var volatile bit    C1FLTOBJ6H_SID10          at C1FLTOBJ6H : 2
var volatile bit    C1FLTOBJ6H_EID0           at C1FLTOBJ6H : 3
var volatile bit    C1FLTOBJ6H_EID1           at C1FLTOBJ6H : 4
var volatile bit    C1FLTOBJ6H_EID2           at C1FLTOBJ6H : 5
var volatile bit    C1FLTOBJ6H_EID3           at C1FLTOBJ6H : 6
var volatile bit    C1FLTOBJ6H_EID4           at C1FLTOBJ6H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ6U                at { 0x1BE }
var volatile bit    C1FLTOBJ6U_EID5           at C1FLTOBJ6U : 0
var volatile bit    C1FLTOBJ6U_EID6           at C1FLTOBJ6U : 1
var volatile bit    C1FLTOBJ6U_EID7           at C1FLTOBJ6U : 2
var volatile bit    C1FLTOBJ6U_EID8           at C1FLTOBJ6U : 3
var volatile bit    C1FLTOBJ6U_EID9           at C1FLTOBJ6U : 4
var volatile bit    C1FLTOBJ6U_EID10          at C1FLTOBJ6U : 5
var volatile bit    C1FLTOBJ6U_EID11          at C1FLTOBJ6U : 6
var volatile bit    C1FLTOBJ6U_EID12          at C1FLTOBJ6U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ6T                at { 0x1BF }
var volatile bit*5  C1FLTOBJ6T_EID            at C1FLTOBJ6T : 0
var volatile bit    C1FLTOBJ6T_SID11          at C1FLTOBJ6T : 5
var volatile bit    C1FLTOBJ6T_EXIDE          at C1FLTOBJ6T : 6
var volatile bit    C1FLTOBJ6T_EID13          at C1FLTOBJ6T : 0
var volatile bit    C1FLTOBJ6T_EID14          at C1FLTOBJ6T : 1
var volatile bit    C1FLTOBJ6T_EID15          at C1FLTOBJ6T : 2
var volatile bit    C1FLTOBJ6T_EID16          at C1FLTOBJ6T : 3
var volatile bit    C1FLTOBJ6T_EID17          at C1FLTOBJ6T : 4
-- ------------------------------------------------
var volatile dword  C1MASK6                   at { 0x1C0 }
-- ------------------------------------------------
var volatile byte   C1MASK6L                  at { 0x1C0 }
var volatile bit    C1MASK6L_MSID0            at C1MASK6L : 0
var volatile bit    C1MASK6L_MSID1            at C1MASK6L : 1
var volatile bit    C1MASK6L_MSID2            at C1MASK6L : 2
var volatile bit    C1MASK6L_MSID3            at C1MASK6L : 3
var volatile bit    C1MASK6L_MSID4            at C1MASK6L : 4
var volatile bit    C1MASK6L_MSID5            at C1MASK6L : 5
var volatile bit    C1MASK6L_MSID6            at C1MASK6L : 6
var volatile bit    C1MASK6L_MSID7            at C1MASK6L : 7
-- ------------------------------------------------
var volatile byte   C1MASK6H                  at { 0x1C1 }
var volatile bit*3  C1MASK6H_MSID             at C1MASK6H : 0
var volatile bit*5  C1MASK6H_MEID             at C1MASK6H : 3
var volatile bit    C1MASK6H_MSID8            at C1MASK6H : 0
var volatile bit    C1MASK6H_MSID9            at C1MASK6H : 1
var volatile bit    C1MASK6H_MSID10           at C1MASK6H : 2
var volatile bit    C1MASK6H_MEID0            at C1MASK6H : 3
var volatile bit    C1MASK6H_MEID1            at C1MASK6H : 4
var volatile bit    C1MASK6H_MEID2            at C1MASK6H : 5
var volatile bit    C1MASK6H_MEID3            at C1MASK6H : 6
var volatile bit    C1MASK6H_MEID4            at C1MASK6H : 7
-- ------------------------------------------------
var volatile byte   C1MASK6U                  at { 0x1C2 }
var volatile bit    C1MASK6U_MEID5            at C1MASK6U : 0
var volatile bit    C1MASK6U_MEID6            at C1MASK6U : 1
var volatile bit    C1MASK6U_MEID7            at C1MASK6U : 2
var volatile bit    C1MASK6U_MEID8            at C1MASK6U : 3
var volatile bit    C1MASK6U_MEID9            at C1MASK6U : 4
var volatile bit    C1MASK6U_MEID10           at C1MASK6U : 5
var volatile bit    C1MASK6U_MEID11           at C1MASK6U : 6
var volatile bit    C1MASK6U_MEID12           at C1MASK6U : 7
-- ------------------------------------------------
var volatile byte   C1MASK6T                  at { 0x1C3 }
var volatile bit*5  C1MASK6T_MEID             at C1MASK6T : 0
var volatile bit    C1MASK6T_MSID11           at C1MASK6T : 5
var volatile bit    C1MASK6T_MIDE             at C1MASK6T : 6
var volatile bit    C1MASK6T_MEID13           at C1MASK6T : 0
var volatile bit    C1MASK6T_MEID14           at C1MASK6T : 1
var volatile bit    C1MASK6T_MEID15           at C1MASK6T : 2
var volatile bit    C1MASK6T_MEID16           at C1MASK6T : 3
var volatile bit    C1MASK6T_MEID17           at C1MASK6T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ7                 at { 0x1C4 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ7L                at { 0x1C4 }
var volatile bit    C1FLTOBJ7L_SID0           at C1FLTOBJ7L : 0
var volatile bit    C1FLTOBJ7L_SID1           at C1FLTOBJ7L : 1
var volatile bit    C1FLTOBJ7L_SID2           at C1FLTOBJ7L : 2
var volatile bit    C1FLTOBJ7L_SID3           at C1FLTOBJ7L : 3
var volatile bit    C1FLTOBJ7L_SID4           at C1FLTOBJ7L : 4
var volatile bit    C1FLTOBJ7L_SID5           at C1FLTOBJ7L : 5
var volatile bit    C1FLTOBJ7L_SID6           at C1FLTOBJ7L : 6
var volatile bit    C1FLTOBJ7L_SID7           at C1FLTOBJ7L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ7H                at { 0x1C5 }
var volatile bit*3  C1FLTOBJ7H_SID            at C1FLTOBJ7H : 0
var volatile bit*5  C1FLTOBJ7H_EID            at C1FLTOBJ7H : 3
var volatile bit    C1FLTOBJ7H_SID8           at C1FLTOBJ7H : 0
var volatile bit    C1FLTOBJ7H_SID9           at C1FLTOBJ7H : 1
var volatile bit    C1FLTOBJ7H_SID10          at C1FLTOBJ7H : 2
var volatile bit    C1FLTOBJ7H_EID0           at C1FLTOBJ7H : 3
var volatile bit    C1FLTOBJ7H_EID1           at C1FLTOBJ7H : 4
var volatile bit    C1FLTOBJ7H_EID2           at C1FLTOBJ7H : 5
var volatile bit    C1FLTOBJ7H_EID3           at C1FLTOBJ7H : 6
var volatile bit    C1FLTOBJ7H_EID4           at C1FLTOBJ7H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ7U                at { 0x1C6 }
var volatile bit    C1FLTOBJ7U_EID5           at C1FLTOBJ7U : 0
var volatile bit    C1FLTOBJ7U_EID6           at C1FLTOBJ7U : 1
var volatile bit    C1FLTOBJ7U_EID7           at C1FLTOBJ7U : 2
var volatile bit    C1FLTOBJ7U_EID8           at C1FLTOBJ7U : 3
var volatile bit    C1FLTOBJ7U_EID9           at C1FLTOBJ7U : 4
var volatile bit    C1FLTOBJ7U_EID10          at C1FLTOBJ7U : 5
var volatile bit    C1FLTOBJ7U_EID11          at C1FLTOBJ7U : 6
var volatile bit    C1FLTOBJ7U_EID12          at C1FLTOBJ7U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ7T                at { 0x1C7 }
var volatile bit*5  C1FLTOBJ7T_EID            at C1FLTOBJ7T : 0
var volatile bit    C1FLTOBJ7T_SID11          at C1FLTOBJ7T : 5
var volatile bit    C1FLTOBJ7T_EXIDE          at C1FLTOBJ7T : 6
var volatile bit    C1FLTOBJ7T_EID13          at C1FLTOBJ7T : 0
var volatile bit    C1FLTOBJ7T_EID14          at C1FLTOBJ7T : 1
var volatile bit    C1FLTOBJ7T_EID15          at C1FLTOBJ7T : 2
var volatile bit    C1FLTOBJ7T_EID16          at C1FLTOBJ7T : 3
var volatile bit    C1FLTOBJ7T_EID17          at C1FLTOBJ7T : 4
-- ------------------------------------------------
var volatile dword  C1MASK7                   at { 0x1C8 }
-- ------------------------------------------------
var volatile byte   C1MASK7L                  at { 0x1C8 }
var volatile bit    C1MASK7L_MSID0            at C1MASK7L : 0
var volatile bit    C1MASK7L_MSID1            at C1MASK7L : 1
var volatile bit    C1MASK7L_MSID2            at C1MASK7L : 2
var volatile bit    C1MASK7L_MSID3            at C1MASK7L : 3
var volatile bit    C1MASK7L_MSID4            at C1MASK7L : 4
var volatile bit    C1MASK7L_MSID5            at C1MASK7L : 5
var volatile bit    C1MASK7L_MSID6            at C1MASK7L : 6
var volatile bit    C1MASK7L_MSID7            at C1MASK7L : 7
-- ------------------------------------------------
var volatile byte   C1MASK7H                  at { 0x1C9 }
var volatile bit*3  C1MASK7H_MSID             at C1MASK7H : 0
var volatile bit*5  C1MASK7H_MEID             at C1MASK7H : 3
var volatile bit    C1MASK7H_MSID8            at C1MASK7H : 0
var volatile bit    C1MASK7H_MSID9            at C1MASK7H : 1
var volatile bit    C1MASK7H_MSID10           at C1MASK7H : 2
var volatile bit    C1MASK7H_MEID0            at C1MASK7H : 3
var volatile bit    C1MASK7H_MEID1            at C1MASK7H : 4
var volatile bit    C1MASK7H_MEID2            at C1MASK7H : 5
var volatile bit    C1MASK7H_MEID3            at C1MASK7H : 6
var volatile bit    C1MASK7H_MEID4            at C1MASK7H : 7
-- ------------------------------------------------
var volatile byte   C1MASK7U                  at { 0x1CA }
var volatile bit    C1MASK7U_MEID5            at C1MASK7U : 0
var volatile bit    C1MASK7U_MEID6            at C1MASK7U : 1
var volatile bit    C1MASK7U_MEID7            at C1MASK7U : 2
var volatile bit    C1MASK7U_MEID8            at C1MASK7U : 3
var volatile bit    C1MASK7U_MEID9            at C1MASK7U : 4
var volatile bit    C1MASK7U_MEID10           at C1MASK7U : 5
var volatile bit    C1MASK7U_MEID11           at C1MASK7U : 6
var volatile bit    C1MASK7U_MEID12           at C1MASK7U : 7
-- ------------------------------------------------
var volatile byte   C1MASK7T                  at { 0x1CB }
var volatile bit*5  C1MASK7T_MEID             at C1MASK7T : 0
var volatile bit    C1MASK7T_MSID11           at C1MASK7T : 5
var volatile bit    C1MASK7T_MIDE             at C1MASK7T : 6
var volatile bit    C1MASK7T_MEID13           at C1MASK7T : 0
var volatile bit    C1MASK7T_MEID14           at C1MASK7T : 1
var volatile bit    C1MASK7T_MEID15           at C1MASK7T : 2
var volatile bit    C1MASK7T_MEID16           at C1MASK7T : 3
var volatile bit    C1MASK7T_MEID17           at C1MASK7T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ8                 at { 0x1CC }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ8L                at { 0x1CC }
var volatile bit    C1FLTOBJ8L_SID0           at C1FLTOBJ8L : 0
var volatile bit    C1FLTOBJ8L_SID1           at C1FLTOBJ8L : 1
var volatile bit    C1FLTOBJ8L_SID2           at C1FLTOBJ8L : 2
var volatile bit    C1FLTOBJ8L_SID3           at C1FLTOBJ8L : 3
var volatile bit    C1FLTOBJ8L_SID4           at C1FLTOBJ8L : 4
var volatile bit    C1FLTOBJ8L_SID5           at C1FLTOBJ8L : 5
var volatile bit    C1FLTOBJ8L_SID6           at C1FLTOBJ8L : 6
var volatile bit    C1FLTOBJ8L_SID7           at C1FLTOBJ8L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ8H                at { 0x1CD }
var volatile bit*3  C1FLTOBJ8H_SID            at C1FLTOBJ8H : 0
var volatile bit*5  C1FLTOBJ8H_EID            at C1FLTOBJ8H : 3
var volatile bit    C1FLTOBJ8H_SID8           at C1FLTOBJ8H : 0
var volatile bit    C1FLTOBJ8H_SID9           at C1FLTOBJ8H : 1
var volatile bit    C1FLTOBJ8H_SID10          at C1FLTOBJ8H : 2
var volatile bit    C1FLTOBJ8H_EID0           at C1FLTOBJ8H : 3
var volatile bit    C1FLTOBJ8H_EID1           at C1FLTOBJ8H : 4
var volatile bit    C1FLTOBJ8H_EID2           at C1FLTOBJ8H : 5
var volatile bit    C1FLTOBJ8H_EID3           at C1FLTOBJ8H : 6
var volatile bit    C1FLTOBJ8H_EID4           at C1FLTOBJ8H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ8U                at { 0x1CE }
var volatile bit    C1FLTOBJ8U_EID5           at C1FLTOBJ8U : 0
var volatile bit    C1FLTOBJ8U_EID6           at C1FLTOBJ8U : 1
var volatile bit    C1FLTOBJ8U_EID7           at C1FLTOBJ8U : 2
var volatile bit    C1FLTOBJ8U_EID8           at C1FLTOBJ8U : 3
var volatile bit    C1FLTOBJ8U_EID9           at C1FLTOBJ8U : 4
var volatile bit    C1FLTOBJ8U_EID10          at C1FLTOBJ8U : 5
var volatile bit    C1FLTOBJ8U_EID11          at C1FLTOBJ8U : 6
var volatile bit    C1FLTOBJ8U_EID12          at C1FLTOBJ8U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ8T                at { 0x1CF }
var volatile bit*5  C1FLTOBJ8T_EID            at C1FLTOBJ8T : 0
var volatile bit    C1FLTOBJ8T_SID11          at C1FLTOBJ8T : 5
var volatile bit    C1FLTOBJ8T_EXIDE          at C1FLTOBJ8T : 6
var volatile bit    C1FLTOBJ8T_EID13          at C1FLTOBJ8T : 0
var volatile bit    C1FLTOBJ8T_EID14          at C1FLTOBJ8T : 1
var volatile bit    C1FLTOBJ8T_EID15          at C1FLTOBJ8T : 2
var volatile bit    C1FLTOBJ8T_EID16          at C1FLTOBJ8T : 3
var volatile bit    C1FLTOBJ8T_EID17          at C1FLTOBJ8T : 4
-- ------------------------------------------------
var volatile dword  C1MASK8                   at { 0x1D0 }
-- ------------------------------------------------
var volatile byte   C1MASK8L                  at { 0x1D0 }
var volatile bit    C1MASK8L_MSID0            at C1MASK8L : 0
var volatile bit    C1MASK8L_MSID1            at C1MASK8L : 1
var volatile bit    C1MASK8L_MSID2            at C1MASK8L : 2
var volatile bit    C1MASK8L_MSID3            at C1MASK8L : 3
var volatile bit    C1MASK8L_MSID4            at C1MASK8L : 4
var volatile bit    C1MASK8L_MSID5            at C1MASK8L : 5
var volatile bit    C1MASK8L_MSID6            at C1MASK8L : 6
var volatile bit    C1MASK8L_MSID7            at C1MASK8L : 7
-- ------------------------------------------------
var volatile byte   C1MASK8H                  at { 0x1D1 }
var volatile bit*3  C1MASK8H_MSID             at C1MASK8H : 0
var volatile bit*5  C1MASK8H_MEID             at C1MASK8H : 3
var volatile bit    C1MASK8H_MSID8            at C1MASK8H : 0
var volatile bit    C1MASK8H_MSID9            at C1MASK8H : 1
var volatile bit    C1MASK8H_MSID10           at C1MASK8H : 2
var volatile bit    C1MASK8H_MEID0            at C1MASK8H : 3
var volatile bit    C1MASK8H_MEID1            at C1MASK8H : 4
var volatile bit    C1MASK8H_MEID2            at C1MASK8H : 5
var volatile bit    C1MASK8H_MEID3            at C1MASK8H : 6
var volatile bit    C1MASK8H_MEID4            at C1MASK8H : 7
-- ------------------------------------------------
var volatile byte   C1MASK8U                  at { 0x1D2 }
var volatile bit    C1MASK8U_MEID5            at C1MASK8U : 0
var volatile bit    C1MASK8U_MEID6            at C1MASK8U : 1
var volatile bit    C1MASK8U_MEID7            at C1MASK8U : 2
var volatile bit    C1MASK8U_MEID8            at C1MASK8U : 3
var volatile bit    C1MASK8U_MEID9            at C1MASK8U : 4
var volatile bit    C1MASK8U_MEID10           at C1MASK8U : 5
var volatile bit    C1MASK8U_MEID11           at C1MASK8U : 6
var volatile bit    C1MASK8U_MEID12           at C1MASK8U : 7
-- ------------------------------------------------
var volatile byte   C1MASK8T                  at { 0x1D3 }
var volatile bit*5  C1MASK8T_MEID             at C1MASK8T : 0
var volatile bit    C1MASK8T_MSID11           at C1MASK8T : 5
var volatile bit    C1MASK8T_MIDE             at C1MASK8T : 6
var volatile bit    C1MASK8T_MEID13           at C1MASK8T : 0
var volatile bit    C1MASK8T_MEID14           at C1MASK8T : 1
var volatile bit    C1MASK8T_MEID15           at C1MASK8T : 2
var volatile bit    C1MASK8T_MEID16           at C1MASK8T : 3
var volatile bit    C1MASK8T_MEID17           at C1MASK8T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ9                 at { 0x1D4 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ9L                at { 0x1D4 }
var volatile bit    C1FLTOBJ9L_SID0           at C1FLTOBJ9L : 0
var volatile bit    C1FLTOBJ9L_SID1           at C1FLTOBJ9L : 1
var volatile bit    C1FLTOBJ9L_SID2           at C1FLTOBJ9L : 2
var volatile bit    C1FLTOBJ9L_SID3           at C1FLTOBJ9L : 3
var volatile bit    C1FLTOBJ9L_SID4           at C1FLTOBJ9L : 4
var volatile bit    C1FLTOBJ9L_SID5           at C1FLTOBJ9L : 5
var volatile bit    C1FLTOBJ9L_SID6           at C1FLTOBJ9L : 6
var volatile bit    C1FLTOBJ9L_SID7           at C1FLTOBJ9L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ9H                at { 0x1D5 }
var volatile bit*3  C1FLTOBJ9H_SID            at C1FLTOBJ9H : 0
var volatile bit*5  C1FLTOBJ9H_EID            at C1FLTOBJ9H : 3
var volatile bit    C1FLTOBJ9H_SID8           at C1FLTOBJ9H : 0
var volatile bit    C1FLTOBJ9H_SID9           at C1FLTOBJ9H : 1
var volatile bit    C1FLTOBJ9H_SID10          at C1FLTOBJ9H : 2
var volatile bit    C1FLTOBJ9H_EID0           at C1FLTOBJ9H : 3
var volatile bit    C1FLTOBJ9H_EID1           at C1FLTOBJ9H : 4
var volatile bit    C1FLTOBJ9H_EID2           at C1FLTOBJ9H : 5
var volatile bit    C1FLTOBJ9H_EID3           at C1FLTOBJ9H : 6
var volatile bit    C1FLTOBJ9H_EID4           at C1FLTOBJ9H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ9U                at { 0x1D6 }
var volatile bit    C1FLTOBJ9U_EID5           at C1FLTOBJ9U : 0
var volatile bit    C1FLTOBJ9U_EID6           at C1FLTOBJ9U : 1
var volatile bit    C1FLTOBJ9U_EID7           at C1FLTOBJ9U : 2
var volatile bit    C1FLTOBJ9U_EID8           at C1FLTOBJ9U : 3
var volatile bit    C1FLTOBJ9U_EID9           at C1FLTOBJ9U : 4
var volatile bit    C1FLTOBJ9U_EID10          at C1FLTOBJ9U : 5
var volatile bit    C1FLTOBJ9U_EID11          at C1FLTOBJ9U : 6
var volatile bit    C1FLTOBJ9U_EID12          at C1FLTOBJ9U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ9T                at { 0x1D7 }
var volatile bit*5  C1FLTOBJ9T_EID            at C1FLTOBJ9T : 0
var volatile bit    C1FLTOBJ9T_SID11          at C1FLTOBJ9T : 5
var volatile bit    C1FLTOBJ9T_EXIDE          at C1FLTOBJ9T : 6
var volatile bit    C1FLTOBJ9T_EID13          at C1FLTOBJ9T : 0
var volatile bit    C1FLTOBJ9T_EID14          at C1FLTOBJ9T : 1
var volatile bit    C1FLTOBJ9T_EID15          at C1FLTOBJ9T : 2
var volatile bit    C1FLTOBJ9T_EID16          at C1FLTOBJ9T : 3
var volatile bit    C1FLTOBJ9T_EID17          at C1FLTOBJ9T : 4
-- ------------------------------------------------
var volatile dword  C1MASK9                   at { 0x1D8 }
-- ------------------------------------------------
var volatile byte   C1MASK9L                  at { 0x1D8 }
var volatile bit    C1MASK9L_MSID0            at C1MASK9L : 0
var volatile bit    C1MASK9L_MSID1            at C1MASK9L : 1
var volatile bit    C1MASK9L_MSID2            at C1MASK9L : 2
var volatile bit    C1MASK9L_MSID3            at C1MASK9L : 3
var volatile bit    C1MASK9L_MSID4            at C1MASK9L : 4
var volatile bit    C1MASK9L_MSID5            at C1MASK9L : 5
var volatile bit    C1MASK9L_MSID6            at C1MASK9L : 6
var volatile bit    C1MASK9L_MSID7            at C1MASK9L : 7
-- ------------------------------------------------
var volatile byte   C1MASK9H                  at { 0x1D9 }
var volatile bit*3  C1MASK9H_MSID             at C1MASK9H : 0
var volatile bit*5  C1MASK9H_MEID             at C1MASK9H : 3
var volatile bit    C1MASK9H_MSID8            at C1MASK9H : 0
var volatile bit    C1MASK9H_MSID9            at C1MASK9H : 1
var volatile bit    C1MASK9H_MSID10           at C1MASK9H : 2
var volatile bit    C1MASK9H_MEID0            at C1MASK9H : 3
var volatile bit    C1MASK9H_MEID1            at C1MASK9H : 4
var volatile bit    C1MASK9H_MEID2            at C1MASK9H : 5
var volatile bit    C1MASK9H_MEID3            at C1MASK9H : 6
var volatile bit    C1MASK9H_MEID4            at C1MASK9H : 7
-- ------------------------------------------------
var volatile byte   C1MASK9U                  at { 0x1DA }
var volatile bit    C1MASK9U_MEID5            at C1MASK9U : 0
var volatile bit    C1MASK9U_MEID6            at C1MASK9U : 1
var volatile bit    C1MASK9U_MEID7            at C1MASK9U : 2
var volatile bit    C1MASK9U_MEID8            at C1MASK9U : 3
var volatile bit    C1MASK9U_MEID9            at C1MASK9U : 4
var volatile bit    C1MASK9U_MEID10           at C1MASK9U : 5
var volatile bit    C1MASK9U_MEID11           at C1MASK9U : 6
var volatile bit    C1MASK9U_MEID12           at C1MASK9U : 7
-- ------------------------------------------------
var volatile byte   C1MASK9T                  at { 0x1DB }
var volatile bit*5  C1MASK9T_MEID             at C1MASK9T : 0
var volatile bit    C1MASK9T_MSID11           at C1MASK9T : 5
var volatile bit    C1MASK9T_MIDE             at C1MASK9T : 6
var volatile bit    C1MASK9T_MEID13           at C1MASK9T : 0
var volatile bit    C1MASK9T_MEID14           at C1MASK9T : 1
var volatile bit    C1MASK9T_MEID15           at C1MASK9T : 2
var volatile bit    C1MASK9T_MEID16           at C1MASK9T : 3
var volatile bit    C1MASK9T_MEID17           at C1MASK9T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ10                at { 0x1DC }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ10L               at { 0x1DC }
var volatile bit    C1FLTOBJ10L_SID0          at C1FLTOBJ10L : 0
var volatile bit    C1FLTOBJ10L_SID1          at C1FLTOBJ10L : 1
var volatile bit    C1FLTOBJ10L_SID2          at C1FLTOBJ10L : 2
var volatile bit    C1FLTOBJ10L_SID3          at C1FLTOBJ10L : 3
var volatile bit    C1FLTOBJ10L_SID4          at C1FLTOBJ10L : 4
var volatile bit    C1FLTOBJ10L_SID5          at C1FLTOBJ10L : 5
var volatile bit    C1FLTOBJ10L_SID6          at C1FLTOBJ10L : 6
var volatile bit    C1FLTOBJ10L_SID7          at C1FLTOBJ10L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ10H               at { 0x1DD }
var volatile bit*3  C1FLTOBJ10H_SID           at C1FLTOBJ10H : 0
var volatile bit*5  C1FLTOBJ10H_EID           at C1FLTOBJ10H : 3
var volatile bit    C1FLTOBJ10H_SID8          at C1FLTOBJ10H : 0
var volatile bit    C1FLTOBJ10H_SID9          at C1FLTOBJ10H : 1
var volatile bit    C1FLTOBJ10H_SID10         at C1FLTOBJ10H : 2
var volatile bit    C1FLTOBJ10H_EID0          at C1FLTOBJ10H : 3
var volatile bit    C1FLTOBJ10H_EID1          at C1FLTOBJ10H : 4
var volatile bit    C1FLTOBJ10H_EID2          at C1FLTOBJ10H : 5
var volatile bit    C1FLTOBJ10H_EID3          at C1FLTOBJ10H : 6
var volatile bit    C1FLTOBJ10H_EID4          at C1FLTOBJ10H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ10U               at { 0x1DE }
var volatile bit    C1FLTOBJ10U_EID5          at C1FLTOBJ10U : 0
var volatile bit    C1FLTOBJ10U_EID6          at C1FLTOBJ10U : 1
var volatile bit    C1FLTOBJ10U_EID7          at C1FLTOBJ10U : 2
var volatile bit    C1FLTOBJ10U_EID8          at C1FLTOBJ10U : 3
var volatile bit    C1FLTOBJ10U_EID9          at C1FLTOBJ10U : 4
var volatile bit    C1FLTOBJ10U_EID10         at C1FLTOBJ10U : 5
var volatile bit    C1FLTOBJ10U_EID11         at C1FLTOBJ10U : 6
var volatile bit    C1FLTOBJ10U_EID12         at C1FLTOBJ10U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ10T               at { 0x1DF }
var volatile bit*5  C1FLTOBJ10T_EID           at C1FLTOBJ10T : 0
var volatile bit    C1FLTOBJ10T_SID11         at C1FLTOBJ10T : 5
var volatile bit    C1FLTOBJ10T_EXIDE         at C1FLTOBJ10T : 6
var volatile bit    C1FLTOBJ10T_EID13         at C1FLTOBJ10T : 0
var volatile bit    C1FLTOBJ10T_EID14         at C1FLTOBJ10T : 1
var volatile bit    C1FLTOBJ10T_EID15         at C1FLTOBJ10T : 2
var volatile bit    C1FLTOBJ10T_EID16         at C1FLTOBJ10T : 3
var volatile bit    C1FLTOBJ10T_EID17         at C1FLTOBJ10T : 4
-- ------------------------------------------------
var volatile dword  C1MASK10                  at { 0x1E0 }
-- ------------------------------------------------
var volatile byte   C1MASK10L                 at { 0x1E0 }
var volatile bit    C1MASK10L_MSID0           at C1MASK10L : 0
var volatile bit    C1MASK10L_MSID1           at C1MASK10L : 1
var volatile bit    C1MASK10L_MSID2           at C1MASK10L : 2
var volatile bit    C1MASK10L_MSID3           at C1MASK10L : 3
var volatile bit    C1MASK10L_MSID4           at C1MASK10L : 4
var volatile bit    C1MASK10L_MSID5           at C1MASK10L : 5
var volatile bit    C1MASK10L_MSID6           at C1MASK10L : 6
var volatile bit    C1MASK10L_MSID7           at C1MASK10L : 7
-- ------------------------------------------------
var volatile byte   C1MASK10H                 at { 0x1E1 }
var volatile bit*3  C1MASK10H_MSID            at C1MASK10H : 0
var volatile bit*5  C1MASK10H_MEID            at C1MASK10H : 3
var volatile bit    C1MASK10H_MSID8           at C1MASK10H : 0
var volatile bit    C1MASK10H_MSID9           at C1MASK10H : 1
var volatile bit    C1MASK10H_MSID10          at C1MASK10H : 2
var volatile bit    C1MASK10H_MEID0           at C1MASK10H : 3
var volatile bit    C1MASK10H_MEID1           at C1MASK10H : 4
var volatile bit    C1MASK10H_MEID2           at C1MASK10H : 5
var volatile bit    C1MASK10H_MEID3           at C1MASK10H : 6
var volatile bit    C1MASK10H_MEID4           at C1MASK10H : 7
-- ------------------------------------------------
var volatile byte   C1MASK10U                 at { 0x1E2 }
var volatile bit    C1MASK10U_MEID5           at C1MASK10U : 0
var volatile bit    C1MASK10U_MEID6           at C1MASK10U : 1
var volatile bit    C1MASK10U_MEID7           at C1MASK10U : 2
var volatile bit    C1MASK10U_MEID8           at C1MASK10U : 3
var volatile bit    C1MASK10U_MEID9           at C1MASK10U : 4
var volatile bit    C1MASK10U_MEID10          at C1MASK10U : 5
var volatile bit    C1MASK10U_MEID11          at C1MASK10U : 6
var volatile bit    C1MASK10U_MEID12          at C1MASK10U : 7
-- ------------------------------------------------
var volatile byte   C1MASK10T                 at { 0x1E3 }
var volatile bit*5  C1MASK10T_MEID            at C1MASK10T : 0
var volatile bit    C1MASK10T_MSID11          at C1MASK10T : 5
var volatile bit    C1MASK10T_MIDE            at C1MASK10T : 6
var volatile bit    C1MASK10T_MEID13          at C1MASK10T : 0
var volatile bit    C1MASK10T_MEID14          at C1MASK10T : 1
var volatile bit    C1MASK10T_MEID15          at C1MASK10T : 2
var volatile bit    C1MASK10T_MEID16          at C1MASK10T : 3
var volatile bit    C1MASK10T_MEID17          at C1MASK10T : 4
-- ------------------------------------------------
var volatile dword  C1FLTOBJ11                at { 0x1E4 }
-- ------------------------------------------------
var volatile byte   C1FLTOBJ11L               at { 0x1E4 }
var volatile bit    C1FLTOBJ11L_SID0          at C1FLTOBJ11L : 0
var volatile bit    C1FLTOBJ11L_SID1          at C1FLTOBJ11L : 1
var volatile bit    C1FLTOBJ11L_SID2          at C1FLTOBJ11L : 2
var volatile bit    C1FLTOBJ11L_SID3          at C1FLTOBJ11L : 3
var volatile bit    C1FLTOBJ11L_SID4          at C1FLTOBJ11L : 4
var volatile bit    C1FLTOBJ11L_SID5          at C1FLTOBJ11L : 5
var volatile bit    C1FLTOBJ11L_SID6          at C1FLTOBJ11L : 6
var volatile bit    C1FLTOBJ11L_SID7          at C1FLTOBJ11L : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ11H               at { 0x1E5 }
var volatile bit*3  C1FLTOBJ11H_SID           at C1FLTOBJ11H : 0
var volatile bit*5  C1FLTOBJ11H_EID           at C1FLTOBJ11H : 3
var volatile bit    C1FLTOBJ11H_SID8          at C1FLTOBJ11H : 0
var volatile bit    C1FLTOBJ11H_SID9          at C1FLTOBJ11H : 1
var volatile bit    C1FLTOBJ11H_SID10         at C1FLTOBJ11H : 2
var volatile bit    C1FLTOBJ11H_EID0          at C1FLTOBJ11H : 3
var volatile bit    C1FLTOBJ11H_EID1          at C1FLTOBJ11H : 4
var volatile bit    C1FLTOBJ11H_EID2          at C1FLTOBJ11H : 5
var volatile bit    C1FLTOBJ11H_EID3          at C1FLTOBJ11H : 6
var volatile bit    C1FLTOBJ11H_EID4          at C1FLTOBJ11H : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ11U               at { 0x1E6 }
var volatile bit    C1FLTOBJ11U_EID5          at C1FLTOBJ11U : 0
var volatile bit    C1FLTOBJ11U_EID6          at C1FLTOBJ11U : 1
var volatile bit    C1FLTOBJ11U_EID7          at C1FLTOBJ11U : 2
var volatile bit    C1FLTOBJ11U_EID8          at C1FLTOBJ11U : 3
var volatile bit    C1FLTOBJ11U_EID9          at C1FLTOBJ11U : 4
var volatile bit    C1FLTOBJ11U_EID10         at C1FLTOBJ11U : 5
var volatile bit    C1FLTOBJ11U_EID11         at C1FLTOBJ11U : 6
var volatile bit    C1FLTOBJ11U_EID12         at C1FLTOBJ11U : 7
-- ------------------------------------------------
var volatile byte   C1FLTOBJ11T               at { 0x1E7 }
var volatile bit*5  C1FLTOBJ11T_EID           at C1FLTOBJ11T : 0
var volatile bit    C1FLTOBJ11T_SID11         at C1FLTOBJ11T : 5
var volatile bit    C1FLTOBJ11T_EXIDE         at C1FLTOBJ11T : 6
var volatile bit    C1FLTOBJ11T_EID13         at C1FLTOBJ11T : 0
var volatile bit    C1FLTOBJ11T_EID14         at C1FLTOBJ11T : 1
var volatile bit    C1FLTOBJ11T_EID15         at C1FLTOBJ11T : 2
var volatile bit    C1FLTOBJ11T_EID16         at C1FLTOBJ11T : 3
var volatile bit    C1FLTOBJ11T_EID17         at C1FLTOBJ11T : 4
-- ------------------------------------------------
var volatile dword  C1MASK11                  at { 0x1E8 }
-- ------------------------------------------------
var volatile byte   C1MASK11L                 at { 0x1E8 }
var volatile bit    C1MASK11L_MSID0           at C1MASK11L : 0
var volatile bit    C1MASK11L_MSID1           at C1MASK11L : 1
var volatile bit    C1MASK11L_MSID2           at C1MASK11L : 2
var volatile bit    C1MASK11L_MSID3           at C1MASK11L : 3
var volatile bit    C1MASK11L_MSID4           at C1MASK11L : 4
var volatile bit    C1MASK11L_MSID5           at C1MASK11L : 5
var volatile bit    C1MASK11L_MSID6           at C1MASK11L : 6
var volatile bit    C1MASK11L_MSID7           at C1MASK11L : 7
-- ------------------------------------------------
var volatile byte   C1MASK11H                 at { 0x1E9 }
var volatile bit*3  C1MASK11H_MSID            at C1MASK11H : 0
var volatile bit*5  C1MASK11H_MEID            at C1MASK11H : 3
var volatile bit    C1MASK11H_MSID8           at C1MASK11H : 0
var volatile bit    C1MASK11H_MSID9           at C1MASK11H : 1
var volatile bit    C1MASK11H_MSID10          at C1MASK11H : 2
var volatile bit    C1MASK11H_MEID0           at C1MASK11H : 3
var volatile bit    C1MASK11H_MEID1           at C1MASK11H : 4
var volatile bit    C1MASK11H_MEID2           at C1MASK11H : 5
var volatile bit    C1MASK11H_MEID3           at C1MASK11H : 6
var volatile bit    C1MASK11H_MEID4           at C1MASK11H : 7
-- ------------------------------------------------
var volatile byte   C1MASK11U                 at { 0x1EA }
var volatile bit    C1MASK11U_MEID5           at C1MASK11U : 0
var volatile bit    C1MASK11U_MEID6           at C1MASK11U : 1
var volatile bit    C1MASK11U_MEID7           at C1MASK11U : 2
var volatile bit    C1MASK11U_MEID8           at C1MASK11U : 3
var volatile bit    C1MASK11U_MEID9           at C1MASK11U : 4
var volatile bit    C1MASK11U_MEID10          at C1MASK11U : 5
var volatile bit    C1MASK11U_MEID11          at C1MASK11U : 6
var volatile bit    C1MASK11U_MEID12          at C1MASK11U : 7
-- ------------------------------------------------
var volatile byte   C1MASK11T                 at { 0x1EB }
var volatile bit*5  C1MASK11T_MEID            at C1MASK11T : 0
var volatile bit    C1MASK11T_MSID11          at C1MASK11T : 5
var volatile bit    C1MASK11T_MIDE            at C1MASK11T : 6
var volatile bit    C1MASK11T_MEID13          at C1MASK11T : 0
var volatile bit    C1MASK11T_MEID14          at C1MASK11T : 1
var volatile bit    C1MASK11T_MEID15          at C1MASK11T : 2
var volatile bit    C1MASK11T_MEID16          at C1MASK11T : 3
var volatile bit    C1MASK11T_MEID17          at C1MASK11T : 4
-- ------------------------------------------------
var volatile byte   PPSLOCK                   at { 0x200 }
var volatile bit    PPSLOCK_PPSLOCKED         at PPSLOCK : 0
-- ------------------------------------------------
var volatile byte   RA0PPS                    at { 0x201 }
-- ------------------------------------------------
var volatile byte   RA1PPS                    at { 0x202 }
-- ------------------------------------------------
var volatile byte   RA2PPS                    at { 0x203 }
-- ------------------------------------------------
var volatile byte   RA3PPS                    at { 0x204 }
-- ------------------------------------------------
var volatile byte   RA4PPS                    at { 0x205 }
-- ------------------------------------------------
var volatile byte   RA5PPS                    at { 0x206 }
-- ------------------------------------------------
var volatile byte   RA6PPS                    at { 0x207 }
-- ------------------------------------------------
var volatile byte   RA7PPS                    at { 0x208 }
-- ------------------------------------------------
var volatile byte   RB0PPS                    at { 0x209 }
-- ------------------------------------------------
var volatile byte   RB1PPS                    at { 0x20A }
-- ------------------------------------------------
var volatile byte   RB2PPS                    at { 0x20B }
-- ------------------------------------------------
var volatile byte   RB3PPS                    at { 0x20C }
-- ------------------------------------------------
var volatile byte   RB4PPS                    at { 0x20D }
-- ------------------------------------------------
var volatile byte   RB5PPS                    at { 0x20E }
-- ------------------------------------------------
var volatile byte   RB6PPS                    at { 0x20F }
-- ------------------------------------------------
var volatile byte   RB7PPS                    at { 0x210 }
-- ------------------------------------------------
var volatile byte   RC0PPS                    at { 0x211 }
-- ------------------------------------------------
var volatile byte   RC1PPS                    at { 0x212 }
-- ------------------------------------------------
var volatile byte   RC2PPS                    at { 0x213 }
-- ------------------------------------------------
var volatile byte   RC3PPS                    at { 0x214 }
-- ------------------------------------------------
var volatile byte   RC4PPS                    at { 0x215 }
-- ------------------------------------------------
var volatile byte   RC5PPS                    at { 0x216 }
-- ------------------------------------------------
var volatile byte   RC6PPS                    at { 0x217 }
-- ------------------------------------------------
var volatile byte   RC7PPS                    at { 0x218 }
-- ------------------------------------------------
var volatile byte   CANRXPPS                  at { 0x23D }
-- ------------------------------------------------
var volatile byte   INT0PPS                   at { 0x23E }
-- ------------------------------------------------
var volatile byte   INT1PPS                   at { 0x23F }
-- ------------------------------------------------
var volatile byte   INT2PPS                   at { 0x240 }
-- ------------------------------------------------
var volatile byte   T0CKIPPS                  at { 0x241 }
-- ------------------------------------------------
var volatile byte   T1CKIPPS                  at { 0x242 }
-- ------------------------------------------------
var volatile byte   T1GPPS                    at { 0x243 }
-- ------------------------------------------------
var volatile byte   T3CKIPPS                  at { 0x244 }
-- ------------------------------------------------
var volatile byte   T3GPPS                    at { 0x245 }
-- ------------------------------------------------
var volatile byte   T5CKIPPS                  at { 0x246 }
-- ------------------------------------------------
var volatile byte   T5GPPS                    at { 0x247 }
-- ------------------------------------------------
var volatile byte   T2INPPS                   at { 0x248 }
-- ------------------------------------------------
var volatile byte   T4INPPS                   at { 0x249 }
-- ------------------------------------------------
var volatile byte   T6INPPS                   at { 0x24A }
-- ------------------------------------------------
var volatile byte   TUIN0PPS                  at { 0x24B }
-- ------------------------------------------------
var volatile byte   TUIN1PPS                  at { 0x24C }
-- ------------------------------------------------
var volatile byte   CCP1PPS                   at { 0x24F }
-- ------------------------------------------------
var volatile byte   CCP2PPS                   at { 0x250 }
-- ------------------------------------------------
var volatile byte   CCP3PPS                   at { 0x251 }
-- ------------------------------------------------
var volatile byte   PWM1ERSPPS                at { 0x253 }
-- ------------------------------------------------
var volatile byte   PWM2ERSPPS                at { 0x254 }
-- ------------------------------------------------
var volatile byte   PWM3ERSPPS                at { 0x255 }
-- ------------------------------------------------
var volatile byte   PWM4ERSPPS                at { 0x256 }
-- ------------------------------------------------
var volatile byte   PWMIN0PPS                 at { 0x257 }
-- ------------------------------------------------
var volatile byte   PWMIN1PPS                 at { 0x258 }
-- ------------------------------------------------
var volatile byte   SMT1WINPPS                at { 0x259 }
-- ------------------------------------------------
var volatile byte   SMT1SIGPPS                at { 0x25A }
-- ------------------------------------------------
var volatile byte   CWG1PPS                   at { 0x25B }
-- ------------------------------------------------
var volatile byte   CWG2PPS                   at { 0x25C }
-- ------------------------------------------------
var volatile byte   CWG3PPS                   at { 0x25D }
-- ------------------------------------------------
var volatile byte   MD1CARLPPS                at { 0x25E }
-- ------------------------------------------------
var volatile byte   MD1CARHPPS                at { 0x25F }
-- ------------------------------------------------
var volatile byte   MD1SRCPPS                 at { 0x260 }
-- ------------------------------------------------
var volatile byte   CLCIN0PPS                 at { 0x261 }
-- ------------------------------------------------
var volatile byte   CLCIN1PPS                 at { 0x262 }
-- ------------------------------------------------
var volatile byte   CLCIN2PPS                 at { 0x263 }
-- ------------------------------------------------
var volatile byte   CLCIN3PPS                 at { 0x264 }
-- ------------------------------------------------
var volatile byte   CLCIN4PPS                 at { 0x265 }
-- ------------------------------------------------
var volatile byte   CLCIN5PPS                 at { 0x266 }
-- ------------------------------------------------
var volatile byte   CLCIN6PPS                 at { 0x267 }
-- ------------------------------------------------
var volatile byte   CLCIN7PPS                 at { 0x268 }
-- ------------------------------------------------
var volatile byte   ADACTPPS                  at { 0x269 }
-- ------------------------------------------------
var volatile byte   SPI1SCKPPS                at { 0x26A }
-- ------------------------------------------------
var volatile byte   SPI1SDIPPS                at { 0x26B }
-- ------------------------------------------------
var volatile byte   SPI1SSPPS                 at { 0x26C }
-- ------------------------------------------------
var volatile byte   SPI2SCKPPS                at { 0x26D }
-- ------------------------------------------------
var volatile byte   SPI2SDIPPS                at { 0x26E }
-- ------------------------------------------------
var volatile byte   SPI2SSPPS                 at { 0x26F }
-- ------------------------------------------------
var volatile byte   I2C1SDAPPS                at { 0x270 }
-- ------------------------------------------------
var volatile byte   I2C1SCLPPS                at { 0x271 }
-- ------------------------------------------------
var volatile byte   U1RXPPS                   at { 0x272 }
-- ------------------------------------------------
var volatile byte   U1CTSPPS                  at { 0x273 }
-- ------------------------------------------------
var volatile byte   U2RXPPS                   at { 0x274 }
-- ------------------------------------------------
var volatile byte   U2CTSPPS                  at { 0x275 }
-- ------------------------------------------------
var volatile byte   U3RXPPS                   at { 0x276 }
-- ------------------------------------------------
var volatile byte   U3CTSPPS                  at { 0x277 }
-- ------------------------------------------------
var volatile byte   U4RXPPS                   at { 0x278 }
-- ------------------------------------------------
var volatile byte   U4CTSPPS                  at { 0x279 }
-- ------------------------------------------------
var volatile byte   U5RXPPS                   at { 0x27A }
-- ------------------------------------------------
var volatile byte   U5CTSPPS                  at { 0x27B }
-- ------------------------------------------------
var volatile byte   RC4I2C                    at { 0x286 }
var volatile bit*2  RC4I2C_TH                 at RC4I2C : 0
var volatile bit*2  RC4I2C_PU                 at RC4I2C : 4
var volatile bit*2  RC4I2C_SLEW               at RC4I2C : 6
var volatile bit    RC4I2C_TH0                at RC4I2C : 0
var volatile bit    RC4I2C_TH1                at RC4I2C : 1
var volatile bit    RC4I2C_PU0                at RC4I2C : 4
var volatile bit    RC4I2C_PU1                at RC4I2C : 5
var volatile bit    RC4I2C_SLEW0              at RC4I2C : 6
var volatile bit    RC4I2C_SLEW1              at RC4I2C : 7
var volatile bit*2  RC4I2C_I2CTH              at RC4I2C : 0
var volatile bit*2  RC4I2C_I2CPU              at RC4I2C : 4
var volatile bit*2  RC4I2C_I2CSLEW            at RC4I2C : 6
var volatile bit    RC4I2C_I2CTH0             at RC4I2C : 0
var volatile bit    RC4I2C_I2CTH1             at RC4I2C : 1
var volatile bit    RC4I2C_I2CPU0             at RC4I2C : 4
var volatile bit    RC4I2C_I2CPU1             at RC4I2C : 5
var volatile bit    RC4I2C_I2CSLEW0           at RC4I2C : 6
var volatile bit    RC4I2C_I2CSLEW1           at RC4I2C : 7
-- ------------------------------------------------
var volatile byte   RC3I2C                    at { 0x287 }
var volatile bit*2  RC3I2C_TH                 at RC3I2C : 0
var volatile bit*2  RC3I2C_PU                 at RC3I2C : 4
var volatile bit*2  RC3I2C_SLEW               at RC3I2C : 6
var volatile bit    RC3I2C_TH0                at RC3I2C : 0
var volatile bit    RC3I2C_TH1                at RC3I2C : 1
var volatile bit    RC3I2C_PU0                at RC3I2C : 4
var volatile bit    RC3I2C_PU1                at RC3I2C : 5
var volatile bit    RC3I2C_SLEW0              at RC3I2C : 6
var volatile bit    RC3I2C_SLEW1              at RC3I2C : 7
var volatile bit*2  RC3I2C_I2CTH              at RC3I2C : 0
var volatile bit*2  RC3I2C_I2CPU              at RC3I2C : 4
var volatile bit*2  RC3I2C_I2CSLEW            at RC3I2C : 6
var volatile bit    RC3I2C_I2CTH0             at RC3I2C : 0
var volatile bit    RC3I2C_I2CTH1             at RC3I2C : 1
var volatile bit    RC3I2C_I2CPU0             at RC3I2C : 4
var volatile bit    RC3I2C_I2CPU1             at RC3I2C : 5
var volatile bit    RC3I2C_I2CSLEW0           at RC3I2C : 6
var volatile bit    RC3I2C_I2CSLEW1           at RC3I2C : 7
-- ------------------------------------------------
var volatile byte   RB2I2C                    at { 0x288 }
var volatile bit*2  RB2I2C_TH                 at RB2I2C : 0
var volatile bit*2  RB2I2C_PU                 at RB2I2C : 4
var volatile bit*2  RB2I2C_SLEW               at RB2I2C : 6
var volatile bit    RB2I2C_TH0                at RB2I2C : 0
var volatile bit    RB2I2C_TH1                at RB2I2C : 1
var volatile bit    RB2I2C_PU0                at RB2I2C : 4
var volatile bit    RB2I2C_PU1                at RB2I2C : 5
var volatile bit    RB2I2C_SLEW0              at RB2I2C : 6
var volatile bit    RB2I2C_SLEW1              at RB2I2C : 7
var volatile bit*2  RB2I2C_I2CTH              at RB2I2C : 0
var volatile bit*2  RB2I2C_I2CPU              at RB2I2C : 4
var volatile bit*2  RB2I2C_I2CSLEW            at RB2I2C : 6
var volatile bit    RB2I2C_I2CTH0             at RB2I2C : 0
var volatile bit    RB2I2C_I2CTH1             at RB2I2C : 1
var volatile bit    RB2I2C_I2CPU0             at RB2I2C : 4
var volatile bit    RB2I2C_I2CPU1             at RB2I2C : 5
var volatile bit    RB2I2C_I2CSLEW0           at RB2I2C : 6
var volatile bit    RB2I2C_I2CSLEW1           at RB2I2C : 7
-- ------------------------------------------------
var volatile byte   RB1I2C                    at { 0x289 }
var volatile bit*2  RB1I2C_TH                 at RB1I2C : 0
var volatile bit*2  RB1I2C_PU                 at RB1I2C : 4
var volatile bit*2  RB1I2C_SLEW               at RB1I2C : 6
var volatile bit    RB1I2C_TH0                at RB1I2C : 0
var volatile bit    RB1I2C_TH1                at RB1I2C : 1
var volatile bit    RB1I2C_PU0                at RB1I2C : 4
var volatile bit    RB1I2C_PU1                at RB1I2C : 5
var volatile bit    RB1I2C_SLEW0              at RB1I2C : 6
var volatile bit    RB1I2C_SLEW1              at RB1I2C : 7
var volatile bit*2  RB1I2C_I2CTH              at RB1I2C : 0
var volatile bit*2  RB1I2C_I2CPU              at RB1I2C : 4
var volatile bit*2  RB1I2C_I2CSLEW            at RB1I2C : 6
var volatile bit    RB1I2C_I2CTH0             at RB1I2C : 0
var volatile bit    RB1I2C_I2CTH1             at RB1I2C : 1
var volatile bit    RB1I2C_I2CPU0             at RB1I2C : 4
var volatile bit    RB1I2C_I2CPU1             at RB1I2C : 5
var volatile bit    RB1I2C_I2CSLEW0           at RB1I2C : 6
var volatile bit    RB1I2C_I2CSLEW1           at RB1I2C : 7
-- ------------------------------------------------
var volatile byte   I2C1RXB                   at { 0x28A }
-- ------------------------------------------------
var volatile byte   I2C1TXB                   at { 0x28B }
-- ------------------------------------------------
var volatile byte   I2C1CNTL                  at { 0x28C }
var volatile bit    I2C1CNTL_CNT0             at I2C1CNTL : 0
var volatile bit    I2C1CNTL_CNT1             at I2C1CNTL : 1
var volatile bit    I2C1CNTL_CNT2             at I2C1CNTL : 2
var volatile bit    I2C1CNTL_CNT3             at I2C1CNTL : 3
var volatile bit    I2C1CNTL_CNT4             at I2C1CNTL : 4
var volatile bit    I2C1CNTL_CNT5             at I2C1CNTL : 5
var volatile bit    I2C1CNTL_CNT6             at I2C1CNTL : 6
var volatile bit    I2C1CNTL_CNT7             at I2C1CNTL : 7
-- ------------------------------------------------
var volatile byte   I2C1CNTH                  at { 0x28D }
var volatile bit    I2C1CNTH_CNT8             at I2C1CNTH : 0
var volatile bit    I2C1CNTH_CNT9             at I2C1CNTH : 1
var volatile bit    I2C1CNTH_CNT10            at I2C1CNTH : 2
var volatile bit    I2C1CNTH_CNT11            at I2C1CNTH : 3
var volatile bit    I2C1CNTH_CNT12            at I2C1CNTH : 4
var volatile bit    I2C1CNTH_CNT13            at I2C1CNTH : 5
var volatile bit    I2C1CNTH_CNT14            at I2C1CNTH : 6
var volatile bit    I2C1CNTH_CNT15            at I2C1CNTH : 7
-- ------------------------------------------------
var volatile byte   I2C1ADB0                  at { 0x28E }
-- ------------------------------------------------
var volatile byte   I2C1ADB1                  at { 0x28F }
-- ------------------------------------------------
var volatile byte   I2C1ADR0                  at { 0x290 }
-- ------------------------------------------------
var volatile byte   I2C1ADR1                  at { 0x291 }
var volatile bit*7  I2C1ADR1_ADR              at I2C1ADR1 : 1
-- ------------------------------------------------
var volatile byte   I2C1ADR2                  at { 0x292 }
-- ------------------------------------------------
var volatile byte   I2C1ADR3                  at { 0x293 }
var volatile bit*7  I2C1ADR3_ADR              at I2C1ADR3 : 1
-- ------------------------------------------------
var volatile byte   I2C1CON0                  at { 0x294 }
var volatile bit*3  I2C1CON0_MODE             at I2C1CON0 : 0
var volatile bit    I2C1CON0_MDR              at I2C1CON0 : 3
var volatile bit    I2C1CON0_CSTR             at I2C1CON0 : 4
var volatile bit    I2C1CON0_S                at I2C1CON0 : 5
var volatile bit    I2C1CON0_RSEN             at I2C1CON0 : 6
var volatile bit    I2C1CON0_EN               at I2C1CON0 : 7
var volatile bit    I2C1CON0_MODE0            at I2C1CON0 : 0
var volatile bit    I2C1CON0_MODE1            at I2C1CON0 : 1
var volatile bit    I2C1CON0_MODE2            at I2C1CON0 : 2
var volatile bit    I2C1CON0_I2CEN            at I2C1CON0 : 7
-- ------------------------------------------------
var volatile byte   I2C1CON1                  at { 0x295 }
var volatile bit    I2C1CON1_CSD              at I2C1CON1 : 0
var volatile bit    I2C1CON1_TXU              at I2C1CON1 : 1
var volatile bit    I2C1CON1_RXO              at I2C1CON1 : 2
var volatile bit    I2C1CON1_P                at I2C1CON1 : 3
var volatile bit    I2C1CON1_ACKT             at I2C1CON1 : 4
var volatile bit    I2C1CON1_ACKSTAT          at I2C1CON1 : 5
var volatile bit    I2C1CON1_ACKDT            at I2C1CON1 : 6
var volatile bit    I2C1CON1_ACKCNT           at I2C1CON1 : 7
-- ------------------------------------------------
var volatile byte   I2C1CON2                  at { 0x296 }
var volatile bit*2  I2C1CON2_BFRET            at I2C1CON2 : 0
var volatile bit*2  I2C1CON2_SDAHT            at I2C1CON2 : 2
var volatile bit    I2C1CON2_ABD              at I2C1CON2 : 4
var volatile bit    I2C1CON2_FME              at I2C1CON2 : 5
var volatile bit    I2C1CON2_GCEN             at I2C1CON2 : 6
var volatile bit    I2C1CON2_ACNT             at I2C1CON2 : 7
var volatile bit    I2C1CON2_BFRET0           at I2C1CON2 : 0
var volatile bit    I2C1CON2_BFRET1           at I2C1CON2 : 1
var volatile bit    I2C1CON2_SDAHT0           at I2C1CON2 : 2
var volatile bit    I2C1CON2_SDAHT1           at I2C1CON2 : 3
-- ------------------------------------------------
var volatile byte   I2C1ERR                   at { 0x297 }
var volatile bit    I2C1ERR_NACKIE            at I2C1ERR : 0
var volatile bit    I2C1ERR_BCLIE             at I2C1ERR : 1
var volatile bit    I2C1ERR_BTOIE             at I2C1ERR : 2
var volatile bit    I2C1ERR_NACKIF            at I2C1ERR : 4
var volatile bit    I2C1ERR_BCLIF             at I2C1ERR : 5
var volatile bit    I2C1ERR_BTOIF             at I2C1ERR : 6
var volatile bit    I2C1ERR_NACK1IE           at I2C1ERR : 0
var volatile bit    I2C1ERR_BCL1IE            at I2C1ERR : 1
var volatile bit    I2C1ERR_BTO1IE            at I2C1ERR : 2
var volatile bit    I2C1ERR_NACK1IF           at I2C1ERR : 4
var volatile bit    I2C1ERR_BCL1IF            at I2C1ERR : 5
var volatile bit    I2C1ERR_BTO1IF            at I2C1ERR : 6
-- ------------------------------------------------
var volatile byte   I2C1STAT0                 at { 0x298 }
var volatile bit    I2C1STAT0_D               at I2C1STAT0 : 3
var volatile bit    I2C1STAT0_R               at I2C1STAT0 : 4
var volatile bit    I2C1STAT0_MMA             at I2C1STAT0 : 5
var volatile bit    I2C1STAT0_SMA             at I2C1STAT0 : 6
var volatile bit    I2C1STAT0_BFRE            at I2C1STAT0 : 7
var volatile bit    I2C1STAT0_DATA            at I2C1STAT0 : 3
var volatile bit    I2C1STAT0_READ            at I2C1STAT0 : 4
var volatile bit    I2C1STAT0_NOT_ADDRESS     at I2C1STAT0 : 3
var volatile bit    I2C1STAT0_NOT_WRITE       at I2C1STAT0 : 4
var volatile bit    I2C1STAT0_NOT_A           at I2C1STAT0 : 3
var volatile bit    I2C1STAT0_NOT_W           at I2C1STAT0 : 4
-- ------------------------------------------------
var volatile byte   I2C1STAT1                 at { 0x299 }
var volatile bit    I2C1STAT1_RXBF            at I2C1STAT1 : 0
var volatile bit    I2C1STAT1_CLRBF           at I2C1STAT1 : 2
var volatile bit    I2C1STAT1_RXRE            at I2C1STAT1 : 3
var volatile bit    I2C1STAT1_TXBE            at I2C1STAT1 : 5
var volatile bit    I2C1STAT1_TXWE            at I2C1STAT1 : 7
-- ------------------------------------------------
var volatile byte   I2C1PIR                   at { 0x29A }
var volatile bit    I2C1PIR_SCIF              at I2C1PIR : 0
var volatile bit    I2C1PIR_RSCIF             at I2C1PIR : 1
var volatile bit    I2C1PIR_PCIF              at I2C1PIR : 2
var volatile bit    I2C1PIR_ADRIF             at I2C1PIR : 3
var volatile bit    I2C1PIR_WRIF              at I2C1PIR : 4
var volatile bit    I2C1PIR_ACKTIF            at I2C1PIR : 6
var volatile bit    I2C1PIR_CNTIF             at I2C1PIR : 7
var volatile bit    I2C1PIR_SC1IF             at I2C1PIR : 0
var volatile bit    I2C1PIR_RSC1IF            at I2C1PIR : 1
var volatile bit    I2C1PIR_PC1IF             at I2C1PIR : 2
var volatile bit    I2C1PIR_ADR1IF            at I2C1PIR : 3
var volatile bit    I2C1PIR_WR1IF             at I2C1PIR : 4
var volatile bit    I2C1PIR_ACKT1IF           at I2C1PIR : 6
var volatile bit    I2C1PIR_CNT1IF            at I2C1PIR : 7
-- ------------------------------------------------
var volatile byte   I2C1PIE                   at { 0x29B }
var volatile bit    I2C1PIE_SCIE              at I2C1PIE : 0
var volatile bit    I2C1PIE_RSCIE             at I2C1PIE : 1
var volatile bit    I2C1PIE_PCIE              at I2C1PIE : 2
var volatile bit    I2C1PIE_ADRIE             at I2C1PIE : 3
var volatile bit    I2C1PIE_WRIE              at I2C1PIE : 4
var volatile bit    I2C1PIE_ACKTIE            at I2C1PIE : 6
var volatile bit    I2C1PIE_CNTIE             at I2C1PIE : 7
var volatile bit    I2C1PIE_SC1IE             at I2C1PIE : 0
var volatile bit    I2C1PIE_RSC1IE            at I2C1PIE : 1
var volatile bit    I2C1PIE_PC1IE             at I2C1PIE : 2
var volatile bit    I2C1PIE_ADR1IE            at I2C1PIE : 3
var volatile bit    I2C1PIE_WR1IE             at I2C1PIE : 4
var volatile bit    I2C1PIE_ACKT1IE           at I2C1PIE : 6
var volatile bit    I2C1PIE_CNT1IE            at I2C1PIE : 7
-- ------------------------------------------------
var volatile byte   I2C1BTO                   at { 0x29C }
var volatile bit*6  I2C1BTO_TOTIME            at I2C1BTO : 0
var volatile bit    I2C1BTO_TOBY32            at I2C1BTO : 6
var volatile bit    I2C1BTO_TOREC             at I2C1BTO : 7
var volatile bit    I2C1BTO_TOTIME0           at I2C1BTO : 0
var volatile bit    I2C1BTO_TOTIME1           at I2C1BTO : 1
var volatile bit    I2C1BTO_TOTIME2           at I2C1BTO : 2
var volatile bit    I2C1BTO_TOTIME3           at I2C1BTO : 3
var volatile bit    I2C1BTO_TOTIME4           at I2C1BTO : 4
var volatile bit    I2C1BTO_TOTIME5           at I2C1BTO : 5
-- ------------------------------------------------
var volatile byte   I2C1BAUD                  at { 0x29D }
-- ------------------------------------------------
var volatile byte   I2C1CLK                   at { 0x29E }
var volatile bit*5  I2C1CLK_CLK               at I2C1CLK : 0
var volatile bit*5  I2C1CLK_I2CCLK            at I2C1CLK : 0
var volatile bit    I2C1CLK_CLK0              at I2C1CLK : 0
var volatile bit    I2C1CLK_CLK1              at I2C1CLK : 1
var volatile bit    I2C1CLK_CLK2              at I2C1CLK : 2
var volatile bit    I2C1CLK_CLK3              at I2C1CLK : 3
var volatile bit    I2C1CLK_CLK4              at I2C1CLK : 4
var volatile bit    I2C1CLK_I2CCLK0           at I2C1CLK : 0
var volatile bit    I2C1CLK_I2CCLK1           at I2C1CLK : 1
var volatile bit    I2C1CLK_I2CCLK2           at I2C1CLK : 2
var volatile bit    I2C1CLK_I2CCLK3           at I2C1CLK : 3
var volatile bit    I2C1CLK_I2CCLK4           at I2C1CLK : 4
-- ------------------------------------------------
var volatile byte   I2C1BTOC                  at { 0x29F }
var volatile bit*4  I2C1BTOC_BTOC             at I2C1BTOC : 0
var volatile bit*4  I2C1BTOC_I2CBTOC          at I2C1BTOC : 0
var volatile bit    I2C1BTOC_BTOC0            at I2C1BTOC : 0
var volatile bit    I2C1BTOC_BTOC1            at I2C1BTOC : 1
var volatile bit    I2C1BTOC_BTOC2            at I2C1BTOC : 2
var volatile bit    I2C1BTOC_BTOC3            at I2C1BTOC : 3
var volatile bit    I2C1BTOC_I2CBTOC0         at I2C1BTOC : 0
var volatile bit    I2C1BTOC_I2CBTOC1         at I2C1BTOC : 1
var volatile bit    I2C1BTOC_I2CBTOC2         at I2C1BTOC : 2
var volatile bit    I2C1BTOC_I2CBTOC3         at I2C1BTOC : 3
-- ------------------------------------------------
var volatile byte   U1RXB                     at { 0x2A1 }
-- ------------------------------------------------
var volatile byte   U1RXCHK                   at { 0x2A2 }
-- ------------------------------------------------
var volatile byte   U1TXB                     at { 0x2A3 }
-- ------------------------------------------------
var volatile byte   U1TXCHK                   at { 0x2A4 }
-- ------------------------------------------------
var volatile word   U1P1                      at { 0x2A5 }
-- ------------------------------------------------
var volatile byte   U1P1L                     at { 0x2A5 }
-- ------------------------------------------------
var volatile byte   U1P1H                     at { 0x2A6 }
var volatile bit    U1P1H_P1H                 at U1P1H : 0
-- ------------------------------------------------
var volatile word   U1P2                      at { 0x2A7 }
-- ------------------------------------------------
var volatile byte   U1P2L                     at { 0x2A7 }
-- ------------------------------------------------
var volatile byte   U1P2H                     at { 0x2A8 }
var volatile bit    U1P2H_P2H                 at U1P2H : 0
-- ------------------------------------------------
var volatile word   U1P3                      at { 0x2A9 }
-- ------------------------------------------------
var volatile byte   U1P3L                     at { 0x2A9 }
-- ------------------------------------------------
var volatile byte   U1P3H                     at { 0x2AA }
var volatile bit    U1P3H_P3H                 at U1P3H : 0
-- ------------------------------------------------
var volatile byte   U1CON0                    at { 0x2AB }
var volatile bit    U1CON0_MODE0              at U1CON0 : 0
var volatile bit    U1CON0_MODE1              at U1CON0 : 1
var volatile bit    U1CON0_MODE2              at U1CON0 : 2
var volatile bit    U1CON0_MODE3              at U1CON0 : 3
var volatile bit*4  U1CON0_U1MODE             at U1CON0 : 0
var volatile bit    U1CON0_U1RXEN             at U1CON0 : 4
var volatile bit    U1CON0_U1TXEN             at U1CON0 : 5
var volatile bit    U1CON0_U1ABDEN            at U1CON0 : 6
var volatile bit    U1CON0_U1BRGS             at U1CON0 : 7
var volatile bit    U1CON0_U1MODE0            at U1CON0 : 0
var volatile bit    U1CON0_U1MODE1            at U1CON0 : 1
var volatile bit    U1CON0_U1MODE2            at U1CON0 : 2
var volatile bit    U1CON0_U1MODE3            at U1CON0 : 3
var volatile bit*4  U1CON0_MODE               at U1CON0 : 0
var volatile bit    U1CON0_RXEN               at U1CON0 : 4
var volatile bit    U1CON0_TXEN               at U1CON0 : 5
var volatile bit    U1CON0_ABDEN              at U1CON0 : 6
var volatile bit    U1CON0_BRGS               at U1CON0 : 7
-- ------------------------------------------------
var volatile byte   U1CON1                    at { 0x2AC }
var volatile bit    U1CON1_SENDB              at U1CON1 : 0
var volatile bit    U1CON1_BRKOVR             at U1CON1 : 1
var volatile bit    U1CON1_RXBIMD             at U1CON1 : 3
var volatile bit    U1CON1_WUE                at U1CON1 : 4
var volatile bit    U1CON1_ON                 at U1CON1 : 7
var volatile bit    U1CON1_U1SENDB            at U1CON1 : 0
var volatile bit    U1CON1_U1BRKOVR           at U1CON1 : 1
var volatile bit    U1CON1_U1RXBIMD           at U1CON1 : 3
var volatile bit    U1CON1_U1WUE              at U1CON1 : 4
var volatile bit    U1CON1_U1ON               at U1CON1 : 7
-- ------------------------------------------------
var volatile byte   U1CON2                    at { 0x2AD }
var volatile bit*2  U1CON2_FLO                at U1CON2 : 0
var volatile bit    U1CON2_TXPOL              at U1CON2 : 2
var volatile bit    U1CON2_C0EN               at U1CON2 : 3
var volatile bit*2  U1CON2_STP                at U1CON2 : 4
var volatile bit    U1CON2_RXPOL              at U1CON2 : 6
var volatile bit    U1CON2_RUNOVF             at U1CON2 : 7
var volatile bit    U1CON2_FLO0               at U1CON2 : 0
var volatile bit    U1CON2_FLO1               at U1CON2 : 1
var volatile bit    U1CON2_STP0               at U1CON2 : 4
var volatile bit    U1CON2_STP1               at U1CON2 : 5
var volatile bit*2  U1CON2_U1FLO              at U1CON2 : 0
var volatile bit    U1CON2_U1TXPOL            at U1CON2 : 2
var volatile bit    U1CON2_U1C0EN             at U1CON2 : 3
var volatile bit*2  U1CON2_U1STP              at U1CON2 : 4
var volatile bit    U1CON2_U1RXPOL            at U1CON2 : 6
var volatile bit    U1CON2_U1RUNOVF           at U1CON2 : 7
var volatile bit    U1CON2_U1FLO0             at U1CON2 : 0
var volatile bit    U1CON2_U1FLO1             at U1CON2 : 1
var volatile bit    U1CON2_U1STP0             at U1CON2 : 4
var volatile bit    U1CON2_U1STP1             at U1CON2 : 5
-- ------------------------------------------------
var volatile word   U1BRG                     at { 0x2AE }
-- ------------------------------------------------
var volatile byte   U1BRGL                    at { 0x2AE }
-- ------------------------------------------------
var volatile byte   U1BRGH                    at { 0x2AF }
-- ------------------------------------------------
var volatile byte   U1FIFO                    at { 0x2B0 }
var volatile bit    U1FIFO_RXBF               at U1FIFO : 0
var volatile bit    U1FIFO_RXBE               at U1FIFO : 1
var volatile bit    U1FIFO_XON                at U1FIFO : 2
var volatile bit    U1FIFO_RXIDL              at U1FIFO : 3
var volatile bit    U1FIFO_TXBF               at U1FIFO : 4
var volatile bit    U1FIFO_TXBE               at U1FIFO : 5
var volatile bit    U1FIFO_STPMD              at U1FIFO : 6
var volatile bit    U1FIFO_TXWRE              at U1FIFO : 7
var volatile bit    U1FIFO_U1RXBF             at U1FIFO : 0
var volatile bit    U1FIFO_U1RXBE             at U1FIFO : 1
var volatile bit    U1FIFO_U1XON              at U1FIFO : 2
var volatile bit    U1FIFO_U1RXIDL            at U1FIFO : 3
var volatile bit    U1FIFO_U1TXBF             at U1FIFO : 4
var volatile bit    U1FIFO_U1TXBE             at U1FIFO : 5
var volatile bit    U1FIFO_U1STPMD            at U1FIFO : 6
var volatile bit    U1FIFO_U1TXWRE            at U1FIFO : 7
var volatile bit    U1FIFO_U1RCIDL            at U1FIFO : 3
var volatile bit    U1FIFO_RCIDL              at U1FIFO : 3
-- ------------------------------------------------
var volatile byte   U1UIR                     at { 0x2B1 }
var volatile bit    U1UIR_ABDIE               at U1UIR : 2
var volatile bit    U1UIR_ABDIF               at U1UIR : 6
var volatile bit    U1UIR_WUIF                at U1UIR : 7
var volatile bit    U1UIR_U1ABDIE             at U1UIR : 2
var volatile bit    U1UIR_U1ABDIF             at U1UIR : 6
var volatile bit    U1UIR_U1WUIF              at U1UIR : 7
-- ------------------------------------------------
var volatile byte   U1ERRIR                   at { 0x2B2 }
var volatile bit    U1ERRIR_TXCIF             at U1ERRIR : 0
var volatile bit    U1ERRIR_RXFOIF            at U1ERRIR : 1
var volatile bit    U1ERRIR_RXBKIF            at U1ERRIR : 2
var volatile bit    U1ERRIR_FERIF             at U1ERRIR : 3
var volatile bit    U1ERRIR_CERIF             at U1ERRIR : 4
var volatile bit    U1ERRIR_ABDOVF            at U1ERRIR : 5
var volatile bit    U1ERRIR_PERIF             at U1ERRIR : 6
var volatile bit    U1ERRIR_TXMTIF            at U1ERRIR : 7
var volatile bit    U1ERRIR_U1TXCIF           at U1ERRIR : 0
var volatile bit    U1ERRIR_U1RXFOIF          at U1ERRIR : 1
var volatile bit    U1ERRIR_U1RXBKIF          at U1ERRIR : 2
var volatile bit    U1ERRIR_U1FERIF           at U1ERRIR : 3
var volatile bit    U1ERRIR_U1CERIF           at U1ERRIR : 4
var volatile bit    U1ERRIR_U1ABDOVF          at U1ERRIR : 5
var volatile bit    U1ERRIR_U1PERIF           at U1ERRIR : 6
var volatile bit    U1ERRIR_U1TXMTIF          at U1ERRIR : 7
-- ------------------------------------------------
var volatile byte   U1ERRIE                   at { 0x2B3 }
var volatile bit    U1ERRIE_TXCIE             at U1ERRIE : 0
var volatile bit    U1ERRIE_RXFOIE            at U1ERRIE : 1
var volatile bit    U1ERRIE_RXBKIE            at U1ERRIE : 2
var volatile bit    U1ERRIE_FERIE             at U1ERRIE : 3
var volatile bit    U1ERRIE_CERIE             at U1ERRIE : 4
var volatile bit    U1ERRIE_ABDOVE            at U1ERRIE : 5
var volatile bit    U1ERRIE_PERIE             at U1ERRIE : 6
var volatile bit    U1ERRIE_TXMTIE            at U1ERRIE : 7
var volatile bit    U1ERRIE_U1TXCIE           at U1ERRIE : 0
var volatile bit    U1ERRIE_U1RXFOIE          at U1ERRIE : 1
var volatile bit    U1ERRIE_U1RXBKIE          at U1ERRIE : 2
var volatile bit    U1ERRIE_U1FERIE           at U1ERRIE : 3
var volatile bit    U1ERRIE_U1CERIE           at U1ERRIE : 4
var volatile bit    U1ERRIE_U1ABDOVE          at U1ERRIE : 5
var volatile bit    U1ERRIE_U1PERIE           at U1ERRIE : 6
var volatile bit    U1ERRIE_U1TXMTIE          at U1ERRIE : 7
-- ------------------------------------------------
var volatile byte   U2RXB                     at { 0x2B4 }
-- ------------------------------------------------
var volatile byte   U2RXCHK                   at { 0x2B5 }
-- ------------------------------------------------
var volatile byte   U2TXB                     at { 0x2B6 }
-- ------------------------------------------------
var volatile byte   U2TXCHK                   at { 0x2B7 }
-- ------------------------------------------------
var volatile word   U2P1                      at { 0x2B8 }
-- ------------------------------------------------
var volatile byte   U2P1L                     at { 0x2B8 }
-- ------------------------------------------------
var volatile byte   U2P1H                     at { 0x2B9 }
var volatile bit    U2P1H_P1H                 at U2P1H : 0
-- ------------------------------------------------
var volatile word   U2P2                      at { 0x2BA }
-- ------------------------------------------------
var volatile byte   U2P2L                     at { 0x2BA }
-- ------------------------------------------------
var volatile byte   U2P2H                     at { 0x2BB }
var volatile bit    U2P2H_P2H                 at U2P2H : 0
-- ------------------------------------------------
var volatile word   U2P3                      at { 0x2BC }
-- ------------------------------------------------
var volatile byte   U2P3L                     at { 0x2BC }
-- ------------------------------------------------
var volatile byte   U2P3H                     at { 0x2BD }
var volatile bit    U2P3H_P3H                 at U2P3H : 0
-- ------------------------------------------------
var volatile byte   U2CON0                    at { 0x2BE }
var volatile bit    U2CON0_MODE0              at U2CON0 : 0
var volatile bit    U2CON0_MODE1              at U2CON0 : 1
var volatile bit    U2CON0_MODE2              at U2CON0 : 2
var volatile bit    U2CON0_MODE3              at U2CON0 : 3
var volatile bit*4  U2CON0_U2MODE             at U2CON0 : 0
var volatile bit    U2CON0_U2RXEN             at U2CON0 : 4
var volatile bit    U2CON0_U2TXEN             at U2CON0 : 5
var volatile bit    U2CON0_U2ABDEN            at U2CON0 : 6
var volatile bit    U2CON0_U2BRGS             at U2CON0 : 7
var volatile bit    U2CON0_U2MODE0            at U2CON0 : 0
var volatile bit    U2CON0_U2MODE1            at U2CON0 : 1
var volatile bit    U2CON0_U2MODE2            at U2CON0 : 2
var volatile bit    U2CON0_U2MODE3            at U2CON0 : 3
var volatile bit*4  U2CON0_MODE               at U2CON0 : 0
var volatile bit    U2CON0_RXEN               at U2CON0 : 4
var volatile bit    U2CON0_TXEN               at U2CON0 : 5
var volatile bit    U2CON0_ABDEN              at U2CON0 : 6
var volatile bit    U2CON0_BRGS               at U2CON0 : 7
-- ------------------------------------------------
var volatile byte   U2CON1                    at { 0x2BF }
var volatile bit    U2CON1_SENDB              at U2CON1 : 0
var volatile bit    U2CON1_BRKOVR             at U2CON1 : 1
var volatile bit    U2CON1_RXBIMD             at U2CON1 : 3
var volatile bit    U2CON1_WUE                at U2CON1 : 4
var volatile bit    U2CON1_ON                 at U2CON1 : 7
var volatile bit    U2CON1_U2SENDB            at U2CON1 : 0
var volatile bit    U2CON1_U2BRKOVR           at U2CON1 : 1
var volatile bit    U2CON1_U2RXBIMD           at U2CON1 : 3
var volatile bit    U2CON1_U2WUE              at U2CON1 : 4
var volatile bit    U2CON1_U2ON               at U2CON1 : 7
-- ------------------------------------------------
var volatile byte   U2CON2                    at { 0x2C0 }
var volatile bit*2  U2CON2_FLO                at U2CON2 : 0
var volatile bit    U2CON2_TXPOL              at U2CON2 : 2
var volatile bit    U2CON2_C0EN               at U2CON2 : 3
var volatile bit*2  U2CON2_STP                at U2CON2 : 4
var volatile bit    U2CON2_RXPOL              at U2CON2 : 6
var volatile bit    U2CON2_RUNOVF             at U2CON2 : 7
var volatile bit    U2CON2_FLO0               at U2CON2 : 0
var volatile bit    U2CON2_FLO1               at U2CON2 : 1
var volatile bit    U2CON2_STP0               at U2CON2 : 4
var volatile bit    U2CON2_STP1               at U2CON2 : 5
var volatile bit*2  U2CON2_U2FLO              at U2CON2 : 0
var volatile bit    U2CON2_U2TXPOL            at U2CON2 : 2
var volatile bit    U2CON2_U2C0EN             at U2CON2 : 3
var volatile bit*2  U2CON2_U2STP              at U2CON2 : 4
var volatile bit    U2CON2_U2RXPOL            at U2CON2 : 6
var volatile bit    U2CON2_U2RUNOVF           at U2CON2 : 7
var volatile bit    U2CON2_U2FLO0             at U2CON2 : 0
var volatile bit    U2CON2_U2FLO1             at U2CON2 : 1
var volatile bit    U2CON2_U2STP0             at U2CON2 : 4
var volatile bit    U2CON2_U2STP1             at U2CON2 : 5
-- ------------------------------------------------
var volatile word   U2BRG                     at { 0x2C1 }
-- ------------------------------------------------
var volatile byte   U2BRGL                    at { 0x2C1 }
-- ------------------------------------------------
var volatile byte   U2BRGH                    at { 0x2C2 }
-- ------------------------------------------------
var volatile byte   U2FIFO                    at { 0x2C3 }
var volatile bit    U2FIFO_RXBF               at U2FIFO : 0
var volatile bit    U2FIFO_RXBE               at U2FIFO : 1
var volatile bit    U2FIFO_XON                at U2FIFO : 2
var volatile bit    U2FIFO_RXIDL              at U2FIFO : 3
var volatile bit    U2FIFO_TXBF               at U2FIFO : 4
var volatile bit    U2FIFO_TXBE               at U2FIFO : 5
var volatile bit    U2FIFO_STPMD              at U2FIFO : 6
var volatile bit    U2FIFO_TXWRE              at U2FIFO : 7
var volatile bit    U2FIFO_U2RXBF             at U2FIFO : 0
var volatile bit    U2FIFO_U2RXBE             at U2FIFO : 1
var volatile bit    U2FIFO_U2XON              at U2FIFO : 2
var volatile bit    U2FIFO_U2RXIDL            at U2FIFO : 3
var volatile bit    U2FIFO_U2TXBF             at U2FIFO : 4
var volatile bit    U2FIFO_U2TXBE             at U2FIFO : 5
var volatile bit    U2FIFO_U2STPMD            at U2FIFO : 6
var volatile bit    U2FIFO_U2TXWRE            at U2FIFO : 7
var volatile bit    U2FIFO_U2RCIDL            at U2FIFO : 3
var volatile bit    U2FIFO_RCIDL              at U2FIFO : 3
-- ------------------------------------------------
var volatile byte   U2UIR                     at { 0x2C4 }
var volatile bit    U2UIR_ABDIE               at U2UIR : 2
var volatile bit    U2UIR_ABDIF               at U2UIR : 6
var volatile bit    U2UIR_WUIF                at U2UIR : 7
var volatile bit    U2UIR_U2ABDIE             at U2UIR : 2
var volatile bit    U2UIR_U2ABDIF             at U2UIR : 6
var volatile bit    U2UIR_U2WUIF              at U2UIR : 7
-- ------------------------------------------------
var volatile byte   U2ERRIR                   at { 0x2C5 }
var volatile bit    U2ERRIR_TXCIF             at U2ERRIR : 0
var volatile bit    U2ERRIR_RXFOIF            at U2ERRIR : 1
var volatile bit    U2ERRIR_RXBKIF            at U2ERRIR : 2
var volatile bit    U2ERRIR_FERIF             at U2ERRIR : 3
var volatile bit    U2ERRIR_CERIF             at U2ERRIR : 4
var volatile bit    U2ERRIR_ABDOVF            at U2ERRIR : 5
var volatile bit    U2ERRIR_PERIF             at U2ERRIR : 6
var volatile bit    U2ERRIR_TXMTIF            at U2ERRIR : 7
var volatile bit    U2ERRIR_U2TXCIF           at U2ERRIR : 0
var volatile bit    U2ERRIR_U2RXFOIF          at U2ERRIR : 1
var volatile bit    U2ERRIR_U2RXBKIF          at U2ERRIR : 2
var volatile bit    U2ERRIR_U2FERIF           at U2ERRIR : 3
var volatile bit    U2ERRIR_U2CERIF           at U2ERRIR : 4
var volatile bit    U2ERRIR_U2ABDOVF          at U2ERRIR : 5
var volatile bit    U2ERRIR_U2PERIF           at U2ERRIR : 6
var volatile bit    U2ERRIR_U2TXMTIF          at U2ERRIR : 7
-- ------------------------------------------------
var volatile byte   U2ERRIE                   at { 0x2C6 }
var volatile bit    U2ERRIE_TXCIE             at U2ERRIE : 0
var volatile bit    U2ERRIE_RXFOIE            at U2ERRIE : 1
var volatile bit    U2ERRIE_RXBKIE            at U2ERRIE : 2
var volatile bit    U2ERRIE_FERIE             at U2ERRIE : 3
var volatile bit    U2ERRIE_CERIE             at U2ERRIE : 4
var volatile bit    U2ERRIE_ABDOVE            at U2ERRIE : 5
var volatile bit    U2ERRIE_PERIE             at U2ERRIE : 6
var volatile bit    U2ERRIE_TXMTIE            at U2ERRIE : 7
var volatile bit    U2ERRIE_U2TXCIE           at U2ERRIE : 0
var volatile bit    U2ERRIE_U2RXFOIE          at U2ERRIE : 1
var volatile bit    U2ERRIE_U2RXBKIE          at U2ERRIE : 2
var volatile bit    U2ERRIE_U2FERIE           at U2ERRIE : 3
var volatile bit    U2ERRIE_U2CERIE           at U2ERRIE : 4
var volatile bit    U2ERRIE_U2ABDOVE          at U2ERRIE : 5
var volatile bit    U2ERRIE_U2PERIE           at U2ERRIE : 6
var volatile bit    U2ERRIE_U2TXMTIE          at U2ERRIE : 7
-- ------------------------------------------------
var volatile byte   U3RXB                     at { 0x2C7 }
-- ------------------------------------------------
var volatile byte   U3TXB                     at { 0x2C9 }
-- ------------------------------------------------
var volatile word   U3P1                      at { 0x2CB }
-- ------------------------------------------------
var volatile byte   U3P1L                     at { 0x2CB }
-- ------------------------------------------------
var volatile word   U3P2                      at { 0x2CD }
-- ------------------------------------------------
var volatile byte   U3P2L                     at { 0x2CD }
-- ------------------------------------------------
var volatile word   U3P3                      at { 0x2CF }
-- ------------------------------------------------
var volatile byte   U3P3L                     at { 0x2CF }
-- ------------------------------------------------
var volatile byte   U3CON0                    at { 0x2D1 }
var volatile bit    U3CON0_MODE0              at U3CON0 : 0
var volatile bit    U3CON0_MODE1              at U3CON0 : 1
var volatile bit    U3CON0_MODE2              at U3CON0 : 2
var volatile bit*4  U3CON0_U3MODE             at U3CON0 : 0
var volatile bit    U3CON0_U3RXEN             at U3CON0 : 4
var volatile bit    U3CON0_U3TXEN             at U3CON0 : 5
var volatile bit    U3CON0_U3ABDEN            at U3CON0 : 6
var volatile bit    U3CON0_U3BRGS             at U3CON0 : 7
var volatile bit    U3CON0_U3MODE0            at U3CON0 : 0
var volatile bit    U3CON0_U3MODE1            at U3CON0 : 1
var volatile bit    U3CON0_U3MODE2            at U3CON0 : 2
var volatile bit*4  U3CON0_MODE               at U3CON0 : 0
var volatile bit    U3CON0_RXEN               at U3CON0 : 4
var volatile bit    U3CON0_TXEN               at U3CON0 : 5
var volatile bit    U3CON0_ABDEN              at U3CON0 : 6
var volatile bit    U3CON0_BRGS               at U3CON0 : 7
-- ------------------------------------------------
var volatile byte   U3CON1                    at { 0x2D2 }
var volatile bit    U3CON1_SENDB              at U3CON1 : 0
var volatile bit    U3CON1_BRKOVR             at U3CON1 : 1
var volatile bit    U3CON1_RXBIMD             at U3CON1 : 3
var volatile bit    U3CON1_WUE                at U3CON1 : 4
var volatile bit    U3CON1_ON                 at U3CON1 : 7
var volatile bit    U3CON1_U3SENDB            at U3CON1 : 0
var volatile bit    U3CON1_U3BRKOVR           at U3CON1 : 1
var volatile bit    U3CON1_U3RXBIMD           at U3CON1 : 3
var volatile bit    U3CON1_U3WUE              at U3CON1 : 4
var volatile bit    U3CON1_U3ON               at U3CON1 : 7
-- ------------------------------------------------
var volatile byte   U3CON2                    at { 0x2D3 }
var volatile bit*2  U3CON2_FLO                at U3CON2 : 0
var volatile bit    U3CON2_TXPOL              at U3CON2 : 2
var volatile bit*2  U3CON2_STP                at U3CON2 : 4
var volatile bit    U3CON2_RXPOL              at U3CON2 : 6
var volatile bit    U3CON2_RUNOVF             at U3CON2 : 7
var volatile bit    U3CON2_FLO0               at U3CON2 : 0
var volatile bit    U3CON2_FLO1               at U3CON2 : 1
var volatile bit    U3CON2_STP0               at U3CON2 : 4
var volatile bit    U3CON2_STP1               at U3CON2 : 5
var volatile bit*2  U3CON2_U3FLO              at U3CON2 : 0
var volatile bit    U3CON2_U3TXPOL            at U3CON2 : 2
var volatile bit*2  U3CON2_U3STP              at U3CON2 : 4
var volatile bit    U3CON2_U3RXPOL            at U3CON2 : 6
var volatile bit    U3CON2_U3RUNOVF           at U3CON2 : 7
var volatile bit    U3CON2_U3FLO0             at U3CON2 : 0
var volatile bit    U3CON2_U3FLO1             at U3CON2 : 1
var volatile bit    U3CON2_U3STP0             at U3CON2 : 4
var volatile bit    U3CON2_U3STP1             at U3CON2 : 5
-- ------------------------------------------------
var volatile word   U3BRG                     at { 0x2D4 }
-- ------------------------------------------------
var volatile byte   U3BRGL                    at { 0x2D4 }
-- ------------------------------------------------
var volatile byte   U3BRGH                    at { 0x2D5 }
-- ------------------------------------------------
var volatile byte   U3FIFO                    at { 0x2D6 }
var volatile bit    U3FIFO_RXBF               at U3FIFO : 0
var volatile bit    U3FIFO_RXBE               at U3FIFO : 1
var volatile bit    U3FIFO_XON                at U3FIFO : 2
var volatile bit    U3FIFO_RXIDL              at U3FIFO : 3
var volatile bit    U3FIFO_TXBF               at U3FIFO : 4
var volatile bit    U3FIFO_TXBE               at U3FIFO : 5
var volatile bit    U3FIFO_STPMD              at U3FIFO : 6
var volatile bit    U3FIFO_TXWRE              at U3FIFO : 7
var volatile bit    U3FIFO_U3RXBF             at U3FIFO : 0
var volatile bit    U3FIFO_U3RXBE             at U3FIFO : 1
var volatile bit    U3FIFO_U3XON              at U3FIFO : 2
var volatile bit    U3FIFO_U3RXIDL            at U3FIFO : 3
var volatile bit    U3FIFO_U3TXBF             at U3FIFO : 4
var volatile bit    U3FIFO_U3TXBE             at U3FIFO : 5
var volatile bit    U3FIFO_U3STPMD            at U3FIFO : 6
var volatile bit    U3FIFO_U3TXWRE            at U3FIFO : 7
var volatile bit    U3FIFO_U3RCIDL            at U3FIFO : 3
var volatile bit    U3FIFO_RCIDL              at U3FIFO : 3
-- ------------------------------------------------
var volatile byte   U3UIR                     at { 0x2D7 }
var volatile bit    U3UIR_ABDIE               at U3UIR : 2
var volatile bit    U3UIR_ABDIF               at U3UIR : 6
var volatile bit    U3UIR_WUIF                at U3UIR : 7
var volatile bit    U3UIR_U3ABDIE             at U3UIR : 2
var volatile bit    U3UIR_U3ABDIF             at U3UIR : 6
var volatile bit    U3UIR_U3WUIF              at U3UIR : 7
-- ------------------------------------------------
var volatile byte   U3ERRIR                   at { 0x2D8 }
var volatile bit    U3ERRIR_TXCIF             at U3ERRIR : 0
var volatile bit    U3ERRIR_RXFOIF            at U3ERRIR : 1
var volatile bit    U3ERRIR_RXBKIF            at U3ERRIR : 2
var volatile bit    U3ERRIR_FERIF             at U3ERRIR : 3
var volatile bit    U3ERRIR_CERIF             at U3ERRIR : 4
var volatile bit    U3ERRIR_ABDOVF            at U3ERRIR : 5
var volatile bit    U3ERRIR_PERIF             at U3ERRIR : 6
var volatile bit    U3ERRIR_TXMTIF            at U3ERRIR : 7
var volatile bit    U3ERRIR_U3TXCIF           at U3ERRIR : 0
var volatile bit    U3ERRIR_U3RXFOIF          at U3ERRIR : 1
var volatile bit    U3ERRIR_U3RXBKIF          at U3ERRIR : 2
var volatile bit    U3ERRIR_U3FERIF           at U3ERRIR : 3
var volatile bit    U3ERRIR_U3CERIF           at U3ERRIR : 4
var volatile bit    U3ERRIR_U3ABDOVF          at U3ERRIR : 5
var volatile bit    U3ERRIR_U3PERIF           at U3ERRIR : 6
var volatile bit    U3ERRIR_U3TXMTIF          at U3ERRIR : 7
-- ------------------------------------------------
var volatile byte   U3ERRIE                   at { 0x2D9 }
var volatile bit    U3ERRIE_TXCIE             at U3ERRIE : 0
var volatile bit    U3ERRIE_RXFOIE            at U3ERRIE : 1
var volatile bit    U3ERRIE_RXBKIE            at U3ERRIE : 2
var volatile bit    U3ERRIE_FERIE             at U3ERRIE : 3
var volatile bit    U3ERRIE_CERIE             at U3ERRIE : 4
var volatile bit    U3ERRIE_ABDOVE            at U3ERRIE : 5
var volatile bit    U3ERRIE_PERIE             at U3ERRIE : 6
var volatile bit    U3ERRIE_TXMTIE            at U3ERRIE : 7
var volatile bit    U3ERRIE_U3TXCIE           at U3ERRIE : 0
var volatile bit    U3ERRIE_U3RXFOIE          at U3ERRIE : 1
var volatile bit    U3ERRIE_U3RXBKIE          at U3ERRIE : 2
var volatile bit    U3ERRIE_U3FERIE           at U3ERRIE : 3
var volatile bit    U3ERRIE_U3CERIE           at U3ERRIE : 4
var volatile bit    U3ERRIE_U3ABDOVE          at U3ERRIE : 5
var volatile bit    U3ERRIE_U3PERIE           at U3ERRIE : 6
var volatile bit    U3ERRIE_U3TXMTIE          at U3ERRIE : 7
-- ------------------------------------------------
var volatile byte   U4RXB                     at { 0x2DA }
-- ------------------------------------------------
var volatile byte   U4TXB                     at { 0x2DC }
-- ------------------------------------------------
var volatile word   U4P1                      at { 0x2DE }
-- ------------------------------------------------
var volatile byte   U4P1L                     at { 0x2DE }
-- ------------------------------------------------
var volatile word   U4P2                      at { 0x2E0 }
-- ------------------------------------------------
var volatile byte   U4P2L                     at { 0x2E0 }
-- ------------------------------------------------
var volatile word   U4P3                      at { 0x2E2 }
-- ------------------------------------------------
var volatile byte   U4P3L                     at { 0x2E2 }
-- ------------------------------------------------
var volatile byte   U4CON0                    at { 0x2E4 }
var volatile bit    U4CON0_MODE0              at U4CON0 : 0
var volatile bit    U4CON0_MODE1              at U4CON0 : 1
var volatile bit    U4CON0_MODE2              at U4CON0 : 2
var volatile bit*4  U4CON0_U4MODE             at U4CON0 : 0
var volatile bit    U4CON0_U4RXEN             at U4CON0 : 4
var volatile bit    U4CON0_U4TXEN             at U4CON0 : 5
var volatile bit    U4CON0_U4ABDEN            at U4CON0 : 6
var volatile bit    U4CON0_U4BRGS             at U4CON0 : 7
var volatile bit    U4CON0_U4MODE0            at U4CON0 : 0
var volatile bit    U4CON0_U4MODE1            at U4CON0 : 1
var volatile bit    U4CON0_U4MODE2            at U4CON0 : 2
var volatile bit*4  U4CON0_MODE               at U4CON0 : 0
var volatile bit    U4CON0_RXEN               at U4CON0 : 4
var volatile bit    U4CON0_TXEN               at U4CON0 : 5
var volatile bit    U4CON0_ABDEN              at U4CON0 : 6
var volatile bit    U4CON0_BRGS               at U4CON0 : 7
-- ------------------------------------------------
var volatile byte   U4CON1                    at { 0x2E5 }
var volatile bit    U4CON1_SENDB              at U4CON1 : 0
var volatile bit    U4CON1_BRKOVR             at U4CON1 : 1
var volatile bit    U4CON1_RXBIMD             at U4CON1 : 3
var volatile bit    U4CON1_WUE                at U4CON1 : 4
var volatile bit    U4CON1_ON                 at U4CON1 : 7
var volatile bit    U4CON1_U4SENDB            at U4CON1 : 0
var volatile bit    U4CON1_U4BRKOVR           at U4CON1 : 1
var volatile bit    U4CON1_U4RXBIMD           at U4CON1 : 3
var volatile bit    U4CON1_U4WUE              at U4CON1 : 4
var volatile bit    U4CON1_U4ON               at U4CON1 : 7
-- ------------------------------------------------
var volatile byte   U4CON2                    at { 0x2E6 }
var volatile bit*2  U4CON2_FLO                at U4CON2 : 0
var volatile bit    U4CON2_TXPOL              at U4CON2 : 2
var volatile bit*2  U4CON2_STP                at U4CON2 : 4
var volatile bit    U4CON2_RXPOL              at U4CON2 : 6
var volatile bit    U4CON2_RUNOVF             at U4CON2 : 7
var volatile bit    U4CON2_FLO0               at U4CON2 : 0
var volatile bit    U4CON2_FLO1               at U4CON2 : 1
var volatile bit    U4CON2_STP0               at U4CON2 : 4
var volatile bit    U4CON2_STP1               at U4CON2 : 5
var volatile bit*2  U4CON2_U4FLO              at U4CON2 : 0
var volatile bit    U4CON2_U4TXPOL            at U4CON2 : 2
var volatile bit*2  U4CON2_U4STP              at U4CON2 : 4
var volatile bit    U4CON2_U4RXPOL            at U4CON2 : 6
var volatile bit    U4CON2_U4RUNOVF           at U4CON2 : 7
var volatile bit    U4CON2_U4FLO0             at U4CON2 : 0
var volatile bit    U4CON2_U4FLO1             at U4CON2 : 1
var volatile bit    U4CON2_U4STP0             at U4CON2 : 4
var volatile bit    U4CON2_U4STP1             at U4CON2 : 5
-- ------------------------------------------------
var volatile word   U4BRG                     at { 0x2E7 }
-- ------------------------------------------------
var volatile byte   U4BRGL                    at { 0x2E7 }
-- ------------------------------------------------
var volatile byte   U4BRGH                    at { 0x2E8 }
-- ------------------------------------------------
var volatile byte   U4FIFO                    at { 0x2E9 }
var volatile bit    U4FIFO_RXBF               at U4FIFO : 0
var volatile bit    U4FIFO_RXBE               at U4FIFO : 1
var volatile bit    U4FIFO_XON                at U4FIFO : 2
var volatile bit    U4FIFO_RXIDL              at U4FIFO : 3
var volatile bit    U4FIFO_TXBF               at U4FIFO : 4
var volatile bit    U4FIFO_TXBE               at U4FIFO : 5
var volatile bit    U4FIFO_STPMD              at U4FIFO : 6
var volatile bit    U4FIFO_TXWRE              at U4FIFO : 7
var volatile bit    U4FIFO_U4RXBF             at U4FIFO : 0
var volatile bit    U4FIFO_U4RXBE             at U4FIFO : 1
var volatile bit    U4FIFO_U4XON              at U4FIFO : 2
var volatile bit    U4FIFO_U4RXIDL            at U4FIFO : 3
var volatile bit    U4FIFO_U4TXBF             at U4FIFO : 4
var volatile bit    U4FIFO_U4TXBE             at U4FIFO : 5
var volatile bit    U4FIFO_U4STPMD            at U4FIFO : 6
var volatile bit    U4FIFO_U4TXWRE            at U4FIFO : 7
var volatile bit    U4FIFO_U4RCIDL            at U4FIFO : 3
var volatile bit    U4FIFO_RCIDL              at U4FIFO : 3
-- ------------------------------------------------
var volatile byte   U4UIR                     at { 0x2EA }
var volatile bit    U4UIR_ABDIE               at U4UIR : 2
var volatile bit    U4UIR_ABDIF               at U4UIR : 6
var volatile bit    U4UIR_WUIF                at U4UIR : 7
var volatile bit    U4UIR_U4ABDIE             at U4UIR : 2
var volatile bit    U4UIR_U4ABDIF             at U4UIR : 6
var volatile bit    U4UIR_U4WUIF              at U4UIR : 7
-- ------------------------------------------------
var volatile byte   U4ERRIR                   at { 0x2EB }
var volatile bit    U4ERRIR_TXCIF             at U4ERRIR : 0
var volatile bit    U4ERRIR_RXFOIF            at U4ERRIR : 1
var volatile bit    U4ERRIR_RXBKIF            at U4ERRIR : 2
var volatile bit    U4ERRIR_FERIF             at U4ERRIR : 3
var volatile bit    U4ERRIR_CERIF             at U4ERRIR : 4
var volatile bit    U4ERRIR_ABDOVF            at U4ERRIR : 5
var volatile bit    U4ERRIR_PERIF             at U4ERRIR : 6
var volatile bit    U4ERRIR_TXMTIF            at U4ERRIR : 7
var volatile bit    U4ERRIR_U4TXCIF           at U4ERRIR : 0
var volatile bit    U4ERRIR_U4RXFOIF          at U4ERRIR : 1
var volatile bit    U4ERRIR_U4RXBKIF          at U4ERRIR : 2
var volatile bit    U4ERRIR_U4FERIF           at U4ERRIR : 3
var volatile bit    U4ERRIR_U4CERIF           at U4ERRIR : 4
var volatile bit    U4ERRIR_U4ABDOVF          at U4ERRIR : 5
var volatile bit    U4ERRIR_U4PERIF           at U4ERRIR : 6
var volatile bit    U4ERRIR_U4TXMTIF          at U4ERRIR : 7
-- ------------------------------------------------
var volatile byte   U4ERRIE                   at { 0x2EC }
var volatile bit    U4ERRIE_TXCIE             at U4ERRIE : 0
var volatile bit    U4ERRIE_RXFOIE            at U4ERRIE : 1
var volatile bit    U4ERRIE_RXBKIE            at U4ERRIE : 2
var volatile bit    U4ERRIE_FERIE             at U4ERRIE : 3
var volatile bit    U4ERRIE_CERIE             at U4ERRIE : 4
var volatile bit    U4ERRIE_ABDOVE            at U4ERRIE : 5
var volatile bit    U4ERRIE_PERIE             at U4ERRIE : 6
var volatile bit    U4ERRIE_TXMTIE            at U4ERRIE : 7
var volatile bit    U4ERRIE_U4TXCIE           at U4ERRIE : 0
var volatile bit    U4ERRIE_U4RXFOIE          at U4ERRIE : 1
var volatile bit    U4ERRIE_U4RXBKIE          at U4ERRIE : 2
var volatile bit    U4ERRIE_U4FERIE           at U4ERRIE : 3
var volatile bit    U4ERRIE_U4CERIE           at U4ERRIE : 4
var volatile bit    U4ERRIE_U4ABDOVE          at U4ERRIE : 5
var volatile bit    U4ERRIE_U4PERIE           at U4ERRIE : 6
var volatile bit    U4ERRIE_U4TXMTIE          at U4ERRIE : 7
-- ------------------------------------------------
var volatile byte   U5RXB                     at { 0x2ED }
-- ------------------------------------------------
var volatile byte   U5TXB                     at { 0x2EF }
-- ------------------------------------------------
var volatile word   U5P1                      at { 0x2F1 }
-- ------------------------------------------------
var volatile byte   U5P1L                     at { 0x2F1 }
-- ------------------------------------------------
var volatile word   U5P2                      at { 0x2F3 }
-- ------------------------------------------------
var volatile byte   U5P2L                     at { 0x2F3 }
-- ------------------------------------------------
var volatile word   U5P3                      at { 0x2F5 }
-- ------------------------------------------------
var volatile byte   U5P3L                     at { 0x2F5 }
-- ------------------------------------------------
var volatile byte   U5CON0                    at { 0x2F7 }
var volatile bit    U5CON0_MODE0              at U5CON0 : 0
var volatile bit    U5CON0_MODE1              at U5CON0 : 1
var volatile bit    U5CON0_MODE2              at U5CON0 : 2
var volatile bit*4  U5CON0_U5MODE             at U5CON0 : 0
var volatile bit    U5CON0_U5RXEN             at U5CON0 : 4
var volatile bit    U5CON0_U5TXEN             at U5CON0 : 5
var volatile bit    U5CON0_U5ABDEN            at U5CON0 : 6
var volatile bit    U5CON0_U5BRGS             at U5CON0 : 7
var volatile bit    U5CON0_U5MODE0            at U5CON0 : 0
var volatile bit    U5CON0_U5MODE1            at U5CON0 : 1
var volatile bit    U5CON0_U5MODE2            at U5CON0 : 2
var volatile bit*4  U5CON0_MODE               at U5CON0 : 0
var volatile bit    U5CON0_RXEN               at U5CON0 : 4
var volatile bit    U5CON0_TXEN               at U5CON0 : 5
var volatile bit    U5CON0_ABDEN              at U5CON0 : 6
var volatile bit    U5CON0_BRGS               at U5CON0 : 7
-- ------------------------------------------------
var volatile byte   U5CON1                    at { 0x2F8 }
var volatile bit    U5CON1_SENDB              at U5CON1 : 0
var volatile bit    U5CON1_BRKOVR             at U5CON1 : 1
var volatile bit    U5CON1_RXBIMD             at U5CON1 : 3
var volatile bit    U5CON1_WUE                at U5CON1 : 4
var volatile bit    U5CON1_ON                 at U5CON1 : 7
var volatile bit    U5CON1_U5SENDB            at U5CON1 : 0
var volatile bit    U5CON1_U5BRKOVR           at U5CON1 : 1
var volatile bit    U5CON1_U5RXBIMD           at U5CON1 : 3
var volatile bit    U5CON1_U5WUE              at U5CON1 : 4
var volatile bit    U5CON1_U5ON               at U5CON1 : 7
-- ------------------------------------------------
var volatile byte   U5CON2                    at { 0x2F9 }
var volatile bit*2  U5CON2_FLO                at U5CON2 : 0
var volatile bit    U5CON2_TXPOL              at U5CON2 : 2
var volatile bit*2  U5CON2_STP                at U5CON2 : 4
var volatile bit    U5CON2_RXPOL              at U5CON2 : 6
var volatile bit    U5CON2_RUNOVF             at U5CON2 : 7
var volatile bit    U5CON2_FLO0               at U5CON2 : 0
var volatile bit    U5CON2_FLO1               at U5CON2 : 1
var volatile bit    U5CON2_STP0               at U5CON2 : 4
var volatile bit    U5CON2_STP1               at U5CON2 : 5
var volatile bit*2  U5CON2_U5FLO              at U5CON2 : 0
var volatile bit    U5CON2_U5TXPOL            at U5CON2 : 2
var volatile bit*2  U5CON2_U5STP              at U5CON2 : 4
var volatile bit    U5CON2_U5RXPOL            at U5CON2 : 6
var volatile bit    U5CON2_U5RUNOVF           at U5CON2 : 7
var volatile bit    U5CON2_U5FLO0             at U5CON2 : 0
var volatile bit    U5CON2_U5FLO1             at U5CON2 : 1
var volatile bit    U5CON2_U5STP0             at U5CON2 : 4
var volatile bit    U5CON2_U5STP1             at U5CON2 : 5
-- ------------------------------------------------
var volatile word   U5BRG                     at { 0x2FA }
-- ------------------------------------------------
var volatile byte   U5BRGL                    at { 0x2FA }
-- ------------------------------------------------
var volatile byte   U5BRGH                    at { 0x2FB }
-- ------------------------------------------------
var volatile byte   U5FIFO                    at { 0x2FC }
var volatile bit    U5FIFO_RXBF               at U5FIFO : 0
var volatile bit    U5FIFO_RXBE               at U5FIFO : 1
var volatile bit    U5FIFO_XON                at U5FIFO : 2
var volatile bit    U5FIFO_RXIDL              at U5FIFO : 3
var volatile bit    U5FIFO_TXBF               at U5FIFO : 4
var volatile bit    U5FIFO_TXBE               at U5FIFO : 5
var volatile bit    U5FIFO_STPMD              at U5FIFO : 6
var volatile bit    U5FIFO_TXWRE              at U5FIFO : 7
var volatile bit    U5FIFO_U5RXBF             at U5FIFO : 0
var volatile bit    U5FIFO_U5RXBE             at U5FIFO : 1
var volatile bit    U5FIFO_U5XON              at U5FIFO : 2
var volatile bit    U5FIFO_U5RXIDL            at U5FIFO : 3
var volatile bit    U5FIFO_U5TXBF             at U5FIFO : 4
var volatile bit    U5FIFO_U5TXBE             at U5FIFO : 5
var volatile bit    U5FIFO_U5STPMD            at U5FIFO : 6
var volatile bit    U5FIFO_U5TXWRE            at U5FIFO : 7
var volatile bit    U5FIFO_U5RCIDL            at U5FIFO : 3
var volatile bit    U5FIFO_RCIDL              at U5FIFO : 3
-- ------------------------------------------------
var volatile byte   U5UIR                     at { 0x2FD }
var volatile bit    U5UIR_ABDIE               at U5UIR : 2
var volatile bit    U5UIR_ABDIF               at U5UIR : 6
var volatile bit    U5UIR_WUIF                at U5UIR : 7
var volatile bit    U5UIR_U5ABDIE             at U5UIR : 2
var volatile bit    U5UIR_U5ABDIF             at U5UIR : 6
var volatile bit    U5UIR_U5WUIF              at U5UIR : 7
-- ------------------------------------------------
var volatile byte   U5ERRIR                   at { 0x2FE }
var volatile bit    U5ERRIR_TXCIF             at U5ERRIR : 0
var volatile bit    U5ERRIR_RXFOIF            at U5ERRIR : 1
var volatile bit    U5ERRIR_RXBKIF            at U5ERRIR : 2
var volatile bit    U5ERRIR_FERIF             at U5ERRIR : 3
var volatile bit    U5ERRIR_CERIF             at U5ERRIR : 4
var volatile bit    U5ERRIR_ABDOVF            at U5ERRIR : 5
var volatile bit    U5ERRIR_PERIF             at U5ERRIR : 6
var volatile bit    U5ERRIR_TXMTIF            at U5ERRIR : 7
var volatile bit    U5ERRIR_U5TXCIF           at U5ERRIR : 0
var volatile bit    U5ERRIR_U5RXFOIF          at U5ERRIR : 1
var volatile bit    U5ERRIR_U5RXBKIF          at U5ERRIR : 2
var volatile bit    U5ERRIR_U5FERIF           at U5ERRIR : 3
var volatile bit    U5ERRIR_U5CERIF           at U5ERRIR : 4
var volatile bit    U5ERRIR_U5ABDOVF          at U5ERRIR : 5
var volatile bit    U5ERRIR_U5PERIF           at U5ERRIR : 6
var volatile bit    U5ERRIR_U5TXMTIF          at U5ERRIR : 7
-- ------------------------------------------------
var volatile byte   U5ERRIE                   at { 0x2FF }
var volatile bit    U5ERRIE_TXCIE             at U5ERRIE : 0
var volatile bit    U5ERRIE_RXFOIE            at U5ERRIE : 1
var volatile bit    U5ERRIE_RXBKIE            at U5ERRIE : 2
var volatile bit    U5ERRIE_FERIE             at U5ERRIE : 3
var volatile bit    U5ERRIE_CERIE             at U5ERRIE : 4
var volatile bit    U5ERRIE_ABDOVE            at U5ERRIE : 5
var volatile bit    U5ERRIE_PERIE             at U5ERRIE : 6
var volatile bit    U5ERRIE_TXMTIE            at U5ERRIE : 7
var volatile bit    U5ERRIE_U5TXCIE           at U5ERRIE : 0
var volatile bit    U5ERRIE_U5RXFOIE          at U5ERRIE : 1
var volatile bit    U5ERRIE_U5RXBKIE          at U5ERRIE : 2
var volatile bit    U5ERRIE_U5FERIE           at U5ERRIE : 3
var volatile bit    U5ERRIE_U5CERIE           at U5ERRIE : 4
var volatile bit    U5ERRIE_U5ABDOVE          at U5ERRIE : 5
var volatile bit    U5ERRIE_U5PERIE           at U5ERRIE : 6
var volatile bit    U5ERRIE_U5TXMTIE          at U5ERRIE : 7
-- ------------------------------------------------
var volatile byte*3 SMT1TMR                   at { 0x300 }
-- ------------------------------------------------
var volatile byte   SMT1TMRL                  at { 0x300 }
var volatile bit    SMT1TMRL_TMR0             at SMT1TMRL : 0
var volatile bit    SMT1TMRL_TMR1             at SMT1TMRL : 1
var volatile bit    SMT1TMRL_TMR2             at SMT1TMRL : 2
var volatile bit    SMT1TMRL_TMR3             at SMT1TMRL : 3
var volatile bit    SMT1TMRL_TMR4             at SMT1TMRL : 4
var volatile bit    SMT1TMRL_TMR5             at SMT1TMRL : 5
var volatile bit    SMT1TMRL_TMR6             at SMT1TMRL : 6
var volatile bit    SMT1TMRL_TMR7             at SMT1TMRL : 7
var volatile bit    SMT1TMRL_SMT1TMR0         at SMT1TMRL : 0
var volatile bit    SMT1TMRL_SMT1TMR1         at SMT1TMRL : 1
var volatile bit    SMT1TMRL_SMT1TMR2         at SMT1TMRL : 2
var volatile bit    SMT1TMRL_SMT1TMR3         at SMT1TMRL : 3
var volatile bit    SMT1TMRL_SMT1TMR4         at SMT1TMRL : 4
var volatile bit    SMT1TMRL_SMT1TMR5         at SMT1TMRL : 5
var volatile bit    SMT1TMRL_SMT1TMR6         at SMT1TMRL : 6
var volatile bit    SMT1TMRL_SMT1TMR7         at SMT1TMRL : 7
-- ------------------------------------------------
var volatile byte   SMT1TMRH                  at { 0x301 }
var volatile bit    SMT1TMRH_TMR8             at SMT1TMRH : 0
var volatile bit    SMT1TMRH_TMR9             at SMT1TMRH : 1
var volatile bit    SMT1TMRH_TMR10            at SMT1TMRH : 2
var volatile bit    SMT1TMRH_TMR11            at SMT1TMRH : 3
var volatile bit    SMT1TMRH_TMR12            at SMT1TMRH : 4
var volatile bit    SMT1TMRH_TMR13            at SMT1TMRH : 5
var volatile bit    SMT1TMRH_TMR14            at SMT1TMRH : 6
var volatile bit    SMT1TMRH_TMR15            at SMT1TMRH : 7
var volatile bit    SMT1TMRH_SMT1TMR8         at SMT1TMRH : 0
var volatile bit    SMT1TMRH_SMT1TMR9         at SMT1TMRH : 1
var volatile bit    SMT1TMRH_SMT1TMR10        at SMT1TMRH : 2
var volatile bit    SMT1TMRH_SMT1TMR11        at SMT1TMRH : 3
var volatile bit    SMT1TMRH_SMT1TMR12        at SMT1TMRH : 4
var volatile bit    SMT1TMRH_SMT1TMR13        at SMT1TMRH : 5
var volatile bit    SMT1TMRH_SMT1TMR14        at SMT1TMRH : 6
var volatile bit    SMT1TMRH_SMT1TMR15        at SMT1TMRH : 7
-- ------------------------------------------------
var volatile byte   SMT1TMRU                  at { 0x302 }
var volatile bit    SMT1TMRU_TMR16            at SMT1TMRU : 0
var volatile bit    SMT1TMRU_TMR17            at SMT1TMRU : 1
var volatile bit    SMT1TMRU_TMR18            at SMT1TMRU : 2
var volatile bit    SMT1TMRU_TMR19            at SMT1TMRU : 3
var volatile bit    SMT1TMRU_TMR20            at SMT1TMRU : 4
var volatile bit    SMT1TMRU_TMR21            at SMT1TMRU : 5
var volatile bit    SMT1TMRU_TMR22            at SMT1TMRU : 6
var volatile bit    SMT1TMRU_TMR23            at SMT1TMRU : 7
var volatile bit    SMT1TMRU_SMT1TMR16        at SMT1TMRU : 0
var volatile bit    SMT1TMRU_SMT1TMR17        at SMT1TMRU : 1
var volatile bit    SMT1TMRU_SMT1TMR18        at SMT1TMRU : 2
var volatile bit    SMT1TMRU_SMT1TMR19        at SMT1TMRU : 3
var volatile bit    SMT1TMRU_SMT1TMR20        at SMT1TMRU : 4
var volatile bit    SMT1TMRU_SMT1TMR21        at SMT1TMRU : 5
var volatile bit    SMT1TMRU_SMT1TMR22        at SMT1TMRU : 6
var volatile bit    SMT1TMRU_SMT1TMR23        at SMT1TMRU : 7
-- ------------------------------------------------
var volatile byte*3 SMT1CPR                   at { 0x303 }
-- ------------------------------------------------
var volatile byte   SMT1CPRL                  at { 0x303 }
var volatile bit    SMT1CPRL_CPR0             at SMT1CPRL : 0
var volatile bit    SMT1CPRL_CPR1             at SMT1CPRL : 1
var volatile bit    SMT1CPRL_CPR2             at SMT1CPRL : 2
var volatile bit    SMT1CPRL_CPR3             at SMT1CPRL : 3
var volatile bit    SMT1CPRL_CPR4             at SMT1CPRL : 4
var volatile bit    SMT1CPRL_CPR5             at SMT1CPRL : 5
var volatile bit    SMT1CPRL_CPR6             at SMT1CPRL : 6
var volatile bit    SMT1CPRL_CPR7             at SMT1CPRL : 7
var volatile bit    SMT1CPRL_SMT1CPR0         at SMT1CPRL : 0
var volatile bit    SMT1CPRL_SMT1CPR1         at SMT1CPRL : 1
var volatile bit    SMT1CPRL_SMT1CPR2         at SMT1CPRL : 2
var volatile bit    SMT1CPRL_SMT1CPR3         at SMT1CPRL : 3
var volatile bit    SMT1CPRL_SMT1CPR4         at SMT1CPRL : 4
var volatile bit    SMT1CPRL_SMT1CPR5         at SMT1CPRL : 5
var volatile bit    SMT1CPRL_SMT1CPR6         at SMT1CPRL : 6
var volatile bit    SMT1CPRL_SMT1CPR7         at SMT1CPRL : 7
-- ------------------------------------------------
var volatile byte   SMT1CPRH                  at { 0x304 }
var volatile bit    SMT1CPRH_CPR8             at SMT1CPRH : 0
var volatile bit    SMT1CPRH_CPR9             at SMT1CPRH : 1
var volatile bit    SMT1CPRH_CPR10            at SMT1CPRH : 2
var volatile bit    SMT1CPRH_CPR11            at SMT1CPRH : 3
var volatile bit    SMT1CPRH_CPR12            at SMT1CPRH : 4
var volatile bit    SMT1CPRH_CPR13            at SMT1CPRH : 5
var volatile bit    SMT1CPRH_CPR14            at SMT1CPRH : 6
var volatile bit    SMT1CPRH_CPR15            at SMT1CPRH : 7
var volatile bit    SMT1CPRH_SMT1CPR8         at SMT1CPRH : 0
var volatile bit    SMT1CPRH_SMT1CPR9         at SMT1CPRH : 1
var volatile bit    SMT1CPRH_SMT1CPR10        at SMT1CPRH : 2
var volatile bit    SMT1CPRH_SMT1CPR11        at SMT1CPRH : 3
var volatile bit    SMT1CPRH_SMT1CPR12        at SMT1CPRH : 4
var volatile bit    SMT1CPRH_SMT1CPR13        at SMT1CPRH : 5
var volatile bit    SMT1CPRH_SMT1CPR14        at SMT1CPRH : 6
var volatile bit    SMT1CPRH_SMT1CPR15        at SMT1CPRH : 7
-- ------------------------------------------------
var volatile byte   SMT1CPRU                  at { 0x305 }
var volatile bit    SMT1CPRU_CPR16            at SMT1CPRU : 0
var volatile bit    SMT1CPRU_CPR17            at SMT1CPRU : 1
var volatile bit    SMT1CPRU_CPR18            at SMT1CPRU : 2
var volatile bit    SMT1CPRU_CPR19            at SMT1CPRU : 3
var volatile bit    SMT1CPRU_CPR20            at SMT1CPRU : 4
var volatile bit    SMT1CPRU_CPR21            at SMT1CPRU : 5
var volatile bit    SMT1CPRU_CPR22            at SMT1CPRU : 6
var volatile bit    SMT1CPRU_CPR23            at SMT1CPRU : 7
var volatile bit    SMT1CPRU_SMT1CPR16        at SMT1CPRU : 0
var volatile bit    SMT1CPRU_SMT1CPR17        at SMT1CPRU : 1
var volatile bit    SMT1CPRU_SMT1CPR18        at SMT1CPRU : 2
var volatile bit    SMT1CPRU_SMT1CPR19        at SMT1CPRU : 3
var volatile bit    SMT1CPRU_SMT1CPR20        at SMT1CPRU : 4
var volatile bit    SMT1CPRU_SMT1CPR21        at SMT1CPRU : 5
var volatile bit    SMT1CPRU_SMT1CPR22        at SMT1CPRU : 6
var volatile bit    SMT1CPRU_SMT1CPR23        at SMT1CPRU : 7
-- ------------------------------------------------
var volatile byte*3 SMT1CPW                   at { 0x306 }
-- ------------------------------------------------
var volatile byte   SMT1CPWL                  at { 0x306 }
var volatile bit    SMT1CPWL_CPW0             at SMT1CPWL : 0
var volatile bit    SMT1CPWL_CPW1             at SMT1CPWL : 1
var volatile bit    SMT1CPWL_CPW2             at SMT1CPWL : 2
var volatile bit    SMT1CPWL_CPW3             at SMT1CPWL : 3
var volatile bit    SMT1CPWL_CPW4             at SMT1CPWL : 4
var volatile bit    SMT1CPWL_CPW5             at SMT1CPWL : 5
var volatile bit    SMT1CPWL_CPW6             at SMT1CPWL : 6
var volatile bit    SMT1CPWL_CPW7             at SMT1CPWL : 7
var volatile bit    SMT1CPWL_SMT1CPW0         at SMT1CPWL : 0
var volatile bit    SMT1CPWL_SMT1CPW1         at SMT1CPWL : 1
var volatile bit    SMT1CPWL_SMT1CPW2         at SMT1CPWL : 2
var volatile bit    SMT1CPWL_SMT1CPW3         at SMT1CPWL : 3
var volatile bit    SMT1CPWL_SMT1CPW4         at SMT1CPWL : 4
var volatile bit    SMT1CPWL_SMT1CPW5         at SMT1CPWL : 5
var volatile bit    SMT1CPWL_SMT1CPW6         at SMT1CPWL : 6
var volatile bit    SMT1CPWL_SMT1CPW7         at SMT1CPWL : 7
-- ------------------------------------------------
var volatile byte   SMT1CPWH                  at { 0x307 }
var volatile bit    SMT1CPWH_CPW8             at SMT1CPWH : 0
var volatile bit    SMT1CPWH_CPW9             at SMT1CPWH : 1
var volatile bit    SMT1CPWH_CPW10            at SMT1CPWH : 2
var volatile bit    SMT1CPWH_CPW11            at SMT1CPWH : 3
var volatile bit    SMT1CPWH_CPW12            at SMT1CPWH : 4
var volatile bit    SMT1CPWH_CPW13            at SMT1CPWH : 5
var volatile bit    SMT1CPWH_CPW14            at SMT1CPWH : 6
var volatile bit    SMT1CPWH_CPW15            at SMT1CPWH : 7
var volatile bit    SMT1CPWH_SMT1CPW8         at SMT1CPWH : 0
var volatile bit    SMT1CPWH_SMT1CPW9         at SMT1CPWH : 1
var volatile bit    SMT1CPWH_SMT1CPW10        at SMT1CPWH : 2
var volatile bit    SMT1CPWH_SMT1CPW11        at SMT1CPWH : 3
var volatile bit    SMT1CPWH_SMT1CPW12        at SMT1CPWH : 4
var volatile bit    SMT1CPWH_SMT1CPW13        at SMT1CPWH : 5
var volatile bit    SMT1CPWH_SMT1CPW14        at SMT1CPWH : 6
var volatile bit    SMT1CPWH_SMT1CPW15        at SMT1CPWH : 7
-- ------------------------------------------------
var volatile byte   SMT1CPWU                  at { 0x308 }
var volatile bit    SMT1CPWU_CPW16            at SMT1CPWU : 0
var volatile bit    SMT1CPWU_CPW17            at SMT1CPWU : 1
var volatile bit    SMT1CPWU_CPW18            at SMT1CPWU : 2
var volatile bit    SMT1CPWU_CPW19            at SMT1CPWU : 3
var volatile bit    SMT1CPWU_CPW20            at SMT1CPWU : 4
var volatile bit    SMT1CPWU_CPW21            at SMT1CPWU : 5
var volatile bit    SMT1CPWU_CPW22            at SMT1CPWU : 6
var volatile bit    SMT1CPWU_CPW23            at SMT1CPWU : 7
var volatile bit    SMT1CPWU_SMT1CPW16        at SMT1CPWU : 0
var volatile bit    SMT1CPWU_SMT1CPW17        at SMT1CPWU : 1
var volatile bit    SMT1CPWU_SMT1CPW18        at SMT1CPWU : 2
var volatile bit    SMT1CPWU_SMT1CPW19        at SMT1CPWU : 3
var volatile bit    SMT1CPWU_SMT1CPW20        at SMT1CPWU : 4
var volatile bit    SMT1CPWU_SMT1CPW21        at SMT1CPWU : 5
var volatile bit    SMT1CPWU_SMT1CPW22        at SMT1CPWU : 6
var volatile bit    SMT1CPWU_SMT1CPW23        at SMT1CPWU : 7
-- ------------------------------------------------
var volatile byte*3 SMT1PR                    at { 0x309 }
-- ------------------------------------------------
var volatile byte   SMT1PRL                   at { 0x309 }
var volatile bit    SMT1PRL_PR0               at SMT1PRL : 0
var volatile bit    SMT1PRL_PR1               at SMT1PRL : 1
var volatile bit    SMT1PRL_PR2               at SMT1PRL : 2
var volatile bit    SMT1PRL_PR3               at SMT1PRL : 3
var volatile bit    SMT1PRL_PR4               at SMT1PRL : 4
var volatile bit    SMT1PRL_PR5               at SMT1PRL : 5
var volatile bit    SMT1PRL_PR6               at SMT1PRL : 6
var volatile bit    SMT1PRL_PR7               at SMT1PRL : 7
var volatile bit    SMT1PRL_SMT1PR0           at SMT1PRL : 0
var volatile bit    SMT1PRL_SMT1PR1           at SMT1PRL : 1
var volatile bit    SMT1PRL_SMT1PR2           at SMT1PRL : 2
var volatile bit    SMT1PRL_SMT1PR3           at SMT1PRL : 3
var volatile bit    SMT1PRL_SMT1PR4           at SMT1PRL : 4
var volatile bit    SMT1PRL_SMT1PR5           at SMT1PRL : 5
var volatile bit    SMT1PRL_SMT1PR6           at SMT1PRL : 6
var volatile bit    SMT1PRL_SMT1PR7           at SMT1PRL : 7
-- ------------------------------------------------
var volatile byte   SMT1PRH                   at { 0x30A }
var volatile bit    SMT1PRH_PR8               at SMT1PRH : 0
var volatile bit    SMT1PRH_PR9               at SMT1PRH : 1
var volatile bit    SMT1PRH_PR10              at SMT1PRH : 2
var volatile bit    SMT1PRH_PR11              at SMT1PRH : 3
var volatile bit    SMT1PRH_PR12              at SMT1PRH : 4
var volatile bit    SMT1PRH_PR13              at SMT1PRH : 5
var volatile bit    SMT1PRH_PR14              at SMT1PRH : 6
var volatile bit    SMT1PRH_PR15              at SMT1PRH : 7
var volatile bit    SMT1PRH_SMT1PR8           at SMT1PRH : 0
var volatile bit    SMT1PRH_SMT1PR9           at SMT1PRH : 1
var volatile bit    SMT1PRH_SMT1PR10          at SMT1PRH : 2
var volatile bit    SMT1PRH_SMT1PR11          at SMT1PRH : 3
var volatile bit    SMT1PRH_SMT1PR12          at SMT1PRH : 4
var volatile bit    SMT1PRH_SMT1PR13          at SMT1PRH : 5
var volatile bit    SMT1PRH_SMT1PR14          at SMT1PRH : 6
var volatile bit    SMT1PRH_SMT1PR15          at SMT1PRH : 7
-- ------------------------------------------------
var volatile byte   SMT1PRU                   at { 0x30B }
var volatile bit    SMT1PRU_PR16              at SMT1PRU : 0
var volatile bit    SMT1PRU_PR17              at SMT1PRU : 1
var volatile bit    SMT1PRU_PR18              at SMT1PRU : 2
var volatile bit    SMT1PRU_PR19              at SMT1PRU : 3
var volatile bit    SMT1PRU_PR20              at SMT1PRU : 4
var volatile bit    SMT1PRU_PR21              at SMT1PRU : 5
var volatile bit    SMT1PRU_PR22              at SMT1PRU : 6
var volatile bit    SMT1PRU_PR23              at SMT1PRU : 7
var volatile bit    SMT1PRU_SMT1PR16          at SMT1PRU : 0
var volatile bit    SMT1PRU_SMT1PR17          at SMT1PRU : 1
var volatile bit    SMT1PRU_SMT1PR18          at SMT1PRU : 2
var volatile bit    SMT1PRU_SMT1PR19          at SMT1PRU : 3
var volatile bit    SMT1PRU_SMT1PR20          at SMT1PRU : 4
var volatile bit    SMT1PRU_SMT1PR21          at SMT1PRU : 5
var volatile bit    SMT1PRU_SMT1PR22          at SMT1PRU : 6
var volatile bit    SMT1PRU_SMT1PR23          at SMT1PRU : 7
-- ------------------------------------------------
var volatile byte   SMT1CON0                  at { 0x30C }
var volatile bit*2  SMT1CON0_PS               at SMT1CON0 : 0
var volatile bit    SMT1CON0_CPOL             at SMT1CON0 : 2
var volatile bit    SMT1CON0_SPOL             at SMT1CON0 : 3
var volatile bit    SMT1CON0_WPOL             at SMT1CON0 : 4
var volatile bit    SMT1CON0_STP              at SMT1CON0 : 5
var volatile bit    SMT1CON0_EN               at SMT1CON0 : 7
var volatile bit*2  SMT1CON0_SMT1PS           at SMT1CON0 : 0
var volatile bit    SMT1CON0_SMT1CPOL         at SMT1CON0 : 2
var volatile bit    SMT1CON0_SMT1SPOL         at SMT1CON0 : 3
var volatile bit    SMT1CON0_SMT1WOL          at SMT1CON0 : 4
var volatile bit    SMT1CON0_SMT1STP          at SMT1CON0 : 5
var volatile bit    SMT1CON0_SMT1EN           at SMT1CON0 : 7
var volatile bit    SMT1CON0_PS0              at SMT1CON0 : 0
var volatile bit    SMT1CON0_PS1              at SMT1CON0 : 1
var volatile bit    SMT1CON0_SMT1PS0          at SMT1CON0 : 0
var volatile bit    SMT1CON0_SMT1PS1          at SMT1CON0 : 1
-- ------------------------------------------------
var volatile byte   SMT1CON1                  at { 0x30D }
var volatile bit*4  SMT1CON1_MODE             at SMT1CON1 : 0
var volatile bit    SMT1CON1_REPEAT           at SMT1CON1 : 6
var volatile bit    SMT1CON1_GO               at SMT1CON1 : 7
var volatile bit    SMT1CON1_MODE0            at SMT1CON1 : 0
var volatile bit    SMT1CON1_MODE1            at SMT1CON1 : 1
var volatile bit    SMT1CON1_MODE2            at SMT1CON1 : 2
var volatile bit    SMT1CON1_MODE3            at SMT1CON1 : 3
var volatile bit    SMT1CON1_SMT1REPEAT       at SMT1CON1 : 6
var volatile bit    SMT1CON1_SMT1GO           at SMT1CON1 : 7
var volatile bit*4  SMT1CON1_SMT1MODE         at SMT1CON1 : 0
-- ------------------------------------------------
var volatile byte   SMT1STAT                  at { 0x30E }
var volatile bit    SMT1STAT_AS               at SMT1STAT : 0
var volatile bit    SMT1STAT_WS               at SMT1STAT : 1
var volatile bit    SMT1STAT_TS               at SMT1STAT : 2
var volatile bit    SMT1STAT_RST              at SMT1STAT : 5
var volatile bit    SMT1STAT_CPWUP            at SMT1STAT : 6
var volatile bit    SMT1STAT_CPRUP            at SMT1STAT : 7
var volatile bit    SMT1STAT_SMT1AS           at SMT1STAT : 0
var volatile bit    SMT1STAT_SMT1WS           at SMT1STAT : 1
var volatile bit    SMT1STAT_SMT1TS           at SMT1STAT : 2
var volatile bit    SMT1STAT_SMT1RESET        at SMT1STAT : 5
var volatile bit    SMT1STAT_SMT1CPWUP        at SMT1STAT : 6
var volatile bit    SMT1STAT_SMT1CPRUP        at SMT1STAT : 7
var volatile bit    SMT1STAT_SMT1RST          at SMT1STAT : 5
-- ------------------------------------------------
var volatile byte   SMT1CLK                   at { 0x30F }
var volatile bit*3  SMT1CLK_CSEL              at SMT1CLK : 0
var volatile bit    SMT1CLK_CSEL0             at SMT1CLK : 0
var volatile bit    SMT1CLK_CSEL1             at SMT1CLK : 1
var volatile bit    SMT1CLK_CSEL2             at SMT1CLK : 2
var volatile bit*3  SMT1CLK_SMT1CSEL          at SMT1CLK : 0
var volatile bit    SMT1CLK_SMT1CSEL0         at SMT1CLK : 0
var volatile bit    SMT1CLK_SMT1CSEL1         at SMT1CLK : 1
var volatile bit    SMT1CLK_SMT1CSEL2         at SMT1CLK : 2
-- ------------------------------------------------
var volatile byte   SMT1SIG                   at { 0x310 }
var volatile bit*5  SMT1SIG_SSEL              at SMT1SIG : 0
var volatile bit    SMT1SIG_SSEL0             at SMT1SIG : 0
var volatile bit    SMT1SIG_SSEL1             at SMT1SIG : 1
var volatile bit    SMT1SIG_SSEL2             at SMT1SIG : 2
var volatile bit    SMT1SIG_SSEL3             at SMT1SIG : 3
var volatile bit    SMT1SIG_SSEL4             at SMT1SIG : 4
var volatile bit*5  SMT1SIG_SMT1SSEL          at SMT1SIG : 0
var volatile bit    SMT1SIG_SMT1SSEL0         at SMT1SIG : 0
var volatile bit    SMT1SIG_SMT1SSEL1         at SMT1SIG : 1
var volatile bit    SMT1SIG_SMT1SSEL2         at SMT1SIG : 2
var volatile bit    SMT1SIG_SMT1SSEL3         at SMT1SIG : 3
var volatile bit    SMT1SIG_SMT1SSEL4         at SMT1SIG : 4
-- ------------------------------------------------
var volatile byte   SMT1WIN                   at { 0x311 }
var volatile bit*5  SMT1WIN_WSEL              at SMT1WIN : 0
var volatile bit    SMT1WIN_WSEL0             at SMT1WIN : 0
var volatile bit    SMT1WIN_WSEL1             at SMT1WIN : 1
var volatile bit    SMT1WIN_WSEL2             at SMT1WIN : 2
var volatile bit    SMT1WIN_WSEL3             at SMT1WIN : 3
var volatile bit    SMT1WIN_WSEL4             at SMT1WIN : 4
var volatile bit*5  SMT1WIN_SMT1WSEL          at SMT1WIN : 0
var volatile bit    SMT1WIN_SMT1WSEL0         at SMT1WIN : 0
var volatile bit    SMT1WIN_SMT1WSEL1         at SMT1WIN : 1
var volatile bit    SMT1WIN_SMT1WSEL2         at SMT1WIN : 2
var volatile bit    SMT1WIN_SMT1WSEL3         at SMT1WIN : 3
var volatile bit    SMT1WIN_SMT1WSEL4         at SMT1WIN : 4
-- ------------------------------------------------
var volatile word   TMR0                      at { 0x318 }
-- ------------------------------------------------
var volatile byte   TMR0L                     at { 0x318 }
var volatile bit    TMR0L_TMR0L0              at TMR0L : 0
var volatile bit    TMR0L_TMR0L1              at TMR0L : 1
var volatile bit    TMR0L_TMR0L2              at TMR0L : 2
var volatile bit    TMR0L_TMR0L3              at TMR0L : 3
var volatile bit    TMR0L_TMR0L4              at TMR0L : 4
var volatile bit    TMR0L_TMR0L5              at TMR0L : 5
var volatile bit    TMR0L_TMR0L6              at TMR0L : 6
var volatile bit    TMR0L_TMR0L7              at TMR0L : 7
-- ------------------------------------------------
var volatile byte   TMR0H                     at { 0x319 }
var volatile bit    TMR0H_TMR0H0              at TMR0H : 0
var volatile bit    TMR0H_TMR0H1              at TMR0H : 1
var volatile bit    TMR0H_TMR0H2              at TMR0H : 2
var volatile bit    TMR0H_TMR0H3              at TMR0H : 3
var volatile bit    TMR0H_TMR0H4              at TMR0H : 4
var volatile bit    TMR0H_TMR0H5              at TMR0H : 5
var volatile bit    TMR0H_TMR0H6              at TMR0H : 6
var volatile bit    TMR0H_TMR0H7              at TMR0H : 7
var volatile bit    TMR0H_T0PR0               at TMR0H : 0
var volatile bit    TMR0H_T0PR1               at TMR0H : 1
var volatile bit    TMR0H_T0PR2               at TMR0H : 2
var volatile bit    TMR0H_T0PR3               at TMR0H : 3
var volatile bit    TMR0H_T0PR4               at TMR0H : 4
var volatile bit    TMR0H_T0PR5               at TMR0H : 5
var volatile bit    TMR0H_T0PR6               at TMR0H : 6
var volatile bit    TMR0H_T0PR7               at TMR0H : 7
-- ------------------------------------------------
var volatile byte   T0CON0                    at { 0x31A }
var volatile bit*4  T0CON0_OUTPS              at T0CON0 : 0
var volatile bit    T0CON0_MD16               at T0CON0 : 4
var volatile bit    T0CON0_OUT                at T0CON0 : 5
var volatile bit    T0CON0_EN                 at T0CON0 : 7
var volatile bit*4  T0CON0_T0OUTPS            at T0CON0 : 0
var volatile bit    T0CON0_T0MD16             at T0CON0 : 4
var volatile bit    T0CON0_T0OUT              at T0CON0 : 5
var volatile bit    T0CON0_T0EN               at T0CON0 : 7
var volatile bit    T0CON0_OUTPS0             at T0CON0 : 0
var volatile bit    T0CON0_OUTPS1             at T0CON0 : 1
var volatile bit    T0CON0_OUTPS2             at T0CON0 : 2
var volatile bit    T0CON0_OUTPS3             at T0CON0 : 3
var volatile bit    T0CON0_T016BIT            at T0CON0 : 4
var volatile bit    T0CON0_T0OUTPS0           at T0CON0 : 0
var volatile bit    T0CON0_T0OUTPS1           at T0CON0 : 1
var volatile bit    T0CON0_T0OUTPS2           at T0CON0 : 2
var volatile bit    T0CON0_T0OUTPS3           at T0CON0 : 3
-- ------------------------------------------------
var volatile byte   T0CON1                    at { 0x31B }
var volatile bit*4  T0CON1_CKPS               at T0CON1 : 0
var volatile bit    T0CON1_ASYNC              at T0CON1 : 4
var volatile bit*3  T0CON1_CS                 at T0CON1 : 5
var volatile bit    T0CON1_CKPS0              at T0CON1 : 0
var volatile bit    T0CON1_CKPS1              at T0CON1 : 1
var volatile bit    T0CON1_CKPS2              at T0CON1 : 2
var volatile bit    T0CON1_CKPS3              at T0CON1 : 3
var volatile bit    T0CON1_T0ASYNC            at T0CON1 : 4
var volatile bit    T0CON1_CS0                at T0CON1 : 5
var volatile bit    T0CON1_CS1                at T0CON1 : 6
var volatile bit    T0CON1_CS2                at T0CON1 : 7
var volatile bit*4  T0CON1_T0CKPS             at T0CON1 : 0
var volatile bit*3  T0CON1_T0CS               at T0CON1 : 5
var volatile bit    T0CON1_T0CKPS0            at T0CON1 : 0
var volatile bit    T0CON1_T0CKPS1            at T0CON1 : 1
var volatile bit    T0CON1_T0CKPS2            at T0CON1 : 2
var volatile bit    T0CON1_T0CKPS3            at T0CON1 : 3
var volatile bit    T0CON1_T0CS0              at T0CON1 : 5
var volatile bit    T0CON1_T0CS1              at T0CON1 : 6
var volatile bit    T0CON1_T0CS2              at T0CON1 : 7
-- ------------------------------------------------
var volatile word   TMR1                      at { 0x31C }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0x31C }
var volatile bit    TMR1L_TMR1L0              at TMR1L : 0
var volatile bit    TMR1L_TMR1L1              at TMR1L : 1
var volatile bit    TMR1L_TMR1L2              at TMR1L : 2
var volatile bit    TMR1L_TMR1L3              at TMR1L : 3
var volatile bit    TMR1L_TMR1L4              at TMR1L : 4
var volatile bit    TMR1L_TMR1L5              at TMR1L : 5
var volatile bit    TMR1L_TMR1L6              at TMR1L : 6
var volatile bit    TMR1L_TMR1L7              at TMR1L : 7
var volatile bit    TMR1L_TMR10               at TMR1L : 0
var volatile bit    TMR1L_TMR11               at TMR1L : 1
var volatile bit    TMR1L_TMR12               at TMR1L : 2
var volatile bit    TMR1L_TMR13               at TMR1L : 3
var volatile bit    TMR1L_TMR14               at TMR1L : 4
var volatile bit    TMR1L_TMR15               at TMR1L : 5
var volatile bit    TMR1L_TMR16               at TMR1L : 6
var volatile bit    TMR1L_TMR17               at TMR1L : 7
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0x31D }
var volatile bit    TMR1H_TMR1H0              at TMR1H : 0
var volatile bit    TMR1H_TMR1H1              at TMR1H : 1
var volatile bit    TMR1H_TMR1H2              at TMR1H : 2
var volatile bit    TMR1H_TMR1H3              at TMR1H : 3
var volatile bit    TMR1H_TMR1H4              at TMR1H : 4
var volatile bit    TMR1H_TMR1H5              at TMR1H : 5
var volatile bit    TMR1H_TMR1H6              at TMR1H : 6
var volatile bit    TMR1H_TMR1H7              at TMR1H : 7
var volatile bit    TMR1H_TMR18               at TMR1H : 0
var volatile bit    TMR1H_TMR19               at TMR1H : 1
var volatile bit    TMR1H_TMR110              at TMR1H : 2
var volatile bit    TMR1H_TMR111              at TMR1H : 3
var volatile bit    TMR1H_TMR112              at TMR1H : 4
var volatile bit    TMR1H_TMR113              at TMR1H : 5
var volatile bit    TMR1H_TMR114              at TMR1H : 6
var volatile bit    TMR1H_TMR115              at TMR1H : 7
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0x31E }
var volatile bit    T1CON_ON                  at T1CON : 0
var volatile bit    T1CON_RD16                at T1CON : 1
var volatile bit    T1CON_NOT_SYNC            at T1CON : 2
alias               T1CON_NT1SYNC             is T1CON_NOT_SYNC
alias               T1CON_T1SYNC              is T1CON_NOT_SYNC
var volatile bit*2  T1CON_CKPS                at T1CON : 4
alias               T1CON_TMR1CKPS            is T1CON_CKPS
alias               T1CON_T1CKPS              is T1CON_CKPS
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_T1RD16              at T1CON : 1
var volatile bit    T1CON_NOT_T1SYNC          at T1CON : 2
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_NSYNC               at T1CON : 2
var volatile bit    T1CON_CKPS0               at T1CON : 4
var volatile bit    T1CON_CKPS1               at T1CON : 5
var volatile bit    T1CON_RD161               at T1CON : 1
-- ------------------------------------------------
var volatile byte   T1GCON                    at { 0x31F }
var volatile bit    T1GCON_GVAL               at T1GCON : 2
var volatile bit    T1GCON_GGO                at T1GCON : 3
var volatile bit    T1GCON_GSPM               at T1GCON : 4
var volatile bit    T1GCON_GTM                at T1GCON : 5
var volatile bit    T1GCON_GPOL               at T1GCON : 6
var volatile bit    T1GCON_GE                 at T1GCON : 7
var volatile bit    T1GCON_T1GVAL             at T1GCON : 2
var volatile bit    T1GCON_T1GGO              at T1GCON : 3
var volatile bit    T1GCON_T1GSPM             at T1GCON : 4
var volatile bit    T1GCON_T1GTM              at T1GCON : 5
var volatile bit    T1GCON_T1GPOL             at T1GCON : 6
var volatile bit    T1GCON_T1GE               at T1GCON : 7
var volatile bit    T1GCON_NOT_DONE           at T1GCON : 3
var volatile bit    T1GCON_NOT_T1DONE         at T1GCON : 3
var volatile bit    T1GCON_GGO_NDONE          at T1GCON : 3
var volatile bit    T1GCON_T1GGO_NDONE        at T1GCON : 3
-- ------------------------------------------------
var volatile byte   T1GATE                    at { 0x320 }
var volatile bit*5  T1GATE_GSS                at T1GATE : 0
var volatile bit    T1GATE_GSS0               at T1GATE : 0
var volatile bit    T1GATE_GSS1               at T1GATE : 1
var volatile bit    T1GATE_GSS2               at T1GATE : 2
var volatile bit    T1GATE_GSS3               at T1GATE : 3
var volatile bit    T1GATE_GSS4               at T1GATE : 4
var volatile bit    T1GATE_T1GSS0             at T1GATE : 0
var volatile bit    T1GATE_T1GSS1             at T1GATE : 1
var volatile bit    T1GATE_T1GSS2             at T1GATE : 2
var volatile bit    T1GATE_T1GSS3             at T1GATE : 3
var volatile bit    T1GATE_T1GSS4             at T1GATE : 4
-- ------------------------------------------------
var volatile byte   T1CLK                     at { 0x321 }
var volatile bit*5  T1CLK_CS                  at T1CLK : 0
var volatile bit    T1CLK_T1CS0               at T1CLK : 0
var volatile bit    T1CLK_T1CS1               at T1CLK : 1
var volatile bit    T1CLK_T1CS2               at T1CLK : 2
var volatile bit    T1CLK_T1CS3               at T1CLK : 3
var volatile bit    T1CLK_T1CS4               at T1CLK : 4
var volatile bit    T1CLK_CS0                 at T1CLK : 0
var volatile bit    T1CLK_CS1                 at T1CLK : 1
var volatile bit    T1CLK_CS2                 at T1CLK : 2
var volatile bit    T1CLK_CS3                 at T1CLK : 3
var volatile bit    T1CLK_CS4                 at T1CLK : 4
-- ------------------------------------------------
var volatile byte   T2TMR                     at { 0x322 }
-- ------------------------------------------------
var volatile byte   T2PR                      at { 0x323 }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x324 }
var volatile bit*4  T2CON_OUTPS               at T2CON : 0
var volatile bit*3  T2CON_CKPS                at T2CON : 4
alias               T2CON_TMR2CKPS            is T2CON_CKPS
alias               T2CON_T2CKPS              is T2CON_CKPS
var volatile bit    T2CON_ON                  at T2CON : 7
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 0
var volatile bit    T2CON_T2ON                at T2CON : 7
var volatile bit    T2CON_T2OUTPS0            at T2CON : 0
var volatile bit    T2CON_T2OUTPS1            at T2CON : 1
var volatile bit    T2CON_T2OUTPS2            at T2CON : 2
var volatile bit    T2CON_T2OUTPS3            at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 4
var volatile bit    T2CON_T2CKPS1             at T2CON : 5
var volatile bit    T2CON_T2CKPS2             at T2CON : 6
var volatile bit    T2CON_OUTPS0              at T2CON : 0
var volatile bit    T2CON_OUTPS1              at T2CON : 1
var volatile bit    T2CON_OUTPS2              at T2CON : 2
var volatile bit    T2CON_OUTPS3              at T2CON : 3
var volatile bit    T2CON_CKPS0               at T2CON : 4
var volatile bit    T2CON_CKPS1               at T2CON : 5
var volatile bit    T2CON_CKPS2               at T2CON : 6
var volatile bit    T2CON_TMR2ON              at T2CON : 7
-- ------------------------------------------------
var volatile byte   T2HLT                     at { 0x325 }
var volatile bit*5  T2HLT_MODE                at T2HLT : 0
var volatile bit    T2HLT_CKSYNC              at T2HLT : 5
var volatile bit    T2HLT_CKPOL               at T2HLT : 6
var volatile bit    T2HLT_PSYNC               at T2HLT : 7
var volatile bit    T2HLT_MODE0               at T2HLT : 0
var volatile bit    T2HLT_MODE1               at T2HLT : 1
var volatile bit    T2HLT_MODE2               at T2HLT : 2
var volatile bit    T2HLT_MODE3               at T2HLT : 3
var volatile bit    T2HLT_MODE4               at T2HLT : 4
var volatile bit*5  T2HLT_T2MODE              at T2HLT : 0
var volatile bit    T2HLT_T2CKSYNC            at T2HLT : 5
var volatile bit    T2HLT_T2CKPOL             at T2HLT : 6
var volatile bit    T2HLT_T2PSYNC             at T2HLT : 7
var volatile bit    T2HLT_T2MODE0             at T2HLT : 0
var volatile bit    T2HLT_T2MODE1             at T2HLT : 1
var volatile bit    T2HLT_T2MODE2             at T2HLT : 2
var volatile bit    T2HLT_T2MODE3             at T2HLT : 3
var volatile bit    T2HLT_T2MODE4             at T2HLT : 4
-- ------------------------------------------------
var volatile byte   T2CLKCON                  at { 0x326 }
var volatile bit*4  T2CLKCON_CS               at T2CLKCON : 0
var volatile bit    T2CLKCON_CS0              at T2CLKCON : 0
var volatile bit    T2CLKCON_CS1              at T2CLKCON : 1
var volatile bit    T2CLKCON_CS2              at T2CLKCON : 2
var volatile bit    T2CLKCON_CS3              at T2CLKCON : 3
var volatile bit*4  T2CLKCON_T2CS             at T2CLKCON : 0
var volatile bit    T2CLKCON_T2CS0            at T2CLKCON : 0
var volatile bit    T2CLKCON_T2CS1            at T2CLKCON : 1
var volatile bit    T2CLKCON_T2CS2            at T2CLKCON : 2
var volatile bit    T2CLKCON_T2CS3            at T2CLKCON : 3
-- ------------------------------------------------
var volatile byte   T2RST                     at { 0x327 }
var volatile bit*5  T2RST_RSEL                at T2RST : 0
var volatile bit    T2RST_RSEL0               at T2RST : 0
var volatile bit    T2RST_RSEL1               at T2RST : 1
var volatile bit    T2RST_RSEL2               at T2RST : 2
var volatile bit    T2RST_RSEL3               at T2RST : 3
var volatile bit    T2RST_RSEL4               at T2RST : 4
var volatile bit*5  T2RST_T2RSEL              at T2RST : 0
var volatile bit    T2RST_T2RSEL0             at T2RST : 0
var volatile bit    T2RST_T2RSEL1             at T2RST : 1
var volatile bit    T2RST_T2RSEL2             at T2RST : 2
var volatile bit    T2RST_T2RSEL3             at T2RST : 3
var volatile bit    T2RST_T2RSEL4             at T2RST : 4
-- ------------------------------------------------
var volatile word   TMR3                      at { 0x328 }
-- ------------------------------------------------
var volatile byte   TMR3L                     at { 0x328 }
var volatile bit    TMR3L_TMR3L0              at TMR3L : 0
var volatile bit    TMR3L_TMR3L1              at TMR3L : 1
var volatile bit    TMR3L_TMR3L2              at TMR3L : 2
var volatile bit    TMR3L_TMR3L3              at TMR3L : 3
var volatile bit    TMR3L_TMR3L4              at TMR3L : 4
var volatile bit    TMR3L_TMR3L5              at TMR3L : 5
var volatile bit    TMR3L_TMR3L6              at TMR3L : 6
var volatile bit    TMR3L_TMR3L7              at TMR3L : 7
var volatile bit    TMR3L_TMR30               at TMR3L : 0
var volatile bit    TMR3L_TMR31               at TMR3L : 1
var volatile bit    TMR3L_TMR32               at TMR3L : 2
var volatile bit    TMR3L_TMR33               at TMR3L : 3
var volatile bit    TMR3L_TMR34               at TMR3L : 4
var volatile bit    TMR3L_TMR35               at TMR3L : 5
var volatile bit    TMR3L_TMR36               at TMR3L : 6
var volatile bit    TMR3L_TMR37               at TMR3L : 7
-- ------------------------------------------------
var volatile byte   TMR3H                     at { 0x329 }
var volatile bit    TMR3H_TMR3H0              at TMR3H : 0
var volatile bit    TMR3H_TMR3H1              at TMR3H : 1
var volatile bit    TMR3H_TMR3H2              at TMR3H : 2
var volatile bit    TMR3H_TMR3H3              at TMR3H : 3
var volatile bit    TMR3H_TMR3H4              at TMR3H : 4
var volatile bit    TMR3H_TMR3H5              at TMR3H : 5
var volatile bit    TMR3H_TMR3H6              at TMR3H : 6
var volatile bit    TMR3H_TMR3H7              at TMR3H : 7
var volatile bit    TMR3H_TMR38               at TMR3H : 0
var volatile bit    TMR3H_TMR39               at TMR3H : 1
var volatile bit    TMR3H_TMR310              at TMR3H : 2
var volatile bit    TMR3H_TMR311              at TMR3H : 3
var volatile bit    TMR3H_TMR312              at TMR3H : 4
var volatile bit    TMR3H_TMR313              at TMR3H : 5
var volatile bit    TMR3H_TMR314              at TMR3H : 6
var volatile bit    TMR3H_TMR315              at TMR3H : 7
-- ------------------------------------------------
var volatile byte   T3CON                     at { 0x32A }
var volatile bit    T3CON_ON                  at T3CON : 0
var volatile bit    T3CON_RD16                at T3CON : 1
var volatile bit    T3CON_NOT_SYNC            at T3CON : 2
alias               T3CON_NT3SYNC             is T3CON_NOT_SYNC
alias               T3CON_T3SYNC              is T3CON_NOT_SYNC
var volatile bit*2  T3CON_CKPS                at T3CON : 4
alias               T3CON_TMR3CKPS            is T3CON_CKPS
alias               T3CON_T3CKPS              is T3CON_CKPS
var volatile bit    T3CON_TMR3ON              at T3CON : 0
var volatile bit    T3CON_T3RD16              at T3CON : 1
var volatile bit    T3CON_NOT_T3SYNC          at T3CON : 2
var volatile bit    T3CON_T3CKPS0             at T3CON : 4
var volatile bit    T3CON_T3CKPS1             at T3CON : 5
var volatile bit    T3CON_NSYNC               at T3CON : 2
var volatile bit    T3CON_CKPS0               at T3CON : 4
var volatile bit    T3CON_CKPS1               at T3CON : 5
var volatile bit    T3CON_RD163               at T3CON : 1
-- ------------------------------------------------
var volatile byte   T3GCON                    at { 0x32B }
var volatile bit    T3GCON_GVAL               at T3GCON : 2
var volatile bit    T3GCON_GGO                at T3GCON : 3
var volatile bit    T3GCON_GSPM               at T3GCON : 4
var volatile bit    T3GCON_GTM                at T3GCON : 5
var volatile bit    T3GCON_GPOL               at T3GCON : 6
var volatile bit    T3GCON_GE                 at T3GCON : 7
var volatile bit    T3GCON_T3GVAL             at T3GCON : 2
var volatile bit    T3GCON_T3GGO              at T3GCON : 3
var volatile bit    T3GCON_T3GSPM             at T3GCON : 4
var volatile bit    T3GCON_T3GTM              at T3GCON : 5
var volatile bit    T3GCON_T3GPOL             at T3GCON : 6
var volatile bit    T3GCON_T3GE               at T3GCON : 7
var volatile bit    T3GCON_NOT_DONE           at T3GCON : 3
var volatile bit    T3GCON_NOT_T3DONE         at T3GCON : 3
var volatile bit    T3GCON_GGO_NDONE          at T3GCON : 3
var volatile bit    T3GCON_T3GGO_NDONE        at T3GCON : 3
-- ------------------------------------------------
var volatile byte   T3GATE                    at { 0x32C }
var volatile bit*5  T3GATE_GSS                at T3GATE : 0
var volatile bit    T3GATE_GSS0               at T3GATE : 0
var volatile bit    T3GATE_GSS1               at T3GATE : 1
var volatile bit    T3GATE_GSS2               at T3GATE : 2
var volatile bit    T3GATE_GSS3               at T3GATE : 3
var volatile bit    T3GATE_GSS4               at T3GATE : 4
var volatile bit    T3GATE_T3GSS0             at T3GATE : 0
var volatile bit    T3GATE_T3GSS1             at T3GATE : 1
var volatile bit    T3GATE_T3GSS2             at T3GATE : 2
var volatile bit    T3GATE_T3GSS3             at T3GATE : 3
var volatile bit    T3GATE_T3GSS4             at T3GATE : 4
-- ------------------------------------------------
var volatile byte   T3CLK                     at { 0x32D }
var volatile bit*5  T3CLK_CS                  at T3CLK : 0
var volatile bit    T3CLK_T3CS0               at T3CLK : 0
var volatile bit    T3CLK_T3CS1               at T3CLK : 1
var volatile bit    T3CLK_T3CS2               at T3CLK : 2
var volatile bit    T3CLK_T3CS3               at T3CLK : 3
var volatile bit    T3CLK_T3CS4               at T3CLK : 4
var volatile bit    T3CLK_CS0                 at T3CLK : 0
var volatile bit    T3CLK_CS1                 at T3CLK : 1
var volatile bit    T3CLK_CS2                 at T3CLK : 2
var volatile bit    T3CLK_CS3                 at T3CLK : 3
var volatile bit    T3CLK_CS4                 at T3CLK : 4
-- ------------------------------------------------
var volatile byte   T4TMR                     at { 0x32E }
-- ------------------------------------------------
var volatile byte   T4PR                      at { 0x32F }
-- ------------------------------------------------
var volatile byte   T4CON                     at { 0x330 }
var volatile bit*4  T4CON_OUTPS               at T4CON : 0
var volatile bit*3  T4CON_CKPS                at T4CON : 4
alias               T4CON_TMR4CKPS            is T4CON_CKPS
alias               T4CON_T4CKPS              is T4CON_CKPS
var volatile bit    T4CON_ON                  at T4CON : 7
var volatile bit*4  T4CON_T4OUTPS             at T4CON : 0
var volatile bit    T4CON_T4ON                at T4CON : 7
var volatile bit    T4CON_T4OUTPS0            at T4CON : 0
var volatile bit    T4CON_T4OUTPS1            at T4CON : 1
var volatile bit    T4CON_T4OUTPS2            at T4CON : 2
var volatile bit    T4CON_T4OUTPS3            at T4CON : 3
var volatile bit    T4CON_T4CKPS0             at T4CON : 4
var volatile bit    T4CON_T4CKPS1             at T4CON : 5
var volatile bit    T4CON_T4CKPS2             at T4CON : 6
var volatile bit    T4CON_OUTPS0              at T4CON : 0
var volatile bit    T4CON_OUTPS1              at T4CON : 1
var volatile bit    T4CON_OUTPS2              at T4CON : 2
var volatile bit    T4CON_OUTPS3              at T4CON : 3
var volatile bit    T4CON_CKPS0               at T4CON : 4
var volatile bit    T4CON_CKPS1               at T4CON : 5
var volatile bit    T4CON_CKPS2               at T4CON : 6
var volatile bit    T4CON_TMR4ON              at T4CON : 7
-- ------------------------------------------------
var volatile byte   T4HLT                     at { 0x331 }
var volatile bit*5  T4HLT_MODE                at T4HLT : 0
var volatile bit    T4HLT_CKSYNC              at T4HLT : 5
var volatile bit    T4HLT_CKPOL               at T4HLT : 6
var volatile bit    T4HLT_PSYNC               at T4HLT : 7
var volatile bit    T4HLT_MODE0               at T4HLT : 0
var volatile bit    T4HLT_MODE1               at T4HLT : 1
var volatile bit    T4HLT_MODE2               at T4HLT : 2
var volatile bit    T4HLT_MODE3               at T4HLT : 3
var volatile bit    T4HLT_MODE4               at T4HLT : 4
var volatile bit*5  T4HLT_T4MODE              at T4HLT : 0
var volatile bit    T4HLT_T4CKSYNC            at T4HLT : 5
var volatile bit    T4HLT_T4CKPOL             at T4HLT : 6
var volatile bit    T4HLT_T4PSYNC             at T4HLT : 7
var volatile bit    T4HLT_T4MODE0             at T4HLT : 0
var volatile bit    T4HLT_T4MODE1             at T4HLT : 1
var volatile bit    T4HLT_T4MODE2             at T4HLT : 2
var volatile bit    T4HLT_T4MODE3             at T4HLT : 3
var volatile bit    T4HLT_T4MODE4             at T4HLT : 4
-- ------------------------------------------------
var volatile byte   T4CLKCON                  at { 0x332 }
var volatile bit*4  T4CLKCON_CS               at T4CLKCON : 0
var volatile bit    T4CLKCON_CS0              at T4CLKCON : 0
var volatile bit    T4CLKCON_CS1              at T4CLKCON : 1
var volatile bit    T4CLKCON_CS2              at T4CLKCON : 2
var volatile bit    T4CLKCON_CS3              at T4CLKCON : 3
var volatile bit*4  T4CLKCON_T4CS             at T4CLKCON : 0
var volatile bit    T4CLKCON_T4CS0            at T4CLKCON : 0
var volatile bit    T4CLKCON_T4CS1            at T4CLKCON : 1
var volatile bit    T4CLKCON_T4CS2            at T4CLKCON : 2
var volatile bit    T4CLKCON_T4CS3            at T4CLKCON : 3
-- ------------------------------------------------
var volatile byte   T4RST                     at { 0x333 }
var volatile bit*5  T4RST_RSEL                at T4RST : 0
var volatile bit    T4RST_RSEL0               at T4RST : 0
var volatile bit    T4RST_RSEL1               at T4RST : 1
var volatile bit    T4RST_RSEL2               at T4RST : 2
var volatile bit    T4RST_RSEL3               at T4RST : 3
var volatile bit    T4RST_RSEL4               at T4RST : 4
var volatile bit*5  T4RST_T4RSEL              at T4RST : 0
var volatile bit    T4RST_T4RSEL0             at T4RST : 0
var volatile bit    T4RST_T4RSEL1             at T4RST : 1
var volatile bit    T4RST_T4RSEL2             at T4RST : 2
var volatile bit    T4RST_T4RSEL3             at T4RST : 3
var volatile bit    T4RST_T4RSEL4             at T4RST : 4
-- ------------------------------------------------
var volatile word   TMR5                      at { 0x334 }
-- ------------------------------------------------
var volatile byte   TMR5L                     at { 0x334 }
var volatile bit    TMR5L_TMR5L0              at TMR5L : 0
var volatile bit    TMR5L_TMR5L1              at TMR5L : 1
var volatile bit    TMR5L_TMR5L2              at TMR5L : 2
var volatile bit    TMR5L_TMR5L3              at TMR5L : 3
var volatile bit    TMR5L_TMR5L4              at TMR5L : 4
var volatile bit    TMR5L_TMR5L5              at TMR5L : 5
var volatile bit    TMR5L_TMR5L6              at TMR5L : 6
var volatile bit    TMR5L_TMR5L7              at TMR5L : 7
var volatile bit    TMR5L_TMR50               at TMR5L : 0
var volatile bit    TMR5L_TMR51               at TMR5L : 1
var volatile bit    TMR5L_TMR52               at TMR5L : 2
var volatile bit    TMR5L_TMR53               at TMR5L : 3
var volatile bit    TMR5L_TMR54               at TMR5L : 4
var volatile bit    TMR5L_TMR55               at TMR5L : 5
var volatile bit    TMR5L_TMR56               at TMR5L : 6
var volatile bit    TMR5L_TMR57               at TMR5L : 7
-- ------------------------------------------------
var volatile byte   TMR5H                     at { 0x335 }
var volatile bit    TMR5H_TMR5H0              at TMR5H : 0
var volatile bit    TMR5H_TMR5H1              at TMR5H : 1
var volatile bit    TMR5H_TMR5H2              at TMR5H : 2
var volatile bit    TMR5H_TMR5H3              at TMR5H : 3
var volatile bit    TMR5H_TMR5H4              at TMR5H : 4
var volatile bit    TMR5H_TMR5H5              at TMR5H : 5
var volatile bit    TMR5H_TMR5H6              at TMR5H : 6
var volatile bit    TMR5H_TMR5H7              at TMR5H : 7
var volatile bit    TMR5H_TMR58               at TMR5H : 0
var volatile bit    TMR5H_TMR59               at TMR5H : 1
var volatile bit    TMR5H_TMR510              at TMR5H : 2
var volatile bit    TMR5H_TMR511              at TMR5H : 3
var volatile bit    TMR5H_TMR512              at TMR5H : 4
var volatile bit    TMR5H_TMR513              at TMR5H : 5
var volatile bit    TMR5H_TMR514              at TMR5H : 6
var volatile bit    TMR5H_TMR515              at TMR5H : 7
-- ------------------------------------------------
var volatile byte   T5CON                     at { 0x336 }
var volatile bit    T5CON_ON                  at T5CON : 0
var volatile bit    T5CON_RD16                at T5CON : 1
var volatile bit    T5CON_NOT_SYNC            at T5CON : 2
alias               T5CON_NT5SYNC             is T5CON_NOT_SYNC
alias               T5CON_T5SYNC              is T5CON_NOT_SYNC
var volatile bit*2  T5CON_CKPS                at T5CON : 4
alias               T5CON_TMR5CKPS            is T5CON_CKPS
alias               T5CON_T5CKPS              is T5CON_CKPS
var volatile bit    T5CON_TMR5ON              at T5CON : 0
var volatile bit    T5CON_T5RD16              at T5CON : 1
var volatile bit    T5CON_NOT_T5SYNC          at T5CON : 2
var volatile bit    T5CON_T5CKPS0             at T5CON : 4
var volatile bit    T5CON_T5CKPS1             at T5CON : 5
var volatile bit    T5CON_NSYNC               at T5CON : 2
var volatile bit    T5CON_CKPS0               at T5CON : 4
var volatile bit    T5CON_CKPS1               at T5CON : 5
var volatile bit    T5CON_RD165               at T5CON : 1
-- ------------------------------------------------
var volatile byte   T5GCON                    at { 0x337 }
var volatile bit    T5GCON_GVAL               at T5GCON : 2
var volatile bit    T5GCON_GGO                at T5GCON : 3
var volatile bit    T5GCON_GSPM               at T5GCON : 4
var volatile bit    T5GCON_GTM                at T5GCON : 5
var volatile bit    T5GCON_GPOL               at T5GCON : 6
var volatile bit    T5GCON_GE                 at T5GCON : 7
var volatile bit    T5GCON_T5GVAL             at T5GCON : 2
var volatile bit    T5GCON_T5GGO              at T5GCON : 3
var volatile bit    T5GCON_T5GSPM             at T5GCON : 4
var volatile bit    T5GCON_T5GTM              at T5GCON : 5
var volatile bit    T5GCON_T5GPOL             at T5GCON : 6
var volatile bit    T5GCON_T5GE               at T5GCON : 7
var volatile bit    T5GCON_NOT_DONE           at T5GCON : 3
var volatile bit    T5GCON_NOT_T5DONE         at T5GCON : 3
var volatile bit    T5GCON_GGO_NDONE          at T5GCON : 3
var volatile bit    T5GCON_T5GGO_NDONE        at T5GCON : 3
-- ------------------------------------------------
var volatile byte   T5GATE                    at { 0x338 }
var volatile bit*5  T5GATE_GSS                at T5GATE : 0
var volatile bit    T5GATE_GSS0               at T5GATE : 0
var volatile bit    T5GATE_GSS1               at T5GATE : 1
var volatile bit    T5GATE_GSS2               at T5GATE : 2
var volatile bit    T5GATE_GSS3               at T5GATE : 3
var volatile bit    T5GATE_GSS4               at T5GATE : 4
var volatile bit    T5GATE_T5GSS0             at T5GATE : 0
var volatile bit    T5GATE_T5GSS1             at T5GATE : 1
var volatile bit    T5GATE_T5GSS2             at T5GATE : 2
var volatile bit    T5GATE_T5GSS3             at T5GATE : 3
var volatile bit    T5GATE_T5GSS4             at T5GATE : 4
-- ------------------------------------------------
var volatile byte   T5CLK                     at { 0x339 }
var volatile bit*5  T5CLK_CS                  at T5CLK : 0
var volatile bit    T5CLK_T5CS0               at T5CLK : 0
var volatile bit    T5CLK_T5CS1               at T5CLK : 1
var volatile bit    T5CLK_T5CS2               at T5CLK : 2
var volatile bit    T5CLK_T5CS3               at T5CLK : 3
var volatile bit    T5CLK_T5CS4               at T5CLK : 4
var volatile bit    T5CLK_CS0                 at T5CLK : 0
var volatile bit    T5CLK_CS1                 at T5CLK : 1
var volatile bit    T5CLK_CS2                 at T5CLK : 2
var volatile bit    T5CLK_CS3                 at T5CLK : 3
var volatile bit    T5CLK_CS4                 at T5CLK : 4
-- ------------------------------------------------
var volatile byte   T6TMR                     at { 0x33A }
-- ------------------------------------------------
var volatile byte   T6PR                      at { 0x33B }
-- ------------------------------------------------
var volatile byte   T6CON                     at { 0x33C }
var volatile bit*4  T6CON_OUTPS               at T6CON : 0
var volatile bit*3  T6CON_CKPS                at T6CON : 4
alias               T6CON_TMR6CKPS            is T6CON_CKPS
alias               T6CON_T6CKPS              is T6CON_CKPS
var volatile bit    T6CON_ON                  at T6CON : 7
var volatile bit*4  T6CON_T6OUTPS             at T6CON : 0
var volatile bit    T6CON_T6ON                at T6CON : 7
var volatile bit    T6CON_T6OUTPS0            at T6CON : 0
var volatile bit    T6CON_T6OUTPS1            at T6CON : 1
var volatile bit    T6CON_T6OUTPS2            at T6CON : 2
var volatile bit    T6CON_T6OUTPS3            at T6CON : 3
var volatile bit    T6CON_T6CKPS0             at T6CON : 4
var volatile bit    T6CON_T6CKPS1             at T6CON : 5
var volatile bit    T6CON_T6CKPS2             at T6CON : 6
var volatile bit    T6CON_OUTPS0              at T6CON : 0
var volatile bit    T6CON_OUTPS1              at T6CON : 1
var volatile bit    T6CON_OUTPS2              at T6CON : 2
var volatile bit    T6CON_OUTPS3              at T6CON : 3
var volatile bit    T6CON_CKPS0               at T6CON : 4
var volatile bit    T6CON_CKPS1               at T6CON : 5
var volatile bit    T6CON_CKPS2               at T6CON : 6
var volatile bit    T6CON_TMR6ON              at T6CON : 7
-- ------------------------------------------------
var volatile byte   T6HLT                     at { 0x33D }
var volatile bit*5  T6HLT_MODE                at T6HLT : 0
var volatile bit    T6HLT_CKSYNC              at T6HLT : 5
var volatile bit    T6HLT_CKPOL               at T6HLT : 6
var volatile bit    T6HLT_PSYNC               at T6HLT : 7
var volatile bit    T6HLT_MODE0               at T6HLT : 0
var volatile bit    T6HLT_MODE1               at T6HLT : 1
var volatile bit    T6HLT_MODE2               at T6HLT : 2
var volatile bit    T6HLT_MODE3               at T6HLT : 3
var volatile bit    T6HLT_MODE4               at T6HLT : 4
var volatile bit*5  T6HLT_T6MODE              at T6HLT : 0
var volatile bit    T6HLT_T6CKSYNC            at T6HLT : 5
var volatile bit    T6HLT_T6CKPOL             at T6HLT : 6
var volatile bit    T6HLT_T6PSYNC             at T6HLT : 7
var volatile bit    T6HLT_T6MODE0             at T6HLT : 0
var volatile bit    T6HLT_T6MODE1             at T6HLT : 1
var volatile bit    T6HLT_T6MODE2             at T6HLT : 2
var volatile bit    T6HLT_T6MODE3             at T6HLT : 3
var volatile bit    T6HLT_T6MODE4             at T6HLT : 4
-- ------------------------------------------------
var volatile byte   T6CLKCON                  at { 0x33E }
var volatile bit*4  T6CLKCON_CS               at T6CLKCON : 0
var volatile bit    T6CLKCON_CS0              at T6CLKCON : 0
var volatile bit    T6CLKCON_CS1              at T6CLKCON : 1
var volatile bit    T6CLKCON_CS2              at T6CLKCON : 2
var volatile bit    T6CLKCON_CS3              at T6CLKCON : 3
var volatile bit*4  T6CLKCON_T6CS             at T6CLKCON : 0
var volatile bit    T6CLKCON_T6CS0            at T6CLKCON : 0
var volatile bit    T6CLKCON_T6CS1            at T6CLKCON : 1
var volatile bit    T6CLKCON_T6CS2            at T6CLKCON : 2
var volatile bit    T6CLKCON_T6CS3            at T6CLKCON : 3
-- ------------------------------------------------
var volatile byte   T6RST                     at { 0x33F }
var volatile bit*5  T6RST_RSEL                at T6RST : 0
var volatile bit    T6RST_RSEL0               at T6RST : 0
var volatile bit    T6RST_RSEL1               at T6RST : 1
var volatile bit    T6RST_RSEL2               at T6RST : 2
var volatile bit    T6RST_RSEL3               at T6RST : 3
var volatile bit    T6RST_RSEL4               at T6RST : 4
var volatile bit*5  T6RST_T6RSEL              at T6RST : 0
var volatile bit    T6RST_T6RSEL0             at T6RST : 0
var volatile bit    T6RST_T6RSEL1             at T6RST : 1
var volatile bit    T6RST_T6RSEL2             at T6RST : 2
var volatile bit    T6RST_T6RSEL3             at T6RST : 3
var volatile bit    T6RST_T6RSEL4             at T6RST : 4
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0x340 }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0x340 }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0x341 }
-- ------------------------------------------------
var volatile byte   CCP1CON                   at { 0x342 }
var volatile bit*4  CCP1CON_MODE              at CCP1CON : 0
var volatile bit    CCP1CON_FMT               at CCP1CON : 4
var volatile bit    CCP1CON_OUT               at CCP1CON : 5
var volatile bit    CCP1CON_EN                at CCP1CON : 7
var volatile bit    CCP1CON_MODE0             at CCP1CON : 0
var volatile bit    CCP1CON_MODE1             at CCP1CON : 1
var volatile bit    CCP1CON_MODE2             at CCP1CON : 2
var volatile bit    CCP1CON_MODE3             at CCP1CON : 3
var volatile bit*4  CCP1CON_CCP1MODE          at CCP1CON : 0
var volatile bit    CCP1CON_CCP1FMT           at CCP1CON : 4
var volatile bit    CCP1CON_CCP1OUT           at CCP1CON : 5
var volatile bit    CCP1CON_CCP1EN            at CCP1CON : 7
var volatile bit    CCP1CON_CCP1MODE0         at CCP1CON : 0
var volatile bit    CCP1CON_CCP1MODE1         at CCP1CON : 1
var volatile bit    CCP1CON_CCP1MODE2         at CCP1CON : 2
var volatile bit    CCP1CON_CCP1MODE3         at CCP1CON : 3
-- ------------------------------------------------
var volatile byte   CCP1CAP                   at { 0x343 }
var volatile bit*4  CCP1CAP_CTS               at CCP1CAP : 0
var volatile bit    CCP1CAP_CTS0              at CCP1CAP : 0
var volatile bit    CCP1CAP_CTS1              at CCP1CAP : 1
var volatile bit    CCP1CAP_CTS2              at CCP1CAP : 2
var volatile bit    CCP1CAP_CTS3              at CCP1CAP : 3
var volatile bit*4  CCP1CAP_CCP1CTS           at CCP1CAP : 0
var volatile bit    CCP1CAP_CCP1CTS0          at CCP1CAP : 0
var volatile bit    CCP1CAP_CCP1CTS1          at CCP1CAP : 1
var volatile bit    CCP1CAP_CCP1CTS2          at CCP1CAP : 2
var volatile bit    CCP1CAP_CCP1CTS3          at CCP1CAP : 3
-- ------------------------------------------------
var volatile word   CCPR2                     at { 0x344 }
-- ------------------------------------------------
var volatile byte   CCPR2L                    at { 0x344 }
-- ------------------------------------------------
var volatile byte   CCPR2H                    at { 0x345 }
-- ------------------------------------------------
var volatile byte   CCP2CON                   at { 0x346 }
var volatile bit*4  CCP2CON_MODE              at CCP2CON : 0
var volatile bit    CCP2CON_FMT               at CCP2CON : 4
var volatile bit    CCP2CON_OUT               at CCP2CON : 5
var volatile bit    CCP2CON_EN                at CCP2CON : 7
var volatile bit    CCP2CON_MODE0             at CCP2CON : 0
var volatile bit    CCP2CON_MODE1             at CCP2CON : 1
var volatile bit    CCP2CON_MODE2             at CCP2CON : 2
var volatile bit    CCP2CON_MODE3             at CCP2CON : 3
var volatile bit*4  CCP2CON_CCP2MODE          at CCP2CON : 0
var volatile bit    CCP2CON_CCP2FMT           at CCP2CON : 4
var volatile bit    CCP2CON_CCP2OUT           at CCP2CON : 5
var volatile bit    CCP2CON_CCP2EN            at CCP2CON : 7
var volatile bit    CCP2CON_CCP2MODE0         at CCP2CON : 0
var volatile bit    CCP2CON_CCP2MODE1         at CCP2CON : 1
var volatile bit    CCP2CON_CCP2MODE2         at CCP2CON : 2
var volatile bit    CCP2CON_CCP2MODE3         at CCP2CON : 3
-- ------------------------------------------------
var volatile byte   CCP2CAP                   at { 0x347 }
var volatile bit*4  CCP2CAP_CTS               at CCP2CAP : 0
var volatile bit    CCP2CAP_CTS0              at CCP2CAP : 0
var volatile bit    CCP2CAP_CTS1              at CCP2CAP : 1
var volatile bit    CCP2CAP_CTS2              at CCP2CAP : 2
var volatile bit    CCP2CAP_CTS3              at CCP2CAP : 3
var volatile bit*4  CCP2CAP_CCP2CTS           at CCP2CAP : 0
var volatile bit    CCP2CAP_CCP2CTS0          at CCP2CAP : 0
var volatile bit    CCP2CAP_CCP2CTS1          at CCP2CAP : 1
var volatile bit    CCP2CAP_CCP2CTS2          at CCP2CAP : 2
var volatile bit    CCP2CAP_CCP2CTS3          at CCP2CAP : 3
-- ------------------------------------------------
var volatile word   CCPR3                     at { 0x348 }
-- ------------------------------------------------
var volatile byte   CCPR3L                    at { 0x348 }
-- ------------------------------------------------
var volatile byte   CCPR3H                    at { 0x349 }
-- ------------------------------------------------
var volatile byte   CCP3CON                   at { 0x34A }
var volatile bit*4  CCP3CON_MODE              at CCP3CON : 0
var volatile bit    CCP3CON_FMT               at CCP3CON : 4
var volatile bit    CCP3CON_OUT               at CCP3CON : 5
var volatile bit    CCP3CON_EN                at CCP3CON : 7
var volatile bit    CCP3CON_MODE0             at CCP3CON : 0
var volatile bit    CCP3CON_MODE1             at CCP3CON : 1
var volatile bit    CCP3CON_MODE2             at CCP3CON : 2
var volatile bit    CCP3CON_MODE3             at CCP3CON : 3
var volatile bit*4  CCP3CON_CCP3MODE          at CCP3CON : 0
var volatile bit    CCP3CON_CCP3FMT           at CCP3CON : 4
var volatile bit    CCP3CON_CCP3OUT           at CCP3CON : 5
var volatile bit    CCP3CON_CCP3EN            at CCP3CON : 7
var volatile bit    CCP3CON_CCP3MODE0         at CCP3CON : 0
var volatile bit    CCP3CON_CCP3MODE1         at CCP3CON : 1
var volatile bit    CCP3CON_CCP3MODE2         at CCP3CON : 2
var volatile bit    CCP3CON_CCP3MODE3         at CCP3CON : 3
-- ------------------------------------------------
var volatile byte   CCP3CAP                   at { 0x34B }
var volatile bit*4  CCP3CAP_CTS               at CCP3CAP : 0
var volatile bit    CCP3CAP_CTS0              at CCP3CAP : 0
var volatile bit    CCP3CAP_CTS1              at CCP3CAP : 1
var volatile bit    CCP3CAP_CTS2              at CCP3CAP : 2
var volatile bit    CCP3CAP_CTS3              at CCP3CAP : 3
var volatile bit*4  CCP3CAP_CCP3CTS           at CCP3CAP : 0
var volatile bit    CCP3CAP_CCP3CTS0          at CCP3CAP : 0
var volatile bit    CCP3CAP_CCP3CTS1          at CCP3CAP : 1
var volatile bit    CCP3CAP_CCP3CTS2          at CCP3CAP : 2
var volatile bit    CCP3CAP_CCP3CTS3          at CCP3CAP : 3
-- ------------------------------------------------
var volatile byte   CCPTMRS0                  at { 0x34C }
var volatile bit*2  CCPTMRS0_C1TSEL           at CCPTMRS0 : 0
var volatile bit*2  CCPTMRS0_C2TSEL           at CCPTMRS0 : 2
var volatile bit*2  CCPTMRS0_C3TSEL           at CCPTMRS0 : 4
var volatile bit    CCPTMRS0_C1TSEL0          at CCPTMRS0 : 0
var volatile bit    CCPTMRS0_C1TSEL1          at CCPTMRS0 : 1
var volatile bit    CCPTMRS0_C2TSEL0          at CCPTMRS0 : 2
var volatile bit    CCPTMRS0_C2TSEL1          at CCPTMRS0 : 3
var volatile bit    CCPTMRS0_C3TSEL0          at CCPTMRS0 : 4
var volatile bit    CCPTMRS0_C3TSEL1          at CCPTMRS0 : 5
-- ------------------------------------------------
var volatile dword  CRCDATA                   at { 0x34F }
-- ------------------------------------------------
var volatile byte   CRCDATAL                  at { 0x34F }
var volatile bit    CRCDATAL_DATA0            at CRCDATAL : 0
var volatile bit    CRCDATAL_DATA1            at CRCDATAL : 1
var volatile bit    CRCDATAL_DATA2            at CRCDATAL : 2
var volatile bit    CRCDATAL_DATA3            at CRCDATAL : 3
var volatile bit    CRCDATAL_DATA4            at CRCDATAL : 4
var volatile bit    CRCDATAL_DATA5            at CRCDATAL : 5
var volatile bit    CRCDATAL_DATA6            at CRCDATAL : 6
var volatile bit    CRCDATAL_DATA7            at CRCDATAL : 7
-- ------------------------------------------------
var volatile byte   CRCDATAH                  at { 0x350 }
var volatile bit    CRCDATAH_DATA8            at CRCDATAH : 0
var volatile bit    CRCDATAH_DATA9            at CRCDATAH : 1
var volatile bit    CRCDATAH_DATA10           at CRCDATAH : 2
var volatile bit    CRCDATAH_DATA11           at CRCDATAH : 3
var volatile bit    CRCDATAH_DATA12           at CRCDATAH : 4
var volatile bit    CRCDATAH_DATA13           at CRCDATAH : 5
var volatile bit    CRCDATAH_DATA14           at CRCDATAH : 6
var volatile bit    CRCDATAH_DATA15           at CRCDATAH : 7
-- ------------------------------------------------
var volatile byte   CRCDATAU                  at { 0x351 }
var volatile bit    CRCDATAU_DATA16           at CRCDATAU : 0
var volatile bit    CRCDATAU_DATA17           at CRCDATAU : 1
var volatile bit    CRCDATAU_DATA18           at CRCDATAU : 2
var volatile bit    CRCDATAU_DATA19           at CRCDATAU : 3
var volatile bit    CRCDATAU_DATA20           at CRCDATAU : 4
var volatile bit    CRCDATAU_DATA21           at CRCDATAU : 5
var volatile bit    CRCDATAU_DATA22           at CRCDATAU : 6
var volatile bit    CRCDATAU_DATA23           at CRCDATAU : 7
-- ------------------------------------------------
var volatile byte   CRCDATAT                  at { 0x352 }
var volatile bit    CRCDATAT_DATA24           at CRCDATAT : 0
var volatile bit    CRCDATAT_DATA25           at CRCDATAT : 1
var volatile bit    CRCDATAT_DATA26           at CRCDATAT : 2
var volatile bit    CRCDATAT_DATA27           at CRCDATAT : 3
var volatile bit    CRCDATAT_DATA28           at CRCDATAT : 4
var volatile bit    CRCDATAT_DATA29           at CRCDATAT : 5
var volatile bit    CRCDATAT_DATA30           at CRCDATAT : 6
var volatile bit    CRCDATAT_DATA31           at CRCDATAT : 7
-- ------------------------------------------------
var volatile dword  CRCOUT                    at { 0x353 }
var volatile byte   CRCOUTL_                  at { 0x353 }
--
procedure CRCOUTL'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   CRCOUTL_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCOUTL'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   x = CRCOUTL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCOUTL_OUT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCOUTL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCOUTL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTL_OUT7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTL_OUT7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCSHFTL_                 at { 0x353 }
--
procedure CRCSHFTL'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   CRCSHFTL_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCSHFTL'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   x = CRCSHFTL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCSHFTL_SHIFT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCSHFTL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCSHFTL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTL_SHIFT7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTL_SHIFT7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCXORL_                  at { 0x353 }
--
procedure CRCXORL'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   CRCXORL_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCXORL'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   x = CRCXORL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCXORL_XOR'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCXORL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCXORL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORL_XOR7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORL_XOR7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCOUTH_                  at { 0x354 }
--
procedure CRCOUTH'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   CRCOUTH_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCOUTH'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   x = CRCOUTH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCOUTH_OUT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCOUTH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCOUTH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTH_OUT15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTH_OUT15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCSHFTH_                 at { 0x354 }
--
procedure CRCSHFTH'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   CRCSHFTH_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCSHFTH'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   x = CRCSHFTH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCSHFTH_SHIFT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCSHFTH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCSHFTH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTH_SHIFT15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTH_SHIFT15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCXORH_                  at { 0x354 }
--
procedure CRCXORH'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   CRCXORH_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCXORH'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   x = CRCXORH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCXORH_XOR'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCXORH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCXORH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORH_XOR15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORH_XOR15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCOUTU_                  at { 0x355 }
--
procedure CRCOUTU'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   CRCOUTU_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCOUTU'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   x = CRCOUTU_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCOUTU_OUT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCOUTU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCOUTU_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT16'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT16'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT17'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT17'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT18'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT18'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT19'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT19'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT20'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT20'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT21'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT21'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT22'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT22'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTU_OUT23'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTU_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTU_OUT23'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTU_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCSHFTU_                 at { 0x355 }
--
procedure CRCSHFTU'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   CRCSHFTU_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCSHFTU'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   x = CRCSHFTU_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCSHFTU_SHIFT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCSHFTU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCSHFTU_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT16'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT16'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT17'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT17'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT18'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT18'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT19'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT19'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT20'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT20'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT21'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT21'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT22'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT22'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTU_SHIFT23'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTU_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTU_SHIFT23'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTU_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCXORU_                  at { 0x355 }
--
procedure CRCXORU'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   CRCXORU_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCXORU'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   x = CRCXORU_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCXORU_XOR'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCXORU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCXORU_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR16'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR16'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR17'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR17'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR18'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR18'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR19'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR19'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR20'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR20'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR21'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR21'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR22'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR22'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORU_XOR23'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORU_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORU_XOR23'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORU_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCOUTT_                  at { 0x356 }
--
procedure CRCOUTT'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   CRCOUTT_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCOUTT'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x00
   x = CRCOUTT_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCOUTT_OUT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCOUTT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCOUTT_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT24'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT24'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT25'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT25'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT26'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT26'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT27'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT27'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT28'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT28'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT29'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT29'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT30'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT30'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCOUTT_OUT31'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCOUTT_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCOUTT_OUT31'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCOUTT_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCSHFTT_                 at { 0x356 }
--
procedure CRCSHFTT'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   CRCSHFTT_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCSHFTT'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x04
   x = CRCSHFTT_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCSHFTT_SHIFT'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCSHFTT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCSHFTT_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT24'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT24'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT25'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT25'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT26'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT26'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT27'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT27'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT28'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT28'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT29'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT29'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT30'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT30'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCSHFTT_SHIFT31'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCSHFTT_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCSHFTT_SHIFT31'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCSHFTT_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   CRCXORT_                  at { 0x356 }
--
procedure CRCXORT'put(byte in x) is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   CRCXORT_ = x
   _control_sfr = _saved_sfr
end procedure
function CRCXORT'get() return byte is
   var volatile byte _control_sfr at 0xC
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x0C)
   _control_sfr = _control_sfr | 0x08
   x = CRCXORT_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure CRCXORT_XOR'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at CRCXORT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at CRCXORT_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR24'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR24'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR25'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR25'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR26'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR26'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR27'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR27'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR28'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR28'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR29'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR29'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR30'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR30'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure CRCXORT_XOR31'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at CRCXORT_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function CRCXORT_XOR31'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at CRCXORT_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
-- ------------------------------------------------
var volatile byte   CRCCON0                   at { 0x357 }
var volatile bit    CRCCON0_FULL              at CRCCON0 : 0
var volatile bit    CRCCON0_SHIFTM            at CRCCON0 : 1
var volatile bit*2  CRCCON0_SETUP             at CRCCON0 : 2
var volatile bit    CRCCON0_ACCMOD            at CRCCON0 : 4
var volatile bit    CRCCON0_CRCBUSY           at CRCCON0 : 5
var volatile bit    CRCCON0_CRCGO             at CRCCON0 : 6
var volatile bit    CRCCON0_CRCEN             at CRCCON0 : 7
var volatile bit    CRCCON0_LENDIAN           at CRCCON0 : 1
var volatile bit    CRCCON0_SETUP0            at CRCCON0 : 2
var volatile bit    CRCCON0_SETUP1            at CRCCON0 : 3
var volatile bit    CRCCON0_ACCM              at CRCCON0 : 4
var volatile bit    CRCCON0_BUSY              at CRCCON0 : 5
var volatile bit    CRCCON0_GO                at CRCCON0 : 6
var volatile bit    CRCCON0_EN                at CRCCON0 : 7
-- ------------------------------------------------
var volatile byte   CRCCON1                   at { 0x358 }
var volatile bit*5  CRCCON1_PLEN              at CRCCON1 : 0
var volatile bit    CRCCON1_PLEN0             at CRCCON1 : 0
var volatile bit    CRCCON1_PLEN1             at CRCCON1 : 1
var volatile bit    CRCCON1_PLEN2             at CRCCON1 : 2
var volatile bit    CRCCON1_PLEN3             at CRCCON1 : 3
var volatile bit    CRCCON1_PLEN4             at CRCCON1 : 4
-- ------------------------------------------------
var volatile byte   CRCCON2                   at { 0x359 }
var volatile bit*5  CRCCON2_DLEN              at CRCCON2 : 0
var volatile bit    CRCCON2_DLEN0             at CRCCON2 : 0
var volatile bit    CRCCON2_DLEN1             at CRCCON2 : 1
var volatile bit    CRCCON2_DLEN2             at CRCCON2 : 2
var volatile bit    CRCCON2_DLEN3             at CRCCON2 : 3
var volatile bit    CRCCON2_DLEN4             at CRCCON2 : 4
-- ------------------------------------------------
var volatile byte*3 SCANLADR                  at { 0x35A }
-- ------------------------------------------------
var volatile byte   SCANLADRL                 at { 0x35A }
var volatile bit    SCANLADRL_LADR0           at SCANLADRL : 0
var volatile bit    SCANLADRL_LADR1           at SCANLADRL : 1
var volatile bit    SCANLADRL_LADR2           at SCANLADRL : 2
var volatile bit    SCANLADRL_LADR3           at SCANLADRL : 3
var volatile bit    SCANLADRL_LADR4           at SCANLADRL : 4
var volatile bit    SCANLADRL_LADR5           at SCANLADRL : 5
var volatile bit    SCANLADRL_LADR6           at SCANLADRL : 6
var volatile bit    SCANLADRL_LADR7           at SCANLADRL : 7
var volatile bit    SCANLADRL_SCANLADR0       at SCANLADRL : 0
var volatile bit    SCANLADRL_SCANLADR1       at SCANLADRL : 1
var volatile bit    SCANLADRL_SCANLADR2       at SCANLADRL : 2
var volatile bit    SCANLADRL_SCANLADR3       at SCANLADRL : 3
var volatile bit    SCANLADRL_SCANLADR4       at SCANLADRL : 4
var volatile bit    SCANLADRL_SCANLADR5       at SCANLADRL : 5
var volatile bit    SCANLADRL_SCANLADR6       at SCANLADRL : 6
var volatile bit    SCANLADRL_SCANLADR7       at SCANLADRL : 7
-- ------------------------------------------------
var volatile byte   SCANLADRH                 at { 0x35B }
var volatile bit    SCANLADRH_LADR8           at SCANLADRH : 0
var volatile bit    SCANLADRH_LADR9           at SCANLADRH : 1
var volatile bit    SCANLADRH_LADR10          at SCANLADRH : 2
var volatile bit    SCANLADRH_LADR11          at SCANLADRH : 3
var volatile bit    SCANLADRH_LADR12          at SCANLADRH : 4
var volatile bit    SCANLADRH_LADR13          at SCANLADRH : 5
var volatile bit    SCANLADRH_LADR14          at SCANLADRH : 6
var volatile bit    SCANLADRH_LADR15          at SCANLADRH : 7
var volatile bit    SCANLADRH_SCANLADR8       at SCANLADRH : 0
var volatile bit    SCANLADRH_SCANLADR9       at SCANLADRH : 1
var volatile bit    SCANLADRH_SCANLADR10      at SCANLADRH : 2
var volatile bit    SCANLADRH_SCANLADR11      at SCANLADRH : 3
var volatile bit    SCANLADRH_SCANLADR12      at SCANLADRH : 4
var volatile bit    SCANLADRH_SCANLADR13      at SCANLADRH : 5
var volatile bit    SCANLADRH_SCANLADR14      at SCANLADRH : 6
var volatile bit    SCANLADRH_SCANLADR15      at SCANLADRH : 7
-- ------------------------------------------------
var volatile byte   SCANLADRU                 at { 0x35C }
var volatile bit*6  SCANLADRU_LADR            at SCANLADRU : 0
var volatile bit    SCANLADRU_LADR16          at SCANLADRU : 0
var volatile bit    SCANLADRU_LADR17          at SCANLADRU : 1
var volatile bit    SCANLADRU_LADR18          at SCANLADRU : 2
var volatile bit    SCANLADRU_LADR19          at SCANLADRU : 3
var volatile bit    SCANLADRU_LADR20          at SCANLADRU : 4
var volatile bit    SCANLADRU_LADR21          at SCANLADRU : 5
var volatile bit*6  SCANLADRU_SCANLADR        at SCANLADRU : 0
var volatile bit    SCANLADRU_SCANLADR16      at SCANLADRU : 0
var volatile bit    SCANLADRU_SCANLADR17      at SCANLADRU : 1
var volatile bit    SCANLADRU_SCANLADR18      at SCANLADRU : 2
var volatile bit    SCANLADRU_SCANLADR19      at SCANLADRU : 3
var volatile bit    SCANLADRU_SCANLADR20      at SCANLADRU : 4
var volatile bit    SCANLADRU_SCANLADR21      at SCANLADRU : 5
-- ------------------------------------------------
var volatile byte*3 SCANHADR                  at { 0x35D }
-- ------------------------------------------------
var volatile byte   SCANHADRL                 at { 0x35D }
var volatile bit    SCANHADRL_HADR0           at SCANHADRL : 0
var volatile bit    SCANHADRL_HADR1           at SCANHADRL : 1
var volatile bit    SCANHADRL_HADR2           at SCANHADRL : 2
var volatile bit    SCANHADRL_HADR3           at SCANHADRL : 3
var volatile bit    SCANHADRL_HADR4           at SCANHADRL : 4
var volatile bit    SCANHADRL_HADR5           at SCANHADRL : 5
var volatile bit    SCANHADRL_HADR6           at SCANHADRL : 6
var volatile bit    SCANHADRL_HADR7           at SCANHADRL : 7
var volatile bit    SCANHADRL_SCANHADR0       at SCANHADRL : 0
var volatile bit    SCANHADRL_SCANHADR1       at SCANHADRL : 1
var volatile bit    SCANHADRL_SCANHADR2       at SCANHADRL : 2
var volatile bit    SCANHADRL_SCANHADR3       at SCANHADRL : 3
var volatile bit    SCANHADRL_SCANHADR4       at SCANHADRL : 4
var volatile bit    SCANHADRL_SCANHADR5       at SCANHADRL : 5
var volatile bit    SCANHADRL_SCANHADR6       at SCANHADRL : 6
var volatile bit    SCANHADRL_SCANHADR7       at SCANHADRL : 7
-- ------------------------------------------------
var volatile byte   SCANHADRH                 at { 0x35E }
var volatile bit    SCANHADRH_HADR8           at SCANHADRH : 0
var volatile bit    SCANHADRH_HADR9           at SCANHADRH : 1
var volatile bit    SCANHADRH_HADR10          at SCANHADRH : 2
var volatile bit    SCANHADRH_HADR11          at SCANHADRH : 3
var volatile bit    SCANHADRH_HADR12          at SCANHADRH : 4
var volatile bit    SCANHADRH_HADR13          at SCANHADRH : 5
var volatile bit    SCANHADRH_HADR14          at SCANHADRH : 6
var volatile bit    SCANHADRH_HADR15          at SCANHADRH : 7
var volatile bit    SCANHADRH_SCANHADR8       at SCANHADRH : 0
var volatile bit    SCANHADRH_SCANHADR9       at SCANHADRH : 1
var volatile bit    SCANHADRH_SCANHADR10      at SCANHADRH : 2
var volatile bit    SCANHADRH_SCANHADR11      at SCANHADRH : 3
var volatile bit    SCANHADRH_SCANHADR12      at SCANHADRH : 4
var volatile bit    SCANHADRH_SCANHADR13      at SCANHADRH : 5
var volatile bit    SCANHADRH_SCANHADR14      at SCANHADRH : 6
var volatile bit    SCANHADRH_SCANHADR15      at SCANHADRH : 7
-- ------------------------------------------------
var volatile byte   SCANHADRU                 at { 0x35F }
var volatile bit*6  SCANHADRU_HADR            at SCANHADRU : 0
var volatile bit    SCANHADRU_HADR16          at SCANHADRU : 0
var volatile bit    SCANHADRU_HADR17          at SCANHADRU : 1
var volatile bit    SCANHADRU_HADR18          at SCANHADRU : 2
var volatile bit    SCANHADRU_HADR19          at SCANHADRU : 3
var volatile bit    SCANHADRU_HADR20          at SCANHADRU : 4
var volatile bit    SCANHADRU_HADR21          at SCANHADRU : 5
var volatile bit*6  SCANHADRU_SCANHADR        at SCANHADRU : 0
var volatile bit    SCANHADRU_SCANHADR16      at SCANHADRU : 0
var volatile bit    SCANHADRU_SCANHADR17      at SCANHADRU : 1
var volatile bit    SCANHADRU_SCANHADR18      at SCANHADRU : 2
var volatile bit    SCANHADRU_SCANHADR19      at SCANHADRU : 3
var volatile bit    SCANHADRU_SCANHADR20      at SCANHADRU : 4
var volatile bit    SCANHADRU_SCANHADR21      at SCANHADRU : 5
-- ------------------------------------------------
var volatile byte   SCANCON0                  at { 0x360 }
var volatile bit    SCANCON0_BUSY             at SCANCON0 : 0
var volatile bit    SCANCON0_BURSTMD          at SCANCON0 : 1
var volatile bit    SCANCON0_MREG             at SCANCON0 : 2
var volatile bit    SCANCON0_SGO              at SCANCON0 : 5
var volatile bit    SCANCON0_TRIGEN           at SCANCON0 : 6
var volatile bit    SCANCON0_EN               at SCANCON0 : 7
var volatile bit    SCANCON0_SCANEN           at SCANCON0 : 7
-- ------------------------------------------------
var volatile byte   SCANTRIG                  at { 0x361 }
var volatile bit*5  SCANTRIG_TSEL             at SCANTRIG : 0
var volatile bit    SCANTRIG_TSEL0            at SCANTRIG : 0
var volatile bit    SCANTRIG_TSEL1            at SCANTRIG : 1
var volatile bit    SCANTRIG_TSEL2            at SCANTRIG : 2
var volatile bit    SCANTRIG_TSEL3            at SCANTRIG : 3
var volatile bit    SCANTRIG_TSEL4            at SCANTRIG : 4
var volatile bit*5  SCANTRIG_SCANTSEL         at SCANTRIG : 0
-- ------------------------------------------------
var volatile byte   IPR0                      at { 0x362 }
var volatile bit    IPR0_SWIP                 at IPR0 : 0
var volatile bit    IPR0_HLVDIP               at IPR0 : 1
var volatile bit    IPR0_OSFIP                at IPR0 : 2
var volatile bit    IPR0_CSWIP                at IPR0 : 3
var volatile bit    IPR0_TU16AIP              at IPR0 : 4
var volatile bit    IPR0_CLC1IP               at IPR0 : 5
var volatile bit    IPR0_CANIP                at IPR0 : 6
var volatile bit    IPR0_IOCIP                at IPR0 : 7
-- ------------------------------------------------
var volatile byte   IPR1                      at { 0x363 }
var volatile bit    IPR1_INT0IP               at IPR1 : 0
var volatile bit    IPR1_ZCDIP                at IPR1 : 1
var volatile bit    IPR1_ADIP                 at IPR1 : 2
var volatile bit    IPR1_ACTIP                at IPR1 : 3
var volatile bit    IPR1_C1IP                 at IPR1 : 4
var volatile bit    IPR1_SMT1IP               at IPR1 : 5
var volatile bit    IPR1_SMT1PRAIP            at IPR1 : 6
var volatile bit    IPR1_SMT1PWAIP            at IPR1 : 7
-- ------------------------------------------------
var volatile byte   IPR2                      at { 0x364 }
var volatile bit    IPR2_ADTIP                at IPR2 : 0
var volatile bit    IPR2_ADCH2IP              at IPR2 : 1
var volatile bit    IPR2_ADCH3IP              at IPR2 : 2
var volatile bit    IPR2_ADCH4IP              at IPR2 : 3
var volatile bit    IPR2_DMA1SCNTIP           at IPR2 : 4
var volatile bit    IPR2_DMA1DCNTIP           at IPR2 : 5
var volatile bit    IPR2_DMA1ORIP             at IPR2 : 6
var volatile bit    IPR2_DMA1AIP              at IPR2 : 7
var volatile bit    IPR2_ADCH1IP              at IPR2 : 0
-- ------------------------------------------------
var volatile byte   IPR3                      at { 0x365 }
var volatile bit    IPR3_SPI1RXIP             at IPR3 : 0
var volatile bit    IPR3_SPI1TXIP             at IPR3 : 1
var volatile bit    IPR3_SPI1IP               at IPR3 : 2
var volatile bit    IPR3_TMR2IP               at IPR3 : 3
var volatile bit    IPR3_TMR1IP               at IPR3 : 4
var volatile bit    IPR3_TMR1GIP              at IPR3 : 5
var volatile bit    IPR3_CCP1IP               at IPR3 : 6
alias               IPR3_CCPIP                is IPR3_CCP1IP
var volatile bit    IPR3_TMR0IP               at IPR3 : 7
-- ------------------------------------------------
var volatile byte   IPR4                      at { 0x366 }
var volatile bit    IPR4_U1RXIP               at IPR4 : 0
var volatile bit    IPR4_U1TXIP               at IPR4 : 1
var volatile bit    IPR4_U1EIP                at IPR4 : 2
var volatile bit    IPR4_U1IP                 at IPR4 : 3
var volatile bit    IPR4_CANRXIP              at IPR4 : 4
var volatile bit    IPR4_CANTXIP              at IPR4 : 5
var volatile bit    IPR4_PWM1PIP              at IPR4 : 6
var volatile bit    IPR4_PWM1IP               at IPR4 : 7
-- ------------------------------------------------
var volatile byte   IPR5                      at { 0x367 }
var volatile bit    IPR5_SPI2RXIP             at IPR5 : 0
var volatile bit    IPR5_SPI2TXIP             at IPR5 : 1
var volatile bit    IPR5_SPI2IP               at IPR5 : 2
var volatile bit    IPR5_TU16BIP              at IPR5 : 3
var volatile bit    IPR5_TMR3IP               at IPR5 : 4
var volatile bit    IPR5_TMR3GIP              at IPR5 : 5
var volatile bit    IPR5_PWM2PIP              at IPR5 : 6
var volatile bit    IPR5_PWM2IP               at IPR5 : 7
-- ------------------------------------------------
var volatile byte   IPR6                      at { 0x368 }
var volatile bit    IPR6_INT1IP               at IPR6 : 0
var volatile bit    IPR6_CLC2IP               at IPR6 : 1
var volatile bit    IPR6_CWG1IP               at IPR6 : 2
var volatile bit    IPR6_NCO1IP               at IPR6 : 3
var volatile bit    IPR6_DMA2SCNTIP           at IPR6 : 4
var volatile bit    IPR6_DMA2DCNTIP           at IPR6 : 5
var volatile bit    IPR6_DMA2ORIP             at IPR6 : 6
var volatile bit    IPR6_DMA2AIP              at IPR6 : 7
-- ------------------------------------------------
var volatile byte   IPR7                      at { 0x369 }
var volatile bit    IPR7_I2C1RXIP             at IPR7 : 0
var volatile bit    IPR7_I2C1TXIP             at IPR7 : 1
var volatile bit    IPR7_I2C1IP               at IPR7 : 2
var volatile bit    IPR7_I2C1EIP              at IPR7 : 3
var volatile bit    IPR7_CLC3IP               at IPR7 : 5
var volatile bit    IPR7_PWM3PIP              at IPR7 : 6
var volatile bit    IPR7_PWM3IP               at IPR7 : 7
-- ------------------------------------------------
var volatile byte   IPR8                      at { 0x36A }
var volatile bit    IPR8_U2RXIP               at IPR8 : 0
var volatile bit    IPR8_U2TXIP               at IPR8 : 1
var volatile bit    IPR8_U2EIP                at IPR8 : 2
var volatile bit    IPR8_U2IP                 at IPR8 : 3
var volatile bit    IPR8_TMR5IP               at IPR8 : 4
var volatile bit    IPR8_TMR5GIP              at IPR8 : 5
var volatile bit    IPR8_CCP2IP               at IPR8 : 6
var volatile bit    IPR8_SCANIP               at IPR8 : 7
-- ------------------------------------------------
var volatile byte   IPR9                      at { 0x36B }
var volatile bit    IPR9_U3RXIP               at IPR9 : 0
var volatile bit    IPR9_U3TXIP               at IPR9 : 1
var volatile bit    IPR9_U3EIP                at IPR9 : 2
var volatile bit    IPR9_U3IP                 at IPR9 : 3
var volatile bit    IPR9_CLC4IP               at IPR9 : 5
var volatile bit    IPR9_PWM4PIP              at IPR9 : 6
var volatile bit    IPR9_PWM4IP               at IPR9 : 7
-- ------------------------------------------------
var volatile byte   IPR10                     at { 0x36C }
var volatile bit    IPR10_INT2IP              at IPR10 : 0
var volatile bit    IPR10_CLC5IP              at IPR10 : 1
var volatile bit    IPR10_CWG2IP              at IPR10 : 2
var volatile bit    IPR10_NCO2IP              at IPR10 : 3
var volatile bit    IPR10_DMA3SCNTIP          at IPR10 : 4
var volatile bit    IPR10_DMA3DCNTIP          at IPR10 : 5
var volatile bit    IPR10_DMA3ORIP            at IPR10 : 6
var volatile bit    IPR10_DMA3AIP             at IPR10 : 7
-- ------------------------------------------------
var volatile byte   IPR11                     at { 0x36D }
var volatile bit    IPR11_CCP3IP              at IPR11 : 0
var volatile bit    IPR11_CLC6IP              at IPR11 : 1
var volatile bit    IPR11_CWG3IP              at IPR11 : 2
var volatile bit    IPR11_TMR4IP              at IPR11 : 3
var volatile bit    IPR11_DMA4SCNTIP          at IPR11 : 4
var volatile bit    IPR11_DMA4DCNTIP          at IPR11 : 5
var volatile bit    IPR11_DMA4ORIP            at IPR11 : 6
var volatile bit    IPR11_DMA4AIP             at IPR11 : 7
-- ------------------------------------------------
var volatile byte   IPR12                     at { 0x36E }
var volatile bit    IPR12_U4RXIP              at IPR12 : 0
var volatile bit    IPR12_U4TXIP              at IPR12 : 1
var volatile bit    IPR12_U4EIP               at IPR12 : 2
var volatile bit    IPR12_U4IP                at IPR12 : 3
var volatile bit    IPR12_DMA5SCNTIP          at IPR12 : 4
var volatile bit    IPR12_DMA5DCNTIP          at IPR12 : 5
var volatile bit    IPR12_DMA5ORIP            at IPR12 : 6
var volatile bit    IPR12_DMA5AIP             at IPR12 : 7
-- ------------------------------------------------
var volatile byte   IPR13                     at { 0x36F }
var volatile bit    IPR13_U5RXIP              at IPR13 : 0
var volatile bit    IPR13_U5TXIP              at IPR13 : 1
var volatile bit    IPR13_U5EIP               at IPR13 : 2
var volatile bit    IPR13_U5IP                at IPR13 : 3
var volatile bit    IPR13_DMA6SCNTIP          at IPR13 : 4
var volatile bit    IPR13_DMA6DCNTIP          at IPR13 : 5
var volatile bit    IPR13_DMA6ORIP            at IPR13 : 6
var volatile bit    IPR13_DMA6AIP             at IPR13 : 7
-- ------------------------------------------------
var volatile byte   IPR14                     at { 0x370 }
var volatile bit    IPR14_CLC7IP              at IPR14 : 1
var volatile bit    IPR14_C2IP                at IPR14 : 2
var volatile bit    IPR14_NCO3IP              at IPR14 : 3
var volatile bit    IPR14_DMA7SCNTIP          at IPR14 : 4
var volatile bit    IPR14_DMA7DCNTIP          at IPR14 : 5
var volatile bit    IPR14_DMA7ORIP            at IPR14 : 6
var volatile bit    IPR14_DMA7AIP             at IPR14 : 7
-- ------------------------------------------------
var volatile byte   IPR15                     at { 0x371 }
var volatile bit    IPR15_NVMIP               at IPR15 : 0
var volatile bit    IPR15_CLC8IP              at IPR15 : 1
var volatile bit    IPR15_CRCIP               at IPR15 : 2
var volatile bit    IPR15_TMR6IP              at IPR15 : 3
var volatile bit    IPR15_DMA8SCNTIP          at IPR15 : 4
var volatile bit    IPR15_DMA8DCNTIP          at IPR15 : 5
var volatile bit    IPR15_DMA8ORIP            at IPR15 : 6
var volatile bit    IPR15_DMA8AIP             at IPR15 : 7
-- ------------------------------------------------
var volatile byte   STATUS_CSHAD              at { 0x373 }
var volatile bit    STATUS_CSHAD_C            at STATUS_CSHAD : 0
var volatile bit    STATUS_CSHAD_DC           at STATUS_CSHAD : 1
var volatile bit    STATUS_CSHAD_Z            at STATUS_CSHAD : 2
var volatile bit    STATUS_CSHAD_OV           at STATUS_CSHAD : 3
var volatile bit    STATUS_CSHAD_N            at STATUS_CSHAD : 4
var volatile bit    STATUS_CSHAD_NPD          at STATUS_CSHAD : 5
var volatile bit    STATUS_CSHAD_NTO          at STATUS_CSHAD : 6
var volatile bit    STATUS_CSHAD_PD           at STATUS_CSHAD : 5
var volatile bit    STATUS_CSHAD_TO           at STATUS_CSHAD : 6
-- ------------------------------------------------
var volatile byte   WREG_CSHAD                at { 0x374 }
-- ------------------------------------------------
var volatile byte   BSR_CSHAD                 at { 0x375 }
var volatile bit*6  BSR_CSHAD_BSR             at BSR_CSHAD : 0
-- ------------------------------------------------
var volatile byte   SHADCON                   at { 0x376 }
var volatile bit    SHADCON_SHADLO            at SHADCON : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD               at { 0x377 }
var volatile bit    STATUS_SHAD_C             at STATUS_SHAD : 0
var volatile bit    STATUS_SHAD_DC            at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_Z             at STATUS_SHAD : 2
var volatile bit    STATUS_SHAD_OV            at STATUS_SHAD : 3
var volatile bit    STATUS_SHAD_N             at STATUS_SHAD : 4
var volatile bit    STATUS_SHAD_NPD           at STATUS_SHAD : 5
var volatile bit    STATUS_SHAD_NTO           at STATUS_SHAD : 6
var volatile bit    STATUS_SHAD_PD            at STATUS_SHAD : 5
var volatile bit    STATUS_SHAD_TO            at STATUS_SHAD : 6
-- ------------------------------------------------
var volatile byte   WREG_SHAD                 at { 0x378 }
-- ------------------------------------------------
var volatile byte   BSR_SHAD                  at { 0x379 }
var volatile bit*6  BSR_SHAD_BSR              at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD               at { 0x37A }
-- ------------------------------------------------
var volatile byte   PCLATU_SHAD               at { 0x37B }
var volatile bit*5  PCLATU_SHAD_PCU           at PCLATU_SHAD : 0
-- ------------------------------------------------
var volatile word   FSR0SH                    at { 0x37C }
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                at { 0x37C }
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                at { 0x37D }
var volatile bit*6  FSR0H_SHAD_FSR0H          at FSR0H_SHAD : 0
-- ------------------------------------------------
var volatile word   FSR1SH                    at { 0x37E }
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                at { 0x37E }
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                at { 0x37F }
var volatile bit*6  FSR1H_SHAD_FSR1H          at FSR1H_SHAD : 0
-- ------------------------------------------------
var volatile word   FSR2SH                    at { 0x380 }
-- ------------------------------------------------
var volatile byte   FSR2L_SHAD                at { 0x380 }
-- ------------------------------------------------
var volatile byte   FSR2H_SHAD                at { 0x381 }
var volatile bit*6  FSR2H_SHAD_FSR2H          at FSR2H_SHAD : 0
-- ------------------------------------------------
var volatile word   PRODSH                    at { 0x382 }
-- ------------------------------------------------
var volatile byte   PRODL_SHAD                at { 0x382 }
-- ------------------------------------------------
var volatile byte   PRODH_SHAD                at { 0x383 }
-- ------------------------------------------------
var volatile byte   TU16ACON0                 at { 0x387 }
var volatile bit    TU16ACON0_CIE             at TU16ACON0 : 0
var volatile bit    TU16ACON0_ZIE             at TU16ACON0 : 1
var volatile bit    TU16ACON0_PRIE            at TU16ACON0 : 2
var volatile bit    TU16ACON0_RDSEL           at TU16ACON0 : 3
var volatile bit    TU16ACON0_OPOL            at TU16ACON0 : 4
var volatile bit    TU16ACON0_OM              at TU16ACON0 : 5
var volatile bit    TU16ACON0_CPOL            at TU16ACON0 : 6
var volatile bit    TU16ACON0_ON              at TU16ACON0 : 7
var volatile bit    TU16ACON0_TU16ACIE        at TU16ACON0 : 0
var volatile bit    TU16ACON0_TU16AZIE        at TU16ACON0 : 1
var volatile bit    TU16ACON0_TU16APRIE       at TU16ACON0 : 2
var volatile bit    TU16ACON0_TU16ARDSEL      at TU16ACON0 : 3
var volatile bit    TU16ACON0_TU16AOPOL       at TU16ACON0 : 4
var volatile bit    TU16ACON0_TU16AOM         at TU16ACON0 : 5
var volatile bit    TU16ACON0_TU16ACPOL       at TU16ACON0 : 6
var volatile bit    TU16ACON0_TU16AON         at TU16ACON0 : 7
-- ------------------------------------------------
var volatile byte   TU16ACON1                 at { 0x388 }
var volatile bit    TU16ACON1_CIF             at TU16ACON1 : 0
var volatile bit    TU16ACON1_ZIF             at TU16ACON1 : 1
var volatile bit    TU16ACON1_PRIF            at TU16ACON1 : 2
var volatile bit    TU16ACON1_CAPT            at TU16ACON1 : 3
var volatile bit    TU16ACON1_LIMIT           at TU16ACON1 : 4
var volatile bit    TU16ACON1_CLR             at TU16ACON1 : 5
var volatile bit    TU16ACON1_OSEN            at TU16ACON1 : 6
var volatile bit    TU16ACON1_RUN             at TU16ACON1 : 7
var volatile bit    TU16ACON1_TU16ACIF        at TU16ACON1 : 0
var volatile bit    TU16ACON1_TU16AZIF        at TU16ACON1 : 1
var volatile bit    TU16ACON1_TU16APRIF       at TU16ACON1 : 2
var volatile bit    TU16ACON1_TU16ACAPT       at TU16ACON1 : 3
var volatile bit    TU16ACON1_TU16ALIMIT      at TU16ACON1 : 4
var volatile bit    TU16ACON1_TU16ACLR        at TU16ACON1 : 5
var volatile bit    TU16ACON1_TMRAOSEN        at TU16ACON1 : 6
var volatile bit    TU16ACON1_TU16ARUN        at TU16ACON1 : 7
-- ------------------------------------------------
var volatile byte   TU16AHLT                  at { 0x389 }
var volatile bit*2  TU16AHLT_STOP             at TU16AHLT : 0
var volatile bit*2  TU16AHLT_RESET            at TU16AHLT : 2
var volatile bit*2  TU16AHLT_START            at TU16AHLT : 4
var volatile bit    TU16AHLT_CSYNC            at TU16AHLT : 6
var volatile bit    TU16AHLT_EPOL             at TU16AHLT : 7
var volatile bit    TU16AHLT_STOP0            at TU16AHLT : 0
var volatile bit    TU16AHLT_STOP1            at TU16AHLT : 1
var volatile bit    TU16AHLT_RESET0           at TU16AHLT : 2
var volatile bit    TU16AHLT_RESET1           at TU16AHLT : 3
var volatile bit    TU16AHLT_START0           at TU16AHLT : 4
var volatile bit    TU16AHLT_START1           at TU16AHLT : 5
var volatile bit*2  TU16AHLT_TU16ASTOP        at TU16AHLT : 0
var volatile bit*2  TU16AHLT_TU16ARESET       at TU16AHLT : 2
var volatile bit*2  TU16AHLT_TU16ASTART       at TU16AHLT : 4
var volatile bit    TU16AHLT_TU16ACSYNC       at TU16AHLT : 6
var volatile bit    TU16AHLT_TU16AEPOL        at TU16AHLT : 7
var volatile bit    TU16AHLT_TU16ASTOP0       at TU16AHLT : 0
var volatile bit    TU16AHLT_TU16ASTOP1       at TU16AHLT : 1
var volatile bit    TU16AHLT_TU16ARESET0      at TU16AHLT : 2
var volatile bit    TU16AHLT_TU16ARESET1      at TU16AHLT : 3
var volatile bit    TU16AHLT_TU16ASTART0      at TU16AHLT : 4
var volatile bit    TU16AHLT_TU16ASTART1      at TU16AHLT : 5
-- ------------------------------------------------
var volatile byte   TU16APS                   at { 0x38A }
var volatile bit    TU16APS_PS0               at TU16APS : 0
var volatile bit    TU16APS_PS1               at TU16APS : 1
var volatile bit    TU16APS_PS2               at TU16APS : 2
var volatile bit    TU16APS_PS3               at TU16APS : 3
var volatile bit    TU16APS_PS4               at TU16APS : 4
var volatile bit    TU16APS_PS5               at TU16APS : 5
var volatile bit    TU16APS_PS6               at TU16APS : 6
var volatile bit    TU16APS_PS7               at TU16APS : 7
var volatile bit    TU16APS_TU16APS0          at TU16APS : 0
var volatile bit    TU16APS_TU16APS1          at TU16APS : 1
var volatile bit    TU16APS_TU16APS2          at TU16APS : 2
var volatile bit    TU16APS_TU16APS3          at TU16APS : 3
var volatile bit    TU16APS_TU16APS4          at TU16APS : 4
var volatile bit    TU16APS_TU16APS5          at TU16APS : 5
var volatile bit    TU16APS_TU16APS6          at TU16APS : 6
var volatile bit    TU16APS_TU16APS7          at TU16APS : 7
-- ------------------------------------------------
var volatile word   TU16ATMR                  at { 0x38B }
var volatile byte   TU16ATMRL_                at { 0x38B }
--
procedure TU16ATMRL'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   TU16ATMRL_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16ATMRL'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   x = TU16ATMRL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16ATMRL_TMRL'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16ATMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16ATMRL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TMRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TMRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRL_TU16ATMR7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRL_TU16ATMR7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16ACRL_                 at { 0x38B }
--
procedure TU16ACRL'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   TU16ACRL_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16ACRL'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   x = TU16ACRL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16ACRL_CRL'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16ACRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16ACRL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_CRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_CRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRL_TU16ACR7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRL_TU16ACR7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16ATMRH_                at { 0x38C }
--
procedure TU16ATMRH'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   TU16ATMRH_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16ATMRH'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   x = TU16ATMRH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16ATMRH_TMRH'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16ATMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16ATMRH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TMRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TMRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ATMRH_TU16ATMR15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ATMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ATMRH_TU16ATMR15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ATMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16ACRH_                 at { 0x38C }
--
procedure TU16ACRH'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   TU16ACRH_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16ACRH'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   x = TU16ACRH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16ACRH_CRH'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16ACRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16ACRH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_CRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_CRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16ACRH_TU16ACR15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16ACRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16ACRH_TU16ACR15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16ACRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
-- ------------------------------------------------
var volatile word   TU16APR                   at { 0x38D }
-- ------------------------------------------------
var volatile byte   TU16APRL                  at { 0x38D }
var volatile bit    TU16APRL_PRL0             at TU16APRL : 0
var volatile bit    TU16APRL_PRL1             at TU16APRL : 1
var volatile bit    TU16APRL_PRL2             at TU16APRL : 2
var volatile bit    TU16APRL_PRL3             at TU16APRL : 3
var volatile bit    TU16APRL_PRL4             at TU16APRL : 4
var volatile bit    TU16APRL_PRL5             at TU16APRL : 5
var volatile bit    TU16APRL_PRL6             at TU16APRL : 6
var volatile bit    TU16APRL_PRL7             at TU16APRL : 7
var volatile bit    TU16APRL_TU16APRL0        at TU16APRL : 0
var volatile bit    TU16APRL_TU16APRL1        at TU16APRL : 1
var volatile bit    TU16APRL_TU16APRL2        at TU16APRL : 2
var volatile bit    TU16APRL_TU16APRL3        at TU16APRL : 3
var volatile bit    TU16APRL_TU16APRL4        at TU16APRL : 4
var volatile bit    TU16APRL_TU16APRL5        at TU16APRL : 5
var volatile bit    TU16APRL_TU16APRL6        at TU16APRL : 6
var volatile bit    TU16APRL_TU16APRL7        at TU16APRL : 7
var volatile bit    TU16APRL_TU16APR0         at TU16APRL : 0
var volatile bit    TU16APRL_TU16APR1         at TU16APRL : 1
var volatile bit    TU16APRL_TU16APR2         at TU16APRL : 2
var volatile bit    TU16APRL_TU16APR3         at TU16APRL : 3
var volatile bit    TU16APRL_TU16APR4         at TU16APRL : 4
var volatile bit    TU16APRL_TU16APR5         at TU16APRL : 5
var volatile bit    TU16APRL_TU16APR6         at TU16APRL : 6
var volatile bit    TU16APRL_TU16APR7         at TU16APRL : 7
-- ------------------------------------------------
var volatile byte   TU16APRH                  at { 0x38E }
var volatile bit    TU16APRH_PRH0             at TU16APRH : 0
var volatile bit    TU16APRH_PRH1             at TU16APRH : 1
var volatile bit    TU16APRH_PRH2             at TU16APRH : 2
var volatile bit    TU16APRH_PRH3             at TU16APRH : 3
var volatile bit    TU16APRH_PRH4             at TU16APRH : 4
var volatile bit    TU16APRH_PRH5             at TU16APRH : 5
var volatile bit    TU16APRH_PRH6             at TU16APRH : 6
var volatile bit    TU16APRH_PRH7             at TU16APRH : 7
var volatile bit    TU16APRH_TU16APRH0        at TU16APRH : 0
var volatile bit    TU16APRH_TU16APRH1        at TU16APRH : 1
var volatile bit    TU16APRH_TU16APRH2        at TU16APRH : 2
var volatile bit    TU16APRH_TU16APRH3        at TU16APRH : 3
var volatile bit    TU16APRH_TU16APRH4        at TU16APRH : 4
var volatile bit    TU16APRH_TU16APRH5        at TU16APRH : 5
var volatile bit    TU16APRH_TU16APRH6        at TU16APRH : 6
var volatile bit    TU16APRH_TU16APRH7        at TU16APRH : 7
var volatile bit    TU16APRH_TU16APR8         at TU16APRH : 0
var volatile bit    TU16APRH_TU16APR9         at TU16APRH : 1
var volatile bit    TU16APRH_TU16APR10        at TU16APRH : 2
var volatile bit    TU16APRH_TU16APR11        at TU16APRH : 3
var volatile bit    TU16APRH_TU16APR12        at TU16APRH : 4
var volatile bit    TU16APRH_TU16APR13        at TU16APRH : 5
var volatile bit    TU16APRH_TU16APR14        at TU16APRH : 6
var volatile bit    TU16APRH_TU16APR15        at TU16APRH : 7
-- ------------------------------------------------
var volatile byte   TU16ACLK                  at { 0x38F }
var volatile bit*5  TU16ACLK_CLK              at TU16ACLK : 0
var volatile bit    TU16ACLK_CLK0             at TU16ACLK : 0
var volatile bit    TU16ACLK_CLK1             at TU16ACLK : 1
var volatile bit    TU16ACLK_CLK2             at TU16ACLK : 2
var volatile bit    TU16ACLK_CLK3             at TU16ACLK : 3
var volatile bit    TU16ACLK_CLK4             at TU16ACLK : 4
var volatile bit    TU16ACLK_TU16ACLK0        at TU16ACLK : 0
var volatile bit    TU16ACLK_TU16ACLK1        at TU16ACLK : 1
var volatile bit    TU16ACLK_TU16ACLK2        at TU16ACLK : 2
var volatile bit    TU16ACLK_TU16ACLK3        at TU16ACLK : 3
var volatile bit    TU16ACLK_TU16ACLK4        at TU16ACLK : 4
-- ------------------------------------------------
var volatile byte   TU16AERS                  at { 0x390 }
var volatile bit*6  TU16AERS_ERS              at TU16AERS : 0
var volatile bit    TU16AERS_ERS0             at TU16AERS : 0
var volatile bit    TU16AERS_ERS1             at TU16AERS : 1
var volatile bit    TU16AERS_ERS2             at TU16AERS : 2
var volatile bit    TU16AERS_ERS3             at TU16AERS : 3
var volatile bit    TU16AERS_ERS4             at TU16AERS : 4
var volatile bit    TU16AERS_ERS5             at TU16AERS : 5
var volatile bit    TU16AERS_TU16AERS0        at TU16AERS : 0
var volatile bit    TU16AERS_TU16AERS1        at TU16AERS : 1
var volatile bit    TU16AERS_TU16AERS2        at TU16AERS : 2
var volatile bit    TU16AERS_TU16AERS3        at TU16AERS : 3
var volatile bit    TU16AERS_TU16AERS4        at TU16AERS : 4
var volatile bit    TU16AERS_TU16AERS5        at TU16AERS : 5
-- ------------------------------------------------
var volatile byte   TU16BCON0                 at { 0x393 }
var volatile bit    TU16BCON0_CIE             at TU16BCON0 : 0
var volatile bit    TU16BCON0_ZIE             at TU16BCON0 : 1
var volatile bit    TU16BCON0_PRIE            at TU16BCON0 : 2
var volatile bit    TU16BCON0_RDSEL           at TU16BCON0 : 3
var volatile bit    TU16BCON0_OPOL            at TU16BCON0 : 4
var volatile bit    TU16BCON0_OM              at TU16BCON0 : 5
var volatile bit    TU16BCON0_CPOL            at TU16BCON0 : 6
var volatile bit    TU16BCON0_ON              at TU16BCON0 : 7
var volatile bit    TU16BCON0_TU16BCIE        at TU16BCON0 : 0
var volatile bit    TU16BCON0_TU16BZIE        at TU16BCON0 : 1
var volatile bit    TU16BCON0_TU16BPRIE       at TU16BCON0 : 2
var volatile bit    TU16BCON0_TU16BRDSEL      at TU16BCON0 : 3
var volatile bit    TU16BCON0_TU16BOPOL       at TU16BCON0 : 4
var volatile bit    TU16BCON0_TU16BOM         at TU16BCON0 : 5
var volatile bit    TU16BCON0_TU16BCPOL       at TU16BCON0 : 6
var volatile bit    TU16BCON0_TU16BON         at TU16BCON0 : 7
-- ------------------------------------------------
var volatile byte   TU16BCON1                 at { 0x394 }
var volatile bit    TU16BCON1_CIF             at TU16BCON1 : 0
var volatile bit    TU16BCON1_ZIF             at TU16BCON1 : 1
var volatile bit    TU16BCON1_PRIF            at TU16BCON1 : 2
var volatile bit    TU16BCON1_CAPT            at TU16BCON1 : 3
var volatile bit    TU16BCON1_LIMIT           at TU16BCON1 : 4
var volatile bit    TU16BCON1_CLR             at TU16BCON1 : 5
var volatile bit    TU16BCON1_OSEN            at TU16BCON1 : 6
var volatile bit    TU16BCON1_RUN             at TU16BCON1 : 7
var volatile bit    TU16BCON1_TU16BCIF        at TU16BCON1 : 0
var volatile bit    TU16BCON1_TU16BZIF        at TU16BCON1 : 1
var volatile bit    TU16BCON1_TU16BPRIF       at TU16BCON1 : 2
var volatile bit    TU16BCON1_TU16BCAPT       at TU16BCON1 : 3
var volatile bit    TU16BCON1_TU16BLIMIT      at TU16BCON1 : 4
var volatile bit    TU16BCON1_TU16BCLR        at TU16BCON1 : 5
var volatile bit    TU16BCON1_TMRBOSEN        at TU16BCON1 : 6
var volatile bit    TU16BCON1_TU16BRUN        at TU16BCON1 : 7
-- ------------------------------------------------
var volatile byte   TU16BHLT                  at { 0x395 }
var volatile bit*2  TU16BHLT_STOP             at TU16BHLT : 0
var volatile bit*2  TU16BHLT_RESET            at TU16BHLT : 2
var volatile bit*2  TU16BHLT_START            at TU16BHLT : 4
var volatile bit    TU16BHLT_CSYNC            at TU16BHLT : 6
var volatile bit    TU16BHLT_EPOL             at TU16BHLT : 7
var volatile bit    TU16BHLT_STOP0            at TU16BHLT : 0
var volatile bit    TU16BHLT_STOP1            at TU16BHLT : 1
var volatile bit    TU16BHLT_RESET0           at TU16BHLT : 2
var volatile bit    TU16BHLT_RESET1           at TU16BHLT : 3
var volatile bit    TU16BHLT_START0           at TU16BHLT : 4
var volatile bit    TU16BHLT_START1           at TU16BHLT : 5
var volatile bit*2  TU16BHLT_TU16BSTOP        at TU16BHLT : 0
var volatile bit*2  TU16BHLT_TU16BRESET       at TU16BHLT : 2
var volatile bit*2  TU16BHLT_TU16BSTART       at TU16BHLT : 4
var volatile bit    TU16BHLT_TU16BCSYNC       at TU16BHLT : 6
var volatile bit    TU16BHLT_TU16BEPOL        at TU16BHLT : 7
var volatile bit    TU16BHLT_TU16BSTOP0       at TU16BHLT : 0
var volatile bit    TU16BHLT_TU16BSTOP1       at TU16BHLT : 1
var volatile bit    TU16BHLT_TU16BRESET0      at TU16BHLT : 2
var volatile bit    TU16BHLT_TU16BRESET1      at TU16BHLT : 3
var volatile bit    TU16BHLT_TU16BSTART0      at TU16BHLT : 4
var volatile bit    TU16BHLT_TU16BSTART1      at TU16BHLT : 5
-- ------------------------------------------------
var volatile byte   TU16BPS                   at { 0x396 }
var volatile bit    TU16BPS_PS0               at TU16BPS : 0
var volatile bit    TU16BPS_PS1               at TU16BPS : 1
var volatile bit    TU16BPS_PS2               at TU16BPS : 2
var volatile bit    TU16BPS_PS3               at TU16BPS : 3
var volatile bit    TU16BPS_PS4               at TU16BPS : 4
var volatile bit    TU16BPS_PS5               at TU16BPS : 5
var volatile bit    TU16BPS_PS6               at TU16BPS : 6
var volatile bit    TU16BPS_PS7               at TU16BPS : 7
var volatile bit    TU16BPS_TU16BPS0          at TU16BPS : 0
var volatile bit    TU16BPS_TU16BPS1          at TU16BPS : 1
var volatile bit    TU16BPS_TU16BPS2          at TU16BPS : 2
var volatile bit    TU16BPS_TU16BPS3          at TU16BPS : 3
var volatile bit    TU16BPS_TU16BPS4          at TU16BPS : 4
var volatile bit    TU16BPS_TU16BPS5          at TU16BPS : 5
var volatile bit    TU16BPS_TU16BPS6          at TU16BPS : 6
var volatile bit    TU16BPS_TU16BPS7          at TU16BPS : 7
-- ------------------------------------------------
var volatile word   TU16BTMR                  at { 0x397 }
var volatile byte   TU16BTMRL_                at { 0x397 }
--
procedure TU16BTMRL'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   TU16BTMRL_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16BTMRL'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   x = TU16BTMRL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16BTMRL_TMRL'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16BTMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16BTMRL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TMRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TMRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRL_TU16BTMR7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRL_TU16BTMR7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16BCRL_                 at { 0x397 }
--
procedure TU16BCRL'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   TU16BCRL_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16BCRL'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   x = TU16BCRL_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16BCRL_CRL'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16BCRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16BCRL_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_CRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_CRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCRL7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCRL7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRL_TU16BCR7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRL_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRL_TU16BCR7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRL_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16BTMRH_                at { 0x398 }
--
procedure TU16BTMRH'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   TU16BTMRH_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16BTMRH'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x1
   x = TU16BTMRH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16BTMRH_TMRH'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16BTMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16BTMRH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TMRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TMRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BTMRH_TU16BTMR15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BTMRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BTMRH_TU16BTMR15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BTMRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
var volatile byte   TU16BCRH_                 at { 0x398 }
--
procedure TU16BCRH'put(byte in x) is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   TU16BCRH_ = x
   _control_sfr = _saved_sfr
end procedure
function TU16BCRH'get() return byte is
   var volatile byte _control_sfr at 0x0
   var byte _saved_sfr = _control_sfr
   var byte x
   _control_sfr = _control_sfr & (!0x08)
   _control_sfr = _control_sfr | 0x0
   x = TU16BCRH_
   _control_sfr = _saved_sfr
   return  x
end function
--
procedure TU16BCRH_CRH'put(bit*8 in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 y at TU16BCRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH'get() return bit*8 is
   var volatile bit control_bit at 0x0 : 0
   var bit*8 x at TU16BCRH_ : 0
   var bit*8 y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_CRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_CRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH0'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH0'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH1'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH1'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH2'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH2'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH3'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH3'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH4'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH4'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH5'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH5'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH6'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH6'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCRH7'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCRH7'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR8'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 0
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR8'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 0
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR9'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 1
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR9'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 1
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR10'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 2
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR10'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 2
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR11'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 3
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR11'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 3
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR12'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 4
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR12'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 4
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR13'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 5
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR13'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 5
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR14'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 6
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR14'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 6
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
--
procedure TU16BCRH_TU16BCR15'put(bit in x) is
   var volatile bit control_bit at 0x0 : 0
   var bit y at TU16BCRH_ : 7
   control_bit = TRUE
   y = x
   control_bit = FALSE
end procedure
function TU16BCRH_TU16BCR15'get() return bit is
   var volatile bit control_bit at 0x0 : 0
   var bit x at TU16BCRH_ : 7
   var bit y
   control_bit = TRUE
   y = x
   control_bit = FALSE
   return y
end function
-- ------------------------------------------------
var volatile word   TU16BPR                   at { 0x399 }
-- ------------------------------------------------
var volatile byte   TU16BPRL                  at { 0x399 }
var volatile bit    TU16BPRL_PRL0             at TU16BPRL : 0
var volatile bit    TU16BPRL_PRL1             at TU16BPRL : 1
var volatile bit    TU16BPRL_PRL2             at TU16BPRL : 2
var volatile bit    TU16BPRL_PRL3             at TU16BPRL : 3
var volatile bit    TU16BPRL_PRL4             at TU16BPRL : 4
var volatile bit    TU16BPRL_PRL5             at TU16BPRL : 5
var volatile bit    TU16BPRL_PRL6             at TU16BPRL : 6
var volatile bit    TU16BPRL_PRL7             at TU16BPRL : 7
var volatile bit    TU16BPRL_TU16BPRL0        at TU16BPRL : 0
var volatile bit    TU16BPRL_TU16BPRL1        at TU16BPRL : 1
var volatile bit    TU16BPRL_TU16BPRL2        at TU16BPRL : 2
var volatile bit    TU16BPRL_TU16BPRL3        at TU16BPRL : 3
var volatile bit    TU16BPRL_TU16BPRL4        at TU16BPRL : 4
var volatile bit    TU16BPRL_TU16BPRL5        at TU16BPRL : 5
var volatile bit    TU16BPRL_TU16BPRL6        at TU16BPRL : 6
var volatile bit    TU16BPRL_TU16BPRL7        at TU16BPRL : 7
var volatile bit    TU16BPRL_TU16BPR0         at TU16BPRL : 0
var volatile bit    TU16BPRL_TU16BPR1         at TU16BPRL : 1
var volatile bit    TU16BPRL_TU16BPR2         at TU16BPRL : 2
var volatile bit    TU16BPRL_TU16BPR3         at TU16BPRL : 3
var volatile bit    TU16BPRL_TU16BPR4         at TU16BPRL : 4
var volatile bit    TU16BPRL_TU16BPR5         at TU16BPRL : 5
var volatile bit    TU16BPRL_TU16BPR6         at TU16BPRL : 6
var volatile bit    TU16BPRL_TU16BPR7         at TU16BPRL : 7
-- ------------------------------------------------
var volatile byte   TU16BPRH                  at { 0x39A }
var volatile bit    TU16BPRH_PRH0             at TU16BPRH : 0
var volatile bit    TU16BPRH_PRH1             at TU16BPRH : 1
var volatile bit    TU16BPRH_PRH2             at TU16BPRH : 2
var volatile bit    TU16BPRH_PRH3             at TU16BPRH : 3
var volatile bit    TU16BPRH_PRH4             at TU16BPRH : 4
var volatile bit    TU16BPRH_PRH5             at TU16BPRH : 5
var volatile bit    TU16BPRH_PRH6             at TU16BPRH : 6
var volatile bit    TU16BPRH_PRH7             at TU16BPRH : 7
var volatile bit    TU16BPRH_TU16BPRH0        at TU16BPRH : 0
var volatile bit    TU16BPRH_TU16BPRH1        at TU16BPRH : 1
var volatile bit    TU16BPRH_TU16BPRH2        at TU16BPRH : 2
var volatile bit    TU16BPRH_TU16BPRH3        at TU16BPRH : 3
var volatile bit    TU16BPRH_TU16BPRH4        at TU16BPRH : 4
var volatile bit    TU16BPRH_TU16BPRH5        at TU16BPRH : 5
var volatile bit    TU16BPRH_TU16BPRH6        at TU16BPRH : 6
var volatile bit    TU16BPRH_TU16BPRH7        at TU16BPRH : 7
var volatile bit    TU16BPRH_TU16BPR8         at TU16BPRH : 0
var volatile bit    TU16BPRH_TU16BPR9         at TU16BPRH : 1
var volatile bit    TU16BPRH_TU16BPR10        at TU16BPRH : 2
var volatile bit    TU16BPRH_TU16BPR11        at TU16BPRH : 3
var volatile bit    TU16BPRH_TU16BPR12        at TU16BPRH : 4
var volatile bit    TU16BPRH_TU16BPR13        at TU16BPRH : 5
var volatile bit    TU16BPRH_TU16BPR14        at TU16BPRH : 6
var volatile bit    TU16BPRH_TU16BPR15        at TU16BPRH : 7
-- ------------------------------------------------
var volatile byte   TU16BCLK                  at { 0x39B }
var volatile bit*5  TU16BCLK_CLK              at TU16BCLK : 0
var volatile bit    TU16BCLK_CLK0             at TU16BCLK : 0
var volatile bit    TU16BCLK_CLK1             at TU16BCLK : 1
var volatile bit    TU16BCLK_CLK2             at TU16BCLK : 2
var volatile bit    TU16BCLK_CLK3             at TU16BCLK : 3
var volatile bit    TU16BCLK_CLK4             at TU16BCLK : 4
var volatile bit    TU16BCLK_TU16BCLK0        at TU16BCLK : 0
var volatile bit    TU16BCLK_TU16BCLK1        at TU16BCLK : 1
var volatile bit    TU16BCLK_TU16BCLK2        at TU16BCLK : 2
var volatile bit    TU16BCLK_TU16BCLK3        at TU16BCLK : 3
var volatile bit    TU16BCLK_TU16BCLK4        at TU16BCLK : 4
-- ------------------------------------------------
var volatile byte   TU16BERS                  at { 0x39C }
var volatile bit*6  TU16BERS_ERS              at TU16BERS : 0
var volatile bit    TU16BERS_ERS0             at TU16BERS : 0
var volatile bit    TU16BERS_ERS1             at TU16BERS : 1
var volatile bit    TU16BERS_ERS2             at TU16BERS : 2
var volatile bit    TU16BERS_ERS3             at TU16BERS : 3
var volatile bit    TU16BERS_ERS4             at TU16BERS : 4
var volatile bit    TU16BERS_ERS5             at TU16BERS : 5
var volatile bit    TU16BERS_TU16BERS0        at TU16BERS : 0
var volatile bit    TU16BERS_TU16BERS1        at TU16BERS : 1
var volatile bit    TU16BERS_TU16BERS2        at TU16BERS : 2
var volatile bit    TU16BERS_TU16BERS3        at TU16BERS : 3
var volatile bit    TU16BERS_TU16BERS4        at TU16BERS : 4
var volatile bit    TU16BERS_TU16BERS5        at TU16BERS : 5
-- ------------------------------------------------
var volatile byte   TUCHAIN                   at { 0x3BB }
var volatile bit    TUCHAIN_CH16AB            at TUCHAIN : 0
-- ------------------------------------------------
var volatile byte   CWG1CLK                   at { 0x3BC }
var volatile bit    CWG1CLK_CS                at CWG1CLK : 0
var volatile bit    CWG1CLK_CWG1CS            at CWG1CLK : 0
-- ------------------------------------------------
var volatile byte   CWG1ISM                   at { 0x3BD }
var volatile bit*5  CWG1ISM_IS                at CWG1ISM : 0
var volatile bit    CWG1ISM_CWG1ISM0          at CWG1ISM : 0
var volatile bit    CWG1ISM_CWG1ISM1          at CWG1ISM : 1
var volatile bit    CWG1ISM_CWG1ISM2          at CWG1ISM : 2
var volatile bit    CWG1ISM_CWG1ISM3          at CWG1ISM : 3
var volatile bit    CWG1ISM_CWG1ISM4          at CWG1ISM : 4
-- ------------------------------------------------
var volatile byte   CWG1DBR                   at { 0x3BE }
var volatile bit*6  CWG1DBR_DBR               at CWG1DBR : 0
var volatile bit    CWG1DBR_DBR0              at CWG1DBR : 0
var volatile bit    CWG1DBR_DBR1              at CWG1DBR : 1
var volatile bit    CWG1DBR_DBR2              at CWG1DBR : 2
var volatile bit    CWG1DBR_DBR3              at CWG1DBR : 3
var volatile bit    CWG1DBR_DBR4              at CWG1DBR : 4
var volatile bit    CWG1DBR_DBR5              at CWG1DBR : 5
var volatile bit*6  CWG1DBR_CWG1DBR           at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR0          at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR1          at CWG1DBR : 1
var volatile bit    CWG1DBR_CWG1DBR2          at CWG1DBR : 2
var volatile bit    CWG1DBR_CWG1DBR3          at CWG1DBR : 3
var volatile bit    CWG1DBR_CWG1DBR4          at CWG1DBR : 4
var volatile bit    CWG1DBR_CWG1DBR5          at CWG1DBR : 5
-- ------------------------------------------------
var volatile byte   CWG1DBF                   at { 0x3BF }
var volatile bit*6  CWG1DBF_DBF               at CWG1DBF : 0
var volatile bit    CWG1DBF_DBF0              at CWG1DBF : 0
var volatile bit    CWG1DBF_DBF1              at CWG1DBF : 1
var volatile bit    CWG1DBF_DBF2              at CWG1DBF : 2
var volatile bit    CWG1DBF_DBF3              at CWG1DBF : 3
var volatile bit    CWG1DBF_DBF4              at CWG1DBF : 4
var volatile bit    CWG1DBF_DBF5              at CWG1DBF : 5
var volatile bit*6  CWG1DBF_CWG1DBF           at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF0          at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF1          at CWG1DBF : 1
var volatile bit    CWG1DBF_CWG1DBF2          at CWG1DBF : 2
var volatile bit    CWG1DBF_CWG1DBF3          at CWG1DBF : 3
var volatile bit    CWG1DBF_CWG1DBF4          at CWG1DBF : 4
var volatile bit    CWG1DBF_CWG1DBF5          at CWG1DBF : 5
-- ------------------------------------------------
var volatile byte   CWG1CON0                  at { 0x3C0 }
var volatile bit*3  CWG1CON0_MODE             at CWG1CON0 : 0
var volatile bit    CWG1CON0_LD               at CWG1CON0 : 6
var volatile bit    CWG1CON0_EN               at CWG1CON0 : 7
var volatile bit    CWG1CON0_MODE0            at CWG1CON0 : 0
var volatile bit    CWG1CON0_MODE1            at CWG1CON0 : 1
var volatile bit    CWG1CON0_MODE2            at CWG1CON0 : 2
var volatile bit    CWG1CON0_G1EN             at CWG1CON0 : 7
var volatile bit*3  CWG1CON0_CWG1MODE         at CWG1CON0 : 0
var volatile bit    CWG1CON0_CWG1LD           at CWG1CON0 : 6
var volatile bit    CWG1CON0_CWG1EN           at CWG1CON0 : 7
var volatile bit    CWG1CON0_CWG1MODE0        at CWG1CON0 : 0
var volatile bit    CWG1CON0_CWG1MODE1        at CWG1CON0 : 1
var volatile bit    CWG1CON0_CWG1MODE2        at CWG1CON0 : 2
-- ------------------------------------------------
var volatile byte   CWG1CON1                  at { 0x3C1 }
var volatile bit    CWG1CON1_POLA             at CWG1CON1 : 0
var volatile bit    CWG1CON1_POLB             at CWG1CON1 : 1
var volatile bit    CWG1CON1_POLC             at CWG1CON1 : 2
var volatile bit    CWG1CON1_POLD             at CWG1CON1 : 3
var volatile bit    CWG1CON1_IN               at CWG1CON1 : 5
var volatile bit    CWG1CON1_CWG1POLA         at CWG1CON1 : 0
var volatile bit    CWG1CON1_CWG1POLB         at CWG1CON1 : 1
var volatile bit    CWG1CON1_CWG1POLC         at CWG1CON1 : 2
var volatile bit    CWG1CON1_CWG1POLD         at CWG1CON1 : 3
var volatile bit    CWG1CON1_CWG1IN           at CWG1CON1 : 5
-- ------------------------------------------------
var volatile byte   CWG1AS0                   at { 0x3C2 }
var volatile bit*2  CWG1AS0_LSAC              at CWG1AS0 : 2
var volatile bit*2  CWG1AS0_LSBD              at CWG1AS0 : 4
var volatile bit    CWG1AS0_REN               at CWG1AS0 : 6
var volatile bit    CWG1AS0_SHUTDOWN          at CWG1AS0 : 7
var volatile bit    CWG1AS0_LSAC0             at CWG1AS0 : 2
var volatile bit    CWG1AS0_LSAC1             at CWG1AS0 : 3
var volatile bit    CWG1AS0_LSBD0             at CWG1AS0 : 4
var volatile bit    CWG1AS0_LSBD1             at CWG1AS0 : 5
var volatile bit*2  CWG1AS0_CWG1LSAC          at CWG1AS0 : 2
var volatile bit*2  CWG1AS0_CWG1LSBD          at CWG1AS0 : 4
var volatile bit    CWG1AS0_CWG1REN           at CWG1AS0 : 6
var volatile bit    CWG1AS0_CWG1SHUTDOWN      at CWG1AS0 : 7
var volatile bit    CWG1AS0_CWG1LSAC0         at CWG1AS0 : 2
var volatile bit    CWG1AS0_CWG1LSAC1         at CWG1AS0 : 3
var volatile bit    CWG1AS0_CWG1LSBD0         at CWG1AS0 : 4
var volatile bit    CWG1AS0_CWG1LSBD1         at CWG1AS0 : 5
-- ------------------------------------------------
var volatile byte   CWG1AS1                   at { 0x3C3 }
var volatile bit    CWG1AS1_AS0E              at CWG1AS1 : 0
var volatile bit    CWG1AS1_AS1E              at CWG1AS1 : 1
var volatile bit    CWG1AS1_AS2E              at CWG1AS1 : 2
var volatile bit    CWG1AS1_AS3E              at CWG1AS1 : 3
var volatile bit    CWG1AS1_AS4E              at CWG1AS1 : 4
var volatile bit    CWG1AS1_AS5E              at CWG1AS1 : 5
var volatile bit    CWG1AS1_AS6E              at CWG1AS1 : 6
var volatile bit    CWG1AS1_AS7E              at CWG1AS1 : 7
-- ------------------------------------------------
var volatile byte   CWG1STR                   at { 0x3C4 }
var volatile bit    CWG1STR_STRA              at CWG1STR : 0
var volatile bit    CWG1STR_STRB              at CWG1STR : 1
var volatile bit    CWG1STR_STRC              at CWG1STR : 2
var volatile bit    CWG1STR_STRD              at CWG1STR : 3
var volatile bit    CWG1STR_OVRA              at CWG1STR : 4
var volatile bit    CWG1STR_OVRB              at CWG1STR : 5
var volatile bit    CWG1STR_OVRC              at CWG1STR : 6
var volatile bit    CWG1STR_OVRD              at CWG1STR : 7
var volatile bit    CWG1STR_CWG1STRA          at CWG1STR : 0
var volatile bit    CWG1STR_CWG1STRB          at CWG1STR : 1
var volatile bit    CWG1STR_CWG1STRC          at CWG1STR : 2
var volatile bit    CWG1STR_CWG1STRD          at CWG1STR : 3
var volatile bit    CWG1STR_CWG1OVRA          at CWG1STR : 4
var volatile bit    CWG1STR_CWG1OVRB          at CWG1STR : 5
var volatile bit    CWG1STR_CWG1OVRC          at CWG1STR : 6
var volatile bit    CWG1STR_CWG1OVRD          at CWG1STR : 7
-- ------------------------------------------------
var volatile byte   CWG2CLK                   at { 0x3C5 }
var volatile bit    CWG2CLK_CS                at CWG2CLK : 0
var volatile bit    CWG2CLK_CWG2CS            at CWG2CLK : 0
-- ------------------------------------------------
var volatile byte   CWG2ISM                   at { 0x3C6 }
var volatile bit*5  CWG2ISM_IS                at CWG2ISM : 0
var volatile bit    CWG2ISM_CWG2ISM0          at CWG2ISM : 0
var volatile bit    CWG2ISM_CWG2ISM1          at CWG2ISM : 1
var volatile bit    CWG2ISM_CWG2ISM2          at CWG2ISM : 2
var volatile bit    CWG2ISM_CWG2ISM3          at CWG2ISM : 3
var volatile bit    CWG2ISM_CWG2ISM4          at CWG2ISM : 4
-- ------------------------------------------------
var volatile byte   CWG2DBR                   at { 0x3C7 }
var volatile bit*6  CWG2DBR_DBR               at CWG2DBR : 0
var volatile bit    CWG2DBR_DBR0              at CWG2DBR : 0
var volatile bit    CWG2DBR_DBR1              at CWG2DBR : 1
var volatile bit    CWG2DBR_DBR2              at CWG2DBR : 2
var volatile bit    CWG2DBR_DBR3              at CWG2DBR : 3
var volatile bit    CWG2DBR_DBR4              at CWG2DBR : 4
var volatile bit    CWG2DBR_DBR5              at CWG2DBR : 5
var volatile bit*6  CWG2DBR_CWG2DBR           at CWG2DBR : 0
var volatile bit    CWG2DBR_CWG2DBR0          at CWG2DBR : 0
var volatile bit    CWG2DBR_CWG2DBR1          at CWG2DBR : 1
var volatile bit    CWG2DBR_CWG2DBR2          at CWG2DBR : 2
var volatile bit    CWG2DBR_CWG2DBR3          at CWG2DBR : 3
var volatile bit    CWG2DBR_CWG2DBR4          at CWG2DBR : 4
var volatile bit    CWG2DBR_CWG2DBR5          at CWG2DBR : 5
-- ------------------------------------------------
var volatile byte   CWG2DBF                   at { 0x3C8 }
var volatile bit*6  CWG2DBF_DBF               at CWG2DBF : 0
var volatile bit    CWG2DBF_DBF0              at CWG2DBF : 0
var volatile bit    CWG2DBF_DBF1              at CWG2DBF : 1
var volatile bit    CWG2DBF_DBF2              at CWG2DBF : 2
var volatile bit    CWG2DBF_DBF3              at CWG2DBF : 3
var volatile bit    CWG2DBF_DBF4              at CWG2DBF : 4
var volatile bit    CWG2DBF_DBF5              at CWG2DBF : 5
var volatile bit*6  CWG2DBF_CWG2DBF           at CWG2DBF : 0
var volatile bit    CWG2DBF_CWG2DBF0          at CWG2DBF : 0
var volatile bit    CWG2DBF_CWG2DBF1          at CWG2DBF : 1
var volatile bit    CWG2DBF_CWG2DBF2          at CWG2DBF : 2
var volatile bit    CWG2DBF_CWG2DBF3          at CWG2DBF : 3
var volatile bit    CWG2DBF_CWG2DBF4          at CWG2DBF : 4
var volatile bit    CWG2DBF_CWG2DBF5          at CWG2DBF : 5
-- ------------------------------------------------
var volatile byte   CWG2CON0                  at { 0x3C9 }
var volatile bit*3  CWG2CON0_MODE             at CWG2CON0 : 0
var volatile bit    CWG2CON0_LD               at CWG2CON0 : 6
var volatile bit    CWG2CON0_EN               at CWG2CON0 : 7
var volatile bit    CWG2CON0_MODE0            at CWG2CON0 : 0
var volatile bit    CWG2CON0_MODE1            at CWG2CON0 : 1
var volatile bit    CWG2CON0_MODE2            at CWG2CON0 : 2
var volatile bit    CWG2CON0_G2EN             at CWG2CON0 : 7
var volatile bit*3  CWG2CON0_CWG2MODE         at CWG2CON0 : 0
var volatile bit    CWG2CON0_CWG2LD           at CWG2CON0 : 6
var volatile bit    CWG2CON0_CWG2EN           at CWG2CON0 : 7
var volatile bit    CWG2CON0_CWG2MODE0        at CWG2CON0 : 0
var volatile bit    CWG2CON0_CWG2MODE1        at CWG2CON0 : 1
var volatile bit    CWG2CON0_CWG2MODE2        at CWG2CON0 : 2
-- ------------------------------------------------
var volatile byte   CWG2CON1                  at { 0x3CA }
var volatile bit    CWG2CON1_POLA             at CWG2CON1 : 0
var volatile bit    CWG2CON1_POLB             at CWG2CON1 : 1
var volatile bit    CWG2CON1_POLC             at CWG2CON1 : 2
var volatile bit    CWG2CON1_POLD             at CWG2CON1 : 3
var volatile bit    CWG2CON1_IN               at CWG2CON1 : 5
var volatile bit    CWG2CON1_CWG2POLA         at CWG2CON1 : 0
var volatile bit    CWG2CON1_CWG2POLB         at CWG2CON1 : 1
var volatile bit    CWG2CON1_CWG2POLC         at CWG2CON1 : 2
var volatile bit    CWG2CON1_CWG2POLD         at CWG2CON1 : 3
var volatile bit    CWG2CON1_CWG2IN           at CWG2CON1 : 5
-- ------------------------------------------------
var volatile byte   CWG2AS0                   at { 0x3CB }
var volatile bit*2  CWG2AS0_LSAC              at CWG2AS0 : 2
var volatile bit*2  CWG2AS0_LSBD              at CWG2AS0 : 4
var volatile bit    CWG2AS0_REN               at CWG2AS0 : 6
var volatile bit    CWG2AS0_SHUTDOWN          at CWG2AS0 : 7
var volatile bit    CWG2AS0_LSAC0             at CWG2AS0 : 2
var volatile bit    CWG2AS0_LSAC1             at CWG2AS0 : 3
var volatile bit    CWG2AS0_LSBD0             at CWG2AS0 : 4
var volatile bit    CWG2AS0_LSBD1             at CWG2AS0 : 5
var volatile bit*2  CWG2AS0_CWG2LSAC          at CWG2AS0 : 2
var volatile bit*2  CWG2AS0_CWG2LSBD          at CWG2AS0 : 4
var volatile bit    CWG2AS0_CWG2REN           at CWG2AS0 : 6
var volatile bit    CWG2AS0_CWG2SHUTDOWN      at CWG2AS0 : 7
var volatile bit    CWG2AS0_CWG2LSAC0         at CWG2AS0 : 2
var volatile bit    CWG2AS0_CWG2LSAC1         at CWG2AS0 : 3
var volatile bit    CWG2AS0_CWG2LSBD0         at CWG2AS0 : 4
var volatile bit    CWG2AS0_CWG2LSBD1         at CWG2AS0 : 5
-- ------------------------------------------------
var volatile byte   CWG2AS1                   at { 0x3CC }
var volatile bit    CWG2AS1_AS0E              at CWG2AS1 : 0
var volatile bit    CWG2AS1_AS1E              at CWG2AS1 : 1
var volatile bit    CWG2AS1_AS2E              at CWG2AS1 : 2
var volatile bit    CWG2AS1_AS3E              at CWG2AS1 : 3
var volatile bit    CWG2AS1_AS4E              at CWG2AS1 : 4
var volatile bit    CWG2AS1_AS5E              at CWG2AS1 : 5
var volatile bit    CWG2AS1_AS6E              at CWG2AS1 : 6
var volatile bit    CWG2AS1_AS7E              at CWG2AS1 : 7
-- ------------------------------------------------
var volatile byte   CWG2STR                   at { 0x3CD }
var volatile bit    CWG2STR_STRA              at CWG2STR : 0
var volatile bit    CWG2STR_STRB              at CWG2STR : 1
var volatile bit    CWG2STR_STRC              at CWG2STR : 2
var volatile bit    CWG2STR_STRD              at CWG2STR : 3
var volatile bit    CWG2STR_OVRA              at CWG2STR : 4
var volatile bit    CWG2STR_OVRB              at CWG2STR : 5
var volatile bit    CWG2STR_OVRC              at CWG2STR : 6
var volatile bit    CWG2STR_OVRD              at CWG2STR : 7
var volatile bit    CWG2STR_CWG2STRA          at CWG2STR : 0
var volatile bit    CWG2STR_CWG2STRB          at CWG2STR : 1
var volatile bit    CWG2STR_CWG2STRC          at CWG2STR : 2
var volatile bit    CWG2STR_CWG2STRD          at CWG2STR : 3
var volatile bit    CWG2STR_CWG2OVRA          at CWG2STR : 4
var volatile bit    CWG2STR_CWG2OVRB          at CWG2STR : 5
var volatile bit    CWG2STR_CWG2OVRC          at CWG2STR : 6
var volatile bit    CWG2STR_CWG2OVRD          at CWG2STR : 7
-- ------------------------------------------------
var volatile byte   CWG3CLK                   at { 0x3CE }
var volatile bit    CWG3CLK_CS                at CWG3CLK : 0
var volatile bit    CWG3CLK_CWG3CS            at CWG3CLK : 0
-- ------------------------------------------------
var volatile byte   CWG3ISM                   at { 0x3CF }
var volatile bit*5  CWG3ISM_IS                at CWG3ISM : 0
var volatile bit    CWG3ISM_CWG3ISM0          at CWG3ISM : 0
var volatile bit    CWG3ISM_CWG3ISM1          at CWG3ISM : 1
var volatile bit    CWG3ISM_CWG3ISM2          at CWG3ISM : 2
var volatile bit    CWG3ISM_CWG3ISM3          at CWG3ISM : 3
var volatile bit    CWG3ISM_CWG3ISM4          at CWG3ISM : 4
-- ------------------------------------------------
var volatile byte   CWG3DBR                   at { 0x3D0 }
var volatile bit*6  CWG3DBR_DBR               at CWG3DBR : 0
var volatile bit    CWG3DBR_DBR0              at CWG3DBR : 0
var volatile bit    CWG3DBR_DBR1              at CWG3DBR : 1
var volatile bit    CWG3DBR_DBR2              at CWG3DBR : 2
var volatile bit    CWG3DBR_DBR3              at CWG3DBR : 3
var volatile bit    CWG3DBR_DBR4              at CWG3DBR : 4
var volatile bit    CWG3DBR_DBR5              at CWG3DBR : 5
var volatile bit*6  CWG3DBR_CWG3DBR           at CWG3DBR : 0
var volatile bit    CWG3DBR_CWG3DBR0          at CWG3DBR : 0
var volatile bit    CWG3DBR_CWG3DBR1          at CWG3DBR : 1
var volatile bit    CWG3DBR_CWG3DBR2          at CWG3DBR : 2
var volatile bit    CWG3DBR_CWG3DBR3          at CWG3DBR : 3
var volatile bit    CWG3DBR_CWG3DBR4          at CWG3DBR : 4
var volatile bit    CWG3DBR_CWG3DBR5          at CWG3DBR : 5
-- ------------------------------------------------
var volatile byte   CWG3DBF                   at { 0x3D1 }
var volatile bit*6  CWG3DBF_DBF               at CWG3DBF : 0
var volatile bit    CWG3DBF_DBF0              at CWG3DBF : 0
var volatile bit    CWG3DBF_DBF1              at CWG3DBF : 1
var volatile bit    CWG3DBF_DBF2              at CWG3DBF : 2
var volatile bit    CWG3DBF_DBF3              at CWG3DBF : 3
var volatile bit    CWG3DBF_DBF4              at CWG3DBF : 4
var volatile bit    CWG3DBF_DBF5              at CWG3DBF : 5
var volatile bit*6  CWG3DBF_CWG3DBF           at CWG3DBF : 0
var volatile bit    CWG3DBF_CWG3DBF0          at CWG3DBF : 0
var volatile bit    CWG3DBF_CWG3DBF1          at CWG3DBF : 1
var volatile bit    CWG3DBF_CWG3DBF2          at CWG3DBF : 2
var volatile bit    CWG3DBF_CWG3DBF3          at CWG3DBF : 3
var volatile bit    CWG3DBF_CWG3DBF4          at CWG3DBF : 4
var volatile bit    CWG3DBF_CWG3DBF5          at CWG3DBF : 5
-- ------------------------------------------------
var volatile byte   CWG3CON0                  at { 0x3D2 }
var volatile bit*3  CWG3CON0_MODE             at CWG3CON0 : 0
var volatile bit    CWG3CON0_LD               at CWG3CON0 : 6
var volatile bit    CWG3CON0_EN               at CWG3CON0 : 7
var volatile bit    CWG3CON0_MODE0            at CWG3CON0 : 0
var volatile bit    CWG3CON0_MODE1            at CWG3CON0 : 1
var volatile bit    CWG3CON0_MODE2            at CWG3CON0 : 2
var volatile bit    CWG3CON0_G3EN             at CWG3CON0 : 7
var volatile bit*3  CWG3CON0_CWG3MODE         at CWG3CON0 : 0
var volatile bit    CWG3CON0_CWG3LD           at CWG3CON0 : 6
var volatile bit    CWG3CON0_CWG3EN           at CWG3CON0 : 7
var volatile bit    CWG3CON0_CWG3MODE0        at CWG3CON0 : 0
var volatile bit    CWG3CON0_CWG3MODE1        at CWG3CON0 : 1
var volatile bit    CWG3CON0_CWG3MODE2        at CWG3CON0 : 2
-- ------------------------------------------------
var volatile byte   CWG3CON1                  at { 0x3D3 }
var volatile bit    CWG3CON1_POLA             at CWG3CON1 : 0
var volatile bit    CWG3CON1_POLB             at CWG3CON1 : 1
var volatile bit    CWG3CON1_POLC             at CWG3CON1 : 2
var volatile bit    CWG3CON1_POLD             at CWG3CON1 : 3
var volatile bit    CWG3CON1_IN               at CWG3CON1 : 5
var volatile bit    CWG3CON1_CWG3POLA         at CWG3CON1 : 0
var volatile bit    CWG3CON1_CWG3POLB         at CWG3CON1 : 1
var volatile bit    CWG3CON1_CWG3POLC         at CWG3CON1 : 2
var volatile bit    CWG3CON1_CWG3POLD         at CWG3CON1 : 3
var volatile bit    CWG3CON1_CWG3IN           at CWG3CON1 : 5
-- ------------------------------------------------
var volatile byte   CWG3AS0                   at { 0x3D4 }
var volatile bit*2  CWG3AS0_LSAC              at CWG3AS0 : 2
var volatile bit*2  CWG3AS0_LSBD              at CWG3AS0 : 4
var volatile bit    CWG3AS0_REN               at CWG3AS0 : 6
var volatile bit    CWG3AS0_SHUTDOWN          at CWG3AS0 : 7
var volatile bit    CWG3AS0_LSAC0             at CWG3AS0 : 2
var volatile bit    CWG3AS0_LSAC1             at CWG3AS0 : 3
var volatile bit    CWG3AS0_LSBD0             at CWG3AS0 : 4
var volatile bit    CWG3AS0_LSBD1             at CWG3AS0 : 5
var volatile bit*2  CWG3AS0_CWG3LSAC          at CWG3AS0 : 2
var volatile bit*2  CWG3AS0_CWG3LSBD          at CWG3AS0 : 4
var volatile bit    CWG3AS0_CWG3REN           at CWG3AS0 : 6
var volatile bit    CWG3AS0_CWG3SHUTDOWN      at CWG3AS0 : 7
var volatile bit    CWG3AS0_CWG3LSAC0         at CWG3AS0 : 2
var volatile bit    CWG3AS0_CWG3LSAC1         at CWG3AS0 : 3
var volatile bit    CWG3AS0_CWG3LSBD0         at CWG3AS0 : 4
var volatile bit    CWG3AS0_CWG3LSBD1         at CWG3AS0 : 5
-- ------------------------------------------------
var volatile byte   CWG3AS1                   at { 0x3D5 }
var volatile bit    CWG3AS1_AS0E              at CWG3AS1 : 0
var volatile bit    CWG3AS1_AS1E              at CWG3AS1 : 1
var volatile bit    CWG3AS1_AS2E              at CWG3AS1 : 2
var volatile bit    CWG3AS1_AS3E              at CWG3AS1 : 3
var volatile bit    CWG3AS1_AS4E              at CWG3AS1 : 4
var volatile bit    CWG3AS1_AS5E              at CWG3AS1 : 5
var volatile bit    CWG3AS1_AS6E              at CWG3AS1 : 6
var volatile bit    CWG3AS1_AS7E              at CWG3AS1 : 7
-- ------------------------------------------------
var volatile byte   CWG3STR                   at { 0x3D6 }
var volatile bit    CWG3STR_STRA              at CWG3STR : 0
var volatile bit    CWG3STR_STRB              at CWG3STR : 1
var volatile bit    CWG3STR_STRC              at CWG3STR : 2
var volatile bit    CWG3STR_STRD              at CWG3STR : 3
var volatile bit    CWG3STR_OVRA              at CWG3STR : 4
var volatile bit    CWG3STR_OVRB              at CWG3STR : 5
var volatile bit    CWG3STR_OVRC              at CWG3STR : 6
var volatile bit    CWG3STR_OVRD              at CWG3STR : 7
var volatile bit    CWG3STR_CWG3STRA          at CWG3STR : 0
var volatile bit    CWG3STR_CWG3STRB          at CWG3STR : 1
var volatile bit    CWG3STR_CWG3STRC          at CWG3STR : 2
var volatile bit    CWG3STR_CWG3STRD          at CWG3STR : 3
var volatile bit    CWG3STR_CWG3OVRA          at CWG3STR : 4
var volatile bit    CWG3STR_CWG3OVRB          at CWG3STR : 5
var volatile bit    CWG3STR_CWG3OVRC          at CWG3STR : 6
var volatile bit    CWG3STR_CWG3OVRD          at CWG3STR : 7
-- ------------------------------------------------
var volatile byte   FVRCON                    at { 0x3D7 }
var volatile bit*2  FVRCON_ADFVR              at FVRCON : 0
var volatile bit*2  FVRCON_CDAFVR             at FVRCON : 2
var volatile bit    FVRCON_TSRNG              at FVRCON : 4
var volatile bit    FVRCON_TSEN               at FVRCON : 5
var volatile bit    FVRCON_RDY                at FVRCON : 6
var volatile bit    FVRCON_EN                 at FVRCON : 7
var volatile bit    FVRCON_ADFVR0             at FVRCON : 0
var volatile bit    FVRCON_ADFVR1             at FVRCON : 1
var volatile bit    FVRCON_CDAFVR0            at FVRCON : 2
var volatile bit    FVRCON_CDAFVR1            at FVRCON : 3
var volatile bit    FVRCON_FVRRDY             at FVRCON : 6
var volatile bit    FVRCON_FVREN              at FVRCON : 7
-- ------------------------------------------------
var volatile byte   ADCPCON                   at { 0x3D8 }
var volatile bit    ADCPCON_CPRDY             at ADCPCON : 0
var volatile bit    ADCPCON_ON                at ADCPCON : 7
var volatile bit    ADCPCON_ADCPRDY           at ADCPCON : 0
var volatile bit    ADCPCON_CPON              at ADCPCON : 7
var volatile bit    ADCPCON_ADCPON            at ADCPCON : 7
-- ------------------------------------------------
var volatile word   ADLTH                     at { 0x3D9 }
-- ------------------------------------------------
var volatile byte   ADLTHL                    at { 0x3D9 }
var volatile bit    ADLTHL_ADLTH0             at ADLTHL : 0
var volatile bit    ADLTHL_ADLTH1             at ADLTHL : 1
var volatile bit    ADLTHL_ADLTH2             at ADLTHL : 2
var volatile bit    ADLTHL_ADLTH3             at ADLTHL : 3
var volatile bit    ADLTHL_ADLTH4             at ADLTHL : 4
var volatile bit    ADLTHL_ADLTH5             at ADLTHL : 5
var volatile bit    ADLTHL_ADLTH6             at ADLTHL : 6
var volatile bit    ADLTHL_ADLTH7             at ADLTHL : 7
var volatile bit    ADLTHL_LTH0               at ADLTHL : 0
var volatile bit    ADLTHL_LTH1               at ADLTHL : 1
var volatile bit    ADLTHL_LTH2               at ADLTHL : 2
var volatile bit    ADLTHL_LTH3               at ADLTHL : 3
var volatile bit    ADLTHL_LTH4               at ADLTHL : 4
var volatile bit    ADLTHL_LTH5               at ADLTHL : 5
var volatile bit    ADLTHL_LTH6               at ADLTHL : 6
var volatile bit    ADLTHL_LTH7               at ADLTHL : 7
-- ------------------------------------------------
var volatile byte   ADLTHH                    at { 0x3DA }
var volatile bit    ADLTHH_ADLTH8             at ADLTHH : 0
var volatile bit    ADLTHH_ADLTH9             at ADLTHH : 1
var volatile bit    ADLTHH_ADLTH10            at ADLTHH : 2
var volatile bit    ADLTHH_ADLTH11            at ADLTHH : 3
var volatile bit    ADLTHH_ADLTH12            at ADLTHH : 4
var volatile bit    ADLTHH_ADLTH13            at ADLTHH : 5
var volatile bit    ADLTHH_ADLTH14            at ADLTHH : 6
var volatile bit    ADLTHH_ADLTH15            at ADLTHH : 7
var volatile bit    ADLTHH_LTH8               at ADLTHH : 0
var volatile bit    ADLTHH_LTH9               at ADLTHH : 1
var volatile bit    ADLTHH_LTH10              at ADLTHH : 2
var volatile bit    ADLTHH_LTH11              at ADLTHH : 3
var volatile bit    ADLTHH_LTH12              at ADLTHH : 4
var volatile bit    ADLTHH_LTH13              at ADLTHH : 5
var volatile bit    ADLTHH_LTH14              at ADLTHH : 6
var volatile bit    ADLTHH_LTH15              at ADLTHH : 7
-- ------------------------------------------------
var volatile word   ADUTH                     at { 0x3DB }
-- ------------------------------------------------
var volatile byte   ADUTHL                    at { 0x3DB }
var volatile bit    ADUTHL_ADUTH0             at ADUTHL : 0
var volatile bit    ADUTHL_ADUTH1             at ADUTHL : 1
var volatile bit    ADUTHL_ADUTH2             at ADUTHL : 2
var volatile bit    ADUTHL_ADUTH3             at ADUTHL : 3
var volatile bit    ADUTHL_ADUTH4             at ADUTHL : 4
var volatile bit    ADUTHL_ADUTH5             at ADUTHL : 5
var volatile bit    ADUTHL_ADUTH6             at ADUTHL : 6
var volatile bit    ADUTHL_ADUTH7             at ADUTHL : 7
var volatile bit    ADUTHL_UTH0               at ADUTHL : 0
var volatile bit    ADUTHL_UTH1               at ADUTHL : 1
var volatile bit    ADUTHL_UTH2               at ADUTHL : 2
var volatile bit    ADUTHL_UTH3               at ADUTHL : 3
var volatile bit    ADUTHL_UTH4               at ADUTHL : 4
var volatile bit    ADUTHL_UTH5               at ADUTHL : 5
var volatile bit    ADUTHL_UTH6               at ADUTHL : 6
var volatile bit    ADUTHL_UTH7               at ADUTHL : 7
-- ------------------------------------------------
var volatile byte   ADUTHH                    at { 0x3DC }
var volatile bit    ADUTHH_ADUTH8             at ADUTHH : 0
var volatile bit    ADUTHH_ADUTH9             at ADUTHH : 1
var volatile bit    ADUTHH_ADUTH10            at ADUTHH : 2
var volatile bit    ADUTHH_ADUTH11            at ADUTHH : 3
var volatile bit    ADUTHH_ADUTH12            at ADUTHH : 4
var volatile bit    ADUTHH_ADUTH13            at ADUTHH : 5
var volatile bit    ADUTHH_ADUTH14            at ADUTHH : 6
var volatile bit    ADUTHH_ADUTH15            at ADUTHH : 7
var volatile bit    ADUTHH_UTH8               at ADUTHH : 0
var volatile bit    ADUTHH_UTH9               at ADUTHH : 1
var volatile bit    ADUTHH_UTH10              at ADUTHH : 2
var volatile bit    ADUTHH_UTH11              at ADUTHH : 3
var volatile bit    ADUTHH_UTH12              at ADUTHH : 4
var volatile bit    ADUTHH_UTH13              at ADUTHH : 5
var volatile bit    ADUTHH_UTH14              at ADUTHH : 6
var volatile bit    ADUTHH_UTH15              at ADUTHH : 7
-- ------------------------------------------------
var volatile word   ADERR                     at { 0x3DD }
-- ------------------------------------------------
var volatile byte   ADERRL                    at { 0x3DD }
var volatile bit    ADERRL_ADERR0             at ADERRL : 0
var volatile bit    ADERRL_ADERR1             at ADERRL : 1
var volatile bit    ADERRL_ADERR2             at ADERRL : 2
var volatile bit    ADERRL_ADERR3             at ADERRL : 3
var volatile bit    ADERRL_ADERR4             at ADERRL : 4
var volatile bit    ADERRL_ADERR5             at ADERRL : 5
var volatile bit    ADERRL_ADERR6             at ADERRL : 6
var volatile bit    ADERRL_ADERR7             at ADERRL : 7
var volatile bit    ADERRL_ERR0               at ADERRL : 0
var volatile bit    ADERRL_ERR1               at ADERRL : 1
var volatile bit    ADERRL_ERR2               at ADERRL : 2
var volatile bit    ADERRL_ERR3               at ADERRL : 3
var volatile bit    ADERRL_ERR4               at ADERRL : 4
var volatile bit    ADERRL_ERR5               at ADERRL : 5
var volatile bit    ADERRL_ERR6               at ADERRL : 6
var volatile bit    ADERRL_ERR7               at ADERRL : 7
-- ------------------------------------------------
var volatile byte   ADERRH                    at { 0x3DE }
var volatile bit    ADERRH_ADERR8             at ADERRH : 0
var volatile bit    ADERRH_ADERR9             at ADERRH : 1
var volatile bit    ADERRH_ADERR10            at ADERRH : 2
var volatile bit    ADERRH_ADERR11            at ADERRH : 3
var volatile bit    ADERRH_ADERR12            at ADERRH : 4
var volatile bit    ADERRH_ADERR13            at ADERRH : 5
var volatile bit    ADERRH_ADERR14            at ADERRH : 6
var volatile bit    ADERRH_ADERR15            at ADERRH : 7
var volatile bit    ADERRH_ERR8               at ADERRH : 0
var volatile bit    ADERRH_ERR9               at ADERRH : 1
var volatile bit    ADERRH_ERR10              at ADERRH : 2
var volatile bit    ADERRH_ERR11              at ADERRH : 3
var volatile bit    ADERRH_ERR12              at ADERRH : 4
var volatile bit    ADERRH_ERR13              at ADERRH : 5
var volatile bit    ADERRH_ERR14              at ADERRH : 6
var volatile bit    ADERRH_ERR15              at ADERRH : 7
-- ------------------------------------------------
var volatile word   ADSTPT                    at { 0x3DF }
-- ------------------------------------------------
var volatile byte   ADSTPTL                   at { 0x3DF }
var volatile bit    ADSTPTL_ADSTPT0           at ADSTPTL : 0
var volatile bit    ADSTPTL_ADSTPT1           at ADSTPTL : 1
var volatile bit    ADSTPTL_ADSTPT2           at ADSTPTL : 2
var volatile bit    ADSTPTL_ADSTPT3           at ADSTPTL : 3
var volatile bit    ADSTPTL_ADSTPT4           at ADSTPTL : 4
var volatile bit    ADSTPTL_ADSTPT5           at ADSTPTL : 5
var volatile bit    ADSTPTL_ADSTPT6           at ADSTPTL : 6
var volatile bit    ADSTPTL_ADSTPT7           at ADSTPTL : 7
var volatile bit    ADSTPTL_STPT0             at ADSTPTL : 0
var volatile bit    ADSTPTL_STPT1             at ADSTPTL : 1
var volatile bit    ADSTPTL_STPT2             at ADSTPTL : 2
var volatile bit    ADSTPTL_STPT3             at ADSTPTL : 3
var volatile bit    ADSTPTL_STPT4             at ADSTPTL : 4
var volatile bit    ADSTPTL_STPT5             at ADSTPTL : 5
var volatile bit    ADSTPTL_STPT6             at ADSTPTL : 6
var volatile bit    ADSTPTL_STPT7             at ADSTPTL : 7
-- ------------------------------------------------
var volatile byte   ADSTPTH                   at { 0x3E0 }
var volatile bit    ADSTPTH_ADSTPT8           at ADSTPTH : 0
var volatile bit    ADSTPTH_ADSTPT9           at ADSTPTH : 1
var volatile bit    ADSTPTH_ADSTPT10          at ADSTPTH : 2
var volatile bit    ADSTPTH_ADSTPT11          at ADSTPTH : 3
var volatile bit    ADSTPTH_ADSTPT12          at ADSTPTH : 4
var volatile bit    ADSTPTH_ADSTPT13          at ADSTPTH : 5
var volatile bit    ADSTPTH_ADSTPT14          at ADSTPTH : 6
var volatile bit    ADSTPTH_ADSTPT15          at ADSTPTH : 7
var volatile bit    ADSTPTH_STPT8             at ADSTPTH : 0
var volatile bit    ADSTPTH_STPT9             at ADSTPTH : 1
var volatile bit    ADSTPTH_STPT10            at ADSTPTH : 2
var volatile bit    ADSTPTH_STPT11            at ADSTPTH : 3
var volatile bit    ADSTPTH_STPT12            at ADSTPTH : 4
var volatile bit    ADSTPTH_STPT13            at ADSTPTH : 5
var volatile bit    ADSTPTH_STPT15            at ADSTPTH : 6
var volatile bit    ADSTPTH_STPT16            at ADSTPTH : 7
-- ------------------------------------------------
var volatile word   ADFLTR                    at { 0x3E1 }
-- ------------------------------------------------
var volatile byte   ADFLTRL                   at { 0x3E1 }
var volatile bit    ADFLTRL_ADFLTR0           at ADFLTRL : 0
var volatile bit    ADFLTRL_ADFLTR1           at ADFLTRL : 1
var volatile bit    ADFLTRL_ADFLTR2           at ADFLTRL : 2
var volatile bit    ADFLTRL_ADFLTR3           at ADFLTRL : 3
var volatile bit    ADFLTRL_ADFLTR4           at ADFLTRL : 4
var volatile bit    ADFLTRL_ADFLTR5           at ADFLTRL : 5
var volatile bit    ADFLTRL_ADFLTR6           at ADFLTRL : 6
var volatile bit    ADFLTRL_ADFLTR7           at ADFLTRL : 7
var volatile bit    ADFLTRL_FLTR0             at ADFLTRL : 0
var volatile bit    ADFLTRL_FLTR1             at ADFLTRL : 1
var volatile bit    ADFLTRL_FLTR2             at ADFLTRL : 2
var volatile bit    ADFLTRL_FLTR3             at ADFLTRL : 3
var volatile bit    ADFLTRL_FLTR4             at ADFLTRL : 4
var volatile bit    ADFLTRL_FLTR5             at ADFLTRL : 5
var volatile bit    ADFLTRL_FLTR6             at ADFLTRL : 6
var volatile bit    ADFLTRL_FLTR7             at ADFLTRL : 7
-- ------------------------------------------------
var volatile byte   ADFLTRH                   at { 0x3E2 }
var volatile bit    ADFLTRH_ADFLTR8           at ADFLTRH : 0
var volatile bit    ADFLTRH_ADFLTR9           at ADFLTRH : 1
var volatile bit    ADFLTRH_ADFLTR10          at ADFLTRH : 2
var volatile bit    ADFLTRH_ADFLTR11          at ADFLTRH : 3
var volatile bit    ADFLTRH_ADFLTR12          at ADFLTRH : 4
var volatile bit    ADFLTRH_ADFLTR13          at ADFLTRH : 5
var volatile bit    ADFLTRH_ADFLTR14          at ADFLTRH : 6
var volatile bit    ADFLTRH_ADFLTR15          at ADFLTRH : 7
var volatile bit    ADFLTRH_FLTR8             at ADFLTRH : 0
var volatile bit    ADFLTRH_FLTR9             at ADFLTRH : 1
var volatile bit    ADFLTRH_FLTR10            at ADFLTRH : 2
var volatile bit    ADFLTRH_FLTR11            at ADFLTRH : 3
var volatile bit    ADFLTRH_FLTR12            at ADFLTRH : 4
var volatile bit    ADFLTRH_FLTR13            at ADFLTRH : 5
var volatile bit    ADFLTRH_FLTR14            at ADFLTRH : 6
var volatile bit    ADFLTRH_FLTR15            at ADFLTRH : 7
-- ------------------------------------------------
var volatile byte*3 ADACC                     at { 0x3E3 }
-- ------------------------------------------------
var volatile byte   ADACCL                    at { 0x3E3 }
var volatile bit    ADACCL_ADACC0             at ADACCL : 0
var volatile bit    ADACCL_ADACC1             at ADACCL : 1
var volatile bit    ADACCL_ADACC2             at ADACCL : 2
var volatile bit    ADACCL_ADACC3             at ADACCL : 3
var volatile bit    ADACCL_ADACC4             at ADACCL : 4
var volatile bit    ADACCL_ADACC5             at ADACCL : 5
var volatile bit    ADACCL_ADACC6             at ADACCL : 6
var volatile bit    ADACCL_ADACC7             at ADACCL : 7
var volatile bit    ADACCL_ACC0               at ADACCL : 0
var volatile bit    ADACCL_ACC1               at ADACCL : 1
var volatile bit    ADACCL_ACC2               at ADACCL : 2
var volatile bit    ADACCL_ACC3               at ADACCL : 3
var volatile bit    ADACCL_ACC4               at ADACCL : 4
var volatile bit    ADACCL_ACC5               at ADACCL : 5
var volatile bit    ADACCL_ACC6               at ADACCL : 6
var volatile bit    ADACCL_ACC7               at ADACCL : 7
-- ------------------------------------------------
var volatile byte   ADACCH                    at { 0x3E4 }
var volatile bit    ADACCH_ADACC8             at ADACCH : 0
var volatile bit    ADACCH_ADACC9             at ADACCH : 1
var volatile bit    ADACCH_ADACC10            at ADACCH : 2
var volatile bit    ADACCH_ADACC11            at ADACCH : 3
var volatile bit    ADACCH_ADACC12            at ADACCH : 4
var volatile bit    ADACCH_ADACC13            at ADACCH : 5
var volatile bit    ADACCH_ADACC14            at ADACCH : 6
var volatile bit    ADACCH_ADACC15            at ADACCH : 7
var volatile bit    ADACCH_ACC8               at ADACCH : 0
var volatile bit    ADACCH_ACC9               at ADACCH : 1
var volatile bit    ADACCH_ACC10              at ADACCH : 2
var volatile bit    ADACCH_ACC11              at ADACCH : 3
var volatile bit    ADACCH_ACC12              at ADACCH : 4
var volatile bit    ADACCH_ACC13              at ADACCH : 5
var volatile bit    ADACCH_ACC14              at ADACCH : 6
var volatile bit    ADACCH_ACC15              at ADACCH : 7
-- ------------------------------------------------
var volatile byte   ADACCU                    at { 0x3E5 }
var volatile bit*2  ADACCU_ACC                at ADACCU : 0
var volatile bit    ADACCU_ADACC16            at ADACCU : 0
var volatile bit    ADACCU_ADACC17            at ADACCU : 1
var volatile bit*2  ADACCU_ADACC              at ADACCU : 0
var volatile bit    ADACCU_ACC16              at ADACCU : 0
var volatile bit    ADACCU_ACC17              at ADACCU : 1
-- ------------------------------------------------
var volatile byte   ADCNT                     at { 0x3E6 }
var volatile bit    ADCNT_ADCNT0              at ADCNT : 0
var volatile bit    ADCNT_ADCNT1              at ADCNT : 1
var volatile bit    ADCNT_ADCNT2              at ADCNT : 2
var volatile bit    ADCNT_ADCNT3              at ADCNT : 3
var volatile bit    ADCNT_ADCNT4              at ADCNT : 4
var volatile bit    ADCNT_ADCNT5              at ADCNT : 5
var volatile bit    ADCNT_ADCNT6              at ADCNT : 6
var volatile bit    ADCNT_ADCNT7              at ADCNT : 7
var volatile bit    ADCNT_CNT0                at ADCNT : 0
var volatile bit    ADCNT_CNT1                at ADCNT : 1
var volatile bit    ADCNT_CNT2                at ADCNT : 2
var volatile bit    ADCNT_CNT3                at ADCNT : 3
var volatile bit    ADCNT_CNT4                at ADCNT : 4
var volatile bit    ADCNT_CNT5                at ADCNT : 5
var volatile bit    ADCNT_CNT6                at ADCNT : 6
var volatile bit    ADCNT_CNT7                at ADCNT : 7
-- ------------------------------------------------
var volatile byte   ADRPT                     at { 0x3E7 }
var volatile bit    ADRPT_ADRPT0              at ADRPT : 0
var volatile bit    ADRPT_ADRPT1              at ADRPT : 1
var volatile bit    ADRPT_ADRPT2              at ADRPT : 2
var volatile bit    ADRPT_ADRPT3              at ADRPT : 3
var volatile bit    ADRPT_ADRPT4              at ADRPT : 4
var volatile bit    ADRPT_ADRPT5              at ADRPT : 5
var volatile bit    ADRPT_ADRPT6              at ADRPT : 6
var volatile bit    ADRPT_ADRPT7              at ADRPT : 7
var volatile bit    ADRPT_RPT0                at ADRPT : 0
var volatile bit    ADRPT_RPT1                at ADRPT : 1
var volatile bit    ADRPT_RPT2                at ADRPT : 2
var volatile bit    ADRPT_RPT3                at ADRPT : 3
var volatile bit    ADRPT_RPT4                at ADRPT : 4
var volatile bit    ADRPT_RPT5                at ADRPT : 5
var volatile bit    ADRPT_RPT6                at ADRPT : 6
var volatile bit    ADRPT_RPT7                at ADRPT : 7
-- ------------------------------------------------
var volatile word   ADPREV                    at { 0x3E8 }
-- ------------------------------------------------
var volatile byte   ADPREVL                   at { 0x3E8 }
var volatile bit    ADPREVL_ADPREV0           at ADPREVL : 0
var volatile bit    ADPREVL_ADPREV1           at ADPREVL : 1
var volatile bit    ADPREVL_ADPREV2           at ADPREVL : 2
var volatile bit    ADPREVL_ADPREV3           at ADPREVL : 3
var volatile bit    ADPREVL_ADPREV4           at ADPREVL : 4
var volatile bit    ADPREVL_ADPREV5           at ADPREVL : 5
var volatile bit    ADPREVL_ADPREV6           at ADPREVL : 6
var volatile bit    ADPREVL_ADPREV7           at ADPREVL : 7
var volatile bit    ADPREVL_PREV0             at ADPREVL : 0
var volatile bit    ADPREVL_PREV1             at ADPREVL : 1
var volatile bit    ADPREVL_PREV2             at ADPREVL : 2
var volatile bit    ADPREVL_PREV3             at ADPREVL : 3
var volatile bit    ADPREVL_PREV4             at ADPREVL : 4
var volatile bit    ADPREVL_PREV5             at ADPREVL : 5
var volatile bit    ADPREVL_PREV6             at ADPREVL : 6
var volatile bit    ADPREVL_PREV7             at ADPREVL : 7
-- ------------------------------------------------
var volatile byte   ADPREVH                   at { 0x3E9 }
var volatile bit    ADPREVH_ADPREV8           at ADPREVH : 0
var volatile bit    ADPREVH_ADPREV9           at ADPREVH : 1
var volatile bit    ADPREVH_ADPREV10          at ADPREVH : 2
var volatile bit    ADPREVH_ADPREV11          at ADPREVH : 3
var volatile bit    ADPREVH_ADPREV12          at ADPREVH : 4
var volatile bit    ADPREVH_ADPREV13          at ADPREVH : 5
var volatile bit    ADPREVH_ADPREV14          at ADPREVH : 6
var volatile bit    ADPREVH_ADPREV15          at ADPREVH : 7
var volatile bit    ADPREVH_PREV8             at ADPREVH : 0
var volatile bit    ADPREVH_PREV9             at ADPREVH : 1
var volatile bit    ADPREVH_PREV10            at ADPREVH : 2
var volatile bit    ADPREVH_PREV11            at ADPREVH : 3
var volatile bit    ADPREVH_PREV12            at ADPREVH : 4
var volatile bit    ADPREVH_PREV13            at ADPREVH : 5
var volatile bit    ADPREVH_PREV14            at ADPREVH : 6
var volatile bit    ADPREVH_PREV15            at ADPREVH : 7
-- ------------------------------------------------
var volatile word   ADRES                     at { 0x3EA }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0x3EA }
var volatile bit    ADRESL_ADRES0             at ADRESL : 0
var volatile bit    ADRESL_ADRES1             at ADRESL : 1
var volatile bit    ADRESL_ADRES2             at ADRESL : 2
var volatile bit    ADRESL_ADRES3             at ADRESL : 3
var volatile bit    ADRESL_ADRES4             at ADRESL : 4
var volatile bit    ADRESL_ADRES5             at ADRESL : 5
var volatile bit    ADRESL_ADRES6             at ADRESL : 6
var volatile bit    ADRESL_ADRES7             at ADRESL : 7
var volatile bit    ADRESL_RES0               at ADRESL : 0
var volatile bit    ADRESL_RES1               at ADRESL : 1
var volatile bit    ADRESL_RES2               at ADRESL : 2
var volatile bit    ADRESL_RES3               at ADRESL : 3
var volatile bit    ADRESL_RES4               at ADRESL : 4
var volatile bit    ADRESL_RES5               at ADRESL : 5
var volatile bit    ADRESL_RES6               at ADRESL : 6
var volatile bit    ADRESL_RES7               at ADRESL : 7
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0x3EB }
var volatile bit    ADRESH_ADRES8             at ADRESH : 0
var volatile bit    ADRESH_ADRES9             at ADRESH : 1
var volatile bit    ADRESH_ADRES10            at ADRESH : 2
var volatile bit    ADRESH_ADRES11            at ADRESH : 3
var volatile bit    ADRESH_ADRES12            at ADRESH : 4
var volatile bit    ADRESH_ADRES13            at ADRESH : 5
var volatile bit    ADRESH_ADRES14            at ADRESH : 6
var volatile bit    ADRESH_ADRES15            at ADRESH : 7
var volatile bit    ADRESH_RES8               at ADRESH : 0
var volatile bit    ADRESH_RES9               at ADRESH : 1
var volatile bit    ADRESH_RES10              at ADRESH : 2
var volatile bit    ADRESH_RES11              at ADRESH : 3
var volatile bit    ADRESH_RES12              at ADRESH : 4
var volatile bit    ADRESH_RES13              at ADRESH : 5
var volatile bit    ADRESH_RES14              at ADRESH : 6
var volatile bit    ADRESH_RES15              at ADRESH : 7
-- ------------------------------------------------
var volatile byte   ADPCH                     at { 0x3EC }
var volatile bit*6  ADPCH_ADPCH               at ADPCH : 0
var volatile bit    ADPCH_ADPCH0              at ADPCH : 0
var volatile bit    ADPCH_ADPCH1              at ADPCH : 1
var volatile bit    ADPCH_ADPCH2              at ADPCH : 2
var volatile bit    ADPCH_ADPCH3              at ADPCH : 3
var volatile bit    ADPCH_ADPCH4              at ADPCH : 4
var volatile bit    ADPCH_ADPCH5              at ADPCH : 5
-- ------------------------------------------------
var volatile word   ADACQ                     at { 0x3EE }
-- ------------------------------------------------
var volatile byte   ADACQL                    at { 0x3EE }
var volatile bit    ADACQL_ADACQ0             at ADACQL : 0
var volatile bit    ADACQL_ADACQ1             at ADACQL : 1
var volatile bit    ADACQL_ADACQ2             at ADACQL : 2
var volatile bit    ADACQL_ADACQ3             at ADACQL : 3
var volatile bit    ADACQL_ADACQ4             at ADACQL : 4
var volatile bit    ADACQL_ADACQ5             at ADACQL : 5
var volatile bit    ADACQL_ADACQ6             at ADACQL : 6
var volatile bit    ADACQL_ADACQ7             at ADACQL : 7
var volatile bit    ADACQL_ACQ0               at ADACQL : 0
var volatile bit    ADACQL_ACQ1               at ADACQL : 1
var volatile bit    ADACQL_ACQ2               at ADACQL : 2
var volatile bit    ADACQL_ACQ3               at ADACQL : 3
var volatile bit    ADACQL_ACQ4               at ADACQL : 4
var volatile bit    ADACQL_ACQ5               at ADACQL : 5
var volatile bit    ADACQL_ACQ6               at ADACQL : 6
var volatile bit    ADACQL_ACQ7               at ADACQL : 7
-- ------------------------------------------------
var volatile byte   ADACQH                    at { 0x3EF }
var volatile bit*5  ADACQH_ACQ                at ADACQH : 0
var volatile bit    ADACQH_ADACQ8             at ADACQH : 0
var volatile bit    ADACQH_ADACQ9             at ADACQH : 1
var volatile bit    ADACQH_ADACQ10            at ADACQH : 2
var volatile bit    ADACQH_ADACQ11            at ADACQH : 3
var volatile bit    ADACQH_ADACQ12            at ADACQH : 4
var volatile bit*5  ADACQH_ADACQ              at ADACQH : 0
var volatile bit    ADACQH_ACQ8               at ADACQH : 0
var volatile bit    ADACQH_ACQ9               at ADACQH : 1
var volatile bit    ADACQH_ACQ10              at ADACQH : 2
var volatile bit    ADACQH_ACQ11              at ADACQH : 3
var volatile bit    ADACQH_ACQ12              at ADACQH : 4
-- ------------------------------------------------
var volatile byte   ADCAP                     at { 0x3F0 }
var volatile bit*5  ADCAP_ADCAP               at ADCAP : 0
var volatile bit    ADCAP_ADCAP0              at ADCAP : 0
var volatile bit    ADCAP_ADCAP1              at ADCAP : 1
var volatile bit    ADCAP_ADCAP2              at ADCAP : 2
var volatile bit    ADCAP_ADCAP3              at ADCAP : 3
var volatile bit    ADCAP_ADCAP4              at ADCAP : 4
-- ------------------------------------------------
var volatile word   ADPRE                     at { 0x3F1 }
-- ------------------------------------------------
var volatile byte   ADPREL                    at { 0x3F1 }
var volatile bit    ADPREL_PRE0               at ADPREL : 0
var volatile bit    ADPREL_PRE1               at ADPREL : 1
var volatile bit    ADPREL_PRE2               at ADPREL : 2
var volatile bit    ADPREL_PRE3               at ADPREL : 3
var volatile bit    ADPREL_PRE4               at ADPREL : 4
var volatile bit    ADPREL_PRE5               at ADPREL : 5
var volatile bit    ADPREL_PRE6               at ADPREL : 6
var volatile bit    ADPREL_PRE7               at ADPREL : 7
var volatile bit    ADPREL_ADPRE0             at ADPREL : 0
var volatile bit    ADPREL_ADPRE1             at ADPREL : 1
var volatile bit    ADPREL_ADPRE2             at ADPREL : 2
var volatile bit    ADPREL_ADPRE3             at ADPREL : 3
var volatile bit    ADPREL_ADPRE4             at ADPREL : 4
var volatile bit    ADPREL_ADPRE5             at ADPREL : 5
var volatile bit    ADPREL_ADPRE6             at ADPREL : 6
var volatile bit    ADPREL_ADPRE7             at ADPREL : 7
-- ------------------------------------------------
var volatile byte   ADPREH                    at { 0x3F2 }
var volatile bit*5  ADPREH_PRE                at ADPREH : 0
var volatile bit    ADPREH_PRE8               at ADPREH : 0
var volatile bit    ADPREH_PRE9               at ADPREH : 1
var volatile bit    ADPREH_PRE10              at ADPREH : 2
var volatile bit    ADPREH_PRE11              at ADPREH : 3
var volatile bit    ADPREH_PRE12              at ADPREH : 4
var volatile bit*5  ADPREH_ADPRE              at ADPREH : 0
var volatile bit    ADPREH_ADPRE8             at ADPREH : 0
var volatile bit    ADPREH_ADPRE9             at ADPREH : 1
var volatile bit    ADPREH_ADPRE10            at ADPREH : 2
var volatile bit    ADPREH_ADPRE11            at ADPREH : 3
var volatile bit    ADPREH_ADPRE12            at ADPREH : 4
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0x3F3 }
var volatile bit    ADCON0_GO                 at ADCON0 : 0
var volatile bit*2  ADCON0_FM                 at ADCON0 : 2
var volatile bit    ADCON0_CS                 at ADCON0 : 4
var volatile bit    ADCON0_CSEN               at ADCON0 : 5
var volatile bit    ADCON0_CONT               at ADCON0 : 6
var volatile bit    ADCON0_ON                 at ADCON0 : 7
var volatile bit    ADCON0_ADGO               at ADCON0 : 0
var volatile bit*2  ADCON0_ADFM               at ADCON0 : 2
var volatile bit    ADCON0_ADCS               at ADCON0 : 4
var volatile bit    ADCON0_ADCSEN             at ADCON0 : 5
var volatile bit    ADCON0_ADCONT             at ADCON0 : 6
var volatile bit    ADCON0_ADON               at ADCON0 : 7
var volatile bit    ADCON0_DONE               at ADCON0 : 0
var volatile bit    ADCON0_FM0                at ADCON0 : 2
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 0
var volatile bit    ADCON0_ADFM0              at ADCON0 : 2
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0x3F4 }
var volatile bit    ADCON1_DSEN               at ADCON1 : 0
var volatile bit    ADCON1_GPOL               at ADCON1 : 5
var volatile bit    ADCON1_IPEN               at ADCON1 : 6
var volatile bit    ADCON1_PPOL               at ADCON1 : 7
var volatile bit    ADCON1_ADDSEN             at ADCON1 : 0
var volatile bit    ADCON1_ADGPOL             at ADCON1 : 5
var volatile bit    ADCON1_ADIPEN             at ADCON1 : 6
var volatile bit    ADCON1_ADPPOL             at ADCON1 : 7
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0x3F5 }
var volatile bit*3  ADCON2_MODE               at ADCON2 : 0
var volatile bit    ADCON2_ACLR               at ADCON2 : 3
var volatile bit*3  ADCON2_CRS                at ADCON2 : 4
var volatile bit    ADCON2_PSIS               at ADCON2 : 7
var volatile bit    ADCON2_ADMD0              at ADCON2 : 0
var volatile bit    ADCON2_ADMD1              at ADCON2 : 1
var volatile bit    ADCON2_ADMD2              at ADCON2 : 2
var volatile bit    ADCON2_ADACLR             at ADCON2 : 3
var volatile bit    ADCON2_ADCRS0             at ADCON2 : 4
var volatile bit    ADCON2_ADCRS1             at ADCON2 : 5
var volatile bit    ADCON2_ADCRS2             at ADCON2 : 6
var volatile bit    ADCON2_ADPSIS             at ADCON2 : 7
var volatile bit*3  ADCON2_ADMD               at ADCON2 : 0
var volatile bit*3  ADCON2_ADCRS              at ADCON2 : 4
var volatile bit    ADCON2_MODE0              at ADCON2 : 0
var volatile bit    ADCON2_MODE1              at ADCON2 : 1
var volatile bit    ADCON2_MODE2              at ADCON2 : 2
var volatile bit    ADCON2_CRS0               at ADCON2 : 4
var volatile bit    ADCON2_CRS1               at ADCON2 : 5
var volatile bit    ADCON2_CRS2               at ADCON2 : 6
var volatile bit*3  ADCON2_MD                 at ADCON2 : 0
var volatile bit    ADCON2_MD0                at ADCON2 : 0
var volatile bit    ADCON2_MD1                at ADCON2 : 1
var volatile bit    ADCON2_MD2                at ADCON2 : 2
var volatile bit*3  ADCON2_ADMODE             at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON3                    at { 0x3F6 }
var volatile bit*3  ADCON3_TMD                at ADCON3 : 0
var volatile bit    ADCON3_SOI                at ADCON3 : 3
var volatile bit*3  ADCON3_CALC               at ADCON3 : 4
var volatile bit    ADCON3_ADTMD0             at ADCON3 : 0
var volatile bit    ADCON3_ADTMD1             at ADCON3 : 1
var volatile bit    ADCON3_ADTMD2             at ADCON3 : 2
var volatile bit    ADCON3_ADSOI              at ADCON3 : 3
var volatile bit    ADCON3_ADCALC0            at ADCON3 : 4
var volatile bit    ADCON3_ADCALC1            at ADCON3 : 5
var volatile bit    ADCON3_ADCALC2            at ADCON3 : 6
var volatile bit*3  ADCON3_ADTMD              at ADCON3 : 0
var volatile bit*3  ADCON3_ADCALC             at ADCON3 : 4
var volatile bit    ADCON3_TMD0               at ADCON3 : 0
var volatile bit    ADCON3_TMD1               at ADCON3 : 1
var volatile bit    ADCON3_TMD2               at ADCON3 : 2
var volatile bit    ADCON3_CALC0              at ADCON3 : 4
var volatile bit    ADCON3_CALC1              at ADCON3 : 5
var volatile bit    ADCON3_CALC2              at ADCON3 : 6
-- ------------------------------------------------
var volatile byte   ADSTAT                    at { 0x3F7 }
var volatile bit*3  ADSTAT_STAT               at ADSTAT : 0
var volatile bit    ADSTAT_MATH               at ADSTAT : 4
var volatile bit    ADSTAT_LTHR               at ADSTAT : 5
var volatile bit    ADSTAT_UTHR               at ADSTAT : 6
var volatile bit    ADSTAT_OV                 at ADSTAT : 7
var volatile bit    ADSTAT_ADSTAT0            at ADSTAT : 0
var volatile bit    ADSTAT_ADSTAT1            at ADSTAT : 1
var volatile bit    ADSTAT_ADSTAT2            at ADSTAT : 2
var volatile bit    ADSTAT_ADMATH             at ADSTAT : 4
var volatile bit    ADSTAT_ADLTHR             at ADSTAT : 5
var volatile bit    ADSTAT_ADUTHR             at ADSTAT : 6
var volatile bit    ADSTAT_ADAOV              at ADSTAT : 7
var volatile bit*3  ADSTAT_ADSTAT             at ADSTAT : 0
var volatile bit    ADSTAT_ADOV               at ADSTAT : 7
var volatile bit    ADSTAT_STAT0              at ADSTAT : 0
var volatile bit    ADSTAT_STAT1              at ADSTAT : 1
var volatile bit    ADSTAT_STAT2              at ADSTAT : 2
-- ------------------------------------------------
var volatile byte   ADREF                     at { 0x3F8 }
var volatile bit*4  ADREF_PREF                at ADREF : 0
var volatile bit*4  ADREF_NREF                at ADREF : 4
var volatile bit*4  ADREF_ADPREF              at ADREF : 0
var volatile bit*4  ADREF_ADNREF              at ADREF : 4
var volatile bit    ADREF_PREF0               at ADREF : 0
var volatile bit    ADREF_PREF1               at ADREF : 1
var volatile bit    ADREF_NREF0               at ADREF : 4
var volatile bit    ADREF_ADPREF0             at ADREF : 0
var volatile bit    ADREF_ADPREF1             at ADREF : 1
var volatile bit    ADREF_ADNREF0             at ADREF : 4
-- ------------------------------------------------
var volatile byte   ADACT                     at { 0x3F9 }
var volatile bit*6  ADACT_ACT                 at ADACT : 0
var volatile bit    ADACT_ADACT0              at ADACT : 0
var volatile bit    ADACT_ADACT1              at ADACT : 1
var volatile bit    ADACT_ADACT2              at ADACT : 2
var volatile bit    ADACT_ADACT3              at ADACT : 3
var volatile bit    ADACT_ADACT4              at ADACT : 4
var volatile bit    ADACT_ADACT5              at ADACT : 5
var volatile bit*6  ADACT_ADACT               at ADACT : 0
var volatile bit    ADACT_ACT0                at ADACT : 0
var volatile bit    ADACT_ACT1                at ADACT : 1
var volatile bit    ADACT_ACT2                at ADACT : 2
var volatile bit    ADACT_ACT3                at ADACT : 3
var volatile bit    ADACT_ACT4                at ADACT : 4
var volatile bit    ADACT_ACT5                at ADACT : 5
-- ------------------------------------------------
var volatile byte   ADCLK                     at { 0x3FA }
var volatile bit*6  ADCLK_CS                  at ADCLK : 0
var volatile bit    ADCLK_ADCS0               at ADCLK : 0
var volatile bit    ADCLK_ADCS1               at ADCLK : 1
var volatile bit    ADCLK_ADCS2               at ADCLK : 2
var volatile bit    ADCLK_ADCS3               at ADCLK : 3
var volatile bit    ADCLK_ADCS4               at ADCLK : 4
var volatile bit    ADCLK_ADCS5               at ADCLK : 5
var volatile bit*6  ADCLK_ADCS                at ADCLK : 0
var volatile bit    ADCLK_CS0                 at ADCLK : 0
var volatile bit    ADCLK_CS1                 at ADCLK : 1
var volatile bit    ADCLK_CS2                 at ADCLK : 2
var volatile bit    ADCLK_CS3                 at ADCLK : 3
var volatile bit    ADCLK_CS4                 at ADCLK : 4
var volatile bit    ADCLK_CS5                 at ADCLK : 5
-- ------------------------------------------------
var volatile byte   ADCTX                     at { 0x3FB }
var volatile bit*2  ADCTX_CTX                 at ADCTX : 0
var volatile bit    ADCTX_CTXSW               at ADCTX : 7
var volatile bit    ADCTX_CTX0                at ADCTX : 0
var volatile bit    ADCTX_CTX1                at ADCTX : 1
var volatile bit*2  ADCTX_ADCTX               at ADCTX : 0
var volatile bit    ADCTX_ADCTXSW             at ADCTX : 7
var volatile bit    ADCTX_ADCTX0              at ADCTX : 0
var volatile bit    ADCTX_ADCTX1              at ADCTX : 1
-- ------------------------------------------------
var volatile byte   ADCSEL1                   at { 0x3FC }
var volatile bit    ADCSEL1_SSI               at ADCSEL1 : 6
var volatile bit    ADCSEL1_CHEN              at ADCSEL1 : 7
-- ------------------------------------------------
var volatile byte   ADCSEL2                   at { 0x3FD }
var volatile bit    ADCSEL2_SSI               at ADCSEL2 : 6
var volatile bit    ADCSEL2_CHEN              at ADCSEL2 : 7
-- ------------------------------------------------
var volatile byte   ADCSEL3                   at { 0x3FE }
var volatile bit    ADCSEL3_SSI               at ADCSEL3 : 6
var volatile bit    ADCSEL3_CHEN              at ADCSEL3 : 7
-- ------------------------------------------------
var volatile byte   ADCSEL4                   at { 0x3FF }
var volatile bit    ADCSEL4_SSI               at ADCSEL4 : 6
var volatile bit    ADCSEL4_CHEN              at ADCSEL4 : 7
-- ------------------------------------------------
var volatile byte   ANSELA                    at { 0x400 }
var volatile bit    ANSELA_ANSELA0            at ANSELA : 0
var volatile bit    ANSELA_ANSELA1            at ANSELA : 1
var volatile bit    ANSELA_ANSELA2            at ANSELA : 2
var volatile bit    ANSELA_ANSELA3            at ANSELA : 3
var volatile bit    ANSELA_ANSELA4            at ANSELA : 4
var volatile bit    ANSELA_ANSELA5            at ANSELA : 5
var volatile bit    ANSELA_ANSELA6            at ANSELA : 6
var volatile bit    ANSELA_ANSELA7            at ANSELA : 7
-- ------------------------------------------------
var volatile byte   WPUA                      at { 0x401 }
var volatile bit    WPUA_WPUA0                at WPUA : 0
var volatile bit    WPUA_WPUA1                at WPUA : 1
var volatile bit    WPUA_WPUA2                at WPUA : 2
var volatile bit    WPUA_WPUA3                at WPUA : 3
var volatile bit    WPUA_WPUA4                at WPUA : 4
var volatile bit    WPUA_WPUA5                at WPUA : 5
var volatile bit    WPUA_WPUA6                at WPUA : 6
var volatile bit    WPUA_WPUA7                at WPUA : 7
-- ------------------------------------------------
var volatile byte   ODCONA                    at { 0x402 }
var volatile bit    ODCONA_ODCA0              at ODCONA : 0
var volatile bit    ODCONA_ODCA1              at ODCONA : 1
var volatile bit    ODCONA_ODCA2              at ODCONA : 2
var volatile bit    ODCONA_ODCA3              at ODCONA : 3
var volatile bit    ODCONA_ODCA4              at ODCONA : 4
var volatile bit    ODCONA_ODCA5              at ODCONA : 5
var volatile bit    ODCONA_ODCA6              at ODCONA : 6
var volatile bit    ODCONA_ODCA7              at ODCONA : 7
-- ------------------------------------------------
var volatile byte   SLRCONA                   at { 0x403 }
var volatile bit    SLRCONA_SLRA0             at SLRCONA : 0
var volatile bit    SLRCONA_SLRA1             at SLRCONA : 1
var volatile bit    SLRCONA_SLRA2             at SLRCONA : 2
var volatile bit    SLRCONA_SLRA3             at SLRCONA : 3
var volatile bit    SLRCONA_SLRA4             at SLRCONA : 4
var volatile bit    SLRCONA_SLRA5             at SLRCONA : 5
var volatile bit    SLRCONA_SLRA6             at SLRCONA : 6
var volatile bit    SLRCONA_SLRA7             at SLRCONA : 7
-- ------------------------------------------------
var volatile byte   INLVLA                    at { 0x404 }
var volatile bit    INLVLA_INLVLA0            at INLVLA : 0
var volatile bit    INLVLA_INLVLA1            at INLVLA : 1
var volatile bit    INLVLA_INLVLA2            at INLVLA : 2
var volatile bit    INLVLA_INLVLA3            at INLVLA : 3
var volatile bit    INLVLA_INLVLA4            at INLVLA : 4
var volatile bit    INLVLA_INLVLA5            at INLVLA : 5
var volatile bit    INLVLA_INLVLA6            at INLVLA : 6
var volatile bit    INLVLA_INLVLA7            at INLVLA : 7
-- ------------------------------------------------
var volatile byte   IOCAP                     at { 0x405 }
var volatile bit    IOCAP_IOCAP0              at IOCAP : 0
var volatile bit    IOCAP_IOCAP1              at IOCAP : 1
var volatile bit    IOCAP_IOCAP2              at IOCAP : 2
var volatile bit    IOCAP_IOCAP3              at IOCAP : 3
var volatile bit    IOCAP_IOCAP4              at IOCAP : 4
var volatile bit    IOCAP_IOCAP5              at IOCAP : 5
var volatile bit    IOCAP_IOCAP6              at IOCAP : 6
var volatile bit    IOCAP_IOCAP7              at IOCAP : 7
-- ------------------------------------------------
var volatile byte   IOCAN                     at { 0x406 }
var volatile bit    IOCAN_IOCAN0              at IOCAN : 0
var volatile bit    IOCAN_IOCAN1              at IOCAN : 1
var volatile bit    IOCAN_IOCAN2              at IOCAN : 2
var volatile bit    IOCAN_IOCAN3              at IOCAN : 3
var volatile bit    IOCAN_IOCAN4              at IOCAN : 4
var volatile bit    IOCAN_IOCAN5              at IOCAN : 5
var volatile bit    IOCAN_IOCAN6              at IOCAN : 6
var volatile bit    IOCAN_IOCAN7              at IOCAN : 7
-- ------------------------------------------------
var volatile byte   IOCAF                     at { 0x407 }
var volatile bit    IOCAF_IOCAF0              at IOCAF : 0
var volatile bit    IOCAF_IOCAF1              at IOCAF : 1
var volatile bit    IOCAF_IOCAF2              at IOCAF : 2
var volatile bit    IOCAF_IOCAF3              at IOCAF : 3
var volatile bit    IOCAF_IOCAF4              at IOCAF : 4
var volatile bit    IOCAF_IOCAF5              at IOCAF : 5
var volatile bit    IOCAF_IOCAF6              at IOCAF : 6
var volatile bit    IOCAF_IOCAF7              at IOCAF : 7
-- ------------------------------------------------
var volatile byte   ANSELB                    at { 0x408 }
var volatile bit    ANSELB_ANSELB0            at ANSELB : 0
var volatile bit    ANSELB_ANSELB1            at ANSELB : 1
var volatile bit    ANSELB_ANSELB2            at ANSELB : 2
var volatile bit    ANSELB_ANSELB3            at ANSELB : 3
var volatile bit    ANSELB_ANSELB4            at ANSELB : 4
var volatile bit    ANSELB_ANSELB5            at ANSELB : 5
var volatile bit    ANSELB_ANSELB6            at ANSELB : 6
var volatile bit    ANSELB_ANSELB7            at ANSELB : 7
-- ------------------------------------------------
var volatile byte   WPUB                      at { 0x409 }
var volatile bit    WPUB_WPUB0                at WPUB : 0
var volatile bit    WPUB_WPUB1                at WPUB : 1
var volatile bit    WPUB_WPUB2                at WPUB : 2
var volatile bit    WPUB_WPUB3                at WPUB : 3
var volatile bit    WPUB_WPUB4                at WPUB : 4
var volatile bit    WPUB_WPUB5                at WPUB : 5
var volatile bit    WPUB_WPUB6                at WPUB : 6
var volatile bit    WPUB_WPUB7                at WPUB : 7
-- ------------------------------------------------
var volatile byte   ODCONB                    at { 0x40A }
var volatile bit    ODCONB_ODCB0              at ODCONB : 0
var volatile bit    ODCONB_ODCB1              at ODCONB : 1
var volatile bit    ODCONB_ODCB2              at ODCONB : 2
var volatile bit    ODCONB_ODCB3              at ODCONB : 3
var volatile bit    ODCONB_ODCB4              at ODCONB : 4
var volatile bit    ODCONB_ODCB5              at ODCONB : 5
var volatile bit    ODCONB_ODCB6              at ODCONB : 6
var volatile bit    ODCONB_ODCB7              at ODCONB : 7
-- ------------------------------------------------
var volatile byte   SLRCONB                   at { 0x40B }
var volatile bit    SLRCONB_SLRB0             at SLRCONB : 0
var volatile bit    SLRCONB_SLRB1             at SLRCONB : 1
var volatile bit    SLRCONB_SLRB2             at SLRCONB : 2
var volatile bit    SLRCONB_SLRB3             at SLRCONB : 3
var volatile bit    SLRCONB_SLRB4             at SLRCONB : 4
var volatile bit    SLRCONB_SLRB5             at SLRCONB : 5
var volatile bit    SLRCONB_SLRB6             at SLRCONB : 6
var volatile bit    SLRCONB_SLRB7             at SLRCONB : 7
-- ------------------------------------------------
var volatile byte   INLVLB                    at { 0x40C }
var volatile bit    INLVLB_INLVLB0            at INLVLB : 0
var volatile bit    INLVLB_INLVLB1            at INLVLB : 1
var volatile bit    INLVLB_INLVLB2            at INLVLB : 2
var volatile bit    INLVLB_INLVLB3            at INLVLB : 3
var volatile bit    INLVLB_INLVLB4            at INLVLB : 4
var volatile bit    INLVLB_INLVLB5            at INLVLB : 5
var volatile bit    INLVLB_INLVLB6            at INLVLB : 6
var volatile bit    INLVLB_INLVLB7            at INLVLB : 7
-- ------------------------------------------------
var volatile byte   IOCBP                     at { 0x40D }
var volatile bit    IOCBP_IOCBP0              at IOCBP : 0
var volatile bit    IOCBP_IOCBP1              at IOCBP : 1
var volatile bit    IOCBP_IOCBP2              at IOCBP : 2
var volatile bit    IOCBP_IOCBP3              at IOCBP : 3
var volatile bit    IOCBP_IOCBP4              at IOCBP : 4
var volatile bit    IOCBP_IOCBP5              at IOCBP : 5
var volatile bit    IOCBP_IOCBP6              at IOCBP : 6
var volatile bit    IOCBP_IOCBP7              at IOCBP : 7
-- ------------------------------------------------
var volatile byte   IOCBN                     at { 0x40E }
var volatile bit    IOCBN_IOCBN0              at IOCBN : 0
var volatile bit    IOCBN_IOCBN1              at IOCBN : 1
var volatile bit    IOCBN_IOCBN2              at IOCBN : 2
var volatile bit    IOCBN_IOCBN3              at IOCBN : 3
var volatile bit    IOCBN_IOCBN4              at IOCBN : 4
var volatile bit    IOCBN_IOCBN5              at IOCBN : 5
var volatile bit    IOCBN_IOCBN6              at IOCBN : 6
var volatile bit    IOCBN_IOCBN7              at IOCBN : 7
-- ------------------------------------------------
var volatile byte   IOCBF                     at { 0x40F }
var volatile bit    IOCBF_IOCBF0              at IOCBF : 0
var volatile bit    IOCBF_IOCBF1              at IOCBF : 1
var volatile bit    IOCBF_IOCBF2              at IOCBF : 2
var volatile bit    IOCBF_IOCBF3              at IOCBF : 3
var volatile bit    IOCBF_IOCBF4              at IOCBF : 4
var volatile bit    IOCBF_IOCBF5              at IOCBF : 5
var volatile bit    IOCBF_IOCBF6              at IOCBF : 6
var volatile bit    IOCBF_IOCBF7              at IOCBF : 7
-- ------------------------------------------------
var volatile byte   ANSELC                    at { 0x410 }
var volatile bit    ANSELC_ANSELC0            at ANSELC : 0
var volatile bit    ANSELC_ANSELC1            at ANSELC : 1
var volatile bit    ANSELC_ANSELC2            at ANSELC : 2
var volatile bit    ANSELC_ANSELC3            at ANSELC : 3
var volatile bit    ANSELC_ANSELC4            at ANSELC : 4
var volatile bit    ANSELC_ANSELC5            at ANSELC : 5
var volatile bit    ANSELC_ANSELC6            at ANSELC : 6
var volatile bit    ANSELC_ANSELC7            at ANSELC : 7
-- ------------------------------------------------
var volatile byte   WPUC                      at { 0x411 }
var volatile bit    WPUC_WPUC0                at WPUC : 0
var volatile bit    WPUC_WPUC1                at WPUC : 1
var volatile bit    WPUC_WPUC2                at WPUC : 2
var volatile bit    WPUC_WPUC3                at WPUC : 3
var volatile bit    WPUC_WPUC4                at WPUC : 4
var volatile bit    WPUC_WPUC5                at WPUC : 5
var volatile bit    WPUC_WPUC6                at WPUC : 6
var volatile bit    WPUC_WPUC7                at WPUC : 7
-- ------------------------------------------------
var volatile byte   ODCONC                    at { 0x412 }
var volatile bit    ODCONC_ODCC0              at ODCONC : 0
var volatile bit    ODCONC_ODCC1              at ODCONC : 1
var volatile bit    ODCONC_ODCC2              at ODCONC : 2
var volatile bit    ODCONC_ODCC3              at ODCONC : 3
var volatile bit    ODCONC_ODCC4              at ODCONC : 4
var volatile bit    ODCONC_ODCC5              at ODCONC : 5
var volatile bit    ODCONC_ODCC6              at ODCONC : 6
var volatile bit    ODCONC_ODCC7              at ODCONC : 7
-- ------------------------------------------------
var volatile byte   SLRCONC                   at { 0x413 }
var volatile bit    SLRCONC_SLRC0             at SLRCONC : 0
var volatile bit    SLRCONC_SLRC1             at SLRCONC : 1
var volatile bit    SLRCONC_SLRC2             at SLRCONC : 2
var volatile bit    SLRCONC_SLRC3             at SLRCONC : 3
var volatile bit    SLRCONC_SLRC4             at SLRCONC : 4
var volatile bit    SLRCONC_SLRC5             at SLRCONC : 5
var volatile bit    SLRCONC_SLRC6             at SLRCONC : 6
var volatile bit    SLRCONC_SLRC7             at SLRCONC : 7
-- ------------------------------------------------
var volatile byte   INLVLC                    at { 0x414 }
var volatile bit    INLVLC_INLVLC0            at INLVLC : 0
var volatile bit    INLVLC_INLVLC1            at INLVLC : 1
var volatile bit    INLVLC_INLVLC2            at INLVLC : 2
var volatile bit    INLVLC_INLVLC3            at INLVLC : 3
var volatile bit    INLVLC_INLVLC4            at INLVLC : 4
var volatile bit    INLVLC_INLVLC5            at INLVLC : 5
var volatile bit    INLVLC_INLVLC6            at INLVLC : 6
var volatile bit    INLVLC_INLVLC7            at INLVLC : 7
-- ------------------------------------------------
var volatile byte   IOCCP                     at { 0x415 }
var volatile bit    IOCCP_IOCCP0              at IOCCP : 0
var volatile bit    IOCCP_IOCCP1              at IOCCP : 1
var volatile bit    IOCCP_IOCCP2              at IOCCP : 2
var volatile bit    IOCCP_IOCCP3              at IOCCP : 3
var volatile bit    IOCCP_IOCCP4              at IOCCP : 4
var volatile bit    IOCCP_IOCCP5              at IOCCP : 5
var volatile bit    IOCCP_IOCCP6              at IOCCP : 6
var volatile bit    IOCCP_IOCCP7              at IOCCP : 7
-- ------------------------------------------------
var volatile byte   IOCCN                     at { 0x416 }
var volatile bit    IOCCN_IOCCN0              at IOCCN : 0
var volatile bit    IOCCN_IOCCN1              at IOCCN : 1
var volatile bit    IOCCN_IOCCN2              at IOCCN : 2
var volatile bit    IOCCN_IOCCN3              at IOCCN : 3
var volatile bit    IOCCN_IOCCN4              at IOCCN : 4
var volatile bit    IOCCN_IOCCN5              at IOCCN : 5
var volatile bit    IOCCN_IOCCN6              at IOCCN : 6
var volatile bit    IOCCN_IOCCN7              at IOCCN : 7
-- ------------------------------------------------
var volatile byte   IOCCF                     at { 0x417 }
var volatile bit    IOCCF_IOCCF0              at IOCCF : 0
var volatile bit    IOCCF_IOCCF1              at IOCCF : 1
var volatile bit    IOCCF_IOCCF2              at IOCCF : 2
var volatile bit    IOCCF_IOCCF3              at IOCCF : 3
var volatile bit    IOCCF_IOCCF4              at IOCCF : 4
var volatile bit    IOCCF_IOCCF5              at IOCCF : 5
var volatile bit    IOCCF_IOCCF6              at IOCCF : 6
var volatile bit    IOCCF_IOCCF7              at IOCCF : 7
-- ------------------------------------------------
var volatile byte   WPUE                      at { 0x421 }
var volatile bit    WPUE_WPUE3                at WPUE : 3
-- ------------------------------------------------
var volatile byte   INLVLE                    at { 0x424 }
var volatile bit    INLVLE_INLVLE3            at INLVLE : 3
-- ------------------------------------------------
var volatile byte   IOCEP                     at { 0x425 }
var volatile bit    IOCEP_IOCEP3              at IOCEP : 3
-- ------------------------------------------------
var volatile byte   IOCEN                     at { 0x426 }
var volatile bit    IOCEN_IOCEN3              at IOCEN : 3
-- ------------------------------------------------
var volatile byte   IOCEF                     at { 0x427 }
var volatile bit    IOCEF_IOCEF3              at IOCEF : 3
-- ------------------------------------------------
var volatile byte*3 NCO1ACC                   at { 0x440 }
-- ------------------------------------------------
var volatile byte   NCO1ACCL                  at { 0x440 }
var volatile bit    NCO1ACCL_NCO1ACC0         at NCO1ACCL : 0
var volatile bit    NCO1ACCL_NCO1ACC1         at NCO1ACCL : 1
var volatile bit    NCO1ACCL_NCO1ACC2         at NCO1ACCL : 2
var volatile bit    NCO1ACCL_NCO1ACC3         at NCO1ACCL : 3
var volatile bit    NCO1ACCL_NCO1ACC4         at NCO1ACCL : 4
var volatile bit    NCO1ACCL_NCO1ACC5         at NCO1ACCL : 5
var volatile bit    NCO1ACCL_NCO1ACC6         at NCO1ACCL : 6
var volatile bit    NCO1ACCL_NCO1ACC7         at NCO1ACCL : 7
var volatile bit    NCO1ACCL_ACC0             at NCO1ACCL : 0
var volatile bit    NCO1ACCL_ACC1             at NCO1ACCL : 1
var volatile bit    NCO1ACCL_ACC2             at NCO1ACCL : 2
var volatile bit    NCO1ACCL_ACC3             at NCO1ACCL : 3
var volatile bit    NCO1ACCL_ACC4             at NCO1ACCL : 4
var volatile bit    NCO1ACCL_ACC5             at NCO1ACCL : 5
var volatile bit    NCO1ACCL_ACC6             at NCO1ACCL : 6
var volatile bit    NCO1ACCL_ACC7             at NCO1ACCL : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCH                  at { 0x441 }
var volatile bit    NCO1ACCH_NCO1ACC8         at NCO1ACCH : 0
var volatile bit    NCO1ACCH_NCO1ACC9         at NCO1ACCH : 1
var volatile bit    NCO1ACCH_NCO1ACC10        at NCO1ACCH : 2
var volatile bit    NCO1ACCH_NCO1ACC11        at NCO1ACCH : 3
var volatile bit    NCO1ACCH_NCO1ACC12        at NCO1ACCH : 4
var volatile bit    NCO1ACCH_NCO1ACC13        at NCO1ACCH : 5
var volatile bit    NCO1ACCH_NCO1ACC14        at NCO1ACCH : 6
var volatile bit    NCO1ACCH_NCO1ACC15        at NCO1ACCH : 7
var volatile bit    NCO1ACCH_ACC8             at NCO1ACCH : 0
var volatile bit    NCO1ACCH_ACC9             at NCO1ACCH : 1
var volatile bit    NCO1ACCH_ACC10            at NCO1ACCH : 2
var volatile bit    NCO1ACCH_ACC11            at NCO1ACCH : 3
var volatile bit    NCO1ACCH_ACC12            at NCO1ACCH : 4
var volatile bit    NCO1ACCH_ACC13            at NCO1ACCH : 5
var volatile bit    NCO1ACCH_ACC14            at NCO1ACCH : 6
var volatile bit    NCO1ACCH_ACC15            at NCO1ACCH : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCU                  at { 0x442 }
var volatile bit*4  NCO1ACCU_ACC              at NCO1ACCU : 0
var volatile bit    NCO1ACCU_NCO1ACC16        at NCO1ACCU : 0
var volatile bit    NCO1ACCU_NCO1ACC17        at NCO1ACCU : 1
var volatile bit    NCO1ACCU_NCO1ACC18        at NCO1ACCU : 2
var volatile bit    NCO1ACCU_NCO1ACC19        at NCO1ACCU : 3
var volatile bit    NCO1ACCU_ACC16            at NCO1ACCU : 0
var volatile bit    NCO1ACCU_ACC17            at NCO1ACCU : 1
var volatile bit    NCO1ACCU_ACC18            at NCO1ACCU : 2
var volatile bit    NCO1ACCU_ACC19            at NCO1ACCU : 3
var volatile bit*4  NCO1ACCU_NCO1ACC          at NCO1ACCU : 0
-- ------------------------------------------------
var volatile byte*3 NCO1INC                   at { 0x443 }
-- ------------------------------------------------
var volatile byte   NCO1INCL                  at { 0x443 }
var volatile bit    NCO1INCL_NCO1INC0         at NCO1INCL : 0
var volatile bit    NCO1INCL_NCO1INC1         at NCO1INCL : 1
var volatile bit    NCO1INCL_NCO1INC2         at NCO1INCL : 2
var volatile bit    NCO1INCL_NCO1INC3         at NCO1INCL : 3
var volatile bit    NCO1INCL_NCO1INC4         at NCO1INCL : 4
var volatile bit    NCO1INCL_NCO1INC5         at NCO1INCL : 5
var volatile bit    NCO1INCL_NCO1INC6         at NCO1INCL : 6
var volatile bit    NCO1INCL_NCO1INC7         at NCO1INCL : 7
var volatile bit    NCO1INCL_INC0             at NCO1INCL : 0
var volatile bit    NCO1INCL_INC1             at NCO1INCL : 1
var volatile bit    NCO1INCL_INC2             at NCO1INCL : 2
var volatile bit    NCO1INCL_INC3             at NCO1INCL : 3
var volatile bit    NCO1INCL_INC4             at NCO1INCL : 4
var volatile bit    NCO1INCL_INC5             at NCO1INCL : 5
var volatile bit    NCO1INCL_INC6             at NCO1INCL : 6
var volatile bit    NCO1INCL_INC7             at NCO1INCL : 7
-- ------------------------------------------------
var volatile byte   NCO1INCH                  at { 0x444 }
var volatile bit    NCO1INCH_NCO1INC8         at NCO1INCH : 0
var volatile bit    NCO1INCH_NCO1INC9         at NCO1INCH : 1
var volatile bit    NCO1INCH_NCO1INC10        at NCO1INCH : 2
var volatile bit    NCO1INCH_NCO1INC11        at NCO1INCH : 3
var volatile bit    NCO1INCH_NCO1INC12        at NCO1INCH : 4
var volatile bit    NCO1INCH_NCO1INC13        at NCO1INCH : 5
var volatile bit    NCO1INCH_NCO1INC14        at NCO1INCH : 6
var volatile bit    NCO1INCH_NCO1INC15        at NCO1INCH : 7
var volatile bit    NCO1INCH_INC8             at NCO1INCH : 0
var volatile bit    NCO1INCH_INC9             at NCO1INCH : 1
var volatile bit    NCO1INCH_INC10            at NCO1INCH : 2
var volatile bit    NCO1INCH_INC11            at NCO1INCH : 3
var volatile bit    NCO1INCH_INC12            at NCO1INCH : 4
var volatile bit    NCO1INCH_INC13            at NCO1INCH : 5
var volatile bit    NCO1INCH_INC14            at NCO1INCH : 6
var volatile bit    NCO1INCH_INC15            at NCO1INCH : 7
-- ------------------------------------------------
var volatile byte   NCO1INCU                  at { 0x445 }
var volatile bit*4  NCO1INCU_INC              at NCO1INCU : 0
var volatile bit    NCO1INCU_NCO1INC16        at NCO1INCU : 0
var volatile bit    NCO1INCU_NCO1INC17        at NCO1INCU : 1
var volatile bit    NCO1INCU_NCO1INC18        at NCO1INCU : 2
var volatile bit    NCO1INCU_NCO1INC19        at NCO1INCU : 3
var volatile bit    NCO1INCU_INC16            at NCO1INCU : 0
var volatile bit    NCO1INCU_INC17            at NCO1INCU : 1
var volatile bit    NCO1INCU_INC18            at NCO1INCU : 2
var volatile bit    NCO1INCU_INC19            at NCO1INCU : 3
var volatile bit*4  NCO1INCU_NCO1INC          at NCO1INCU : 0
-- ------------------------------------------------
var volatile byte   NCO1CON                   at { 0x446 }
var volatile bit    NCO1CON_PFM               at NCO1CON : 0
var volatile bit    NCO1CON_POL               at NCO1CON : 4
var volatile bit    NCO1CON_OUT               at NCO1CON : 5
var volatile bit    NCO1CON_EN                at NCO1CON : 7
var volatile bit    NCO1CON_NCO1PFM           at NCO1CON : 0
var volatile bit    NCO1CON_NCO1POL           at NCO1CON : 4
var volatile bit    NCO1CON_NCO1OUT           at NCO1CON : 5
var volatile bit    NCO1CON_NCO1EN            at NCO1CON : 7
-- ------------------------------------------------
var volatile byte   NCO1CLK                   at { 0x447 }
var volatile bit*4  NCO1CLK_CKS               at NCO1CLK : 0
var volatile bit*3  NCO1CLK_PWS               at NCO1CLK : 5
var volatile bit    NCO1CLK_CKS0              at NCO1CLK : 0
var volatile bit    NCO1CLK_CKS1              at NCO1CLK : 1
var volatile bit    NCO1CLK_CKS2              at NCO1CLK : 2
var volatile bit    NCO1CLK_CKS3              at NCO1CLK : 3
var volatile bit    NCO1CLK_PWS0              at NCO1CLK : 5
var volatile bit    NCO1CLK_PWS1              at NCO1CLK : 6
var volatile bit    NCO1CLK_PWS2              at NCO1CLK : 7
var volatile bit*4  NCO1CLK_NCO1CKS           at NCO1CLK : 0
var volatile bit*3  NCO1CLK_NCO1PWS           at NCO1CLK : 5
var volatile bit    NCO1CLK_NCO1CKS0          at NCO1CLK : 0
var volatile bit    NCO1CLK_NCO1CKS1          at NCO1CLK : 1
var volatile bit    NCO1CLK_NCO1CKS2          at NCO1CLK : 2
var volatile bit    NCO1CLK_NCO1CKS3          at NCO1CLK : 3
var volatile bit    NCO1CLK_NCO1PWS0          at NCO1CLK : 5
var volatile bit    NCO1CLK_NCO1PWS1          at NCO1CLK : 6
var volatile bit    NCO1CLK_NCO1PWS2          at NCO1CLK : 7
-- ------------------------------------------------
var volatile byte*3 NCO2ACC                   at { 0x448 }
-- ------------------------------------------------
var volatile byte   NCO2ACCL                  at { 0x448 }
var volatile bit    NCO2ACCL_NCO2ACC0         at NCO2ACCL : 0
var volatile bit    NCO2ACCL_NCO2ACC1         at NCO2ACCL : 1
var volatile bit    NCO2ACCL_NCO2ACC2         at NCO2ACCL : 2
var volatile bit    NCO2ACCL_NCO2ACC3         at NCO2ACCL : 3
var volatile bit    NCO2ACCL_NCO2ACC4         at NCO2ACCL : 4
var volatile bit    NCO2ACCL_NCO2ACC5         at NCO2ACCL : 5
var volatile bit    NCO2ACCL_NCO2ACC6         at NCO2ACCL : 6
var volatile bit    NCO2ACCL_NCO2ACC7         at NCO2ACCL : 7
var volatile bit    NCO2ACCL_ACC0             at NCO2ACCL : 0
var volatile bit    NCO2ACCL_ACC1             at NCO2ACCL : 1
var volatile bit    NCO2ACCL_ACC2             at NCO2ACCL : 2
var volatile bit    NCO2ACCL_ACC3             at NCO2ACCL : 3
var volatile bit    NCO2ACCL_ACC4             at NCO2ACCL : 4
var volatile bit    NCO2ACCL_ACC5             at NCO2ACCL : 5
var volatile bit    NCO2ACCL_ACC6             at NCO2ACCL : 6
var volatile bit    NCO2ACCL_ACC7             at NCO2ACCL : 7
-- ------------------------------------------------
var volatile byte   NCO2ACCH                  at { 0x449 }
var volatile bit    NCO2ACCH_NCO2ACC8         at NCO2ACCH : 0
var volatile bit    NCO2ACCH_NCO2ACC9         at NCO2ACCH : 1
var volatile bit    NCO2ACCH_NCO2ACC10        at NCO2ACCH : 2
var volatile bit    NCO2ACCH_NCO2ACC11        at NCO2ACCH : 3
var volatile bit    NCO2ACCH_NCO2ACC12        at NCO2ACCH : 4
var volatile bit    NCO2ACCH_NCO2ACC13        at NCO2ACCH : 5
var volatile bit    NCO2ACCH_NCO2ACC14        at NCO2ACCH : 6
var volatile bit    NCO2ACCH_NCO2ACC15        at NCO2ACCH : 7
var volatile bit    NCO2ACCH_ACC8             at NCO2ACCH : 0
var volatile bit    NCO2ACCH_ACC9             at NCO2ACCH : 1
var volatile bit    NCO2ACCH_ACC10            at NCO2ACCH : 2
var volatile bit    NCO2ACCH_ACC11            at NCO2ACCH : 3
var volatile bit    NCO2ACCH_ACC12            at NCO2ACCH : 4
var volatile bit    NCO2ACCH_ACC13            at NCO2ACCH : 5
var volatile bit    NCO2ACCH_ACC14            at NCO2ACCH : 6
var volatile bit    NCO2ACCH_ACC15            at NCO2ACCH : 7
-- ------------------------------------------------
var volatile byte   NCO2ACCU                  at { 0x44A }
var volatile bit*4  NCO2ACCU_ACC              at NCO2ACCU : 0
var volatile bit    NCO2ACCU_NCO2ACC16        at NCO2ACCU : 0
var volatile bit    NCO2ACCU_NCO2ACC17        at NCO2ACCU : 1
var volatile bit    NCO2ACCU_NCO2ACC18        at NCO2ACCU : 2
var volatile bit    NCO2ACCU_NCO2ACC19        at NCO2ACCU : 3
var volatile bit    NCO2ACCU_ACC16            at NCO2ACCU : 0
var volatile bit    NCO2ACCU_ACC17            at NCO2ACCU : 1
var volatile bit    NCO2ACCU_ACC18            at NCO2ACCU : 2
var volatile bit    NCO2ACCU_ACC19            at NCO2ACCU : 3
var volatile bit*4  NCO2ACCU_NCO2ACC          at NCO2ACCU : 0
-- ------------------------------------------------
var volatile byte*3 NCO2INC                   at { 0x44B }
-- ------------------------------------------------
var volatile byte   NCO2INCL                  at { 0x44B }
var volatile bit    NCO2INCL_NCO2INC0         at NCO2INCL : 0
var volatile bit    NCO2INCL_NCO2INC1         at NCO2INCL : 1
var volatile bit    NCO2INCL_NCO2INC2         at NCO2INCL : 2
var volatile bit    NCO2INCL_NCO2INC3         at NCO2INCL : 3
var volatile bit    NCO2INCL_NCO2INC4         at NCO2INCL : 4
var volatile bit    NCO2INCL_NCO2INC5         at NCO2INCL : 5
var volatile bit    NCO2INCL_NCO2INC6         at NCO2INCL : 6
var volatile bit    NCO2INCL_NCO2INC7         at NCO2INCL : 7
var volatile bit    NCO2INCL_INC0             at NCO2INCL : 0
var volatile bit    NCO2INCL_INC1             at NCO2INCL : 1
var volatile bit    NCO2INCL_INC2             at NCO2INCL : 2
var volatile bit    NCO2INCL_INC3             at NCO2INCL : 3
var volatile bit    NCO2INCL_INC4             at NCO2INCL : 4
var volatile bit    NCO2INCL_INC5             at NCO2INCL : 5
var volatile bit    NCO2INCL_INC6             at NCO2INCL : 6
var volatile bit    NCO2INCL_INC7             at NCO2INCL : 7
-- ------------------------------------------------
var volatile byte   NCO2INCH                  at { 0x44C }
var volatile bit    NCO2INCH_NCO2INC8         at NCO2INCH : 0
var volatile bit    NCO2INCH_NCO2INC9         at NCO2INCH : 1
var volatile bit    NCO2INCH_NCO2INC10        at NCO2INCH : 2
var volatile bit    NCO2INCH_NCO2INC11        at NCO2INCH : 3
var volatile bit    NCO2INCH_NCO2INC12        at NCO2INCH : 4
var volatile bit    NCO2INCH_NCO2INC13        at NCO2INCH : 5
var volatile bit    NCO2INCH_NCO2INC14        at NCO2INCH : 6
var volatile bit    NCO2INCH_NCO2INC15        at NCO2INCH : 7
var volatile bit    NCO2INCH_INC8             at NCO2INCH : 0
var volatile bit    NCO2INCH_INC9             at NCO2INCH : 1
var volatile bit    NCO2INCH_INC10            at NCO2INCH : 2
var volatile bit    NCO2INCH_INC11            at NCO2INCH : 3
var volatile bit    NCO2INCH_INC12            at NCO2INCH : 4
var volatile bit    NCO2INCH_INC13            at NCO2INCH : 5
var volatile bit    NCO2INCH_INC14            at NCO2INCH : 6
var volatile bit    NCO2INCH_INC15            at NCO2INCH : 7
-- ------------------------------------------------
var volatile byte   NCO2INCU                  at { 0x44D }
var volatile bit*4  NCO2INCU_INC              at NCO2INCU : 0
var volatile bit    NCO2INCU_NCO2INC16        at NCO2INCU : 0
var volatile bit    NCO2INCU_NCO2INC17        at NCO2INCU : 1
var volatile bit    NCO2INCU_NCO2INC18        at NCO2INCU : 2
var volatile bit    NCO2INCU_NCO2INC19        at NCO2INCU : 3
var volatile bit    NCO2INCU_INC16            at NCO2INCU : 0
var volatile bit    NCO2INCU_INC17            at NCO2INCU : 1
var volatile bit    NCO2INCU_INC18            at NCO2INCU : 2
var volatile bit    NCO2INCU_INC19            at NCO2INCU : 3
var volatile bit*4  NCO2INCU_NCO2INC          at NCO2INCU : 0
-- ------------------------------------------------
var volatile byte   NCO2CON                   at { 0x44E }
var volatile bit    NCO2CON_PFM               at NCO2CON : 0
var volatile bit    NCO2CON_POL               at NCO2CON : 4
var volatile bit    NCO2CON_OUT               at NCO2CON : 5
var volatile bit    NCO2CON_EN                at NCO2CON : 7
var volatile bit    NCO2CON_NCO2PFM           at NCO2CON : 0
var volatile bit    NCO2CON_NCO2POL           at NCO2CON : 4
var volatile bit    NCO2CON_NCO2OUT           at NCO2CON : 5
var volatile bit    NCO2CON_NCO2EN            at NCO2CON : 7
-- ------------------------------------------------
var volatile byte   NCO2CLK                   at { 0x44F }
var volatile bit*4  NCO2CLK_CKS               at NCO2CLK : 0
var volatile bit*3  NCO2CLK_PWS               at NCO2CLK : 5
var volatile bit    NCO2CLK_CKS0              at NCO2CLK : 0
var volatile bit    NCO2CLK_CKS1              at NCO2CLK : 1
var volatile bit    NCO2CLK_CKS2              at NCO2CLK : 2
var volatile bit    NCO2CLK_CKS3              at NCO2CLK : 3
var volatile bit    NCO2CLK_PWS0              at NCO2CLK : 5
var volatile bit    NCO2CLK_PWS1              at NCO2CLK : 6
var volatile bit    NCO2CLK_PWS2              at NCO2CLK : 7
var volatile bit*4  NCO2CLK_NCO2CKS           at NCO2CLK : 0
var volatile bit*3  NCO2CLK_NCO2PWS           at NCO2CLK : 5
var volatile bit    NCO2CLK_NCO2CKS0          at NCO2CLK : 0
var volatile bit    NCO2CLK_NCO2CKS1          at NCO2CLK : 1
var volatile bit    NCO2CLK_NCO2CKS2          at NCO2CLK : 2
var volatile bit    NCO2CLK_NCO2CKS3          at NCO2CLK : 3
var volatile bit    NCO2CLK_NCO2PWS0          at NCO2CLK : 5
var volatile bit    NCO2CLK_NCO2PWS1          at NCO2CLK : 6
var volatile bit    NCO2CLK_NCO2PWS2          at NCO2CLK : 7
-- ------------------------------------------------
var volatile byte*3 NCO3ACC                   at { 0x450 }
-- ------------------------------------------------
var volatile byte   NCO3ACCL                  at { 0x450 }
var volatile bit    NCO3ACCL_NCO3ACC0         at NCO3ACCL : 0
var volatile bit    NCO3ACCL_NCO3ACC1         at NCO3ACCL : 1
var volatile bit    NCO3ACCL_NCO3ACC2         at NCO3ACCL : 2
var volatile bit    NCO3ACCL_NCO3ACC3         at NCO3ACCL : 3
var volatile bit    NCO3ACCL_NCO3ACC4         at NCO3ACCL : 4
var volatile bit    NCO3ACCL_NCO3ACC5         at NCO3ACCL : 5
var volatile bit    NCO3ACCL_NCO3ACC6         at NCO3ACCL : 6
var volatile bit    NCO3ACCL_NCO3ACC7         at NCO3ACCL : 7
var volatile bit    NCO3ACCL_ACC0             at NCO3ACCL : 0
var volatile bit    NCO3ACCL_ACC1             at NCO3ACCL : 1
var volatile bit    NCO3ACCL_ACC2             at NCO3ACCL : 2
var volatile bit    NCO3ACCL_ACC3             at NCO3ACCL : 3
var volatile bit    NCO3ACCL_ACC4             at NCO3ACCL : 4
var volatile bit    NCO3ACCL_ACC5             at NCO3ACCL : 5
var volatile bit    NCO3ACCL_ACC6             at NCO3ACCL : 6
var volatile bit    NCO3ACCL_ACC7             at NCO3ACCL : 7
-- ------------------------------------------------
var volatile byte   NCO3ACCH                  at { 0x451 }
var volatile bit    NCO3ACCH_NCO3ACC8         at NCO3ACCH : 0
var volatile bit    NCO3ACCH_NCO3ACC9         at NCO3ACCH : 1
var volatile bit    NCO3ACCH_NCO3ACC10        at NCO3ACCH : 2
var volatile bit    NCO3ACCH_NCO3ACC11        at NCO3ACCH : 3
var volatile bit    NCO3ACCH_NCO3ACC12        at NCO3ACCH : 4
var volatile bit    NCO3ACCH_NCO3ACC13        at NCO3ACCH : 5
var volatile bit    NCO3ACCH_NCO3ACC14        at NCO3ACCH : 6
var volatile bit    NCO3ACCH_NCO3ACC15        at NCO3ACCH : 7
var volatile bit    NCO3ACCH_ACC8             at NCO3ACCH : 0
var volatile bit    NCO3ACCH_ACC9             at NCO3ACCH : 1
var volatile bit    NCO3ACCH_ACC10            at NCO3ACCH : 2
var volatile bit    NCO3ACCH_ACC11            at NCO3ACCH : 3
var volatile bit    NCO3ACCH_ACC12            at NCO3ACCH : 4
var volatile bit    NCO3ACCH_ACC13            at NCO3ACCH : 5
var volatile bit    NCO3ACCH_ACC14            at NCO3ACCH : 6
var volatile bit    NCO3ACCH_ACC15            at NCO3ACCH : 7
-- ------------------------------------------------
var volatile byte   NCO3ACCU                  at { 0x452 }
var volatile bit*4  NCO3ACCU_ACC              at NCO3ACCU : 0
var volatile bit    NCO3ACCU_NCO3ACC16        at NCO3ACCU : 0
var volatile bit    NCO3ACCU_NCO3ACC17        at NCO3ACCU : 1
var volatile bit    NCO3ACCU_NCO3ACC18        at NCO3ACCU : 2
var volatile bit    NCO3ACCU_NCO3ACC19        at NCO3ACCU : 3
var volatile bit    NCO3ACCU_ACC16            at NCO3ACCU : 0
var volatile bit    NCO3ACCU_ACC17            at NCO3ACCU : 1
var volatile bit    NCO3ACCU_ACC18            at NCO3ACCU : 2
var volatile bit    NCO3ACCU_ACC19            at NCO3ACCU : 3
var volatile bit*4  NCO3ACCU_NCO3ACC          at NCO3ACCU : 0
-- ------------------------------------------------
var volatile byte*3 NCO3INC                   at { 0x453 }
-- ------------------------------------------------
var volatile byte   NCO3INCL                  at { 0x453 }
var volatile bit    NCO3INCL_NCO3INC0         at NCO3INCL : 0
var volatile bit    NCO3INCL_NCO3INC1         at NCO3INCL : 1
var volatile bit    NCO3INCL_NCO3INC2         at NCO3INCL : 2
var volatile bit    NCO3INCL_NCO3INC3         at NCO3INCL : 3
var volatile bit    NCO3INCL_NCO3INC4         at NCO3INCL : 4
var volatile bit    NCO3INCL_NCO3INC5         at NCO3INCL : 5
var volatile bit    NCO3INCL_NCO3INC6         at NCO3INCL : 6
var volatile bit    NCO3INCL_NCO3INC7         at NCO3INCL : 7
var volatile bit    NCO3INCL_INC0             at NCO3INCL : 0
var volatile bit    NCO3INCL_INC1             at NCO3INCL : 1
var volatile bit    NCO3INCL_INC2             at NCO3INCL : 2
var volatile bit    NCO3INCL_INC3             at NCO3INCL : 3
var volatile bit    NCO3INCL_INC4             at NCO3INCL : 4
var volatile bit    NCO3INCL_INC5             at NCO3INCL : 5
var volatile bit    NCO3INCL_INC6             at NCO3INCL : 6
var volatile bit    NCO3INCL_INC7             at NCO3INCL : 7
-- ------------------------------------------------
var volatile byte   NCO3INCH                  at { 0x454 }
var volatile bit    NCO3INCH_NCO3INC8         at NCO3INCH : 0
var volatile bit    NCO3INCH_NCO3INC9         at NCO3INCH : 1
var volatile bit    NCO3INCH_NCO3INC10        at NCO3INCH : 2
var volatile bit    NCO3INCH_NCO3INC11        at NCO3INCH : 3
var volatile bit    NCO3INCH_NCO3INC12        at NCO3INCH : 4
var volatile bit    NCO3INCH_NCO3INC13        at NCO3INCH : 5
var volatile bit    NCO3INCH_NCO3INC14        at NCO3INCH : 6
var volatile bit    NCO3INCH_NCO3INC15        at NCO3INCH : 7
var volatile bit    NCO3INCH_INC8             at NCO3INCH : 0
var volatile bit    NCO3INCH_INC9             at NCO3INCH : 1
var volatile bit    NCO3INCH_INC10            at NCO3INCH : 2
var volatile bit    NCO3INCH_INC11            at NCO3INCH : 3
var volatile bit    NCO3INCH_INC12            at NCO3INCH : 4
var volatile bit    NCO3INCH_INC13            at NCO3INCH : 5
var volatile bit    NCO3INCH_INC14            at NCO3INCH : 6
var volatile bit    NCO3INCH_INC15            at NCO3INCH : 7
-- ------------------------------------------------
var volatile byte   NCO3INCU                  at { 0x455 }
var volatile bit*4  NCO3INCU_INC              at NCO3INCU : 0
var volatile bit    NCO3INCU_NCO3INC16        at NCO3INCU : 0
var volatile bit    NCO3INCU_NCO3INC17        at NCO3INCU : 1
var volatile bit    NCO3INCU_NCO3INC18        at NCO3INCU : 2
var volatile bit    NCO3INCU_NCO3INC19        at NCO3INCU : 3
var volatile bit    NCO3INCU_INC16            at NCO3INCU : 0
var volatile bit    NCO3INCU_INC17            at NCO3INCU : 1
var volatile bit    NCO3INCU_INC18            at NCO3INCU : 2
var volatile bit    NCO3INCU_INC19            at NCO3INCU : 3
var volatile bit*4  NCO3INCU_NCO3INC          at NCO3INCU : 0
-- ------------------------------------------------
var volatile byte   NCO3CON                   at { 0x456 }
var volatile bit    NCO3CON_PFM               at NCO3CON : 0
var volatile bit    NCO3CON_POL               at NCO3CON : 4
var volatile bit    NCO3CON_OUT               at NCO3CON : 5
var volatile bit    NCO3CON_EN                at NCO3CON : 7
var volatile bit    NCO3CON_NCO3PFM           at NCO3CON : 0
var volatile bit    NCO3CON_NCO3POL           at NCO3CON : 4
var volatile bit    NCO3CON_NCO3OUT           at NCO3CON : 5
var volatile bit    NCO3CON_NCO3EN            at NCO3CON : 7
-- ------------------------------------------------
var volatile byte   NCO3CLK                   at { 0x457 }
var volatile bit*4  NCO3CLK_CKS               at NCO3CLK : 0
var volatile bit*3  NCO3CLK_PWS               at NCO3CLK : 5
var volatile bit    NCO3CLK_CKS0              at NCO3CLK : 0
var volatile bit    NCO3CLK_CKS1              at NCO3CLK : 1
var volatile bit    NCO3CLK_CKS2              at NCO3CLK : 2
var volatile bit    NCO3CLK_CKS3              at NCO3CLK : 3
var volatile bit    NCO3CLK_PWS0              at NCO3CLK : 5
var volatile bit    NCO3CLK_PWS1              at NCO3CLK : 6
var volatile bit    NCO3CLK_PWS2              at NCO3CLK : 7
var volatile bit*4  NCO3CLK_NCO3CKS           at NCO3CLK : 0
var volatile bit*3  NCO3CLK_NCO3PWS           at NCO3CLK : 5
var volatile bit    NCO3CLK_NCO3CKS0          at NCO3CLK : 0
var volatile bit    NCO3CLK_NCO3CKS1          at NCO3CLK : 1
var volatile bit    NCO3CLK_NCO3CKS2          at NCO3CLK : 2
var volatile bit    NCO3CLK_NCO3CKS3          at NCO3CLK : 3
var volatile bit    NCO3CLK_NCO3PWS0          at NCO3CLK : 5
var volatile bit    NCO3CLK_NCO3PWS1          at NCO3CLK : 6
var volatile bit    NCO3CLK_NCO3PWS2          at NCO3CLK : 7
-- ------------------------------------------------
var volatile byte   FSCMCON                   at { 0x458 }
var volatile bit    FSCMCON_FSCMFEV           at FSCMCON : 0
var volatile bit    FSCMCON_FSCMFFI           at FSCMCON : 1
var volatile bit    FSCMCON_FSCMPEV           at FSCMCON : 2
var volatile bit    FSCMCON_FSCMPFI           at FSCMCON : 3
var volatile bit    FSCMCON_FSCMSEV           at FSCMCON : 4
var volatile bit    FSCMCON_FSCMSFI           at FSCMCON : 5
-- ------------------------------------------------
var volatile byte   IVTLOCK                   at { 0x459 }
var volatile bit    IVTLOCK_IVTLOCKED         at IVTLOCK : 0
-- ------------------------------------------------
var volatile byte*3 IVTAD                     at { 0x45A }
-- ------------------------------------------------
var volatile byte   IVTADL                    at { 0x45A }
var volatile bit    IVTADL_AD0                at IVTADL : 0
var volatile bit    IVTADL_AD1                at IVTADL : 1
var volatile bit    IVTADL_AD2                at IVTADL : 2
var volatile bit    IVTADL_AD3                at IVTADL : 3
var volatile bit    IVTADL_AD4                at IVTADL : 4
var volatile bit    IVTADL_AD5                at IVTADL : 5
var volatile bit    IVTADL_AD6                at IVTADL : 6
var volatile bit    IVTADL_AD7                at IVTADL : 7
-- ------------------------------------------------
var volatile byte   IVTADH                    at { 0x45B }
var volatile bit    IVTADH_AD8                at IVTADH : 0
var volatile bit    IVTADH_AD9                at IVTADH : 1
var volatile bit    IVTADH_AD10               at IVTADH : 2
var volatile bit    IVTADH_AD11               at IVTADH : 3
var volatile bit    IVTADH_AD12               at IVTADH : 4
var volatile bit    IVTADH_AD13               at IVTADH : 5
var volatile bit    IVTADH_AD14               at IVTADH : 6
var volatile bit    IVTADH_AD15               at IVTADH : 7
-- ------------------------------------------------
var volatile byte   IVTADU                    at { 0x45C }
var volatile bit    IVTADU_AD16               at IVTADU : 0
var volatile bit    IVTADU_AD17               at IVTADU : 1
var volatile bit    IVTADU_AD18               at IVTADU : 2
var volatile bit    IVTADU_AD19               at IVTADU : 3
var volatile bit    IVTADU_AD20               at IVTADU : 4
-- ------------------------------------------------
var volatile byte*3 IVTBASE                   at { 0x45D }
-- ------------------------------------------------
var volatile byte   IVTBASEL                  at { 0x45D }
var volatile bit    IVTBASEL_BASE0            at IVTBASEL : 0
var volatile bit    IVTBASEL_BASE1            at IVTBASEL : 1
var volatile bit    IVTBASEL_BASE2            at IVTBASEL : 2
var volatile bit    IVTBASEL_BASE3            at IVTBASEL : 3
var volatile bit    IVTBASEL_BASE4            at IVTBASEL : 4
var volatile bit    IVTBASEL_BASE5            at IVTBASEL : 5
var volatile bit    IVTBASEL_BASE6            at IVTBASEL : 6
var volatile bit    IVTBASEL_BASE7            at IVTBASEL : 7
-- ------------------------------------------------
var volatile byte   IVTBASEH                  at { 0x45E }
var volatile bit    IVTBASEH_BASE8            at IVTBASEH : 0
var volatile bit    IVTBASEH_BASE9            at IVTBASEH : 1
var volatile bit    IVTBASEH_BASE10           at IVTBASEH : 2
var volatile bit    IVTBASEH_BASE11           at IVTBASEH : 3
var volatile bit    IVTBASEH_BASE12           at IVTBASEH : 4
var volatile bit    IVTBASEH_BASE13           at IVTBASEH : 5
var volatile bit    IVTBASEH_BASE14           at IVTBASEH : 6
var volatile bit    IVTBASEH_BASE15           at IVTBASEH : 7
-- ------------------------------------------------
var volatile byte   IVTBASEU                  at { 0x45F }
var volatile bit    IVTBASEU_BASE16           at IVTBASEU : 0
var volatile bit    IVTBASEU_BASE17           at IVTBASEU : 1
var volatile bit    IVTBASEU_BASE18           at IVTBASEU : 2
var volatile bit    IVTBASEU_BASE19           at IVTBASEU : 3
var volatile bit    IVTBASEU_BASE20           at IVTBASEU : 4
-- ------------------------------------------------
var volatile byte   PWM1ERS                   at { 0x460 }
var volatile bit    PWM1ERS_ERS0              at PWM1ERS : 0
var volatile bit    PWM1ERS_ERS1              at PWM1ERS : 1
var volatile bit    PWM1ERS_ERS2              at PWM1ERS : 2
var volatile bit    PWM1ERS_ERS3              at PWM1ERS : 3
var volatile bit    PWM1ERS_ERS4              at PWM1ERS : 4
var volatile bit    PWM1ERS_ERS5              at PWM1ERS : 5
var volatile bit    PWM1ERS_ERS6              at PWM1ERS : 6
var volatile bit    PWM1ERS_ERS7              at PWM1ERS : 7
-- ------------------------------------------------
var volatile byte   PWM1CLK                   at { 0x461 }
var volatile bit    PWM1CLK_CLK0              at PWM1CLK : 0
var volatile bit    PWM1CLK_CLK1              at PWM1CLK : 1
var volatile bit    PWM1CLK_CLK2              at PWM1CLK : 2
var volatile bit    PWM1CLK_CLK3              at PWM1CLK : 3
var volatile bit    PWM1CLK_CLK4              at PWM1CLK : 4
var volatile bit    PWM1CLK_CLK5              at PWM1CLK : 5
var volatile bit    PWM1CLK_CLK6              at PWM1CLK : 6
var volatile bit    PWM1CLK_CLK7              at PWM1CLK : 7
-- ------------------------------------------------
var volatile byte   PWM1LDS                   at { 0x462 }
var volatile bit    PWM1LDS_LDS0              at PWM1LDS : 0
var volatile bit    PWM1LDS_LDS1              at PWM1LDS : 1
var volatile bit    PWM1LDS_LDS2              at PWM1LDS : 2
var volatile bit    PWM1LDS_LDS3              at PWM1LDS : 3
var volatile bit    PWM1LDS_LDS4              at PWM1LDS : 4
var volatile bit    PWM1LDS_LDS5              at PWM1LDS : 5
var volatile bit    PWM1LDS_LDS6              at PWM1LDS : 6
var volatile bit    PWM1LDS_LDS7              at PWM1LDS : 7
-- ------------------------------------------------
var volatile word   PWM1PR                    at { 0x463 }
-- ------------------------------------------------
var volatile byte   PWM1PRL                   at { 0x463 }
-- ------------------------------------------------
var volatile byte   PWM1PRH                   at { 0x464 }
-- ------------------------------------------------
var volatile byte   PWM1CPRE                  at { 0x465 }
-- ------------------------------------------------
var volatile byte   PWM1PIPOS                 at { 0x466 }
-- ------------------------------------------------
var volatile byte   PWM1GIR                   at { 0x467 }
var volatile bit    PWM1GIR_S1P1IF            at PWM1GIR : 0
var volatile bit    PWM1GIR_S1P2IF            at PWM1GIR : 1
-- ------------------------------------------------
var volatile byte   PWM1GIE                   at { 0x468 }
var volatile bit    PWM1GIE_S1P1IE            at PWM1GIE : 0
var volatile bit    PWM1GIE_S1P2IE            at PWM1GIE : 1
-- ------------------------------------------------
var volatile byte   PWM1CON                   at { 0x469 }
var volatile bit    PWM1CON_ERSNOW            at PWM1CON : 0
var volatile bit    PWM1CON_ERSPOL            at PWM1CON : 1
var volatile bit    PWM1CON_LD                at PWM1CON : 2
var volatile bit    PWM1CON_EN                at PWM1CON : 7
-- ------------------------------------------------
var volatile byte   PWM1S1CFG                 at { 0x46A }
var volatile bit*3  PWM1S1CFG_MODE            at PWM1S1CFG : 0
var volatile bit    PWM1S1CFG_PPEN            at PWM1S1CFG : 3
var volatile bit    PWM1S1CFG_POL1            at PWM1S1CFG : 6
var volatile bit    PWM1S1CFG_POL2            at PWM1S1CFG : 7
var volatile bit    PWM1S1CFG_MODE0           at PWM1S1CFG : 0
var volatile bit    PWM1S1CFG_MODE1           at PWM1S1CFG : 1
var volatile bit    PWM1S1CFG_MODE2           at PWM1S1CFG : 2
-- ------------------------------------------------
var volatile word   PWM1S1P1                  at { 0x46B }
-- ------------------------------------------------
var volatile byte   PWM1S1P1L                 at { 0x46B }
-- ------------------------------------------------
var volatile byte   PWM1S1P1H                 at { 0x46C }
-- ------------------------------------------------
var volatile word   PWM1S1P2                  at { 0x46D }
-- ------------------------------------------------
var volatile byte   PWM1S1P2L                 at { 0x46D }
-- ------------------------------------------------
var volatile byte   PWM1S1P2H                 at { 0x46E }
-- ------------------------------------------------
var volatile byte   PWM2ERS                   at { 0x46F }
var volatile bit    PWM2ERS_ERS0              at PWM2ERS : 0
var volatile bit    PWM2ERS_ERS1              at PWM2ERS : 1
var volatile bit    PWM2ERS_ERS2              at PWM2ERS : 2
var volatile bit    PWM2ERS_ERS3              at PWM2ERS : 3
var volatile bit    PWM2ERS_ERS4              at PWM2ERS : 4
var volatile bit    PWM2ERS_ERS5              at PWM2ERS : 5
var volatile bit    PWM2ERS_ERS6              at PWM2ERS : 6
var volatile bit    PWM2ERS_ERS7              at PWM2ERS : 7
-- ------------------------------------------------
var volatile byte   PWM2CLK                   at { 0x470 }
var volatile bit    PWM2CLK_CLK0              at PWM2CLK : 0
var volatile bit    PWM2CLK_CLK1              at PWM2CLK : 1
var volatile bit    PWM2CLK_CLK2              at PWM2CLK : 2
var volatile bit    PWM2CLK_CLK3              at PWM2CLK : 3
var volatile bit    PWM2CLK_CLK4              at PWM2CLK : 4
var volatile bit    PWM2CLK_CLK5              at PWM2CLK : 5
var volatile bit    PWM2CLK_CLK6              at PWM2CLK : 6
var volatile bit    PWM2CLK_CLK7              at PWM2CLK : 7
-- ------------------------------------------------
var volatile byte   PWM2LDS                   at { 0x471 }
var volatile bit    PWM2LDS_LDS0              at PWM2LDS : 0
var volatile bit    PWM2LDS_LDS1              at PWM2LDS : 1
var volatile bit    PWM2LDS_LDS2              at PWM2LDS : 2
var volatile bit    PWM2LDS_LDS3              at PWM2LDS : 3
var volatile bit    PWM2LDS_LDS4              at PWM2LDS : 4
var volatile bit    PWM2LDS_LDS5              at PWM2LDS : 5
var volatile bit    PWM2LDS_LDS6              at PWM2LDS : 6
var volatile bit    PWM2LDS_LDS7              at PWM2LDS : 7
-- ------------------------------------------------
var volatile word   PWM2PR                    at { 0x472 }
-- ------------------------------------------------
var volatile byte   PWM2PRL                   at { 0x472 }
-- ------------------------------------------------
var volatile byte   PWM2PRH                   at { 0x473 }
-- ------------------------------------------------
var volatile byte   PWM2CPRE                  at { 0x474 }
-- ------------------------------------------------
var volatile byte   PWM2PIPOS                 at { 0x475 }
-- ------------------------------------------------
var volatile byte   PWM2GIR                   at { 0x476 }
var volatile bit    PWM2GIR_S1P1IF            at PWM2GIR : 0
var volatile bit    PWM2GIR_S1P2IF            at PWM2GIR : 1
-- ------------------------------------------------
var volatile byte   PWM2GIE                   at { 0x477 }
var volatile bit    PWM2GIE_S1P1IE            at PWM2GIE : 0
var volatile bit    PWM2GIE_S1P2IE            at PWM2GIE : 1
-- ------------------------------------------------
var volatile byte   PWM2CON                   at { 0x478 }
var volatile bit    PWM2CON_ERSNOW            at PWM2CON : 0
var volatile bit    PWM2CON_ERSPOL            at PWM2CON : 1
var volatile bit    PWM2CON_LD                at PWM2CON : 2
var volatile bit    PWM2CON_EN                at PWM2CON : 7
-- ------------------------------------------------
var volatile byte   PWM2S1CFG                 at { 0x479 }
var volatile bit*3  PWM2S1CFG_MODE            at PWM2S1CFG : 0
var volatile bit    PWM2S1CFG_PPEN            at PWM2S1CFG : 3
var volatile bit    PWM2S1CFG_POL1            at PWM2S1CFG : 6
var volatile bit    PWM2S1CFG_POL2            at PWM2S1CFG : 7
var volatile bit    PWM2S1CFG_MODE0           at PWM2S1CFG : 0
var volatile bit    PWM2S1CFG_MODE1           at PWM2S1CFG : 1
var volatile bit    PWM2S1CFG_MODE2           at PWM2S1CFG : 2
-- ------------------------------------------------
var volatile word   PWM2S1P1                  at { 0x47A }
-- ------------------------------------------------
var volatile byte   PWM2S1P1L                 at { 0x47A }
-- ------------------------------------------------
var volatile byte   PWM2S1P1H                 at { 0x47B }
-- ------------------------------------------------
var volatile word   PWM2S1P2                  at { 0x47C }
-- ------------------------------------------------
var volatile byte   PWM2S1P2L                 at { 0x47C }
-- ------------------------------------------------
var volatile byte   PWM2S1P2H                 at { 0x47D }
-- ------------------------------------------------
var volatile byte   PWM3ERS                   at { 0x47E }
var volatile bit    PWM3ERS_ERS0              at PWM3ERS : 0
var volatile bit    PWM3ERS_ERS1              at PWM3ERS : 1
var volatile bit    PWM3ERS_ERS2              at PWM3ERS : 2
var volatile bit    PWM3ERS_ERS3              at PWM3ERS : 3
var volatile bit    PWM3ERS_ERS4              at PWM3ERS : 4
var volatile bit    PWM3ERS_ERS5              at PWM3ERS : 5
var volatile bit    PWM3ERS_ERS6              at PWM3ERS : 6
var volatile bit    PWM3ERS_ERS7              at PWM3ERS : 7
-- ------------------------------------------------
var volatile byte   PWM3CLK                   at { 0x47F }
var volatile bit    PWM3CLK_CLK0              at PWM3CLK : 0
var volatile bit    PWM3CLK_CLK1              at PWM3CLK : 1
var volatile bit    PWM3CLK_CLK2              at PWM3CLK : 2
var volatile bit    PWM3CLK_CLK3              at PWM3CLK : 3
var volatile bit    PWM3CLK_CLK4              at PWM3CLK : 4
var volatile bit    PWM3CLK_CLK5              at PWM3CLK : 5
var volatile bit    PWM3CLK_CLK6              at PWM3CLK : 6
var volatile bit    PWM3CLK_CLK7              at PWM3CLK : 7
-- ------------------------------------------------
var volatile byte   PWM3LDS                   at { 0x480 }
var volatile bit    PWM3LDS_LDS0              at PWM3LDS : 0
var volatile bit    PWM3LDS_LDS1              at PWM3LDS : 1
var volatile bit    PWM3LDS_LDS2              at PWM3LDS : 2
var volatile bit    PWM3LDS_LDS3              at PWM3LDS : 3
var volatile bit    PWM3LDS_LDS4              at PWM3LDS : 4
var volatile bit    PWM3LDS_LDS5              at PWM3LDS : 5
var volatile bit    PWM3LDS_LDS6              at PWM3LDS : 6
var volatile bit    PWM3LDS_LDS7              at PWM3LDS : 7
-- ------------------------------------------------
var volatile word   PWM3PR                    at { 0x481 }
-- ------------------------------------------------
var volatile byte   PWM3PRL                   at { 0x481 }
-- ------------------------------------------------
var volatile byte   PWM3PRH                   at { 0x482 }
-- ------------------------------------------------
var volatile byte   PWM3CPRE                  at { 0x483 }
-- ------------------------------------------------
var volatile byte   PWM3PIPOS                 at { 0x484 }
-- ------------------------------------------------
var volatile byte   PWM3GIR                   at { 0x485 }
var volatile bit    PWM3GIR_S1P1IF            at PWM3GIR : 0
var volatile bit    PWM3GIR_S1P2IF            at PWM3GIR : 1
-- ------------------------------------------------
var volatile byte   PWM3GIE                   at { 0x486 }
var volatile bit    PWM3GIE_S1P1IE            at PWM3GIE : 0
var volatile bit    PWM3GIE_S1P2IE            at PWM3GIE : 1
-- ------------------------------------------------
var volatile byte   PWM3CON                   at { 0x487 }
var volatile bit    PWM3CON_ERSNOW            at PWM3CON : 0
var volatile bit    PWM3CON_ERSPOL            at PWM3CON : 1
var volatile bit    PWM3CON_LD                at PWM3CON : 2
var volatile bit    PWM3CON_EN                at PWM3CON : 7
-- ------------------------------------------------
var volatile byte   PWM3S1CFG                 at { 0x488 }
var volatile bit*3  PWM3S1CFG_MODE            at PWM3S1CFG : 0
var volatile bit    PWM3S1CFG_PPEN            at PWM3S1CFG : 3
var volatile bit    PWM3S1CFG_POL1            at PWM3S1CFG : 6
var volatile bit    PWM3S1CFG_POL2            at PWM3S1CFG : 7
var volatile bit    PWM3S1CFG_MODE0           at PWM3S1CFG : 0
var volatile bit    PWM3S1CFG_MODE1           at PWM3S1CFG : 1
var volatile bit    PWM3S1CFG_MODE2           at PWM3S1CFG : 2
-- ------------------------------------------------
var volatile word   PWM3S1P1                  at { 0x489 }
-- ------------------------------------------------
var volatile byte   PWM3S1P1L                 at { 0x489 }
-- ------------------------------------------------
var volatile byte   PWM3S1P1H                 at { 0x48A }
-- ------------------------------------------------
var volatile word   PWM3S1P2                  at { 0x48B }
-- ------------------------------------------------
var volatile byte   PWM3S1P2L                 at { 0x48B }
-- ------------------------------------------------
var volatile byte   PWM3S1P2H                 at { 0x48C }
-- ------------------------------------------------
var volatile byte   PWM4ERS                   at { 0x48D }
var volatile bit    PWM4ERS_ERS0              at PWM4ERS : 0
var volatile bit    PWM4ERS_ERS1              at PWM4ERS : 1
var volatile bit    PWM4ERS_ERS2              at PWM4ERS : 2
var volatile bit    PWM4ERS_ERS3              at PWM4ERS : 3
var volatile bit    PWM4ERS_ERS4              at PWM4ERS : 4
var volatile bit    PWM4ERS_ERS5              at PWM4ERS : 5
var volatile bit    PWM4ERS_ERS6              at PWM4ERS : 6
var volatile bit    PWM4ERS_ERS7              at PWM4ERS : 7
-- ------------------------------------------------
var volatile byte   PWM4CLK                   at { 0x48E }
var volatile bit    PWM4CLK_CLK0              at PWM4CLK : 0
var volatile bit    PWM4CLK_CLK1              at PWM4CLK : 1
var volatile bit    PWM4CLK_CLK2              at PWM4CLK : 2
var volatile bit    PWM4CLK_CLK3              at PWM4CLK : 3
var volatile bit    PWM4CLK_CLK4              at PWM4CLK : 4
var volatile bit    PWM4CLK_CLK5              at PWM4CLK : 5
var volatile bit    PWM4CLK_CLK6              at PWM4CLK : 6
var volatile bit    PWM4CLK_CLK7              at PWM4CLK : 7
-- ------------------------------------------------
var volatile byte   PWM4LDS                   at { 0x48F }
var volatile bit    PWM4LDS_LDS0              at PWM4LDS : 0
var volatile bit    PWM4LDS_LDS1              at PWM4LDS : 1
var volatile bit    PWM4LDS_LDS2              at PWM4LDS : 2
var volatile bit    PWM4LDS_LDS3              at PWM4LDS : 3
var volatile bit    PWM4LDS_LDS4              at PWM4LDS : 4
var volatile bit    PWM4LDS_LDS5              at PWM4LDS : 5
var volatile bit    PWM4LDS_LDS6              at PWM4LDS : 6
var volatile bit    PWM4LDS_LDS7              at PWM4LDS : 7
-- ------------------------------------------------
var volatile word   PWM4PR                    at { 0x490 }
-- ------------------------------------------------
var volatile byte   PWM4PRL                   at { 0x490 }
-- ------------------------------------------------
var volatile byte   PWM4PRH                   at { 0x491 }
-- ------------------------------------------------
var volatile byte   PWM4CPRE                  at { 0x492 }
-- ------------------------------------------------
var volatile byte   PWM4PIPOS                 at { 0x493 }
-- ------------------------------------------------
var volatile byte   PWM4GIR                   at { 0x494 }
var volatile bit    PWM4GIR_S1P1IF            at PWM4GIR : 0
var volatile bit    PWM4GIR_S1P2IF            at PWM4GIR : 1
-- ------------------------------------------------
var volatile byte   PWM4GIE                   at { 0x495 }
var volatile bit    PWM4GIE_S1P1IE            at PWM4GIE : 0
var volatile bit    PWM4GIE_S1P2IE            at PWM4GIE : 1
-- ------------------------------------------------
var volatile byte   PWM4CON                   at { 0x496 }
var volatile bit    PWM4CON_ERSNOW            at PWM4CON : 0
var volatile bit    PWM4CON_ERSPOL            at PWM4CON : 1
var volatile bit    PWM4CON_LD                at PWM4CON : 2
var volatile bit    PWM4CON_EN                at PWM4CON : 7
-- ------------------------------------------------
var volatile byte   PWM4S1CFG                 at { 0x497 }
var volatile bit*3  PWM4S1CFG_MODE            at PWM4S1CFG : 0
var volatile bit    PWM4S1CFG_PPEN            at PWM4S1CFG : 3
var volatile bit    PWM4S1CFG_POL1            at PWM4S1CFG : 6
var volatile bit    PWM4S1CFG_POL2            at PWM4S1CFG : 7
var volatile bit    PWM4S1CFG_MODE0           at PWM4S1CFG : 0
var volatile bit    PWM4S1CFG_MODE1           at PWM4S1CFG : 1
var volatile bit    PWM4S1CFG_MODE2           at PWM4S1CFG : 2
-- ------------------------------------------------
var volatile word   PWM4S1P1                  at { 0x498 }
-- ------------------------------------------------
var volatile byte   PWM4S1P1L                 at { 0x498 }
-- ------------------------------------------------
var volatile byte   PWM4S1P1H                 at { 0x499 }
-- ------------------------------------------------
var volatile word   PWM4S1P2                  at { 0x49A }
-- ------------------------------------------------
var volatile byte   PWM4S1P2L                 at { 0x49A }
-- ------------------------------------------------
var volatile byte   PWM4S1P2H                 at { 0x49B }
-- ------------------------------------------------
var volatile byte   PWMLOAD                   at { 0x49C }
var volatile bit    PWMLOAD_PWM1LD            at PWMLOAD : 0
var volatile bit    PWMLOAD_PWM2LD            at PWMLOAD : 1
var volatile bit    PWMLOAD_PWM3LD            at PWMLOAD : 2
var volatile bit    PWMLOAD_PWM4LD            at PWMLOAD : 3
-- ------------------------------------------------
var volatile byte   PWMEN                     at { 0x49D }
var volatile bit    PWMEN_PWM1EN              at PWMEN : 0
var volatile bit    PWMEN_PWM2EN              at PWMEN : 1
var volatile bit    PWMEN_PWM3EN              at PWMEN : 2
var volatile bit    PWMEN_PWM4EN              at PWMEN : 3
-- ------------------------------------------------
var volatile byte   PIE0                      at { 0x49E }
var volatile bit    PIE0_SWIE                 at PIE0 : 0
var volatile bit    PIE0_HLVDIE               at PIE0 : 1
var volatile bit    PIE0_OSFIE                at PIE0 : 2
var volatile bit    PIE0_CSWIE                at PIE0 : 3
var volatile bit    PIE0_TU16AIE              at PIE0 : 4
var volatile bit    PIE0_CLC1IE               at PIE0 : 5
var volatile bit    PIE0_CANIE                at PIE0 : 6
var volatile bit    PIE0_IOCIE                at PIE0 : 7
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0x49F }
var volatile bit    PIE1_INT0IE               at PIE1 : 0
var volatile bit    PIE1_ZCDIE                at PIE1 : 1
var volatile bit    PIE1_ADIE                 at PIE1 : 2
var volatile bit    PIE1_ACTIE                at PIE1 : 3
var volatile bit    PIE1_C1IE                 at PIE1 : 4
var volatile bit    PIE1_SMT1IE               at PIE1 : 5
var volatile bit    PIE1_SMT1PRAIE            at PIE1 : 6
var volatile bit    PIE1_SMT1PWAIE            at PIE1 : 7
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0x4A0 }
var volatile bit    PIE2_ADTIE                at PIE2 : 0
var volatile bit    PIE2_ADCH2IE              at PIE2 : 1
var volatile bit    PIE2_ADCH3IE              at PIE2 : 2
var volatile bit    PIE2_ADCH4IE              at PIE2 : 3
var volatile bit    PIE2_DMA1SCNTIE           at PIE2 : 4
var volatile bit    PIE2_DMA1DCNTIE           at PIE2 : 5
var volatile bit    PIE2_DMA1ORIE             at PIE2 : 6
var volatile bit    PIE2_DMA1AIE              at PIE2 : 7
var volatile bit    PIE2_ADCH1IE              at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIE3                      at { 0x4A1 }
var volatile bit    PIE3_SPI1RXIE             at PIE3 : 0
var volatile bit    PIE3_SPI1TXIE             at PIE3 : 1
var volatile bit    PIE3_SPI1IE               at PIE3 : 2
var volatile bit    PIE3_TMR2IE               at PIE3 : 3
var volatile bit    PIE3_TMR1IE               at PIE3 : 4
var volatile bit    PIE3_TMR1GIE              at PIE3 : 5
var volatile bit    PIE3_CCP1IE               at PIE3 : 6
alias               PIE3_CCPIE                is PIE3_CCP1IE
var volatile bit    PIE3_TMR0IE               at PIE3 : 7
-- ------------------------------------------------
var volatile byte   PIE4                      at { 0x4A2 }
var volatile bit    PIE4_U1RXIE               at PIE4 : 0
var volatile bit    PIE4_U1TXIE               at PIE4 : 1
var volatile bit    PIE4_U1EIE                at PIE4 : 2
var volatile bit    PIE4_U1IE                 at PIE4 : 3
var volatile bit    PIE4_CANRXIE              at PIE4 : 4
var volatile bit    PIE4_CANTXIE              at PIE4 : 5
var volatile bit    PIE4_PWM1PIE              at PIE4 : 6
var volatile bit    PIE4_PWM1IE               at PIE4 : 7
-- ------------------------------------------------
var volatile byte   PIE5                      at { 0x4A3 }
var volatile bit    PIE5_SPI2RXIE             at PIE5 : 0
var volatile bit    PIE5_SPI2TXIE             at PIE5 : 1
var volatile bit    PIE5_SPI2IE               at PIE5 : 2
var volatile bit    PIE5_TU16BIE              at PIE5 : 3
var volatile bit    PIE5_TMR3IE               at PIE5 : 4
var volatile bit    PIE5_TMR3GIE              at PIE5 : 5
var volatile bit    PIE5_PWM2PIE              at PIE5 : 6
var volatile bit    PIE5_PWM2IE               at PIE5 : 7
-- ------------------------------------------------
var volatile byte   PIE6                      at { 0x4A4 }
var volatile bit    PIE6_INT1IE               at PIE6 : 0
var volatile bit    PIE6_CLC2IE               at PIE6 : 1
var volatile bit    PIE6_CWG1IE               at PIE6 : 2
var volatile bit    PIE6_NCO1IE               at PIE6 : 3
var volatile bit    PIE6_DMA2SCNTIE           at PIE6 : 4
var volatile bit    PIE6_DMA2DCNTIE           at PIE6 : 5
var volatile bit    PIE6_DMA2ORIE             at PIE6 : 6
var volatile bit    PIE6_DMA2AIE              at PIE6 : 7
-- ------------------------------------------------
var volatile byte   PIE7                      at { 0x4A5 }
var volatile bit    PIE7_I2C1RXIE             at PIE7 : 0
var volatile bit    PIE7_I2C1TXIE             at PIE7 : 1
var volatile bit    PIE7_I2C1IE               at PIE7 : 2
var volatile bit    PIE7_I2C1EIE              at PIE7 : 3
var volatile bit    PIE7_CLC3IE               at PIE7 : 5
var volatile bit    PIE7_PWM3PIE              at PIE7 : 6
var volatile bit    PIE7_PWM3IE               at PIE7 : 7
-- ------------------------------------------------
var volatile byte   PIE8                      at { 0x4A6 }
var volatile bit    PIE8_U2RXIE               at PIE8 : 0
var volatile bit    PIE8_U2TXIE               at PIE8 : 1
var volatile bit    PIE8_U2EIE                at PIE8 : 2
var volatile bit    PIE8_U2IE                 at PIE8 : 3
var volatile bit    PIE8_TMR5IE               at PIE8 : 4
var volatile bit    PIE8_TMR5GIE              at PIE8 : 5
var volatile bit    PIE8_CCP2IE               at PIE8 : 6
var volatile bit    PIE8_SCANIE               at PIE8 : 7
-- ------------------------------------------------
var volatile byte   PIE9                      at { 0x4A7 }
var volatile bit    PIE9_U3RXIE               at PIE9 : 0
var volatile bit    PIE9_U3TXIE               at PIE9 : 1
var volatile bit    PIE9_U3EIE                at PIE9 : 2
var volatile bit    PIE9_U3IE                 at PIE9 : 3
var volatile bit    PIE9_CLC4IE               at PIE9 : 5
var volatile bit    PIE9_PWM4PIE              at PIE9 : 6
var volatile bit    PIE9_PWM4IE               at PIE9 : 7
-- ------------------------------------------------
var volatile byte   PIE10                     at { 0x4A8 }
var volatile bit    PIE10_INT2IE              at PIE10 : 0
var volatile bit    PIE10_CLC5IE              at PIE10 : 1
var volatile bit    PIE10_CWG2IE              at PIE10 : 2
var volatile bit    PIE10_NCO2IE              at PIE10 : 3
var volatile bit    PIE10_DMA3SCNTIE          at PIE10 : 4
var volatile bit    PIE10_DMA3DCNTIE          at PIE10 : 5
var volatile bit    PIE10_DMA3ORIE            at PIE10 : 6
var volatile bit    PIE10_DMA3AIE             at PIE10 : 7
-- ------------------------------------------------
var volatile byte   PIE11                     at { 0x4A9 }
var volatile bit    PIE11_CCP3IE              at PIE11 : 0
var volatile bit    PIE11_CLC6IE              at PIE11 : 1
var volatile bit    PIE11_CWG3IE              at PIE11 : 2
var volatile bit    PIE11_TMR4IE              at PIE11 : 3
var volatile bit    PIE11_DMA4SCNTIE          at PIE11 : 4
var volatile bit    PIE11_DMA4DCNTIE          at PIE11 : 5
var volatile bit    PIE11_DMA4ORIE            at PIE11 : 6
var volatile bit    PIE11_DMA4AIE             at PIE11 : 7
-- ------------------------------------------------
var volatile byte   PIE12                     at { 0x4AA }
var volatile bit    PIE12_U4RXIE              at PIE12 : 0
var volatile bit    PIE12_U4TXIE              at PIE12 : 1
var volatile bit    PIE12_U4EIE               at PIE12 : 2
var volatile bit    PIE12_U4IE                at PIE12 : 3
var volatile bit    PIE12_DMA5SCNTIE          at PIE12 : 4
var volatile bit    PIE12_DMA5DCNTIE          at PIE12 : 5
var volatile bit    PIE12_DMA5ORIE            at PIE12 : 6
var volatile bit    PIE12_DMA5AIE             at PIE12 : 7
-- ------------------------------------------------
var volatile byte   PIE13                     at { 0x4AB }
var volatile bit    PIE13_U5RXIE              at PIE13 : 0
var volatile bit    PIE13_U5TXIE              at PIE13 : 1
var volatile bit    PIE13_U5EIE               at PIE13 : 2
var volatile bit    PIE13_U5IE                at PIE13 : 3
var volatile bit    PIE13_DMA6SCNTIE          at PIE13 : 4
var volatile bit    PIE13_DMA6DCNTIE          at PIE13 : 5
var volatile bit    PIE13_DMA6ORIE            at PIE13 : 6
var volatile bit    PIE13_DMA6AIE             at PIE13 : 7
-- ------------------------------------------------
var volatile byte   PIE14                     at { 0x4AC }
var volatile bit    PIE14_CLC7IE              at PIE14 : 1
var volatile bit    PIE14_C2IE                at PIE14 : 2
var volatile bit    PIE14_NCO3IE              at PIE14 : 3
var volatile bit    PIE14_DMA7SCNTIE          at PIE14 : 4
var volatile bit    PIE14_DMA7DCNTIE          at PIE14 : 5
var volatile bit    PIE14_DMA7ORIE            at PIE14 : 6
var volatile bit    PIE14_DMA7AIE             at PIE14 : 7
-- ------------------------------------------------
var volatile byte   PIE15                     at { 0x4AD }
var volatile bit    PIE15_NVMIE               at PIE15 : 0
var volatile bit    PIE15_CLC8IE              at PIE15 : 1
var volatile bit    PIE15_CRCIE               at PIE15 : 2
var volatile bit    PIE15_TMR6IE              at PIE15 : 3
var volatile bit    PIE15_DMA8SCNTIE          at PIE15 : 4
var volatile bit    PIE15_DMA8DCNTIE          at PIE15 : 5
var volatile bit    PIE15_DMA8ORIE            at PIE15 : 6
var volatile bit    PIE15_DMA8AIE             at PIE15 : 7
-- ------------------------------------------------
var volatile byte   PIR0                      at { 0x4AE }
var volatile bit    PIR0_SWIF                 at PIR0 : 0
var volatile bit    PIR0_HLVDIF               at PIR0 : 1
var volatile bit    PIR0_OSFIF                at PIR0 : 2
var volatile bit    PIR0_CSWIF                at PIR0 : 3
var volatile bit    PIR0_TU16AIF              at PIR0 : 4
var volatile bit    PIR0_CLC1IF               at PIR0 : 5
var volatile bit    PIR0_CANIF                at PIR0 : 6
var volatile bit    PIR0_IOCIF                at PIR0 : 7
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0x4AF }
var volatile bit    PIR1_INT0IF               at PIR1 : 0
var volatile bit    PIR1_ZCDIF                at PIR1 : 1
var volatile bit    PIR1_ADIF                 at PIR1 : 2
var volatile bit    PIR1_ACTIF                at PIR1 : 3
var volatile bit    PIR1_C1IF                 at PIR1 : 4
var volatile bit    PIR1_SMT1IF               at PIR1 : 5
var volatile bit    PIR1_SMT1PRAIF            at PIR1 : 6
var volatile bit    PIR1_SMT1PWAIF            at PIR1 : 7
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0x4B0 }
var volatile bit    PIR2_ADTIF                at PIR2 : 0
var volatile bit    PIR2_ADCH2IF              at PIR2 : 1
var volatile bit    PIR2_ADCH3IF              at PIR2 : 2
var volatile bit    PIR2_ADCH4IF              at PIR2 : 3
var volatile bit    PIR2_DMA1SCNTIF           at PIR2 : 4
var volatile bit    PIR2_DMA1DCNTIF           at PIR2 : 5
var volatile bit    PIR2_DMA1ORIF             at PIR2 : 6
var volatile bit    PIR2_DMA1AIF              at PIR2 : 7
var volatile bit    PIR2_ADCH1IF              at PIR2 : 0
-- ------------------------------------------------
var volatile byte   PIR3                      at { 0x4B1 }
var volatile bit    PIR3_SPI1RXIF             at PIR3 : 0
var volatile bit    PIR3_SPI1TXIF             at PIR3 : 1
var volatile bit    PIR3_SPI1IF               at PIR3 : 2
var volatile bit    PIR3_TMR2IF               at PIR3 : 3
var volatile bit    PIR3_TMR1IF               at PIR3 : 4
var volatile bit    PIR3_TMR1GIF              at PIR3 : 5
var volatile bit    PIR3_CCP1IF               at PIR3 : 6
alias               PIR3_CCPIF                is PIR3_CCP1IF
var volatile bit    PIR3_TMR0IF               at PIR3 : 7
-- ------------------------------------------------
var volatile byte   PIR4                      at { 0x4B2 }
var volatile bit    PIR4_U1RXIF               at PIR4 : 0
var volatile bit    PIR4_U1TXIF               at PIR4 : 1
var volatile bit    PIR4_U1EIF                at PIR4 : 2
var volatile bit    PIR4_U1IF                 at PIR4 : 3
var volatile bit    PIR4_CANRXIF              at PIR4 : 4
var volatile bit    PIR4_CANTXIF              at PIR4 : 5
var volatile bit    PIR4_PWM1PIF              at PIR4 : 6
var volatile bit    PIR4_PWM1IF               at PIR4 : 7
-- ------------------------------------------------
var volatile byte   PIR5                      at { 0x4B3 }
var volatile bit    PIR5_SPI2RXIF             at PIR5 : 0
var volatile bit    PIR5_SPI2TXIF             at PIR5 : 1
var volatile bit    PIR5_SPI2IF               at PIR5 : 2
var volatile bit    PIR5_TU16BIF              at PIR5 : 3
var volatile bit    PIR5_TMR3IF               at PIR5 : 4
var volatile bit    PIR5_TMR3GIF              at PIR5 : 5
var volatile bit    PIR5_PWM2PIF              at PIR5 : 6
var volatile bit    PIR5_PWM2IF               at PIR5 : 7
-- ------------------------------------------------
var volatile byte   PIR6                      at { 0x4B4 }
var volatile bit    PIR6_INT1IF               at PIR6 : 0
var volatile bit    PIR6_CLC2IF               at PIR6 : 1
var volatile bit    PIR6_CWG1IF               at PIR6 : 2
var volatile bit    PIR6_NCO1IF               at PIR6 : 3
var volatile bit    PIR6_DMA2SCNTIF           at PIR6 : 4
var volatile bit    PIR6_DMA2DCNTIF           at PIR6 : 5
var volatile bit    PIR6_DMA2ORIF             at PIR6 : 6
var volatile bit    PIR6_DMA2AIF              at PIR6 : 7
-- ------------------------------------------------
var volatile byte   PIR7                      at { 0x4B5 }
var volatile bit    PIR7_I2C1RXIF             at PIR7 : 0
var volatile bit    PIR7_I2C1TXIF             at PIR7 : 1
var volatile bit    PIR7_I2C1IF               at PIR7 : 2
var volatile bit    PIR7_I2C1EIF              at PIR7 : 3
var volatile bit    PIR7_CLC3IF               at PIR7 : 5
var volatile bit    PIR7_PWM3PIF              at PIR7 : 6
var volatile bit    PIR7_PWM3IF               at PIR7 : 7
-- ------------------------------------------------
var volatile byte   PIR8                      at { 0x4B6 }
var volatile bit    PIR8_U2RXIF               at PIR8 : 0
var volatile bit    PIR8_U2TXIF               at PIR8 : 1
var volatile bit    PIR8_U2EIF                at PIR8 : 2
var volatile bit    PIR8_U2IF                 at PIR8 : 3
var volatile bit    PIR8_TMR5IF               at PIR8 : 4
var volatile bit    PIR8_TMR5GIF              at PIR8 : 5
var volatile bit    PIR8_CCP2IF               at PIR8 : 6
var volatile bit    PIR8_SCANIF               at PIR8 : 7
-- ------------------------------------------------
var volatile byte   PIR9                      at { 0x4B7 }
var volatile bit    PIR9_U3RXIF               at PIR9 : 0
var volatile bit    PIR9_U3TXIF               at PIR9 : 1
var volatile bit    PIR9_U3EIF                at PIR9 : 2
var volatile bit    PIR9_U3IF                 at PIR9 : 3
var volatile bit    PIR9_CLC4IF               at PIR9 : 5
var volatile bit    PIR9_PWM4PIF              at PIR9 : 6
var volatile bit    PIR9_PWM4IF               at PIR9 : 7
-- ------------------------------------------------
var volatile byte   PIR10                     at { 0x4B8 }
var volatile bit    PIR10_INT2IF              at PIR10 : 0
var volatile bit    PIR10_CLC5IF              at PIR10 : 1
var volatile bit    PIR10_CWG2IF              at PIR10 : 2
var volatile bit    PIR10_NCO2IF              at PIR10 : 3
var volatile bit    PIR10_DMA3SCNTIF          at PIR10 : 4
var volatile bit    PIR10_DMA3DCNTIF          at PIR10 : 5
var volatile bit    PIR10_DMA3ORIF            at PIR10 : 6
var volatile bit    PIR10_DMA3AIF             at PIR10 : 7
-- ------------------------------------------------
var volatile byte   PIR11                     at { 0x4B9 }
var volatile bit    PIR11_CCP3IF              at PIR11 : 0
var volatile bit    PIR11_CLC6IF              at PIR11 : 1
var volatile bit    PIR11_CWG3IF              at PIR11 : 2
var volatile bit    PIR11_TMR4IF              at PIR11 : 3
var volatile bit    PIR11_DMA4SCNTIF          at PIR11 : 4
var volatile bit    PIR11_DMA4DCNTIF          at PIR11 : 5
var volatile bit    PIR11_DMA4ORIF            at PIR11 : 6
var volatile bit    PIR11_DMA4AIF             at PIR11 : 7
-- ------------------------------------------------
var volatile byte   PIR12                     at { 0x4BA }
var volatile bit    PIR12_U4RXIF              at PIR12 : 0
var volatile bit    PIR12_U4TXIF              at PIR12 : 1
var volatile bit    PIR12_U4EIF               at PIR12 : 2
var volatile bit    PIR12_U4IF                at PIR12 : 3
var volatile bit    PIR12_DMA5SCNTIF          at PIR12 : 4
var volatile bit    PIR12_DMA5DCNTIF          at PIR12 : 5
var volatile bit    PIR12_DMA5ORIF            at PIR12 : 6
var volatile bit    PIR12_DMA5AIF             at PIR12 : 7
-- ------------------------------------------------
var volatile byte   PIR13                     at { 0x4BB }
var volatile bit    PIR13_U5RXIF              at PIR13 : 0
var volatile bit    PIR13_U5TXIF              at PIR13 : 1
var volatile bit    PIR13_U5EIF               at PIR13 : 2
var volatile bit    PIR13_U5IF                at PIR13 : 3
var volatile bit    PIR13_DMA6SCNTIF          at PIR13 : 4
var volatile bit    PIR13_DMA6DCNTIF          at PIR13 : 5
var volatile bit    PIR13_DMA6ORIF            at PIR13 : 6
var volatile bit    PIR13_DMA6AIF             at PIR13 : 7
-- ------------------------------------------------
var volatile byte   PIR14                     at { 0x4BC }
var volatile bit    PIR14_CLC7IF              at PIR14 : 1
var volatile bit    PIR14_C2IF                at PIR14 : 2
var volatile bit    PIR14_NCO3IF              at PIR14 : 3
var volatile bit    PIR14_DMA7SCNTIF          at PIR14 : 4
var volatile bit    PIR14_DMA7DCNTIF          at PIR14 : 5
var volatile bit    PIR14_DMA7ORIF            at PIR14 : 6
var volatile bit    PIR14_DMA7AIF             at PIR14 : 7
-- ------------------------------------------------
var volatile byte   PIR15                     at { 0x4BD }
var volatile bit    PIR15_NVMIF               at PIR15 : 0
var volatile bit    PIR15_CLC8IF              at PIR15 : 1
var volatile bit    PIR15_CRCIF               at PIR15 : 2
var volatile bit    PIR15_TMR6IF              at PIR15 : 3
var volatile bit    PIR15_DMA8SCNTIF          at PIR15 : 4
var volatile bit    PIR15_DMA8DCNTIF          at PIR15 : 5
var volatile bit    PIR15_DMA8ORIF            at PIR15 : 6
var volatile bit    PIR15_DMA8AIF             at PIR15 : 7
-- ------------------------------------------------
var volatile byte   LATA                      at { 0x4BE }
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    LATA_LATA3                at LATA : 3
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    LATA_LATA6                at LATA : 6
var volatile bit    LATA_LATA7                at LATA : 7
-- ------------------------------------------------
var volatile byte   LATB                      at { 0x4BF }
var volatile bit    LATB_LATB0                at LATB : 0
var volatile bit    LATB_LATB1                at LATB : 1
var volatile bit    LATB_LATB2                at LATB : 2
var volatile bit    LATB_LATB3                at LATB : 3
var volatile bit    LATB_LATB4                at LATB : 4
var volatile bit    LATB_LATB5                at LATB : 5
var volatile bit    LATB_LATB6                at LATB : 6
var volatile bit    LATB_LATB7                at LATB : 7
-- ------------------------------------------------
var volatile byte   LATC                      at { 0x4C0 }
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    LATC_LATC6                at LATC : 6
var volatile bit    LATC_LATC7                at LATC : 7
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x4C6 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_ANA0_direction        is pin_A0_direction
alias               pin_C1IN0_NEG_direction   is pin_A0_direction
alias               pin_C2IN0_NEG_direction   is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_ANA1_direction        is pin_A1_direction
alias               pin_C1IN1_NEG_direction   is pin_A1_direction
alias               pin_C2IN1_NEG_direction   is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_BOOTA2_direction      is pin_A2_direction
alias               pin_DAC1OUT_RA2_direction is pin_A2_direction
alias               pin_VREF_NEG_direction    is pin_A2_direction
alias               pin_ANA2_direction        is pin_A2_direction
alias               pin_C1IN0_POS_direction   is pin_A2_direction
alias               pin_C2IN0_POS_direction   is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_VREF_POS_direction    is pin_A3_direction
alias               pin_ANA3_direction        is pin_A3_direction
alias               pin_C1IN1_POS_direction   is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_BOOTA4_direction      is pin_A4_direction
alias               pin_ANA4_direction        is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_ANA5_direction        is pin_A5_direction
--
var volatile bit    TRISA_TRISA6              at TRISA : 6
var volatile bit    pin_A6_direction          at TRISA : 6
alias               pin_OSC2_direction        is pin_A6_direction
alias               pin_CLKOUT_direction      is pin_A6_direction
alias               pin_ANA6_direction        is pin_A6_direction
--
var volatile bit    TRISA_TRISA7              at TRISA : 7
var volatile bit    pin_A7_direction          at TRISA : 7
alias               pin_CLKIN_direction       is pin_A7_direction
alias               pin_OSC1_direction        is pin_A7_direction
alias               pin_ANA7_direction        is pin_A7_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0x4C7 }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB0              at TRISB : 0
var volatile bit    pin_B0_direction          at TRISB : 0
alias               pin_ZCD_direction         is pin_B0_direction
alias               pin_ANB0_direction        is pin_B0_direction
alias               pin_C2IN1_POS_direction   is pin_B0_direction
--
var volatile bit    TRISB_TRISB1              at TRISB : 1
var volatile bit    pin_B1_direction          at TRISB : 1
alias               pin_ANB1_direction        is pin_B1_direction
alias               pin_C1IN3_NEG_direction   is pin_B1_direction
alias               pin_C2IN3_NEG_direction   is pin_B1_direction
alias               pin_SMB_I2C_RB1_direction is pin_B1_direction
--
var volatile bit    TRISB_TRISB2              at TRISB : 2
var volatile bit    pin_B2_direction          at TRISB : 2
alias               pin_ANB2_direction        is pin_B2_direction
alias               pin_SMB_I2C_RB2_direction is pin_B2_direction
--
var volatile bit    TRISB_TRISB3              at TRISB : 3
var volatile bit    pin_B3_direction          at TRISB : 3
alias               pin_ANB3_direction        is pin_B3_direction
alias               pin_C1IN2_NEG_direction   is pin_B3_direction
alias               pin_C2IN2_NEG_direction   is pin_B3_direction
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_ANB4_direction        is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_ANB5_direction        is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_ANB6_direction        is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_DAC1OUT_RB7_direction is pin_B7_direction
alias               pin_ANB7_direction        is pin_B7_direction
alias               pin_ICOB7_direction       is pin_B7_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0x4C8 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_SOSCO_direction       is pin_C0_direction
alias               pin_ANC0_direction        is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_SOSCI_direction       is pin_C1_direction
alias               pin_ANC1_direction        is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_ANC2_direction        is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_ANC3_direction        is pin_C3_direction
alias               pin_SMB_I2C_RC3_direction is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_BOOTC4_direction      is pin_C4_direction
alias               pin_ANC4_direction        is pin_C4_direction
alias               pin_SMB_I2C_RC4_direction is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_BOOTC5_direction      is pin_C5_direction
alias               pin_ANC5_direction        is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_ANC6_direction        is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_ANC7_direction        is pin_C7_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     at { 0x4CA }
alias               PORTE_direction           is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE3              at TRISE : 3
var volatile bit    pin_E3_direction          at TRISE : 3
--
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0x4CE }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_ANA0                  is pin_A0
alias               pin_C1IN0_NEG             is pin_A0
alias               pin_C2IN0_NEG             is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_ANA1                  is pin_A1
alias               pin_C1IN1_NEG             is pin_A1
alias               pin_C2IN1_NEG             is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_BOOTA2                is pin_A2
alias               pin_DAC1OUT_RA2           is pin_A2
alias               pin_VREF_NEG              is pin_A2
alias               pin_ANA2                  is pin_A2
alias               pin_C1IN0_POS             is pin_A2
alias               pin_C2IN0_POS             is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    pin_A3                    at PORTA : 3
alias               pin_VREF_POS              is pin_A3
alias               pin_ANA3                  is pin_A3
alias               pin_C1IN1_POS             is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_BOOTA4                is pin_A4
alias               pin_ANA4                  is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_ANA5                  is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA6                 at PORTA : 6
var volatile bit    pin_A6                    at PORTA : 6
alias               pin_OSC2                  is pin_A6
alias               pin_CLKOUT                is pin_A6
alias               pin_ANA6                  is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    PORTA_RA7                 at PORTA : 7
var volatile bit    pin_A7                    at PORTA : 7
alias               pin_CLKIN                 is pin_A7
alias               pin_OSC1                  is pin_A7
alias               pin_ANA7                  is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTB                     at { 0x4CF }
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    PORTB_RB0                 at PORTB : 0
var volatile bit    pin_B0                    at PORTB : 0
alias               pin_ZCD                   is pin_B0
alias               pin_ANB0                  is pin_B0
alias               pin_C2IN1_POS             is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB1                 at PORTB : 1
var volatile bit    pin_B1                    at PORTB : 1
alias               pin_ANB1                  is pin_B1
alias               pin_C1IN3_NEG             is pin_B1
alias               pin_C2IN3_NEG             is pin_B1
alias               pin_SMB_I2C_RB1           is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB2                 at PORTB : 2
var volatile bit    pin_B2                    at PORTB : 2
alias               pin_ANB2                  is pin_B2
alias               pin_SMB_I2C_RB2           is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB3                 at PORTB : 3
var volatile bit    pin_B3                    at PORTB : 3
alias               pin_ANB3                  is pin_B3
alias               pin_C1IN2_NEG             is pin_B3
alias               pin_C2IN2_NEG             is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    pin_B4                    at PORTB : 4
alias               pin_ANB4                  is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    pin_B5                    at PORTB : 5
alias               pin_ANB5                  is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    pin_B6                    at PORTB : 6
alias               pin_ANB6                  is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    PORTB_RB7                 at PORTB : 7
var volatile bit    pin_B7                    at PORTB : 7
alias               pin_DAC1OUT_RB7           is pin_B7
alias               pin_ANB7                  is pin_B7
alias               pin_ICOB7                 is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0x4D0 }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_SOSCO                 is pin_C0
alias               pin_ANC0                  is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_SOSCI                 is pin_C1
alias               pin_ANC1                  is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_ANC2                  is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_ANC3                  is pin_C3
alias               pin_SMB_I2C_RC3           is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_BOOTC4                is pin_C4
alias               pin_ANC4                  is pin_C4
alias               pin_SMB_I2C_RC4           is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_BOOTC5                is pin_C5
alias               pin_ANC5                  is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    pin_C6                    at PORTC : 6
alias               pin_ANC6                  is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    PORTC_RC7                 at PORTC : 7
var volatile bit    pin_C7                    at PORTC : 7
alias               pin_ANC7                  is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTE                     at { 0x4D2 }
var volatile bit    PORTE_RE3                 at PORTE : 3
var volatile bit    pin_E3                    at PORTE : 3
--
-- ------------------------------------------------
var volatile byte   INTCON0                   at { 0x4D6 }
var volatile bit    INTCON0_INT0EDG           at INTCON0 : 0
var volatile bit    INTCON0_INT1EDG           at INTCON0 : 1
var volatile bit    INTCON0_INT2EDG           at INTCON0 : 2
var volatile bit    INTCON0_IPEN              at INTCON0 : 5
var volatile bit    INTCON0_GIEL              at INTCON0 : 6
var volatile bit    INTCON0_GIE               at INTCON0 : 7
var volatile bit    INTCON0_GIEH              at INTCON0 : 7
-- ------------------------------------------------
var volatile byte   INTCON1                   at { 0x4D7 }
var volatile bit*2  INTCON1_STAT              at INTCON1 : 6
var volatile bit    INTCON1_STAT0             at INTCON1 : 6
var volatile bit    INTCON1_STAT1             at INTCON1 : 7
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x4D8 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_OV                 at STATUS : 3
var volatile bit    STATUS_N                  at STATUS : 4
var volatile bit    STATUS_NPD                at STATUS : 5
var volatile bit    STATUS_NTO                at STATUS : 6
var volatile bit    STATUS_PD                 at STATUS : 5
var volatile bit    STATUS_TO                 at STATUS : 6
var volatile byte   _status                   at { 0x4D8 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _ov                       =  3
const        byte   _n                        =  4
const        byte   _not_pd                   =  5
const        byte   _not_to                   =  6
const        byte   _pd                       =  5
const        byte   _to                       =  6
const        byte   _banked                   =  1
const        byte   _access                   =  0
-- ------------------------------------------------
var volatile word   FSR2                      at { 0x4D9 }
-- ------------------------------------------------
var volatile byte   FSR2L                     at { 0x4D9 }
-- ------------------------------------------------
var volatile byte   FSR2H                     at { 0x4DA }
var volatile bit*4  FSR2H_FSR2H               at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    at { 0x4DB }
-- ------------------------------------------------
var volatile byte   PREINC2                   at { 0x4DC }
-- ------------------------------------------------
var volatile byte   POSTDEC2                  at { 0x4DD }
-- ------------------------------------------------
var volatile byte   POSTINC2                  at { 0x4DE }
-- ------------------------------------------------
var volatile byte   INDF2                     at { 0x4DF }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0x4E0 }
var volatile bit*6  BSR_BSR                   at BSR : 0
var volatile byte   _bsr                      at { 0x4E0 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0x4E1 }
var volatile word   _fsr1                     at { 0x4E1 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0x4E1 }
var volatile byte   _fsr1l                    at { 0x4E1 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0x4E2 }
var volatile bit*4  FSR1H_FSR1H               at FSR1H : 0
var volatile byte   _fsr1h                    at { 0x4E2 }
-- ------------------------------------------------
var volatile byte   PLUSW1                    at { 0x4E3 }
-- ------------------------------------------------
var volatile byte   PREINC1                   at { 0x4E4 }
-- ------------------------------------------------
var volatile byte   POSTDEC1                  at { 0x4E5 }
-- ------------------------------------------------
var volatile byte   POSTINC1                  at { 0x4E6 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0x4E7 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0x4E8 }
-- ------------------------------------------------
var volatile word   FSR0                      at { 0x4E9 }
var volatile word   _fsr0                     at { 0x4E9 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0x4E9 }
var volatile byte   _fsr0l                    at { 0x4E9 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0x4EA }
var volatile bit*4  FSR0H_FSR0H               at FSR0H : 0
var volatile byte   _fsr0h                    at { 0x4EA }
-- ------------------------------------------------
var volatile byte   PLUSW0                    at { 0x4EB }
-- ------------------------------------------------
var volatile byte   PREINC0                   at { 0x4EC }
-- ------------------------------------------------
var volatile byte   POSTDEC0                  at { 0x4ED }
-- ------------------------------------------------
var volatile byte   POSTINC0                  at { 0x4EE }
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0x4EF }
var volatile byte   _ind                      at { 0x4EF }
-- ------------------------------------------------
var volatile byte   PCON0                     at { 0x4F0 }
var volatile bit    PCON0_NBOR                at PCON0 : 0
var volatile bit    PCON0_NPOR                at PCON0 : 1
var volatile bit    PCON0_NRI                 at PCON0 : 2
var volatile bit    PCON0_NRMCLR              at PCON0 : 3
var volatile bit    PCON0_NRWDT               at PCON0 : 4
var volatile bit    PCON0_NWDTWV              at PCON0 : 5
var volatile bit    PCON0_STKUNF              at PCON0 : 6
var volatile bit    PCON0_STKOVF              at PCON0 : 7
var volatile bit    PCON0_BOR                 at PCON0 : 0
var volatile bit    PCON0_POR                 at PCON0 : 1
var volatile bit    PCON0_RI                  at PCON0 : 2
var volatile bit    PCON0_RMCLR               at PCON0 : 3
var volatile bit    PCON0_RWDT                at PCON0 : 4
var volatile bit    PCON0_WDTWV               at PCON0 : 5
-- ------------------------------------------------
var volatile byte   PCON1                     at { 0x4F1 }
var volatile bit    PCON1_NMEMV               at PCON1 : 1
var volatile bit    PCON1_MEMV                at PCON1 : 1
-- ------------------------------------------------
var volatile byte   CPUDOZE                   at { 0x4F2 }
var volatile bit*3  CPUDOZE_DOZE              at CPUDOZE : 0
var volatile bit    CPUDOZE_DOE               at CPUDOZE : 4
var volatile bit    CPUDOZE_ROI               at CPUDOZE : 5
var volatile bit    CPUDOZE_DOZEN             at CPUDOZE : 6
var volatile bit    CPUDOZE_IDLEN             at CPUDOZE : 7
var volatile bit    CPUDOZE_DOZE0             at CPUDOZE : 0
var volatile bit    CPUDOZE_DOZE1             at CPUDOZE : 1
var volatile bit    CPUDOZE_DOZE2             at CPUDOZE : 2
-- ------------------------------------------------
var volatile word   PROD                      at { 0x4F3 }
-- ------------------------------------------------
var volatile byte   PRODL                     at { 0x4F3 }
-- ------------------------------------------------
var volatile byte   PRODH                     at { 0x4F4 }
-- ------------------------------------------------
var volatile byte   TABLAT                    at { 0x4F5 }
var volatile byte   _tablat                   at { 0x4F5 }
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    at { 0x4F6 }
var volatile byte*3 _tblptr                   at { 0x4F6 }
-- ------------------------------------------------
var volatile byte   TBLPTRL                   at { 0x4F6 }
var volatile byte   _tblptrl                  at { 0x4F6 }
-- ------------------------------------------------
var volatile byte   TBLPTRH                   at { 0x4F7 }
var volatile byte   _tblptrh                  at { 0x4F7 }
-- ------------------------------------------------
var volatile byte   TBLPTRU                   at { 0x4F8 }
var volatile bit*6  TBLPTRU_TBLPTRU           at TBLPTRU : 0
var volatile bit    TBLPTRU_ACSS              at TBLPTRU : 5
var volatile byte   _tblptru                  at { 0x4F8 }
-- ------------------------------------------------
var volatile byte*3 PCLAT                     at { 0x4F9 }
var volatile byte*3 _pclat                    at { 0x4F9 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x4F9 }
var volatile byte   _pcl                      at { 0x4F9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0x4FA }
var volatile byte   _pclath                   at { 0x4FA }
-- ------------------------------------------------
var volatile byte   PCLATU                    at { 0x4FB }
var volatile bit*5  PCLATU_PCU                at PCLATU : 0
var volatile byte   _pclatu                   at { 0x4FB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0x4FC }
var volatile bit*7  STKPTR_STKPTR             at STKPTR : 0
var volatile bit    STKPTR_STKPTR0            at STKPTR : 0
var volatile bit    STKPTR_STKPTR1            at STKPTR : 1
var volatile bit    STKPTR_STKPTR2            at STKPTR : 2
var volatile bit    STKPTR_STKPTR3            at STKPTR : 3
var volatile bit    STKPTR_STKPTR4            at STKPTR : 4
var volatile bit    STKPTR_STKPTR5            at STKPTR : 5
var volatile bit    STKPTR_STKPTR6            at STKPTR : 6
var volatile bit    STKPTR_SP0                at STKPTR : 0
var volatile bit    STKPTR_SP1                at STKPTR : 1
var volatile bit    STKPTR_SP2                at STKPTR : 2
var volatile bit    STKPTR_SP3                at STKPTR : 3
var volatile bit    STKPTR_SP4                at STKPTR : 4
var volatile bit    STKPTR_SP5                at STKPTR : 5
var volatile bit    STKPTR_SP6                at STKPTR : 6
-- ------------------------------------------------
var volatile byte*3 TOS                       at { 0x4FD }
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0x4FD }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0x4FE }
-- ------------------------------------------------
var volatile byte   TOSU                      at { 0x4FF }
var volatile bit*5  TOSU_TOSU                 at TOSU : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 1
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000
   ANSELB = 0b0000_0000
   ANSELC = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CM1CON0 = 0b0000_0000
   CM1CON1 = 0b0000_0000
   CM2CON0 = 0b0000_0000
   CM2CON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_5
--
--    PPS OUTPUT constants
--
const byte PPS_NULL      = 0x00
const byte PPS_CLC1      = 0x01
const byte PPS_CLC2      = 0x02
const byte PPS_CLC3      = 0x03
const byte PPS_CLC4      = 0x04
const byte PPS_CLC5      = 0x05
const byte PPS_CLC6      = 0x06
const byte PPS_CLC7      = 0x07
const byte PPS_CLC8      = 0x08
const byte PPS_CWG1A     = 0x09
const byte PPS_CWG1B     = 0x0A
const byte PPS_CWG1C     = 0x0B
const byte PPS_CWG1D     = 0x0C
const byte PPS_CWG2A     = 0x0D
const byte PPS_CWG2B     = 0x0E
const byte PPS_CWG2C     = 0x0F
const byte PPS_CWG2D     = 0x10
const byte PPS_CWG3A     = 0x11
const byte PPS_CWG3B     = 0x12
const byte PPS_CWG3C     = 0x13
const byte PPS_CWG3D     = 0x14
const byte PPS_CCP1      = 0x15
const byte PPS_CCP2      = 0x16
const byte PPS_CCP3      = 0x17
const byte PPS_PWM11     = 0x18
const byte PPS_PWM12     = 0x19
const byte PPS_PWM21     = 0x1A
const byte PPS_PWM22     = 0x1B
const byte PPS_PWM31     = 0x1C
const byte PPS_PWM32     = 0x1D
const byte PPS_PWM41     = 0x1E
const byte PPS_PWM42     = 0x1F
const byte PPS_TX1       = 0x20
const byte PPS_TXDE1     = 0x21
const byte PPS_RTS1      = 0x22
const byte PPS_TX2       = 0x23
const byte PPS_TXDE2     = 0x24
const byte PPS_RTS2      = 0x25
const byte PPS_TX3       = 0x26
const byte PPS_TXDE3     = 0x27
const byte PPS_RTS3      = 0x28
const byte PPS_TX4       = 0x29
const byte PPS_TXDE4     = 0x2A
const byte PPS_RTS4      = 0x2B
const byte PPS_TX5       = 0x2C
const byte PPS_TXDE5     = 0x2D
const byte PPS_RTS5      = 0x2E
const byte PPS_C1OUT     = 0x2F
const byte PPS_C2OUT     = 0x30
const byte PPS_SCK1      = 0x31
const byte PPS_SDO1      = 0x32
const byte PPS_SS1       = 0x33
const byte PPS_SCK2      = 0x34
const byte PPS_SDO2      = 0x35
const byte PPS_SS2       = 0x36
const byte PPS_SCL1      = 0x37
const byte PPS_SDA1      = 0x38
const byte PPS_TMR0      = 0x39
const byte PPS_TU16A     = 0x3A
const byte PPS_TU16B     = 0x3B
const byte PPS_NCO1      = 0x3F
const byte PPS_NCO2      = 0x40
const byte PPS_NCO3      = 0x41
const byte PPS_CLKR      = 0x42
const byte PPS_DSM1      = 0x43
const byte PPS_ADGRDA    = 0x44
const byte PPS_ADGRDB    = 0x45
const byte PPS_CANTX     = 0x46
--
--
-- Free shared memory: 0x501-0x55F
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1 (0x300000)
--
pragma fuse_def OSC:0  0x7 {             -- External Oscillator Selection
       LP = 0x0                          -- LP (crystal oscillator) optimized for 32.768 kHz
       XT = 0x1                          -- XT (crystal oscillator) above 100 kHz, below 8 MHz
       HS = 0x2                          -- HS (crystal oscillator) above 8 MHz
       OFF = 0x4                         -- Oscillator not enabled
       ECL_NOCLKOUT = 0x5                -- EC (external clock) below 100 kHz
       ECM_NOCLKOUT = 0x6                -- EC (external clock) for 500 kHz to 8 MHz
       ECH_NOCLKOUT = 0x7                -- EC (external clock) above 8 MHz
       }
pragma fuse_def RSTOSC:0  0x70 {         -- Reset Oscillator Selection
       HFINTOSC_64MHZ = 0x0              -- HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
       EXTOSC_4PLL = 0x20                -- EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
       SOSC = 0x40                       -- Secondary Oscillator
       LFINTOSC = 0x50                   -- Low-Frequency Oscillator
       HFINTOSC_1MHZ = 0x60              -- HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
       EXTOSC = 0x70                     -- EXTOSC operating per FEXTOSC bits (device manufacturing default)
       }
--
-- CONFIG2 (0x300001)
--
pragma fuse_def CLKOUTEN:1  0x1 {        -- Clock out Enable bit
       DISABLED = 0x1                    -- CLKOUT function is disabled
       ENABLED = 0x0                     -- CLKOUT function is enabled
       }
pragma fuse_def PR1WAY:1  0x2 {          -- PRLOCKED One-Way Set Enable bit
       ENABLED = 0x2                     -- PRLOCKED bit can be cleared and set only once
       DISABLED = 0x0                    -- PRLOCKED bit can be set and cleared repeatedly
       }
pragma fuse_def CSWEN:1  0x8 {           -- Clock Switch Enable bit
       DISABLED = 0x0                    -- The NOSC and NDIV bits cannot be changed by user software
       ENABLED = 0x8                     -- Writing to NOSC and NDIV is allowed
       }
pragma fuse_def JTAGEN:1  0x10 {         -- JTAG Enable bit
       ENABLED = 0x10                    -- Enable JTAG Boundary Scan mode and pins
       DISABLED = 0x0                    -- Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
       }
pragma fuse_def FCMEN:1  0x20 {          -- Fail-Safe Clock Monitor Enable bit
       DISABLED = 0x0                    -- Fail-Safe Clock Monitor disabled
       ENABLED = 0x20                    -- Fail-Safe Clock Monitor enabled
       }
pragma fuse_def FCMENP:1  0x40 {         -- Fail-Safe Clock Monitor -Primary XTAL Enable bit
       DISABLED = 0x0                    -- FSCM timer will not set FSCMP bit or OSFIF interrupt on Primary XTAL failure
       ENABLED = 0x40                    -- FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
       }
pragma fuse_def FCMENS:1  0x80 {         -- Fail-Safe Clock Monitor -Secondary XTAL Enable bit
       DISABLED = 0x0                    -- FSCM timer will not set FSCMS bit or OSFIF interrupt on Secondary XTAL failure
       ENABLED = 0x80                    -- FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failure
       }
--
-- CONFIG3 (0x300002)
--
pragma fuse_def MCLR:2  0x1 {            -- MCLR Enable bit
       EXTERNAL = 0x1                    -- If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR 
       INTERNAL = 0x0                    -- If LVP = 0, MCLR pin function is port defined function; If LVP =1, RE3 pin fuction is MCLR
       }
pragma fuse_def PWRTS:2  0x6 {           -- Power-up timer selection bits
       PWRT_OFF = 0x6                    -- PWRT is disabled
       PWRT_64 = 0x4                     -- PWRT set at 64ms
       PWRT_16 = 0x2                     -- PWRT set at 16ms
       PWRT_1 = 0x0                      -- PWRT set at 1ms
       }
pragma fuse_def MVECEN:2  0x8 {          -- Multi-vector enable bit
       ENABLED = 0x8                     -- Multi-vector enabled, Vector table used for interrupts
       DISABLED = 0x0                    -- Interrupt contoller does not use vector table to prioritze interrupts
       }
pragma fuse_def IVT1WAY:2  0x10 {        -- IVTLOCK bit One-way set enable bit
       ENABLED = 0x10                    -- IVTLOCKED bit can be cleared and set only once
       DISABLED = 0x0                    -- IVTLOCKED bit can be cleared and set repeatedly
       }
pragma fuse_def LPBOREN:2  0x20 {        -- Low Power BOR Enable bit
       DISABLED = 0x20                   -- Low-Power BOR disabled
       ENABLED = 0x0                     -- Low-Power BOR enabled
       }
pragma fuse_def BROWNOUT:2  0xC0 {       -- Brown-out Reset Enable bits
       ENABLED = 0xC0                    -- Brown-out Reset enabled , SBOREN bit is ignored
       RUNONLY = 0x80                    -- Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ignored
       CONTROL = 0x40                    -- Brown-out Reset enabled according to SBOREN
       DISABLED = 0x0                    -- Brown-out Reset disabled
       }
--
-- CONFIG4 (0x300003)
--
pragma fuse_def VOLTAGE:3  0x3 {         -- Brown-out Reset Voltage Selection bits
       V19 = 0x3                         -- Brown-out Reset Voltage (VBOR) set to 1.9V
       V25 = 0x2                         -- Brown-out Reset Voltage (VBOR) set to 2.45V
       V27 = 0x1                         -- Brown-out Reset Voltage (VBOR) set to 2.7V
       V28 = 0x0                         -- Brown-out Reset Voltage (VBOR) set to 2.8V
       }
pragma fuse_def ZCD:3  0x4 {             -- ZCD Disable bit
       DISABLED = 0x4                    -- ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
       ENABLED = 0x0                     -- ZCD module is always enabled; ZCDMD and ZCDSEN bits are ignored
       }
pragma fuse_def PPS1WAY:3  0x8 {         -- PPSLOCK bit One-Way Set Enable bit
       ENABLED = 0x8                     -- PPSLOCKED bit can be cleared and set only once; PPS registers remain locked after one clear/set cycle
       DISABLED = 0x0                    -- PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock sequence)
       }
pragma fuse_def STVR:3  0x10 {           -- Stack Full/Underflow Reset Enable bit
       ENABLED = 0x10                    -- Stack full/underflow will cause Reset
       DISABLED = 0x0                    -- Stack full/underflow will not cause Reset
       }
pragma fuse_def LVP:3  0x20 {            -- Low Voltage Programming Enable bit
       ENABLED = 0x20                    -- Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE configuration bit is ignored
       DISABLED = 0x0                    -- HV on MCLR/VPP must be used for programming
       }
pragma fuse_def XINST:3  0x80 {          -- Extended Instruction Set Enable bit
       DISABLED = 0x80                   -- Extended Instruction Set and Indexed Addressing Mode disabled
--     ENABLED = 0x0                     -- NOTE: not supported by JALV2
       }
--
-- CONFIG5 (0x300004)
--
pragma fuse_def WDTCPS:4  0x1F {         -- WDT Period selection bits
       F32  = 0x0                        -- Divider ratio 1:32
       F64  = 0x1                        -- Divider ratio 1:64
       F128  = 0x2                       -- Divider ratio 1:128
       F256  = 0x3                       -- Divider ratio 1:256
       F512  = 0x4                       -- Divider ratio 1:512
       F1K = 0x5                         -- Divider ratio 1:1024
       F2K = 0x6                         -- Divider ratio 1:2048
       F4K = 0x7                         -- Divider ratio 1:4096
       F8K = 0x8                         -- Divider ratio 1:8192
       F16K = 0x9                        -- Divider ratio 1:16384
       F32K = 0xA                        -- Divider ratio 1:32768
       F64K = 0xB                        -- Divider ratio 1:65536
       F128K = 0xC                       -- Divider ratio 1:131072
       F256K = 0xD                       -- Divider ratio 1:262144
       F512K = 0xE                       -- Divider ratio 1:524299
       F1M = 0xF                         -- Divider ratio 1:1048576
       F2M = 0x10                        -- Divider ratio 1:2097152
       F4M = 0x11                        -- Divider ratio 1:4194304
       F8M = 0x12                        -- Divider ratio 1:8388608
       SOFTWARE = 0x1F                   -- Divider ratio 1:65536; software control of WDTPS
       }
pragma fuse_def WDT:4  0x60 {            -- WDT operating mode
       DISABLED = 0x0                    -- WDT Disabled; SWDTEN is ignored
       CONTROL = 0x20                    -- WDT enabled/disabled by SWDTEN bit
       RUNONLY = 0x40                    -- WDT enabled while sleep=0, suspended when sleep=1; SWDTEN ignored
       ENABLED = 0x60                    -- WDT enabled regardless of sleep; SWDTEN is ignored
       }
--
-- CONFIG6 (0x300005)
--
pragma fuse_def WDTCWS:5  0x7 {          -- WDT Window Select bits
       P88 = 0x0                         -- window delay = 87.5; no software control; keyed access required
       P75 = 0x1                         -- window delay = 75 percent of time; no software control; keyed access required
       P62 = 0x2                         -- window delay = 62.5 percent of time; no software control; keyed access required
       P50 = 0x3                         -- window delay = 50 percent of time; no software control; keyed access required
       P38 = 0x4                         -- window delay = 37.5 percent of time; no software control; keyed access required
       P25 = 0x5                         -- window delay = 25 percent of time; no software control; keyed access required
       P0 = 0x6                          -- window always open (100%); no software control; keyed access required
       SOFTWARE = 0x7                    -- window always open (100%); software control; keyed access not required
       }
pragma fuse_def WDTCCS:5  0x38 {         -- WDT input clock selector
       LFINTOSC = 0x0                    -- WDT reference clock is the 31.0 kHz LFINTOSC
       MFINTOSC = 0x8                    -- WDT reference clock is the 32kHz MFINTOSC output
       SOSC = 0x10                       -- WDT reference clock is SOSC
       SOFTWARE = 0x38                   -- Software Control
       }
--
-- CONFIG7 (0x300006)
--
pragma fuse_def BBSIZ:6  0x7 {           -- Boot Block Size selection bits
       WSIZE_512 = 0x7                   -- Boot Block size is 512 words
       WSIZE_1024 = 0x6                  -- Boot Block size is 1024 words
       WSIZE_2048 = 0x5                  -- Boot Block size is 2048 words
       WSIZE_4096 = 0x4                  -- Boot Block size is 4096 words
       WSIZE_8192 = 0x3                  -- Boot Block size is 8192 words
       WSIZE_16384 = 0x2                 -- Boot Block size is 16384 words
       WSIZE_32768 = 0x1                 -- Boot Block size is 32768 words
       }
pragma fuse_def BBEN:6  0x8 {            -- Boot Block enable bit
       DISABLED = 0x8                    -- Boot block disabled
       ENABLED = 0x0                     -- Boot block enabled
       }
pragma fuse_def SAFEN:6  0x10 {          -- Storage Area Flash enable bit
       DISABLED = 0x10                   -- SAF disabled
       ENABLED = 0x0                     -- SAF enabled
       }
--
-- CONFIG8 (0x300007)
--
pragma fuse_def WRTB:7  0x1 {            -- Boot Block Write Protection bit
       DISABLED = 0x1                    -- Boot Block not Write protected
       ENABLED = 0x0                     -- Boot Block Write protected
       }
pragma fuse_def WRTC:7  0x2 {            -- Configuration Register Write Protection bit
       DISABLED = 0x2                    -- Configuration registers not Write protected
       ENABLED = 0x0                     -- Configuration registers Write protected
       }
pragma fuse_def WRTD:7  0x4 {            -- Data EEPROM Write Protection bit
       DISABLED = 0x4                    -- Data EEPROM not Write protected
       ENABLED = 0x0                     -- Data EEPROM Write protected
       }
pragma fuse_def WRTSAF:7  0x8 {          -- SAF Write protection bit
       DISABLED = 0x8                    -- SAF not Write Protected
       ENABLED = 0x0                     -- SAF Write Protected
       }
pragma fuse_def WRTAPP:7  0x80 {         -- Application Block write protection bit
       DISABLED = 0x80                   -- Application Block not write protected
       ENABLED = 0x0                     -- Application Block write protected
       }
--
-- CONFIG9 (0x300008)
--
pragma fuse_def BOOTPINSEL:8  0x3 {      -- CRC on boot output pin selection
       RA4 = 0x0                         -- CRC on boot output pin is RA4
       RA2 = 0x1                         -- CRC on boot output pin is RA2
       RC4 = 0x2                         -- CRC on boot output pin is RC4
       RC5 = 0x3                         -- CRC on boot output pin is RC5
       }
pragma fuse_def BPEN:8  0x10 {           -- CRC on boot output pin enable bit
       DISABLED = 0x10                   -- CRC on boot output pin disabled
       ENABLED = 0x0                     -- CRC on boot output pin enabled, selected by BOOTPINSEL<1:0>
       }
pragma fuse_def ODCON:8  0x20 {          -- CRC on boot output pin open drain bit
       DISABLED = 0x20                   -- Pin drives both high-going and low-going signals
       ENABLED = 0x0                     -- Pin drives only low-going signals
       }
--
-- CONFIG10 (0x300009)
--
pragma fuse_def CP:9  0x1 {              -- PFM and Data EEPROM Code Protection bit
       DISABLED = 0x1                    -- PFM and Data EEPROM code protection disabled
       ENABLED = 0x0                     -- PFM and Data EEPROM code protection enabled
       }
--
-- CONFIG11 (0x30000A)
--
pragma fuse_def BOOTSCEN:10  0x1 {       -- CRC on boot scan enable for boot area
       DISABLED = 0x1                    -- CRC on boot will not include the boot area of program memory in its calculation
       ENABLED = 0x0                     -- CRC on boot will include the boot area of program memory in its calculation
       }
pragma fuse_def BOOTCOE:10  0x2 {        -- CRC on boot Continue on Error for boot areas bit
       DISABLED = 0x2                    -- CRC on boot will stop device if error is detected in boot areas
       ENABLED = 0x0                     -- CRC on boot will allow device to continue code execution regardless of error detection in boot areas
       }
pragma fuse_def APPSCEN:10  0x4 {        -- CRC on boot application code scan enable
       DISABLED = 0x4                    -- CRC on boot will not include the application area of program memory in its calculation
       ENABLED = 0x0                     -- CRC on boot will include the application area of program memory in its calculation
       }
pragma fuse_def SAFSCEN:10  0x8 {        -- CRC on boot SAF area scan enable
       DISABLED = 0x8                    -- CRC on boot will not include the SAF area of program memory in its calculation
       ENABLED = 0x0                     -- CRC on boot will include the SAF area of program memory in its calculation
       }
pragma fuse_def DATASCEN:10  0x10 {      -- CRC on boot Data EEPROM scan enable
       DISABLED = 0x10                   -- CRC on boot will not include data EEPROM in its calculation
       ENABLED = 0x0                     -- CRC on boot will include data EEPROM in its calculation
       }
pragma fuse_def CFGSCEN:10  0x20 {       -- CRC on boot Config fuses scan enable
       DISABLED = 0x20                   -- CRC on boot will not include the configuration fuses in its calculation
       ENABLED = 0x0                     -- CRC on boot will include the configuration fuses in its calculation
       }
pragma fuse_def COE:10  0x40 {           -- CRC on boot Continue on Error for non-boot areas bit
       DISABLED = 0x40                   -- CRC on boot will stop device if error is detected in non-boot areas
       ENABLED = 0x0                     -- CRC on boot will allow device to continue code execution regardless of error detection in non-boot areas
       }
pragma fuse_def BOOTPOR:10  0x80 {       -- Boot on CRC Enable bit
       DISABLED = 0x80                   -- CRC on boot will not run
       ENABLED = 0x0                     -- CRC on boot will run
       }
--
-- CONFIG12 (0x30000B)
--
pragma fuse_def BCRCPOLT:11  0xFF {      -- Boot Sector Polynomial for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of BCRCPOL are 0x00
       H01 = 0x1                         -- Bits 31:24 of BCRCPOL are 0x01
       H02 = 0x2                         -- Bits 31:24 of BCRCPOL are 0x02
       H03 = 0x3                         -- Bits 31:24 of BCRCPOL are 0x03
       H04 = 0x4                         -- Bits 31:24 of BCRCPOL are 0x04
       H05 = 0x5                         -- Bits 31:24 of BCRCPOL are 0x05
       H06 = 0x6                         -- Bits 31:24 of BCRCPOL are 0x06
       H07 = 0x7                         -- Bits 31:24 of BCRCPOL are 0x07
       H08 = 0x8                         -- Bits 31:24 of BCRCPOL are 0x08
       H09 = 0x9                         -- Bits 31:24 of BCRCPOL are 0x09
       H0A = 0xA                         -- Bits 31:24 of BCRCPOL are 0x0A
       H0B = 0xB                         -- Bits 31:24 of BCRCPOL are 0x0B
       H0C = 0xC                         -- Bits 31:24 of BCRCPOL are 0x0C
       H0D = 0xD                         -- Bits 31:24 of BCRCPOL are 0x0D
       H0E = 0xE                         -- Bits 31:24 of BCRCPOL are 0x0E
       H0F = 0xF                         -- Bits 31:24 of BCRCPOL are 0x0F
       H10 = 0x10                        -- Bits 31:24 of BCRCPOL are 0x10
       H11 = 0x11                        -- Bits 31:24 of BCRCPOL are 0x11
       H12 = 0x12                        -- Bits 31:24 of BCRCPOL are 0x12
       H13 = 0x13                        -- Bits 31:24 of BCRCPOL are 0x13
       H14 = 0x14                        -- Bits 31:24 of BCRCPOL are 0x14
       H15 = 0x15                        -- Bits 31:24 of BCRCPOL are 0x15
       H16 = 0x16                        -- Bits 31:24 of BCRCPOL are 0x16
       H17 = 0x17                        -- Bits 31:24 of BCRCPOL are 0x17
       H18 = 0x18                        -- Bits 31:24 of BCRCPOL are 0x18
       H19 = 0x19                        -- Bits 31:24 of BCRCPOL are 0x19
       H1A = 0x1A                        -- Bits 31:24 of BCRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of BCRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of BCRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of BCRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of BCRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of BCRCPOL are 0x1F
       H20 = 0x20                        -- Bits 31:24 of BCRCPOL are 0x20
       H21 = 0x21                        -- Bits 31:24 of BCRCPOL are 0x21
       H22 = 0x22                        -- Bits 31:24 of BCRCPOL are 0x22
       H23 = 0x23                        -- Bits 31:24 of BCRCPOL are 0x23
       H24 = 0x24                        -- Bits 31:24 of BCRCPOL are 0x24
       H25 = 0x25                        -- Bits 31:24 of BCRCPOL are 0x25
       H26 = 0x26                        -- Bits 31:24 of BCRCPOL are 0x26
       H27 = 0x27                        -- Bits 31:24 of BCRCPOL are 0x27
       H28 = 0x28                        -- Bits 31:24 of BCRCPOL are 0x28
       H29 = 0x29                        -- Bits 31:24 of BCRCPOL are 0x29
       H2A = 0x2A                        -- Bits 31:24 of BCRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of BCRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of BCRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of BCRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of BCRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of BCRCPOL are 0x2F
       H30 = 0x30                        -- Bits 31:24 of BCRCPOL are 0x30
       H31 = 0x31                        -- Bits 31:24 of BCRCPOL are 0x31
       H32 = 0x32                        -- Bits 31:24 of BCRCPOL are 0x32
       H33 = 0x33                        -- Bits 31:24 of BCRCPOL are 0x33
       H34 = 0x34                        -- Bits 31:24 of BCRCPOL are 0x34
       H35 = 0x35                        -- Bits 31:24 of BCRCPOL are 0x35
       H36 = 0x36                        -- Bits 31:24 of BCRCPOL are 0x36
       H37 = 0x37                        -- Bits 31:24 of BCRCPOL are 0x37
       H38 = 0x38                        -- Bits 31:24 of BCRCPOL are 0x38
       H39 = 0x39                        -- Bits 31:24 of BCRCPOL are 0x39
       H3A = 0x3A                        -- Bits 31:24 of BCRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of BCRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of BCRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of BCRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of BCRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of BCRCPOL are 0x3F
       H40 = 0x40                        -- Bits 31:24 of BCRCPOL are 0x40
       H41 = 0x41                        -- Bits 31:24 of BCRCPOL are 0x41
       H42 = 0x42                        -- Bits 31:24 of BCRCPOL are 0x42
       H43 = 0x43                        -- Bits 31:24 of BCRCPOL are 0x43
       H44 = 0x44                        -- Bits 31:24 of BCRCPOL are 0x44
       H45 = 0x45                        -- Bits 31:24 of BCRCPOL are 0x45
       H46 = 0x46                        -- Bits 31:24 of BCRCPOL are 0x46
       H47 = 0x47                        -- Bits 31:24 of BCRCPOL are 0x47
       H48 = 0x48                        -- Bits 31:24 of BCRCPOL are 0x48
       H49 = 0x49                        -- Bits 31:24 of BCRCPOL are 0x49
       H4A = 0x4A                        -- Bits 31:24 of BCRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of BCRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of BCRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of BCRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of BCRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of BCRCPOL are 0x4F
       H50 = 0x50                        -- Bits 31:24 of BCRCPOL are 0x50
       H51 = 0x51                        -- Bits 31:24 of BCRCPOL are 0x51
       H52 = 0x52                        -- Bits 31:24 of BCRCPOL are 0x52
       H53 = 0x53                        -- Bits 31:24 of BCRCPOL are 0x53
       H54 = 0x54                        -- Bits 31:24 of BCRCPOL are 0x54
       H55 = 0x55                        -- Bits 31:24 of BCRCPOL are 0x55
       H56 = 0x56                        -- Bits 31:24 of BCRCPOL are 0x56
       H57 = 0x57                        -- Bits 31:24 of BCRCPOL are 0x57
       H58 = 0x58                        -- Bits 31:24 of BCRCPOL are 0x58
       H59 = 0x59                        -- Bits 31:24 of BCRCPOL are 0x59
       H5A = 0x5A                        -- Bits 31:24 of BCRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of BCRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of BCRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of BCRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of BCRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of BCRCPOL are 0x5F
       H60 = 0x60                        -- Bits 31:24 of BCRCPOL are 0x60
       H61 = 0x61                        -- Bits 31:24 of BCRCPOL are 0x61
       H62 = 0x62                        -- Bits 31:24 of BCRCPOL are 0x62
       H63 = 0x63                        -- Bits 31:24 of BCRCPOL are 0x63
       H64 = 0x64                        -- Bits 31:24 of BCRCPOL are 0x64
       H65 = 0x65                        -- Bits 31:24 of BCRCPOL are 0x65
       H66 = 0x66                        -- Bits 31:24 of BCRCPOL are 0x66
       H67 = 0x67                        -- Bits 31:24 of BCRCPOL are 0x67
       H68 = 0x68                        -- Bits 31:24 of BCRCPOL are 0x68
       H69 = 0x69                        -- Bits 31:24 of BCRCPOL are 0x69
       H6A = 0x6A                        -- Bits 31:24 of BCRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of BCRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of BCRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of BCRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of BCRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of BCRCPOL are 0x6F
       H70 = 0x70                        -- Bits 31:24 of BCRCPOL are 0x70
       H71 = 0x71                        -- Bits 31:24 of BCRCPOL are 0x71
       H72 = 0x72                        -- Bits 31:24 of BCRCPOL are 0x72
       H73 = 0x73                        -- Bits 31:24 of BCRCPOL are 0x73
       H74 = 0x74                        -- Bits 31:24 of BCRCPOL are 0x74
       H75 = 0x75                        -- Bits 31:24 of BCRCPOL are 0x75
       H76 = 0x76                        -- Bits 31:24 of BCRCPOL are 0x76
       H77 = 0x77                        -- Bits 31:24 of BCRCPOL are 0x77
       H78 = 0x78                        -- Bits 31:24 of BCRCPOL are 0x78
       H79 = 0x79                        -- Bits 31:24 of BCRCPOL are 0x79
       H7A = 0x7A                        -- Bits 31:24 of BCRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of BCRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of BCRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of BCRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of BCRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of BCRCPOL are 0x7F
       H80 = 0x80                        -- Bits 31:24 of BCRCPOL are 0x80
       H81 = 0x81                        -- Bits 31:24 of BCRCPOL are 0x81
       H82 = 0x82                        -- Bits 31:24 of BCRCPOL are 0x82
       H83 = 0x83                        -- Bits 31:24 of BCRCPOL are 0x83
       H84 = 0x84                        -- Bits 31:24 of BCRCPOL are 0x84
       H85 = 0x85                        -- Bits 31:24 of BCRCPOL are 0x85
       H86 = 0x86                        -- Bits 31:24 of BCRCPOL are 0x86
       H87 = 0x87                        -- Bits 31:24 of BCRCPOL are 0x87
       H88 = 0x88                        -- Bits 31:24 of BCRCPOL are 0x88
       H89 = 0x89                        -- Bits 31:24 of BCRCPOL are 0x89
       H8A = 0x8A                        -- Bits 31:24 of BCRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of BCRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of BCRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of BCRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of BCRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of BCRCPOL are 0x8F
       H90 = 0x90                        -- Bits 31:24 of BCRCPOL are 0x90
       H91 = 0x91                        -- Bits 31:24 of BCRCPOL are 0x91
       H92 = 0x92                        -- Bits 31:24 of BCRCPOL are 0x92
       H93 = 0x93                        -- Bits 31:24 of BCRCPOL are 0x93
       H94 = 0x94                        -- Bits 31:24 of BCRCPOL are 0x94
       H95 = 0x95                        -- Bits 31:24 of BCRCPOL are 0x95
       H96 = 0x96                        -- Bits 31:24 of BCRCPOL are 0x96
       H97 = 0x97                        -- Bits 31:24 of BCRCPOL are 0x97
       H98 = 0x98                        -- Bits 31:24 of BCRCPOL are 0x98
       H99 = 0x99                        -- Bits 31:24 of BCRCPOL are 0x99
       H9A = 0x9A                        -- Bits 31:24 of BCRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of BCRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of BCRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of BCRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of BCRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of BCRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of BCRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of BCRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of BCRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of BCRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of BCRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of BCRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of BCRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of BCRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of BCRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of BCRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of BCRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of BCRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of BCRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of BCRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of BCRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of BCRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of BCRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of BCRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of BCRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of BCRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of BCRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of BCRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of BCRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of BCRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of BCRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of BCRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of BCRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of BCRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of BCRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of BCRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of BCRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of BCRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of BCRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of BCRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of BCRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of BCRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of BCRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of BCRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of BCRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of BCRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of BCRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of BCRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of BCRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of BCRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of BCRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of BCRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of BCRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of BCRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of BCRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of BCRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of BCRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of BCRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of BCRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of BCRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of BCRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of BCRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of BCRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of BCRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of BCRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of BCRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of BCRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of BCRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of BCRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of BCRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of BCRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of BCRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of BCRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of BCRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of BCRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of BCRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of BCRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of BCRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of BCRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of BCRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of BCRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of BCRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of BCRCPOL are 0xEC
       HED = 0xED                        -- Bits 31:24 of BCRCPOL are 0xED
       HEE = 0xEE                        -- Bits 31:24 of BCRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of BCRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of BCRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of BCRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of BCRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of BCRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of BCRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of BCRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of BCRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of BCRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of BCRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of BCRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of BCRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of BCRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of BCRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of BCRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of BCRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of BCRCPOL are 0xFF
       }
--
-- CONFIG13 (0x30000C)
--
pragma fuse_def BCRCPOLU:12  0xFF {      -- Boot Sector Polynomial for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of BCRCPOL are 0x00
       H01 = 0x1                         -- Bits 23:16 of BCRCPOL are 0x01
       H02 = 0x2                         -- Bits 23:16 of BCRCPOL are 0x02
       H03 = 0x3                         -- Bits 23:16 of BCRCPOL are 0x03
       H04 = 0x4                         -- Bits 23:16 of BCRCPOL are 0x04
       H05 = 0x5                         -- Bits 23:16 of BCRCPOL are 0x05
       H06 = 0x6                         -- Bits 23:16 of BCRCPOL are 0x06
       H07 = 0x7                         -- Bits 23:16 of BCRCPOL are 0x07
       H08 = 0x8                         -- Bits 23:16 of BCRCPOL are 0x08
       H09 = 0x9                         -- Bits 23:16 of BCRCPOL are 0x09
       H0A = 0xA                         -- Bits 23:16 of BCRCPOL are 0x0A
       H0B = 0xB                         -- Bits 23:16 of BCRCPOL are 0x0B
       H0C = 0xC                         -- Bits 23:16 of BCRCPOL are 0x0C
       H0D = 0xD                         -- Bits 23:16 of BCRCPOL are 0x0D
       H0E = 0xE                         -- Bits 23:16 of BCRCPOL are 0x0E
       H0F = 0xF                         -- Bits 23:16 of BCRCPOL are 0x0F
       H10 = 0x10                        -- Bits 23:16 of BCRCPOL are 0x10
       H11 = 0x11                        -- Bits 23:16 of BCRCPOL are 0x11
       H12 = 0x12                        -- Bits 23:16 of BCRCPOL are 0x12
       H13 = 0x13                        -- Bits 23:16 of BCRCPOL are 0x13
       H14 = 0x14                        -- Bits 23:16 of BCRCPOL are 0x14
       H15 = 0x15                        -- Bits 23:16 of BCRCPOL are 0x15
       H16 = 0x16                        -- Bits 23:16 of BCRCPOL are 0x16
       H17 = 0x17                        -- Bits 23:16 of BCRCPOL are 0x17
       H18 = 0x18                        -- Bits 23:16 of BCRCPOL are 0x18
       H19 = 0x19                        -- Bits 23:16 of BCRCPOL are 0x19
       H1A = 0x1A                        -- Bits 23:16 of BCRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of BCRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of BCRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of BCRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of BCRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of BCRCPOL are 0x1F
       H20 = 0x20                        -- Bits 23:16 of BCRCPOL are 0x20
       H21 = 0x21                        -- Bits 23:16 of BCRCPOL are 0x21
       H22 = 0x22                        -- Bits 23:16 of BCRCPOL are 0x22
       H23 = 0x23                        -- Bits 23:16 of BCRCPOL are 0x23
       H24 = 0x24                        -- Bits 23:16 of BCRCPOL are 0x24
       H25 = 0x25                        -- Bits 23:16 of BCRCPOL are 0x25
       H26 = 0x26                        -- Bits 23:16 of BCRCPOL are 0x26
       H27 = 0x27                        -- Bits 23:16 of BCRCPOL are 0x27
       H28 = 0x28                        -- Bits 23:16 of BCRCPOL are 0x28
       H29 = 0x29                        -- Bits 23:16 of BCRCPOL are 0x29
       H2A = 0x2A                        -- Bits 23:16 of BCRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of BCRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of BCRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of BCRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of BCRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of BCRCPOL are 0x2F
       H30 = 0x30                        -- Bits 23:16 of BCRCPOL are 0x30
       H31 = 0x31                        -- Bits 23:16 of BCRCPOL are 0x31
       H32 = 0x32                        -- Bits 23:16 of BCRCPOL are 0x32
       H33 = 0x33                        -- Bits 23:16 of BCRCPOL are 0x33
       H34 = 0x34                        -- Bits 23:16 of BCRCPOL are 0x34
       H35 = 0x35                        -- Bits 23:16 of BCRCPOL are 0x35
       H36 = 0x36                        -- Bits 23:16 of BCRCPOL are 0x36
       H37 = 0x37                        -- Bits 23:16 of BCRCPOL are 0x37
       H38 = 0x38                        -- Bits 23:16 of BCRCPOL are 0x38
       H39 = 0x39                        -- Bits 23:16 of BCRCPOL are 0x39
       H3A = 0x3A                        -- Bits 23:16 of BCRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of BCRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of BCRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of BCRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of BCRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of BCRCPOL are 0x3F
       H40 = 0x40                        -- Bits 23:16 of BCRCPOL are 0x40
       H41 = 0x41                        -- Bits 23:16 of BCRCPOL are 0x41
       H42 = 0x42                        -- Bits 23:16 of BCRCPOL are 0x42
       H43 = 0x43                        -- Bits 23:16 of BCRCPOL are 0x43
       H44 = 0x44                        -- Bits 23:16 of BCRCPOL are 0x44
       H45 = 0x45                        -- Bits 23:16 of BCRCPOL are 0x45
       H46 = 0x46                        -- Bits 23:16 of BCRCPOL are 0x46
       H47 = 0x47                        -- Bits 23:16 of BCRCPOL are 0x47
       H48 = 0x48                        -- Bits 23:16 of BCRCPOL are 0x48
       H49 = 0x49                        -- Bits 23:16 of BCRCPOL are 0x49
       H4A = 0x4A                        -- Bits 23:16 of BCRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of BCRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of BCRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of BCRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of BCRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of BCRCPOL are 0x4F
       H50 = 0x50                        -- Bits 23:16 of BCRCPOL are 0x50
       H51 = 0x51                        -- Bits 23:16 of BCRCPOL are 0x51
       H52 = 0x52                        -- Bits 23:16 of BCRCPOL are 0x52
       H53 = 0x53                        -- Bits 23:16 of BCRCPOL are 0x53
       H54 = 0x54                        -- Bits 23:16 of BCRCPOL are 0x54
       H55 = 0x55                        -- Bits 23:16 of BCRCPOL are 0x55
       H56 = 0x56                        -- Bits 23:16 of BCRCPOL are 0x56
       H57 = 0x57                        -- Bits 23:16 of BCRCPOL are 0x57
       H58 = 0x58                        -- Bits 23:16 of BCRCPOL are 0x58
       H59 = 0x59                        -- Bits 23:16 of BCRCPOL are 0x59
       H5A = 0x5A                        -- Bits 23:16 of BCRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of BCRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of BCRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of BCRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of BCRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of BCRCPOL are 0x5F
       H60 = 0x60                        -- Bits 23:16 of BCRCPOL are 0x60
       H61 = 0x61                        -- Bits 23:16 of BCRCPOL are 0x61
       H62 = 0x62                        -- Bits 23:16 of BCRCPOL are 0x62
       H63 = 0x63                        -- Bits 23:16 of BCRCPOL are 0x63
       H64 = 0x64                        -- Bits 23:16 of BCRCPOL are 0x64
       H65 = 0x65                        -- Bits 23:16 of BCRCPOL are 0x65
       H66 = 0x66                        -- Bits 23:16 of BCRCPOL are 0x66
       H67 = 0x67                        -- Bits 23:16 of BCRCPOL are 0x67
       H68 = 0x68                        -- Bits 23:16 of BCRCPOL are 0x68
       H69 = 0x69                        -- Bits 23:16 of BCRCPOL are 0x69
       H6A = 0x6A                        -- Bits 23:16 of BCRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of BCRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of BCRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of BCRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of BCRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of BCRCPOL are 0x6F
       H70 = 0x70                        -- Bits 23:16 of BCRCPOL are 0x70
       H71 = 0x71                        -- Bits 23:16 of BCRCPOL are 0x71
       H72 = 0x72                        -- Bits 23:16 of BCRCPOL are 0x72
       H73 = 0x73                        -- Bits 23:16 of BCRCPOL are 0x73
       H74 = 0x74                        -- Bits 23:16 of BCRCPOL are 0x74
       H75 = 0x75                        -- Bits 23:16 of BCRCPOL are 0x75
       H76 = 0x76                        -- Bits 23:16 of BCRCPOL are 0x76
       H77 = 0x77                        -- Bits 23:16 of BCRCPOL are 0x77
       H78 = 0x78                        -- Bits 23:16 of BCRCPOL are 0x78
       H79 = 0x79                        -- Bits 23:16 of BCRCPOL are 0x79
       H7A = 0x7A                        -- Bits 23:16 of BCRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of BCRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of BCRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of BCRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of BCRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of BCRCPOL are 0x7F
       H80 = 0x80                        -- Bits 23:16 of BCRCPOL are 0x80
       H81 = 0x81                        -- Bits 23:16 of BCRCPOL are 0x81
       H82 = 0x82                        -- Bits 23:16 of BCRCPOL are 0x82
       H83 = 0x83                        -- Bits 23:16 of BCRCPOL are 0x83
       H84 = 0x84                        -- Bits 23:16 of BCRCPOL are 0x84
       H85 = 0x85                        -- Bits 23:16 of BCRCPOL are 0x85
       H86 = 0x86                        -- Bits 23:16 of BCRCPOL are 0x86
       H87 = 0x87                        -- Bits 23:16 of BCRCPOL are 0x87
       H88 = 0x88                        -- Bits 23:16 of BCRCPOL are 0x88
       H89 = 0x89                        -- Bits 23:16 of BCRCPOL are 0x89
       H8A = 0x8A                        -- Bits 23:16 of BCRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of BCRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of BCRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of BCRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of BCRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of BCRCPOL are 0x8F
       H90 = 0x90                        -- Bits 23:16 of BCRCPOL are 0x90
       H91 = 0x91                        -- Bits 23:16 of BCRCPOL are 0x91
       H92 = 0x92                        -- Bits 23:16 of BCRCPOL are 0x92
       H93 = 0x93                        -- Bits 23:16 of BCRCPOL are 0x93
       H94 = 0x94                        -- Bits 23:16 of BCRCPOL are 0x94
       H95 = 0x95                        -- Bits 23:16 of BCRCPOL are 0x95
       H96 = 0x96                        -- Bits 23:16 of BCRCPOL are 0x96
       H97 = 0x97                        -- Bits 23:16 of BCRCPOL are 0x97
       H98 = 0x98                        -- Bits 23:16 of BCRCPOL are 0x98
       H99 = 0x99                        -- Bits 23:16 of BCRCPOL are 0x99
       H9A = 0x9A                        -- Bits 23:16 of BCRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of BCRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of BCRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of BCRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of BCRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of BCRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of BCRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of BCRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of BCRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of BCRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of BCRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of BCRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of BCRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of BCRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of BCRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of BCRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of BCRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of BCRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of BCRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of BCRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of BCRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of BCRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of BCRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of BCRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of BCRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of BCRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of BCRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of BCRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of BCRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of BCRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of BCRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of BCRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of BCRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of BCRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of BCRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of BCRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of BCRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of BCRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of BCRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of BCRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of BCRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of BCRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of BCRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of BCRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of BCRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of BCRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of BCRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of BCRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of BCRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of BCRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of BCRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of BCRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of BCRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of BCRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of BCRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of BCRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of BCRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of BCRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of BCRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of BCRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of BCRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of BCRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of BCRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of BCRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of BCRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of BCRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of BCRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of BCRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of BCRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of BCRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of BCRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of BCRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of BCRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of BCRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of BCRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of BCRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of BCRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of BCRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of BCRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of BCRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of BCRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of BCRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of BCRCPOL are 0xEC
       HED = 0xED                        -- Bits 23:16 of BCRCPOL are 0xED
       HEE = 0xEE                        -- Bits 23:16 of BCRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of BCRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of BCRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of BCRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of BCRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of BCRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of BCRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of BCRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of BCRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of BCRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of BCRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of BCRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of BCRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of BCRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of BCRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of BCRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of BCRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of BCRCPOL are 0xFF
       }
--
-- CONFIG14 (0x30000D)
--
pragma fuse_def BCRCPOLH:13  0xFF {      -- Boot Sector Polynomial for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of BCRCPOL are 0x00
       H01 = 0x1                         -- Bits 15:8 of BCRCPOL are 0x01
       H02 = 0x2                         -- Bits 15:8 of BCRCPOL are 0x02
       H03 = 0x3                         -- Bits 15:8 of BCRCPOL are 0x03
       H04 = 0x4                         -- Bits 15:8 of BCRCPOL are 0x04
       H05 = 0x5                         -- Bits 15:8 of BCRCPOL are 0x05
       H06 = 0x6                         -- Bits 15:8 of BCRCPOL are 0x06
       H07 = 0x7                         -- Bits 15:8 of BCRCPOL are 0x07
       H08 = 0x8                         -- Bits 15:8 of BCRCPOL are 0x08
       H09 = 0x9                         -- Bits 15:8 of BCRCPOL are 0x09
       H0A = 0xA                         -- Bits 15:8 of BCRCPOL are 0x0A
       H0B = 0xB                         -- Bits 15:8 of BCRCPOL are 0x0B
       H0C = 0xC                         -- Bits 15:8 of BCRCPOL are 0x0C
       H0D = 0xD                         -- Bits 15:8 of BCRCPOL are 0x0D
       H0E = 0xE                         -- Bits 15:8 of BCRCPOL are 0x0E
       H0F = 0xF                         -- Bits 15:8 of BCRCPOL are 0x0F
       H10 = 0x10                        -- Bits 15:8 of BCRCPOL are 0x10
       H11 = 0x11                        -- Bits 15:8 of BCRCPOL are 0x11
       H12 = 0x12                        -- Bits 15:8 of BCRCPOL are 0x12
       H13 = 0x13                        -- Bits 15:8 of BCRCPOL are 0x13
       H14 = 0x14                        -- Bits 15:8 of BCRCPOL are 0x14
       H15 = 0x15                        -- Bits 15:8 of BCRCPOL are 0x15
       H16 = 0x16                        -- Bits 15:8 of BCRCPOL are 0x16
       H17 = 0x17                        -- Bits 15:8 of BCRCPOL are 0x17
       H18 = 0x18                        -- Bits 15:8 of BCRCPOL are 0x18
       H19 = 0x19                        -- Bits 15:8 of BCRCPOL are 0x19
       H1A = 0x1A                        -- Bits 15:8 of BCRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of BCRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of BCRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of BCRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of BCRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of BCRCPOL are 0x1F
       H20 = 0x20                        -- Bits 15:8 of BCRCPOL are 0x20
       H21 = 0x21                        -- Bits 15:8 of BCRCPOL are 0x21
       H22 = 0x22                        -- Bits 15:8 of BCRCPOL are 0x22
       H23 = 0x23                        -- Bits 15:8 of BCRCPOL are 0x23
       H24 = 0x24                        -- Bits 15:8 of BCRCPOL are 0x24
       H25 = 0x25                        -- Bits 15:8 of BCRCPOL are 0x25
       H26 = 0x26                        -- Bits 15:8 of BCRCPOL are 0x26
       H27 = 0x27                        -- Bits 15:8 of BCRCPOL are 0x27
       H28 = 0x28                        -- Bits 15:8 of BCRCPOL are 0x28
       H29 = 0x29                        -- Bits 15:8 of BCRCPOL are 0x29
       H2A = 0x2A                        -- Bits 15:8 of BCRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of BCRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of BCRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of BCRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of BCRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of BCRCPOL are 0x2F
       H30 = 0x30                        -- Bits 15:8 of BCRCPOL are 0x30
       H31 = 0x31                        -- Bits 15:8 of BCRCPOL are 0x31
       H32 = 0x32                        -- Bits 15:8 of BCRCPOL are 0x32
       H33 = 0x33                        -- Bits 15:8 of BCRCPOL are 0x33
       H34 = 0x34                        -- Bits 15:8 of BCRCPOL are 0x34
       H35 = 0x35                        -- Bits 15:8 of BCRCPOL are 0x35
       H36 = 0x36                        -- Bits 15:8 of BCRCPOL are 0x36
       H37 = 0x37                        -- Bits 15:8 of BCRCPOL are 0x37
       H38 = 0x38                        -- Bits 15:8 of BCRCPOL are 0x38
       H39 = 0x39                        -- Bits 15:8 of BCRCPOL are 0x39
       H3A = 0x3A                        -- Bits 15:8 of BCRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of BCRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of BCRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of BCRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of BCRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of BCRCPOL are 0x3F
       H40 = 0x40                        -- Bits 15:8 of BCRCPOL are 0x40
       H41 = 0x41                        -- Bits 15:8 of BCRCPOL are 0x41
       H42 = 0x42                        -- Bits 15:8 of BCRCPOL are 0x42
       H43 = 0x43                        -- Bits 15:8 of BCRCPOL are 0x43
       H44 = 0x44                        -- Bits 15:8 of BCRCPOL are 0x44
       H45 = 0x45                        -- Bits 15:8 of BCRCPOL are 0x45
       H46 = 0x46                        -- Bits 15:8 of BCRCPOL are 0x46
       H47 = 0x47                        -- Bits 15:8 of BCRCPOL are 0x47
       H48 = 0x48                        -- Bits 15:8 of BCRCPOL are 0x48
       H49 = 0x49                        -- Bits 15:8 of BCRCPOL are 0x49
       H4A = 0x4A                        -- Bits 15:8 of BCRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of BCRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of BCRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of BCRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of BCRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of BCRCPOL are 0x4F
       H50 = 0x50                        -- Bits 15:8 of BCRCPOL are 0x50
       H51 = 0x51                        -- Bits 15:8 of BCRCPOL are 0x51
       H52 = 0x52                        -- Bits 15:8 of BCRCPOL are 0x52
       H53 = 0x53                        -- Bits 15:8 of BCRCPOL are 0x53
       H54 = 0x54                        -- Bits 15:8 of BCRCPOL are 0x54
       H55 = 0x55                        -- Bits 15:8 of BCRCPOL are 0x55
       H56 = 0x56                        -- Bits 15:8 of BCRCPOL are 0x56
       H57 = 0x57                        -- Bits 15:8 of BCRCPOL are 0x57
       H58 = 0x58                        -- Bits 15:8 of BCRCPOL are 0x58
       H59 = 0x59                        -- Bits 15:8 of BCRCPOL are 0x59
       H5A = 0x5A                        -- Bits 15:8 of BCRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of BCRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of BCRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of BCRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of BCRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of BCRCPOL are 0x5F
       H60 = 0x60                        -- Bits 15:8 of BCRCPOL are 0x60
       H61 = 0x61                        -- Bits 15:8 of BCRCPOL are 0x61
       H62 = 0x62                        -- Bits 15:8 of BCRCPOL are 0x62
       H63 = 0x63                        -- Bits 15:8 of BCRCPOL are 0x63
       H64 = 0x64                        -- Bits 15:8 of BCRCPOL are 0x64
       H65 = 0x65                        -- Bits 15:8 of BCRCPOL are 0x65
       H66 = 0x66                        -- Bits 15:8 of BCRCPOL are 0x66
       H67 = 0x67                        -- Bits 15:8 of BCRCPOL are 0x67
       H68 = 0x68                        -- Bits 15:8 of BCRCPOL are 0x68
       H69 = 0x69                        -- Bits 15:8 of BCRCPOL are 0x69
       H6A = 0x6A                        -- Bits 15:8 of BCRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of BCRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of BCRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of BCRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of BCRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of BCRCPOL are 0x6F
       H70 = 0x70                        -- Bits 15:8 of BCRCPOL are 0x70
       H71 = 0x71                        -- Bits 15:8 of BCRCPOL are 0x71
       H72 = 0x72                        -- Bits 15:8 of BCRCPOL are 0x72
       H73 = 0x73                        -- Bits 15:8 of BCRCPOL are 0x73
       H74 = 0x74                        -- Bits 15:8 of BCRCPOL are 0x74
       H75 = 0x75                        -- Bits 15:8 of BCRCPOL are 0x75
       H76 = 0x76                        -- Bits 15:8 of BCRCPOL are 0x76
       H77 = 0x77                        -- Bits 15:8 of BCRCPOL are 0x77
       H78 = 0x78                        -- Bits 15:8 of BCRCPOL are 0x78
       H79 = 0x79                        -- Bits 15:8 of BCRCPOL are 0x79
       H7A = 0x7A                        -- Bits 15:8 of BCRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of BCRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of BCRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of BCRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of BCRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of BCRCPOL are 0x7F
       H80 = 0x80                        -- Bits 15:8 of BCRCPOL are 0x80
       H81 = 0x81                        -- Bits 15:8 of BCRCPOL are 0x81
       H82 = 0x82                        -- Bits 15:8 of BCRCPOL are 0x82
       H83 = 0x83                        -- Bits 15:8 of BCRCPOL are 0x83
       H84 = 0x84                        -- Bits 15:8 of BCRCPOL are 0x84
       H85 = 0x85                        -- Bits 15:8 of BCRCPOL are 0x85
       H86 = 0x86                        -- Bits 15:8 of BCRCPOL are 0x86
       H87 = 0x87                        -- Bits 15:8 of BCRCPOL are 0x87
       H88 = 0x88                        -- Bits 15:8 of BCRCPOL are 0x88
       H89 = 0x89                        -- Bits 15:8 of BCRCPOL are 0x89
       H8A = 0x8A                        -- Bits 15:8 of BCRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of BCRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of BCRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of BCRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of BCRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of BCRCPOL are 0x8F
       H90 = 0x90                        -- Bits 15:8 of BCRCPOL are 0x90
       H91 = 0x91                        -- Bits 15:8 of BCRCPOL are 0x91
       H92 = 0x92                        -- Bits 15:8 of BCRCPOL are 0x92
       H93 = 0x93                        -- Bits 15:8 of BCRCPOL are 0x93
       H94 = 0x94                        -- Bits 15:8 of BCRCPOL are 0x94
       H95 = 0x95                        -- Bits 15:8 of BCRCPOL are 0x95
       H96 = 0x96                        -- Bits 15:8 of BCRCPOL are 0x96
       H97 = 0x97                        -- Bits 15:8 of BCRCPOL are 0x97
       H98 = 0x98                        -- Bits 15:8 of BCRCPOL are 0x98
       H99 = 0x99                        -- Bits 15:8 of BCRCPOL are 0x99
       H9A = 0x9A                        -- Bits 15:8 of BCRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of BCRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of BCRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of BCRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of BCRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of BCRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of BCRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of BCRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of BCRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of BCRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of BCRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of BCRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of BCRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of BCRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of BCRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of BCRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of BCRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of BCRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of BCRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of BCRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of BCRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of BCRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of BCRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of BCRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of BCRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of BCRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of BCRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of BCRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of BCRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of BCRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of BCRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of BCRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of BCRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of BCRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of BCRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of BCRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of BCRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of BCRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of BCRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of BCRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of BCRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of BCRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of BCRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of BCRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of BCRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of BCRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of BCRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of BCRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of BCRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of BCRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of BCRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of BCRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of BCRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of BCRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of BCRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of BCRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of BCRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of BCRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of BCRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of BCRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of BCRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of BCRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of BCRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of BCRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of BCRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of BCRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of BCRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of BCRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of BCRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of BCRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of BCRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of BCRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of BCRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of BCRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of BCRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of BCRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of BCRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of BCRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of BCRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of BCRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of BCRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of BCRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of BCRCPOL are 0xEC
       HED = 0xED                        -- Bits 15:8 of BCRCPOL are 0xED
       HEE = 0xEE                        -- Bits 15:8 of BCRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of BCRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of BCRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of BCRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of BCRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of BCRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of BCRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of BCRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of BCRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of BCRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of BCRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of BCRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of BCRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of BCRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of BCRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of BCRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of BCRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of BCRCPOL are 0xFF
       }
--
-- CONFIG15 (0x30000E)
--
pragma fuse_def BCRCPOLL:14  0xFF {      -- Boot Sector Polynomial for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of BCRCPOL are 0x00
       H01 = 0x1                         -- Bits 7:0 of BCRCPOL are 0x01
       H02 = 0x2                         -- Bits 7:0 of BCRCPOL are 0x02
       H03 = 0x3                         -- Bits 7:0 of BCRCPOL are 0x03
       H04 = 0x4                         -- Bits 7:0 of BCRCPOL are 0x04
       H05 = 0x5                         -- Bits 7:0 of BCRCPOL are 0x05
       H06 = 0x6                         -- Bits 7:0 of BCRCPOL are 0x06
       H07 = 0x7                         -- Bits 7:0 of BCRCPOL are 0x07
       H08 = 0x8                         -- Bits 7:0 of BCRCPOL are 0x08
       H09 = 0x9                         -- Bits 7:0 of BCRCPOL are 0x09
       H0A = 0xA                         -- Bits 7:0 of BCRCPOL are 0x0A
       H0B = 0xB                         -- Bits 7:0 of BCRCPOL are 0x0B
       H0C = 0xC                         -- Bits 7:0 of BCRCPOL are 0x0C
       H0D = 0xD                         -- Bits 7:0 of BCRCPOL are 0x0D
       H0E = 0xE                         -- Bits 7:0 of BCRCPOL are 0x0E
       H0F = 0xF                         -- Bits 7:0 of BCRCPOL are 0x0F
       H10 = 0x10                        -- Bits 7:0 of BCRCPOL are 0x10
       H11 = 0x11                        -- Bits 7:0 of BCRCPOL are 0x11
       H12 = 0x12                        -- Bits 7:0 of BCRCPOL are 0x12
       H13 = 0x13                        -- Bits 7:0 of BCRCPOL are 0x13
       H14 = 0x14                        -- Bits 7:0 of BCRCPOL are 0x14
       H15 = 0x15                        -- Bits 7:0 of BCRCPOL are 0x15
       H16 = 0x16                        -- Bits 7:0 of BCRCPOL are 0x16
       H17 = 0x17                        -- Bits 7:0 of BCRCPOL are 0x17
       H18 = 0x18                        -- Bits 7:0 of BCRCPOL are 0x18
       H19 = 0x19                        -- Bits 7:0 of BCRCPOL are 0x19
       H1A = 0x1A                        -- Bits 7:0 of BCRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of BCRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of BCRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of BCRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of BCRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of BCRCPOL are 0x1F
       H20 = 0x20                        -- Bits 7:0 of BCRCPOL are 0x20
       H21 = 0x21                        -- Bits 7:0 of BCRCPOL are 0x21
       H22 = 0x22                        -- Bits 7:0 of BCRCPOL are 0x22
       H23 = 0x23                        -- Bits 7:0 of BCRCPOL are 0x23
       H24 = 0x24                        -- Bits 7:0 of BCRCPOL are 0x24
       H25 = 0x25                        -- Bits 7:0 of BCRCPOL are 0x25
       H26 = 0x26                        -- Bits 7:0 of BCRCPOL are 0x26
       H27 = 0x27                        -- Bits 7:0 of BCRCPOL are 0x27
       H28 = 0x28                        -- Bits 7:0 of BCRCPOL are 0x28
       H29 = 0x29                        -- Bits 7:0 of BCRCPOL are 0x29
       H2A = 0x2A                        -- Bits 7:0 of BCRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of BCRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of BCRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of BCRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of BCRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of BCRCPOL are 0x2F
       H30 = 0x30                        -- Bits 7:0 of BCRCPOL are 0x30
       H31 = 0x31                        -- Bits 7:0 of BCRCPOL are 0x31
       H32 = 0x32                        -- Bits 7:0 of BCRCPOL are 0x32
       H33 = 0x33                        -- Bits 7:0 of BCRCPOL are 0x33
       H34 = 0x34                        -- Bits 7:0 of BCRCPOL are 0x34
       H35 = 0x35                        -- Bits 7:0 of BCRCPOL are 0x35
       H36 = 0x36                        -- Bits 7:0 of BCRCPOL are 0x36
       H37 = 0x37                        -- Bits 7:0 of BCRCPOL are 0x37
       H38 = 0x38                        -- Bits 7:0 of BCRCPOL are 0x38
       H39 = 0x39                        -- Bits 7:0 of BCRCPOL are 0x39
       H3A = 0x3A                        -- Bits 7:0 of BCRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of BCRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of BCRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of BCRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of BCRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of BCRCPOL are 0x3F
       H40 = 0x40                        -- Bits 7:0 of BCRCPOL are 0x40
       H41 = 0x41                        -- Bits 7:0 of BCRCPOL are 0x41
       H42 = 0x42                        -- Bits 7:0 of BCRCPOL are 0x42
       H43 = 0x43                        -- Bits 7:0 of BCRCPOL are 0x43
       H44 = 0x44                        -- Bits 7:0 of BCRCPOL are 0x44
       H45 = 0x45                        -- Bits 7:0 of BCRCPOL are 0x45
       H46 = 0x46                        -- Bits 7:0 of BCRCPOL are 0x46
       H47 = 0x47                        -- Bits 7:0 of BCRCPOL are 0x47
       H48 = 0x48                        -- Bits 7:0 of BCRCPOL are 0x48
       H49 = 0x49                        -- Bits 7:0 of BCRCPOL are 0x49
       H4A = 0x4A                        -- Bits 7:0 of BCRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of BCRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of BCRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of BCRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of BCRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of BCRCPOL are 0x4F
       H50 = 0x50                        -- Bits 7:0 of BCRCPOL are 0x50
       H51 = 0x51                        -- Bits 7:0 of BCRCPOL are 0x51
       H52 = 0x52                        -- Bits 7:0 of BCRCPOL are 0x52
       H53 = 0x53                        -- Bits 7:0 of BCRCPOL are 0x53
       H54 = 0x54                        -- Bits 7:0 of BCRCPOL are 0x54
       H55 = 0x55                        -- Bits 7:0 of BCRCPOL are 0x55
       H56 = 0x56                        -- Bits 7:0 of BCRCPOL are 0x56
       H57 = 0x57                        -- Bits 7:0 of BCRCPOL are 0x57
       H58 = 0x58                        -- Bits 7:0 of BCRCPOL are 0x58
       H59 = 0x59                        -- Bits 7:0 of BCRCPOL are 0x59
       H5A = 0x5A                        -- Bits 7:0 of BCRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of BCRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of BCRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of BCRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of BCRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of BCRCPOL are 0x5F
       H60 = 0x60                        -- Bits 7:0 of BCRCPOL are 0x60
       H61 = 0x61                        -- Bits 7:0 of BCRCPOL are 0x61
       H62 = 0x62                        -- Bits 7:0 of BCRCPOL are 0x62
       H63 = 0x63                        -- Bits 7:0 of BCRCPOL are 0x63
       H64 = 0x64                        -- Bits 7:0 of BCRCPOL are 0x64
       H65 = 0x65                        -- Bits 7:0 of BCRCPOL are 0x65
       H66 = 0x66                        -- Bits 7:0 of BCRCPOL are 0x66
       H67 = 0x67                        -- Bits 7:0 of BCRCPOL are 0x67
       H68 = 0x68                        -- Bits 7:0 of BCRCPOL are 0x68
       H69 = 0x69                        -- Bits 7:0 of BCRCPOL are 0x69
       H6A = 0x6A                        -- Bits 7:0 of BCRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of BCRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of BCRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of BCRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of BCRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of BCRCPOL are 0x6F
       H70 = 0x70                        -- Bits 7:0 of BCRCPOL are 0x70
       H71 = 0x71                        -- Bits 7:0 of BCRCPOL are 0x71
       H72 = 0x72                        -- Bits 7:0 of BCRCPOL are 0x72
       H73 = 0x73                        -- Bits 7:0 of BCRCPOL are 0x73
       H74 = 0x74                        -- Bits 7:0 of BCRCPOL are 0x74
       H75 = 0x75                        -- Bits 7:0 of BCRCPOL are 0x75
       H76 = 0x76                        -- Bits 7:0 of BCRCPOL are 0x76
       H77 = 0x77                        -- Bits 7:0 of BCRCPOL are 0x77
       H78 = 0x78                        -- Bits 7:0 of BCRCPOL are 0x78
       H79 = 0x79                        -- Bits 7:0 of BCRCPOL are 0x79
       H7A = 0x7A                        -- Bits 7:0 of BCRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of BCRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of BCRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of BCRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of BCRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of BCRCPOL are 0x7F
       H80 = 0x80                        -- Bits 7:0 of BCRCPOL are 0x80
       H81 = 0x81                        -- Bits 7:0 of BCRCPOL are 0x81
       H82 = 0x82                        -- Bits 7:0 of BCRCPOL are 0x82
       H83 = 0x83                        -- Bits 7:0 of BCRCPOL are 0x83
       H84 = 0x84                        -- Bits 7:0 of BCRCPOL are 0x84
       H85 = 0x85                        -- Bits 7:0 of BCRCPOL are 0x85
       H86 = 0x86                        -- Bits 7:0 of BCRCPOL are 0x86
       H87 = 0x87                        -- Bits 7:0 of BCRCPOL are 0x87
       H88 = 0x88                        -- Bits 7:0 of BCRCPOL are 0x88
       H89 = 0x89                        -- Bits 7:0 of BCRCPOL are 0x89
       H8A = 0x8A                        -- Bits 7:0 of BCRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of BCRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of BCRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of BCRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of BCRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of BCRCPOL are 0x8F
       H90 = 0x90                        -- Bits 7:0 of BCRCPOL are 0x90
       H91 = 0x91                        -- Bits 7:0 of BCRCPOL are 0x91
       H92 = 0x92                        -- Bits 7:0 of BCRCPOL are 0x92
       H93 = 0x93                        -- Bits 7:0 of BCRCPOL are 0x93
       H94 = 0x94                        -- Bits 7:0 of BCRCPOL are 0x94
       H95 = 0x95                        -- Bits 7:0 of BCRCPOL are 0x95
       H96 = 0x96                        -- Bits 7:0 of BCRCPOL are 0x96
       H97 = 0x97                        -- Bits 7:0 of BCRCPOL are 0x97
       H98 = 0x98                        -- Bits 7:0 of BCRCPOL are 0x98
       H99 = 0x99                        -- Bits 7:0 of BCRCPOL are 0x99
       H9A = 0x9A                        -- Bits 7:0 of BCRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of BCRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of BCRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of BCRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of BCRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of BCRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of BCRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of BCRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of BCRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of BCRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of BCRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of BCRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of BCRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of BCRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of BCRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of BCRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of BCRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of BCRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of BCRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of BCRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of BCRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of BCRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of BCRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of BCRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of BCRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of BCRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of BCRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of BCRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of BCRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of BCRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of BCRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of BCRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of BCRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of BCRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of BCRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of BCRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of BCRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of BCRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of BCRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of BCRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of BCRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of BCRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of BCRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of BCRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of BCRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of BCRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of BCRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of BCRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of BCRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of BCRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of BCRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of BCRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of BCRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of BCRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of BCRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of BCRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of BCRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of BCRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of BCRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of BCRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of BCRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of BCRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of BCRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of BCRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of BCRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of BCRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of BCRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of BCRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of BCRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of BCRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of BCRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of BCRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of BCRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of BCRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of BCRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of BCRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of BCRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of BCRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of BCRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of BCRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of BCRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of BCRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of BCRCPOL are 0xEC
       HED = 0xED                        -- Bits 7:0 of BCRCPOL are 0xED
       HEE = 0xEE                        -- Bits 7:0 of BCRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of BCRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of BCRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of BCRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of BCRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of BCRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of BCRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of BCRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of BCRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of BCRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of BCRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of BCRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of BCRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of BCRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of BCRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of BCRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of BCRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of BCRCPOL are 0xFF
       }
--
-- CONFIG16 (0x30000F)
--
pragma fuse_def BCRCSEEDT:15  0xFF {     -- Boot Sector Seed for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of BCRCSEED are 0x00
       H01 = 0x1                         -- Bits 31:24 of BCRCSEED are 0x01
       H02 = 0x2                         -- Bits 31:24 of BCRCSEED are 0x02
       H03 = 0x3                         -- Bits 31:24 of BCRCSEED are 0x03
       H04 = 0x4                         -- Bits 31:24 of BCRCSEED are 0x04
       H05 = 0x5                         -- Bits 31:24 of BCRCSEED are 0x05
       H06 = 0x6                         -- Bits 31:24 of BCRCSEED are 0x06
       H07 = 0x7                         -- Bits 31:24 of BCRCSEED are 0x07
       H08 = 0x8                         -- Bits 31:24 of BCRCSEED are 0x08
       H09 = 0x9                         -- Bits 31:24 of BCRCSEED are 0x09
       H0A = 0xA                         -- Bits 31:24 of BCRCSEED are 0x0A
       H0B = 0xB                         -- Bits 31:24 of BCRCSEED are 0x0B
       H0C = 0xC                         -- Bits 31:24 of BCRCSEED are 0x0C
       H0D = 0xD                         -- Bits 31:24 of BCRCSEED are 0x0D
       H0E = 0xE                         -- Bits 31:24 of BCRCSEED are 0x0E
       H0F = 0xF                         -- Bits 31:24 of BCRCSEED are 0x0F
       H10 = 0x10                        -- Bits 31:24 of BCRCSEED are 0x10
       H11 = 0x11                        -- Bits 31:24 of BCRCSEED are 0x11
       H12 = 0x12                        -- Bits 31:24 of BCRCSEED are 0x12
       H13 = 0x13                        -- Bits 31:24 of BCRCSEED are 0x13
       H14 = 0x14                        -- Bits 31:24 of BCRCSEED are 0x14
       H15 = 0x15                        -- Bits 31:24 of BCRCSEED are 0x15
       H16 = 0x16                        -- Bits 31:24 of BCRCSEED are 0x16
       H17 = 0x17                        -- Bits 31:24 of BCRCSEED are 0x17
       H18 = 0x18                        -- Bits 31:24 of BCRCSEED are 0x18
       H19 = 0x19                        -- Bits 31:24 of BCRCSEED are 0x19
       H1A = 0x1A                        -- Bits 31:24 of BCRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of BCRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of BCRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of BCRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of BCRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of BCRCSEED are 0x1F
       H20 = 0x20                        -- Bits 31:24 of BCRCSEED are 0x20
       H21 = 0x21                        -- Bits 31:24 of BCRCSEED are 0x21
       H22 = 0x22                        -- Bits 31:24 of BCRCSEED are 0x22
       H23 = 0x23                        -- Bits 31:24 of BCRCSEED are 0x23
       H24 = 0x24                        -- Bits 31:24 of BCRCSEED are 0x24
       H25 = 0x25                        -- Bits 31:24 of BCRCSEED are 0x25
       H26 = 0x26                        -- Bits 31:24 of BCRCSEED are 0x26
       H27 = 0x27                        -- Bits 31:24 of BCRCSEED are 0x27
       H28 = 0x28                        -- Bits 31:24 of BCRCSEED are 0x28
       H29 = 0x29                        -- Bits 31:24 of BCRCSEED are 0x29
       H2A = 0x2A                        -- Bits 31:24 of BCRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of BCRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of BCRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of BCRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of BCRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of BCRCSEED are 0x2F
       H30 = 0x30                        -- Bits 31:24 of BCRCSEED are 0x30
       H31 = 0x31                        -- Bits 31:24 of BCRCSEED are 0x31
       H32 = 0x32                        -- Bits 31:24 of BCRCSEED are 0x32
       H33 = 0x33                        -- Bits 31:24 of BCRCSEED are 0x33
       H34 = 0x34                        -- Bits 31:24 of BCRCSEED are 0x34
       H35 = 0x35                        -- Bits 31:24 of BCRCSEED are 0x35
       H36 = 0x36                        -- Bits 31:24 of BCRCSEED are 0x36
       H37 = 0x37                        -- Bits 31:24 of BCRCSEED are 0x37
       H38 = 0x38                        -- Bits 31:24 of BCRCSEED are 0x38
       H39 = 0x39                        -- Bits 31:24 of BCRCSEED are 0x39
       H3A = 0x3A                        -- Bits 31:24 of BCRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of BCRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of BCRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of BCRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of BCRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of BCRCSEED are 0x3F
       H40 = 0x40                        -- Bits 31:24 of BCRCSEED are 0x40
       H41 = 0x41                        -- Bits 31:24 of BCRCSEED are 0x41
       H42 = 0x42                        -- Bits 31:24 of BCRCSEED are 0x42
       H43 = 0x43                        -- Bits 31:24 of BCRCSEED are 0x43
       H44 = 0x44                        -- Bits 31:24 of BCRCSEED are 0x44
       H45 = 0x45                        -- Bits 31:24 of BCRCSEED are 0x45
       H46 = 0x46                        -- Bits 31:24 of BCRCSEED are 0x46
       H47 = 0x47                        -- Bits 31:24 of BCRCSEED are 0x47
       H48 = 0x48                        -- Bits 31:24 of BCRCSEED are 0x48
       H49 = 0x49                        -- Bits 31:24 of BCRCSEED are 0x49
       H4A = 0x4A                        -- Bits 31:24 of BCRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of BCRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of BCRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of BCRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of BCRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of BCRCSEED are 0x4F
       H50 = 0x50                        -- Bits 31:24 of BCRCSEED are 0x50
       H51 = 0x51                        -- Bits 31:24 of BCRCSEED are 0x51
       H52 = 0x52                        -- Bits 31:24 of BCRCSEED are 0x52
       H53 = 0x53                        -- Bits 31:24 of BCRCSEED are 0x53
       H54 = 0x54                        -- Bits 31:24 of BCRCSEED are 0x54
       H55 = 0x55                        -- Bits 31:24 of BCRCSEED are 0x55
       H56 = 0x56                        -- Bits 31:24 of BCRCSEED are 0x56
       H57 = 0x57                        -- Bits 31:24 of BCRCSEED are 0x57
       H58 = 0x58                        -- Bits 31:24 of BCRCSEED are 0x58
       H59 = 0x59                        -- Bits 31:24 of BCRCSEED are 0x59
       H5A = 0x5A                        -- Bits 31:24 of BCRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of BCRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of BCRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of BCRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of BCRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of BCRCSEED are 0x5F
       H60 = 0x60                        -- Bits 31:24 of BCRCSEED are 0x60
       H61 = 0x61                        -- Bits 31:24 of BCRCSEED are 0x61
       H62 = 0x62                        -- Bits 31:24 of BCRCSEED are 0x62
       H63 = 0x63                        -- Bits 31:24 of BCRCSEED are 0x63
       H64 = 0x64                        -- Bits 31:24 of BCRCSEED are 0x64
       H65 = 0x65                        -- Bits 31:24 of BCRCSEED are 0x65
       H66 = 0x66                        -- Bits 31:24 of BCRCSEED are 0x66
       H67 = 0x67                        -- Bits 31:24 of BCRCSEED are 0x67
       H68 = 0x68                        -- Bits 31:24 of BCRCSEED are 0x68
       H69 = 0x69                        -- Bits 31:24 of BCRCSEED are 0x69
       H6A = 0x6A                        -- Bits 31:24 of BCRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of BCRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of BCRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of BCRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of BCRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of BCRCSEED are 0x6F
       H70 = 0x70                        -- Bits 31:24 of BCRCSEED are 0x70
       H71 = 0x71                        -- Bits 31:24 of BCRCSEED are 0x71
       H72 = 0x72                        -- Bits 31:24 of BCRCSEED are 0x72
       H73 = 0x73                        -- Bits 31:24 of BCRCSEED are 0x73
       H74 = 0x74                        -- Bits 31:24 of BCRCSEED are 0x74
       H75 = 0x75                        -- Bits 31:24 of BCRCSEED are 0x75
       H76 = 0x76                        -- Bits 31:24 of BCRCSEED are 0x76
       H77 = 0x77                        -- Bits 31:24 of BCRCSEED are 0x77
       H78 = 0x78                        -- Bits 31:24 of BCRCSEED are 0x78
       H79 = 0x79                        -- Bits 31:24 of BCRCSEED are 0x79
       H7A = 0x7A                        -- Bits 31:24 of BCRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of BCRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of BCRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of BCRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of BCRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of BCRCSEED are 0x7F
       H80 = 0x80                        -- Bits 31:24 of BCRCSEED are 0x80
       H81 = 0x81                        -- Bits 31:24 of BCRCSEED are 0x81
       H82 = 0x82                        -- Bits 31:24 of BCRCSEED are 0x82
       H83 = 0x83                        -- Bits 31:24 of BCRCSEED are 0x83
       H84 = 0x84                        -- Bits 31:24 of BCRCSEED are 0x84
       H85 = 0x85                        -- Bits 31:24 of BCRCSEED are 0x85
       H86 = 0x86                        -- Bits 31:24 of BCRCSEED are 0x86
       H87 = 0x87                        -- Bits 31:24 of BCRCSEED are 0x87
       H88 = 0x88                        -- Bits 31:24 of BCRCSEED are 0x88
       H89 = 0x89                        -- Bits 31:24 of BCRCSEED are 0x89
       H8A = 0x8A                        -- Bits 31:24 of BCRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of BCRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of BCRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of BCRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of BCRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of BCRCSEED are 0x8F
       H90 = 0x90                        -- Bits 31:24 of BCRCSEED are 0x90
       H91 = 0x91                        -- Bits 31:24 of BCRCSEED are 0x91
       H92 = 0x92                        -- Bits 31:24 of BCRCSEED are 0x92
       H93 = 0x93                        -- Bits 31:24 of BCRCSEED are 0x93
       H94 = 0x94                        -- Bits 31:24 of BCRCSEED are 0x94
       H95 = 0x95                        -- Bits 31:24 of BCRCSEED are 0x95
       H96 = 0x96                        -- Bits 31:24 of BCRCSEED are 0x96
       H97 = 0x97                        -- Bits 31:24 of BCRCSEED are 0x97
       H98 = 0x98                        -- Bits 31:24 of BCRCSEED are 0x98
       H99 = 0x99                        -- Bits 31:24 of BCRCSEED are 0x99
       H9A = 0x9A                        -- Bits 31:24 of BCRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of BCRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of BCRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of BCRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of BCRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of BCRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of BCRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of BCRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of BCRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of BCRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of BCRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of BCRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of BCRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of BCRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of BCRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of BCRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of BCRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of BCRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of BCRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of BCRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of BCRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of BCRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of BCRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of BCRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of BCRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of BCRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of BCRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of BCRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of BCRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of BCRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of BCRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of BCRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of BCRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of BCRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of BCRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of BCRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of BCRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of BCRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of BCRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of BCRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of BCRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of BCRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of BCRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of BCRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of BCRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of BCRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of BCRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of BCRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of BCRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of BCRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of BCRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of BCRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of BCRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of BCRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of BCRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of BCRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of BCRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of BCRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of BCRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of BCRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of BCRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of BCRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of BCRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of BCRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of BCRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of BCRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of BCRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of BCRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of BCRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of BCRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of BCRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of BCRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of BCRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of BCRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of BCRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of BCRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of BCRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of BCRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of BCRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of BCRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of BCRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of BCRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of BCRCSEED are 0xEC
       HED = 0xED                        -- Bits 31:24 of BCRCSEED are 0xED
       HEE = 0xEE                        -- Bits 31:24 of BCRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of BCRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of BCRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of BCRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of BCRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of BCRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of BCRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of BCRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of BCRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of BCRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of BCRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of BCRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of BCRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of BCRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of BCRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of BCRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of BCRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of BCRCSEED are 0xFF
       }
--
-- CONFIG17 (0x300010)
--
pragma fuse_def BCRCSEEDU:16  0xFF {     -- Boot Sector Seed for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of BCRCSEED are 0x00
       H01 = 0x1                         -- Bits 23:16 of BCRCSEED are 0x01
       H02 = 0x2                         -- Bits 23:16 of BCRCSEED are 0x02
       H03 = 0x3                         -- Bits 23:16 of BCRCSEED are 0x03
       H04 = 0x4                         -- Bits 23:16 of BCRCSEED are 0x04
       H05 = 0x5                         -- Bits 23:16 of BCRCSEED are 0x05
       H06 = 0x6                         -- Bits 23:16 of BCRCSEED are 0x06
       H07 = 0x7                         -- Bits 23:16 of BCRCSEED are 0x07
       H08 = 0x8                         -- Bits 23:16 of BCRCSEED are 0x08
       H09 = 0x9                         -- Bits 23:16 of BCRCSEED are 0x09
       H0A = 0xA                         -- Bits 23:16 of BCRCSEED are 0x0A
       H0B = 0xB                         -- Bits 23:16 of BCRCSEED are 0x0B
       H0C = 0xC                         -- Bits 23:16 of BCRCSEED are 0x0C
       H0D = 0xD                         -- Bits 23:16 of BCRCSEED are 0x0D
       H0E = 0xE                         -- Bits 23:16 of BCRCSEED are 0x0E
       H0F = 0xF                         -- Bits 23:16 of BCRCSEED are 0x0F
       H10 = 0x10                        -- Bits 23:16 of BCRCSEED are 0x10
       H11 = 0x11                        -- Bits 23:16 of BCRCSEED are 0x11
       H12 = 0x12                        -- Bits 23:16 of BCRCSEED are 0x12
       H13 = 0x13                        -- Bits 23:16 of BCRCSEED are 0x13
       H14 = 0x14                        -- Bits 23:16 of BCRCSEED are 0x14
       H15 = 0x15                        -- Bits 23:16 of BCRCSEED are 0x15
       H16 = 0x16                        -- Bits 23:16 of BCRCSEED are 0x16
       H17 = 0x17                        -- Bits 23:16 of BCRCSEED are 0x17
       H18 = 0x18                        -- Bits 23:16 of BCRCSEED are 0x18
       H19 = 0x19                        -- Bits 23:16 of BCRCSEED are 0x19
       H1A = 0x1A                        -- Bits 23:16 of BCRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of BCRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of BCRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of BCRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of BCRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of BCRCSEED are 0x1F
       H20 = 0x20                        -- Bits 23:16 of BCRCSEED are 0x20
       H21 = 0x21                        -- Bits 23:16 of BCRCSEED are 0x21
       H22 = 0x22                        -- Bits 23:16 of BCRCSEED are 0x22
       H23 = 0x23                        -- Bits 23:16 of BCRCSEED are 0x23
       H24 = 0x24                        -- Bits 23:16 of BCRCSEED are 0x24
       H25 = 0x25                        -- Bits 23:16 of BCRCSEED are 0x25
       H26 = 0x26                        -- Bits 23:16 of BCRCSEED are 0x26
       H27 = 0x27                        -- Bits 23:16 of BCRCSEED are 0x27
       H28 = 0x28                        -- Bits 23:16 of BCRCSEED are 0x28
       H29 = 0x29                        -- Bits 23:16 of BCRCSEED are 0x29
       H2A = 0x2A                        -- Bits 23:16 of BCRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of BCRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of BCRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of BCRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of BCRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of BCRCSEED are 0x2F
       H30 = 0x30                        -- Bits 23:16 of BCRCSEED are 0x30
       H31 = 0x31                        -- Bits 23:16 of BCRCSEED are 0x31
       H32 = 0x32                        -- Bits 23:16 of BCRCSEED are 0x32
       H33 = 0x33                        -- Bits 23:16 of BCRCSEED are 0x33
       H34 = 0x34                        -- Bits 23:16 of BCRCSEED are 0x34
       H35 = 0x35                        -- Bits 23:16 of BCRCSEED are 0x35
       H36 = 0x36                        -- Bits 23:16 of BCRCSEED are 0x36
       H37 = 0x37                        -- Bits 23:16 of BCRCSEED are 0x37
       H38 = 0x38                        -- Bits 23:16 of BCRCSEED are 0x38
       H39 = 0x39                        -- Bits 23:16 of BCRCSEED are 0x39
       H3A = 0x3A                        -- Bits 23:16 of BCRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of BCRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of BCRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of BCRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of BCRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of BCRCSEED are 0x3F
       H40 = 0x40                        -- Bits 23:16 of BCRCSEED are 0x40
       H41 = 0x41                        -- Bits 23:16 of BCRCSEED are 0x41
       H42 = 0x42                        -- Bits 23:16 of BCRCSEED are 0x42
       H43 = 0x43                        -- Bits 23:16 of BCRCSEED are 0x43
       H44 = 0x44                        -- Bits 23:16 of BCRCSEED are 0x44
       H45 = 0x45                        -- Bits 23:16 of BCRCSEED are 0x45
       H46 = 0x46                        -- Bits 23:16 of BCRCSEED are 0x46
       H47 = 0x47                        -- Bits 23:16 of BCRCSEED are 0x47
       H48 = 0x48                        -- Bits 23:16 of BCRCSEED are 0x48
       H49 = 0x49                        -- Bits 23:16 of BCRCSEED are 0x49
       H4A = 0x4A                        -- Bits 23:16 of BCRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of BCRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of BCRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of BCRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of BCRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of BCRCSEED are 0x4F
       H50 = 0x50                        -- Bits 23:16 of BCRCSEED are 0x50
       H51 = 0x51                        -- Bits 23:16 of BCRCSEED are 0x51
       H52 = 0x52                        -- Bits 23:16 of BCRCSEED are 0x52
       H53 = 0x53                        -- Bits 23:16 of BCRCSEED are 0x53
       H54 = 0x54                        -- Bits 23:16 of BCRCSEED are 0x54
       H55 = 0x55                        -- Bits 23:16 of BCRCSEED are 0x55
       H56 = 0x56                        -- Bits 23:16 of BCRCSEED are 0x56
       H57 = 0x57                        -- Bits 23:16 of BCRCSEED are 0x57
       H58 = 0x58                        -- Bits 23:16 of BCRCSEED are 0x58
       H59 = 0x59                        -- Bits 23:16 of BCRCSEED are 0x59
       H5A = 0x5A                        -- Bits 23:16 of BCRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of BCRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of BCRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of BCRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of BCRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of BCRCSEED are 0x5F
       H60 = 0x60                        -- Bits 23:16 of BCRCSEED are 0x60
       H61 = 0x61                        -- Bits 23:16 of BCRCSEED are 0x61
       H62 = 0x62                        -- Bits 23:16 of BCRCSEED are 0x62
       H63 = 0x63                        -- Bits 23:16 of BCRCSEED are 0x63
       H64 = 0x64                        -- Bits 23:16 of BCRCSEED are 0x64
       H65 = 0x65                        -- Bits 23:16 of BCRCSEED are 0x65
       H66 = 0x66                        -- Bits 23:16 of BCRCSEED are 0x66
       H67 = 0x67                        -- Bits 23:16 of BCRCSEED are 0x67
       H68 = 0x68                        -- Bits 23:16 of BCRCSEED are 0x68
       H69 = 0x69                        -- Bits 23:16 of BCRCSEED are 0x69
       H6A = 0x6A                        -- Bits 23:16 of BCRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of BCRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of BCRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of BCRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of BCRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of BCRCSEED are 0x6F
       H70 = 0x70                        -- Bits 23:16 of BCRCSEED are 0x70
       H71 = 0x71                        -- Bits 23:16 of BCRCSEED are 0x71
       H72 = 0x72                        -- Bits 23:16 of BCRCSEED are 0x72
       H73 = 0x73                        -- Bits 23:16 of BCRCSEED are 0x73
       H74 = 0x74                        -- Bits 23:16 of BCRCSEED are 0x74
       H75 = 0x75                        -- Bits 23:16 of BCRCSEED are 0x75
       H76 = 0x76                        -- Bits 23:16 of BCRCSEED are 0x76
       H77 = 0x77                        -- Bits 23:16 of BCRCSEED are 0x77
       H78 = 0x78                        -- Bits 23:16 of BCRCSEED are 0x78
       H79 = 0x79                        -- Bits 23:16 of BCRCSEED are 0x79
       H7A = 0x7A                        -- Bits 23:16 of BCRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of BCRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of BCRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of BCRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of BCRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of BCRCSEED are 0x7F
       H80 = 0x80                        -- Bits 23:16 of BCRCSEED are 0x80
       H81 = 0x81                        -- Bits 23:16 of BCRCSEED are 0x81
       H82 = 0x82                        -- Bits 23:16 of BCRCSEED are 0x82
       H83 = 0x83                        -- Bits 23:16 of BCRCSEED are 0x83
       H84 = 0x84                        -- Bits 23:16 of BCRCSEED are 0x84
       H85 = 0x85                        -- Bits 23:16 of BCRCSEED are 0x85
       H86 = 0x86                        -- Bits 23:16 of BCRCSEED are 0x86
       H87 = 0x87                        -- Bits 23:16 of BCRCSEED are 0x87
       H88 = 0x88                        -- Bits 23:16 of BCRCSEED are 0x88
       H89 = 0x89                        -- Bits 23:16 of BCRCSEED are 0x89
       H8A = 0x8A                        -- Bits 23:16 of BCRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of BCRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of BCRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of BCRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of BCRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of BCRCSEED are 0x8F
       H90 = 0x90                        -- Bits 23:16 of BCRCSEED are 0x90
       H91 = 0x91                        -- Bits 23:16 of BCRCSEED are 0x91
       H92 = 0x92                        -- Bits 23:16 of BCRCSEED are 0x92
       H93 = 0x93                        -- Bits 23:16 of BCRCSEED are 0x93
       H94 = 0x94                        -- Bits 23:16 of BCRCSEED are 0x94
       H95 = 0x95                        -- Bits 23:16 of BCRCSEED are 0x95
       H96 = 0x96                        -- Bits 23:16 of BCRCSEED are 0x96
       H97 = 0x97                        -- Bits 23:16 of BCRCSEED are 0x97
       H98 = 0x98                        -- Bits 23:16 of BCRCSEED are 0x98
       H99 = 0x99                        -- Bits 23:16 of BCRCSEED are 0x99
       H9A = 0x9A                        -- Bits 23:16 of BCRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of BCRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of BCRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of BCRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of BCRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of BCRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of BCRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of BCRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of BCRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of BCRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of BCRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of BCRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of BCRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of BCRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of BCRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of BCRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of BCRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of BCRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of BCRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of BCRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of BCRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of BCRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of BCRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of BCRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of BCRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of BCRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of BCRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of BCRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of BCRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of BCRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of BCRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of BCRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of BCRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of BCRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of BCRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of BCRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of BCRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of BCRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of BCRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of BCRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of BCRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of BCRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of BCRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of BCRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of BCRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of BCRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of BCRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of BCRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of BCRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of BCRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of BCRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of BCRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of BCRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of BCRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of BCRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of BCRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of BCRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of BCRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of BCRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of BCRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of BCRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of BCRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of BCRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of BCRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of BCRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of BCRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of BCRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of BCRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of BCRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of BCRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of BCRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of BCRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of BCRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of BCRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of BCRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of BCRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of BCRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of BCRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of BCRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of BCRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of BCRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of BCRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of BCRCSEED are 0xEC
       HED = 0xED                        -- Bits 23:16 of BCRCSEED are 0xED
       HEE = 0xEE                        -- Bits 23:16 of BCRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of BCRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of BCRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of BCRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of BCRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of BCRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of BCRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of BCRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of BCRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of BCRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of BCRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of BCRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of BCRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of BCRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of BCRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of BCRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of BCRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of BCRCSEED are 0xFF
       }
--
-- CONFIG18 (0x300011)
--
pragma fuse_def BCRCSEEDH:17  0xFF {     -- Boot Sector Seed for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of BCRCSEED are 0x00
       H01 = 0x1                         -- Bits 15:8 of BCRCSEED are 0x01
       H02 = 0x2                         -- Bits 15:8 of BCRCSEED are 0x02
       H03 = 0x3                         -- Bits 15:8 of BCRCSEED are 0x03
       H04 = 0x4                         -- Bits 15:8 of BCRCSEED are 0x04
       H05 = 0x5                         -- Bits 15:8 of BCRCSEED are 0x05
       H06 = 0x6                         -- Bits 15:8 of BCRCSEED are 0x06
       H07 = 0x7                         -- Bits 15:8 of BCRCSEED are 0x07
       H08 = 0x8                         -- Bits 15:8 of BCRCSEED are 0x08
       H09 = 0x9                         -- Bits 15:8 of BCRCSEED are 0x09
       H0A = 0xA                         -- Bits 15:8 of BCRCSEED are 0x0A
       H0B = 0xB                         -- Bits 15:8 of BCRCSEED are 0x0B
       H0C = 0xC                         -- Bits 15:8 of BCRCSEED are 0x0C
       H0D = 0xD                         -- Bits 15:8 of BCRCSEED are 0x0D
       H0E = 0xE                         -- Bits 15:8 of BCRCSEED are 0x0E
       H0F = 0xF                         -- Bits 15:8 of BCRCSEED are 0x0F
       H10 = 0x10                        -- Bits 15:8 of BCRCSEED are 0x10
       H11 = 0x11                        -- Bits 15:8 of BCRCSEED are 0x11
       H12 = 0x12                        -- Bits 15:8 of BCRCSEED are 0x12
       H13 = 0x13                        -- Bits 15:8 of BCRCSEED are 0x13
       H14 = 0x14                        -- Bits 15:8 of BCRCSEED are 0x14
       H15 = 0x15                        -- Bits 15:8 of BCRCSEED are 0x15
       H16 = 0x16                        -- Bits 15:8 of BCRCSEED are 0x16
       H17 = 0x17                        -- Bits 15:8 of BCRCSEED are 0x17
       H18 = 0x18                        -- Bits 15:8 of BCRCSEED are 0x18
       H19 = 0x19                        -- Bits 15:8 of BCRCSEED are 0x19
       H1A = 0x1A                        -- Bits 15:8 of BCRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of BCRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of BCRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of BCRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of BCRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of BCRCSEED are 0x1F
       H20 = 0x20                        -- Bits 15:8 of BCRCSEED are 0x20
       H21 = 0x21                        -- Bits 15:8 of BCRCSEED are 0x21
       H22 = 0x22                        -- Bits 15:8 of BCRCSEED are 0x22
       H23 = 0x23                        -- Bits 15:8 of BCRCSEED are 0x23
       H24 = 0x24                        -- Bits 15:8 of BCRCSEED are 0x24
       H25 = 0x25                        -- Bits 15:8 of BCRCSEED are 0x25
       H26 = 0x26                        -- Bits 15:8 of BCRCSEED are 0x26
       H27 = 0x27                        -- Bits 15:8 of BCRCSEED are 0x27
       H28 = 0x28                        -- Bits 15:8 of BCRCSEED are 0x28
       H29 = 0x29                        -- Bits 15:8 of BCRCSEED are 0x29
       H2A = 0x2A                        -- Bits 15:8 of BCRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of BCRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of BCRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of BCRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of BCRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of BCRCSEED are 0x2F
       H30 = 0x30                        -- Bits 15:8 of BCRCSEED are 0x30
       H31 = 0x31                        -- Bits 15:8 of BCRCSEED are 0x31
       H32 = 0x32                        -- Bits 15:8 of BCRCSEED are 0x32
       H33 = 0x33                        -- Bits 15:8 of BCRCSEED are 0x33
       H34 = 0x34                        -- Bits 15:8 of BCRCSEED are 0x34
       H35 = 0x35                        -- Bits 15:8 of BCRCSEED are 0x35
       H36 = 0x36                        -- Bits 15:8 of BCRCSEED are 0x36
       H37 = 0x37                        -- Bits 15:8 of BCRCSEED are 0x37
       H38 = 0x38                        -- Bits 15:8 of BCRCSEED are 0x38
       H39 = 0x39                        -- Bits 15:8 of BCRCSEED are 0x39
       H3A = 0x3A                        -- Bits 15:8 of BCRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of BCRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of BCRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of BCRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of BCRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of BCRCSEED are 0x3F
       H40 = 0x40                        -- Bits 15:8 of BCRCSEED are 0x40
       H41 = 0x41                        -- Bits 15:8 of BCRCSEED are 0x41
       H42 = 0x42                        -- Bits 15:8 of BCRCSEED are 0x42
       H43 = 0x43                        -- Bits 15:8 of BCRCSEED are 0x43
       H44 = 0x44                        -- Bits 15:8 of BCRCSEED are 0x44
       H45 = 0x45                        -- Bits 15:8 of BCRCSEED are 0x45
       H46 = 0x46                        -- Bits 15:8 of BCRCSEED are 0x46
       H47 = 0x47                        -- Bits 15:8 of BCRCSEED are 0x47
       H48 = 0x48                        -- Bits 15:8 of BCRCSEED are 0x48
       H49 = 0x49                        -- Bits 15:8 of BCRCSEED are 0x49
       H4A = 0x4A                        -- Bits 15:8 of BCRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of BCRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of BCRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of BCRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of BCRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of BCRCSEED are 0x4F
       H50 = 0x50                        -- Bits 15:8 of BCRCSEED are 0x50
       H51 = 0x51                        -- Bits 15:8 of BCRCSEED are 0x51
       H52 = 0x52                        -- Bits 15:8 of BCRCSEED are 0x52
       H53 = 0x53                        -- Bits 15:8 of BCRCSEED are 0x53
       H54 = 0x54                        -- Bits 15:8 of BCRCSEED are 0x54
       H55 = 0x55                        -- Bits 15:8 of BCRCSEED are 0x55
       H56 = 0x56                        -- Bits 15:8 of BCRCSEED are 0x56
       H57 = 0x57                        -- Bits 15:8 of BCRCSEED are 0x57
       H58 = 0x58                        -- Bits 15:8 of BCRCSEED are 0x58
       H59 = 0x59                        -- Bits 15:8 of BCRCSEED are 0x59
       H5A = 0x5A                        -- Bits 15:8 of BCRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of BCRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of BCRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of BCRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of BCRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of BCRCSEED are 0x5F
       H60 = 0x60                        -- Bits 15:8 of BCRCSEED are 0x60
       H61 = 0x61                        -- Bits 15:8 of BCRCSEED are 0x61
       H62 = 0x62                        -- Bits 15:8 of BCRCSEED are 0x62
       H63 = 0x63                        -- Bits 15:8 of BCRCSEED are 0x63
       H64 = 0x64                        -- Bits 15:8 of BCRCSEED are 0x64
       H65 = 0x65                        -- Bits 15:8 of BCRCSEED are 0x65
       H66 = 0x66                        -- Bits 15:8 of BCRCSEED are 0x66
       H67 = 0x67                        -- Bits 15:8 of BCRCSEED are 0x67
       H68 = 0x68                        -- Bits 15:8 of BCRCSEED are 0x68
       H69 = 0x69                        -- Bits 15:8 of BCRCSEED are 0x69
       H6A = 0x6A                        -- Bits 15:8 of BCRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of BCRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of BCRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of BCRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of BCRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of BCRCSEED are 0x6F
       H70 = 0x70                        -- Bits 15:8 of BCRCSEED are 0x70
       H71 = 0x71                        -- Bits 15:8 of BCRCSEED are 0x71
       H72 = 0x72                        -- Bits 15:8 of BCRCSEED are 0x72
       H73 = 0x73                        -- Bits 15:8 of BCRCSEED are 0x73
       H74 = 0x74                        -- Bits 15:8 of BCRCSEED are 0x74
       H75 = 0x75                        -- Bits 15:8 of BCRCSEED are 0x75
       H76 = 0x76                        -- Bits 15:8 of BCRCSEED are 0x76
       H77 = 0x77                        -- Bits 15:8 of BCRCSEED are 0x77
       H78 = 0x78                        -- Bits 15:8 of BCRCSEED are 0x78
       H79 = 0x79                        -- Bits 15:8 of BCRCSEED are 0x79
       H7A = 0x7A                        -- Bits 15:8 of BCRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of BCRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of BCRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of BCRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of BCRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of BCRCSEED are 0x7F
       H80 = 0x80                        -- Bits 15:8 of BCRCSEED are 0x80
       H81 = 0x81                        -- Bits 15:8 of BCRCSEED are 0x81
       H82 = 0x82                        -- Bits 15:8 of BCRCSEED are 0x82
       H83 = 0x83                        -- Bits 15:8 of BCRCSEED are 0x83
       H84 = 0x84                        -- Bits 15:8 of BCRCSEED are 0x84
       H85 = 0x85                        -- Bits 15:8 of BCRCSEED are 0x85
       H86 = 0x86                        -- Bits 15:8 of BCRCSEED are 0x86
       H87 = 0x87                        -- Bits 15:8 of BCRCSEED are 0x87
       H88 = 0x88                        -- Bits 15:8 of BCRCSEED are 0x88
       H89 = 0x89                        -- Bits 15:8 of BCRCSEED are 0x89
       H8A = 0x8A                        -- Bits 15:8 of BCRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of BCRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of BCRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of BCRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of BCRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of BCRCSEED are 0x8F
       H90 = 0x90                        -- Bits 15:8 of BCRCSEED are 0x90
       H91 = 0x91                        -- Bits 15:8 of BCRCSEED are 0x91
       H92 = 0x92                        -- Bits 15:8 of BCRCSEED are 0x92
       H93 = 0x93                        -- Bits 15:8 of BCRCSEED are 0x93
       H94 = 0x94                        -- Bits 15:8 of BCRCSEED are 0x94
       H95 = 0x95                        -- Bits 15:8 of BCRCSEED are 0x95
       H96 = 0x96                        -- Bits 15:8 of BCRCSEED are 0x96
       H97 = 0x97                        -- Bits 15:8 of BCRCSEED are 0x97
       H98 = 0x98                        -- Bits 15:8 of BCRCSEED are 0x98
       H99 = 0x99                        -- Bits 15:8 of BCRCSEED are 0x99
       H9A = 0x9A                        -- Bits 15:8 of BCRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of BCRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of BCRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of BCRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of BCRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of BCRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of BCRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of BCRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of BCRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of BCRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of BCRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of BCRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of BCRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of BCRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of BCRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of BCRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of BCRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of BCRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of BCRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of BCRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of BCRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of BCRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of BCRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of BCRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of BCRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of BCRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of BCRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of BCRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of BCRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of BCRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of BCRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of BCRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of BCRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of BCRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of BCRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of BCRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of BCRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of BCRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of BCRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of BCRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of BCRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of BCRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of BCRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of BCRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of BCRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of BCRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of BCRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of BCRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of BCRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of BCRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of BCRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of BCRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of BCRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of BCRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of BCRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of BCRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of BCRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of BCRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of BCRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of BCRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of BCRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of BCRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of BCRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of BCRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of BCRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of BCRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of BCRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of BCRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of BCRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of BCRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of BCRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of BCRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of BCRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of BCRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of BCRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of BCRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of BCRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of BCRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of BCRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of BCRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of BCRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of BCRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of BCRCSEED are 0xEC
       HED = 0xED                        -- Bits 15:8 of BCRCSEED are 0xED
       HEE = 0xEE                        -- Bits 15:8 of BCRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of BCRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of BCRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of BCRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of BCRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of BCRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of BCRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of BCRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of BCRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of BCRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of BCRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of BCRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of BCRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of BCRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of BCRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of BCRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of BCRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of BCRCSEED are 0xFF
       }
--
-- CONFIG19 (0x300012)
--
pragma fuse_def BCRCSEEDL:18  0xFF {     -- Boot Sector Seed for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of BCRCSEED are 0x00
       H01 = 0x1                         -- Bits 7:0 of BCRCSEED are 0x01
       H02 = 0x2                         -- Bits 7:0 of BCRCSEED are 0x02
       H03 = 0x3                         -- Bits 7:0 of BCRCSEED are 0x03
       H04 = 0x4                         -- Bits 7:0 of BCRCSEED are 0x04
       H05 = 0x5                         -- Bits 7:0 of BCRCSEED are 0x05
       H06 = 0x6                         -- Bits 7:0 of BCRCSEED are 0x06
       H07 = 0x7                         -- Bits 7:0 of BCRCSEED are 0x07
       H08 = 0x8                         -- Bits 7:0 of BCRCSEED are 0x08
       H09 = 0x9                         -- Bits 7:0 of BCRCSEED are 0x09
       H0A = 0xA                         -- Bits 7:0 of BCRCSEED are 0x0A
       H0B = 0xB                         -- Bits 7:0 of BCRCSEED are 0x0B
       H0C = 0xC                         -- Bits 7:0 of BCRCSEED are 0x0C
       H0D = 0xD                         -- Bits 7:0 of BCRCSEED are 0x0D
       H0E = 0xE                         -- Bits 7:0 of BCRCSEED are 0x0E
       H0F = 0xF                         -- Bits 7:0 of BCRCSEED are 0x0F
       H10 = 0x10                        -- Bits 7:0 of BCRCSEED are 0x10
       H11 = 0x11                        -- Bits 7:0 of BCRCSEED are 0x11
       H12 = 0x12                        -- Bits 7:0 of BCRCSEED are 0x12
       H13 = 0x13                        -- Bits 7:0 of BCRCSEED are 0x13
       H14 = 0x14                        -- Bits 7:0 of BCRCSEED are 0x14
       H15 = 0x15                        -- Bits 7:0 of BCRCSEED are 0x15
       H16 = 0x16                        -- Bits 7:0 of BCRCSEED are 0x16
       H17 = 0x17                        -- Bits 7:0 of BCRCSEED are 0x17
       H18 = 0x18                        -- Bits 7:0 of BCRCSEED are 0x18
       H19 = 0x19                        -- Bits 7:0 of BCRCSEED are 0x19
       H1A = 0x1A                        -- Bits 7:0 of BCRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of BCRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of BCRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of BCRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of BCRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of BCRCSEED are 0x1F
       H20 = 0x20                        -- Bits 7:0 of BCRCSEED are 0x20
       H21 = 0x21                        -- Bits 7:0 of BCRCSEED are 0x21
       H22 = 0x22                        -- Bits 7:0 of BCRCSEED are 0x22
       H23 = 0x23                        -- Bits 7:0 of BCRCSEED are 0x23
       H24 = 0x24                        -- Bits 7:0 of BCRCSEED are 0x24
       H25 = 0x25                        -- Bits 7:0 of BCRCSEED are 0x25
       H26 = 0x26                        -- Bits 7:0 of BCRCSEED are 0x26
       H27 = 0x27                        -- Bits 7:0 of BCRCSEED are 0x27
       H28 = 0x28                        -- Bits 7:0 of BCRCSEED are 0x28
       H29 = 0x29                        -- Bits 7:0 of BCRCSEED are 0x29
       H2A = 0x2A                        -- Bits 7:0 of BCRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of BCRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of BCRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of BCRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of BCRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of BCRCSEED are 0x2F
       H30 = 0x30                        -- Bits 7:0 of BCRCSEED are 0x30
       H31 = 0x31                        -- Bits 7:0 of BCRCSEED are 0x31
       H32 = 0x32                        -- Bits 7:0 of BCRCSEED are 0x32
       H33 = 0x33                        -- Bits 7:0 of BCRCSEED are 0x33
       H34 = 0x34                        -- Bits 7:0 of BCRCSEED are 0x34
       H35 = 0x35                        -- Bits 7:0 of BCRCSEED are 0x35
       H36 = 0x36                        -- Bits 7:0 of BCRCSEED are 0x36
       H37 = 0x37                        -- Bits 7:0 of BCRCSEED are 0x37
       H38 = 0x38                        -- Bits 7:0 of BCRCSEED are 0x38
       H39 = 0x39                        -- Bits 7:0 of BCRCSEED are 0x39
       H3A = 0x3A                        -- Bits 7:0 of BCRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of BCRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of BCRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of BCRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of BCRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of BCRCSEED are 0x3F
       H40 = 0x40                        -- Bits 7:0 of BCRCSEED are 0x40
       H41 = 0x41                        -- Bits 7:0 of BCRCSEED are 0x41
       H42 = 0x42                        -- Bits 7:0 of BCRCSEED are 0x42
       H43 = 0x43                        -- Bits 7:0 of BCRCSEED are 0x43
       H44 = 0x44                        -- Bits 7:0 of BCRCSEED are 0x44
       H45 = 0x45                        -- Bits 7:0 of BCRCSEED are 0x45
       H46 = 0x46                        -- Bits 7:0 of BCRCSEED are 0x46
       H47 = 0x47                        -- Bits 7:0 of BCRCSEED are 0x47
       H48 = 0x48                        -- Bits 7:0 of BCRCSEED are 0x48
       H49 = 0x49                        -- Bits 7:0 of BCRCSEED are 0x49
       H4A = 0x4A                        -- Bits 7:0 of BCRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of BCRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of BCRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of BCRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of BCRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of BCRCSEED are 0x4F
       H50 = 0x50                        -- Bits 7:0 of BCRCSEED are 0x50
       H51 = 0x51                        -- Bits 7:0 of BCRCSEED are 0x51
       H52 = 0x52                        -- Bits 7:0 of BCRCSEED are 0x52
       H53 = 0x53                        -- Bits 7:0 of BCRCSEED are 0x53
       H54 = 0x54                        -- Bits 7:0 of BCRCSEED are 0x54
       H55 = 0x55                        -- Bits 7:0 of BCRCSEED are 0x55
       H56 = 0x56                        -- Bits 7:0 of BCRCSEED are 0x56
       H57 = 0x57                        -- Bits 7:0 of BCRCSEED are 0x57
       H58 = 0x58                        -- Bits 7:0 of BCRCSEED are 0x58
       H59 = 0x59                        -- Bits 7:0 of BCRCSEED are 0x59
       H5A = 0x5A                        -- Bits 7:0 of BCRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of BCRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of BCRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of BCRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of BCRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of BCRCSEED are 0x5F
       H60 = 0x60                        -- Bits 7:0 of BCRCSEED are 0x60
       H61 = 0x61                        -- Bits 7:0 of BCRCSEED are 0x61
       H62 = 0x62                        -- Bits 7:0 of BCRCSEED are 0x62
       H63 = 0x63                        -- Bits 7:0 of BCRCSEED are 0x63
       H64 = 0x64                        -- Bits 7:0 of BCRCSEED are 0x64
       H65 = 0x65                        -- Bits 7:0 of BCRCSEED are 0x65
       H66 = 0x66                        -- Bits 7:0 of BCRCSEED are 0x66
       H67 = 0x67                        -- Bits 7:0 of BCRCSEED are 0x67
       H68 = 0x68                        -- Bits 7:0 of BCRCSEED are 0x68
       H69 = 0x69                        -- Bits 7:0 of BCRCSEED are 0x69
       H6A = 0x6A                        -- Bits 7:0 of BCRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of BCRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of BCRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of BCRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of BCRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of BCRCSEED are 0x6F
       H70 = 0x70                        -- Bits 7:0 of BCRCSEED are 0x70
       H71 = 0x71                        -- Bits 7:0 of BCRCSEED are 0x71
       H72 = 0x72                        -- Bits 7:0 of BCRCSEED are 0x72
       H73 = 0x73                        -- Bits 7:0 of BCRCSEED are 0x73
       H74 = 0x74                        -- Bits 7:0 of BCRCSEED are 0x74
       H75 = 0x75                        -- Bits 7:0 of BCRCSEED are 0x75
       H76 = 0x76                        -- Bits 7:0 of BCRCSEED are 0x76
       H77 = 0x77                        -- Bits 7:0 of BCRCSEED are 0x77
       H78 = 0x78                        -- Bits 7:0 of BCRCSEED are 0x78
       H79 = 0x79                        -- Bits 7:0 of BCRCSEED are 0x79
       H7A = 0x7A                        -- Bits 7:0 of BCRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of BCRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of BCRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of BCRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of BCRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of BCRCSEED are 0x7F
       H80 = 0x80                        -- Bits 7:0 of BCRCSEED are 0x80
       H81 = 0x81                        -- Bits 7:0 of BCRCSEED are 0x81
       H82 = 0x82                        -- Bits 7:0 of BCRCSEED are 0x82
       H83 = 0x83                        -- Bits 7:0 of BCRCSEED are 0x83
       H84 = 0x84                        -- Bits 7:0 of BCRCSEED are 0x84
       H85 = 0x85                        -- Bits 7:0 of BCRCSEED are 0x85
       H86 = 0x86                        -- Bits 7:0 of BCRCSEED are 0x86
       H87 = 0x87                        -- Bits 7:0 of BCRCSEED are 0x87
       H88 = 0x88                        -- Bits 7:0 of BCRCSEED are 0x88
       H89 = 0x89                        -- Bits 7:0 of BCRCSEED are 0x89
       H8A = 0x8A                        -- Bits 7:0 of BCRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of BCRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of BCRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of BCRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of BCRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of BCRCSEED are 0x8F
       H90 = 0x90                        -- Bits 7:0 of BCRCSEED are 0x90
       H91 = 0x91                        -- Bits 7:0 of BCRCSEED are 0x91
       H92 = 0x92                        -- Bits 7:0 of BCRCSEED are 0x92
       H93 = 0x93                        -- Bits 7:0 of BCRCSEED are 0x93
       H94 = 0x94                        -- Bits 7:0 of BCRCSEED are 0x94
       H95 = 0x95                        -- Bits 7:0 of BCRCSEED are 0x95
       H96 = 0x96                        -- Bits 7:0 of BCRCSEED are 0x96
       H97 = 0x97                        -- Bits 7:0 of BCRCSEED are 0x97
       H98 = 0x98                        -- Bits 7:0 of BCRCSEED are 0x98
       H99 = 0x99                        -- Bits 7:0 of BCRCSEED are 0x99
       H9A = 0x9A                        -- Bits 7:0 of BCRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of BCRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of BCRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of BCRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of BCRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of BCRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of BCRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of BCRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of BCRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of BCRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of BCRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of BCRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of BCRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of BCRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of BCRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of BCRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of BCRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of BCRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of BCRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of BCRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of BCRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of BCRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of BCRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of BCRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of BCRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of BCRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of BCRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of BCRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of BCRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of BCRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of BCRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of BCRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of BCRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of BCRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of BCRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of BCRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of BCRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of BCRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of BCRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of BCRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of BCRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of BCRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of BCRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of BCRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of BCRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of BCRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of BCRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of BCRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of BCRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of BCRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of BCRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of BCRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of BCRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of BCRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of BCRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of BCRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of BCRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of BCRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of BCRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of BCRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of BCRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of BCRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of BCRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of BCRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of BCRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of BCRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of BCRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of BCRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of BCRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of BCRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of BCRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of BCRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of BCRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of BCRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of BCRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of BCRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of BCRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of BCRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of BCRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of BCRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of BCRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of BCRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of BCRCSEED are 0xEC
       HED = 0xED                        -- Bits 7:0 of BCRCSEED are 0xED
       HEE = 0xEE                        -- Bits 7:0 of BCRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of BCRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of BCRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of BCRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of BCRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of BCRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of BCRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of BCRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of BCRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of BCRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of BCRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of BCRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of BCRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of BCRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of BCRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of BCRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of BCRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of BCRCSEED are 0xFF
       }
--
-- CONFIG20 (0x300013)
--
pragma fuse_def BCRCEREST:19  0xFF {     -- Boot Sector Expected Result for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of BCRCERES are 0x00
       H01 = 0x1                         -- Bits 31:24 of BCRCERES are 0x01
       H02 = 0x2                         -- Bits 31:24 of BCRCERES are 0x02
       H03 = 0x3                         -- Bits 31:24 of BCRCERES are 0x03
       H04 = 0x4                         -- Bits 31:24 of BCRCERES are 0x04
       H05 = 0x5                         -- Bits 31:24 of BCRCERES are 0x05
       H06 = 0x6                         -- Bits 31:24 of BCRCERES are 0x06
       H07 = 0x7                         -- Bits 31:24 of BCRCERES are 0x07
       H08 = 0x8                         -- Bits 31:24 of BCRCERES are 0x08
       H09 = 0x9                         -- Bits 31:24 of BCRCERES are 0x09
       H0A = 0xA                         -- Bits 31:24 of BCRCERES are 0x0A
       H0B = 0xB                         -- Bits 31:24 of BCRCERES are 0x0B
       H0C = 0xC                         -- Bits 31:24 of BCRCERES are 0x0C
       H0D = 0xD                         -- Bits 31:24 of BCRCERES are 0x0D
       H0E = 0xE                         -- Bits 31:24 of BCRCERES are 0x0E
       H0F = 0xF                         -- Bits 31:24 of BCRCERES are 0x0F
       H10 = 0x10                        -- Bits 31:24 of BCRCERES are 0x10
       H11 = 0x11                        -- Bits 31:24 of BCRCERES are 0x11
       H12 = 0x12                        -- Bits 31:24 of BCRCERES are 0x12
       H13 = 0x13                        -- Bits 31:24 of BCRCERES are 0x13
       H14 = 0x14                        -- Bits 31:24 of BCRCERES are 0x14
       H15 = 0x15                        -- Bits 31:24 of BCRCERES are 0x15
       H16 = 0x16                        -- Bits 31:24 of BCRCERES are 0x16
       H17 = 0x17                        -- Bits 31:24 of BCRCERES are 0x17
       H18 = 0x18                        -- Bits 31:24 of BCRCERES are 0x18
       H19 = 0x19                        -- Bits 31:24 of BCRCERES are 0x19
       H1A = 0x1A                        -- Bits 31:24 of BCRCERES are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of BCRCERES are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of BCRCERES are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of BCRCERES are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of BCRCERES are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of BCRCERES are 0x1F
       H20 = 0x20                        -- Bits 31:24 of BCRCERES are 0x20
       H21 = 0x21                        -- Bits 31:24 of BCRCERES are 0x21
       H22 = 0x22                        -- Bits 31:24 of BCRCERES are 0x22
       H23 = 0x23                        -- Bits 31:24 of BCRCERES are 0x23
       H24 = 0x24                        -- Bits 31:24 of BCRCERES are 0x24
       H25 = 0x25                        -- Bits 31:24 of BCRCERES are 0x25
       H26 = 0x26                        -- Bits 31:24 of BCRCERES are 0x26
       H27 = 0x27                        -- Bits 31:24 of BCRCERES are 0x27
       H28 = 0x28                        -- Bits 31:24 of BCRCERES are 0x28
       H29 = 0x29                        -- Bits 31:24 of BCRCERES are 0x29
       H2A = 0x2A                        -- Bits 31:24 of BCRCERES are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of BCRCERES are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of BCRCERES are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of BCRCERES are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of BCRCERES are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of BCRCERES are 0x2F
       H30 = 0x30                        -- Bits 31:24 of BCRCERES are 0x30
       H31 = 0x31                        -- Bits 31:24 of BCRCERES are 0x31
       H32 = 0x32                        -- Bits 31:24 of BCRCERES are 0x32
       H33 = 0x33                        -- Bits 31:24 of BCRCERES are 0x33
       H34 = 0x34                        -- Bits 31:24 of BCRCERES are 0x34
       H35 = 0x35                        -- Bits 31:24 of BCRCERES are 0x35
       H36 = 0x36                        -- Bits 31:24 of BCRCERES are 0x36
       H37 = 0x37                        -- Bits 31:24 of BCRCERES are 0x37
       H38 = 0x38                        -- Bits 31:24 of BCRCERES are 0x38
       H39 = 0x39                        -- Bits 31:24 of BCRCERES are 0x39
       H3A = 0x3A                        -- Bits 31:24 of BCRCERES are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of BCRCERES are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of BCRCERES are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of BCRCERES are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of BCRCERES are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of BCRCERES are 0x3F
       H40 = 0x40                        -- Bits 31:24 of BCRCERES are 0x40
       H41 = 0x41                        -- Bits 31:24 of BCRCERES are 0x41
       H42 = 0x42                        -- Bits 31:24 of BCRCERES are 0x42
       H43 = 0x43                        -- Bits 31:24 of BCRCERES are 0x43
       H44 = 0x44                        -- Bits 31:24 of BCRCERES are 0x44
       H45 = 0x45                        -- Bits 31:24 of BCRCERES are 0x45
       H46 = 0x46                        -- Bits 31:24 of BCRCERES are 0x46
       H47 = 0x47                        -- Bits 31:24 of BCRCERES are 0x47
       H48 = 0x48                        -- Bits 31:24 of BCRCERES are 0x48
       H49 = 0x49                        -- Bits 31:24 of BCRCERES are 0x49
       H4A = 0x4A                        -- Bits 31:24 of BCRCERES are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of BCRCERES are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of BCRCERES are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of BCRCERES are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of BCRCERES are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of BCRCERES are 0x4F
       H50 = 0x50                        -- Bits 31:24 of BCRCERES are 0x50
       H51 = 0x51                        -- Bits 31:24 of BCRCERES are 0x51
       H52 = 0x52                        -- Bits 31:24 of BCRCERES are 0x52
       H53 = 0x53                        -- Bits 31:24 of BCRCERES are 0x53
       H54 = 0x54                        -- Bits 31:24 of BCRCERES are 0x54
       H55 = 0x55                        -- Bits 31:24 of BCRCERES are 0x55
       H56 = 0x56                        -- Bits 31:24 of BCRCERES are 0x56
       H57 = 0x57                        -- Bits 31:24 of BCRCERES are 0x57
       H58 = 0x58                        -- Bits 31:24 of BCRCERES are 0x58
       H59 = 0x59                        -- Bits 31:24 of BCRCERES are 0x59
       H5A = 0x5A                        -- Bits 31:24 of BCRCERES are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of BCRCERES are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of BCRCERES are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of BCRCERES are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of BCRCERES are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of BCRCERES are 0x5F
       H60 = 0x60                        -- Bits 31:24 of BCRCERES are 0x60
       H61 = 0x61                        -- Bits 31:24 of BCRCERES are 0x61
       H62 = 0x62                        -- Bits 31:24 of BCRCERES are 0x62
       H63 = 0x63                        -- Bits 31:24 of BCRCERES are 0x63
       H64 = 0x64                        -- Bits 31:24 of BCRCERES are 0x64
       H65 = 0x65                        -- Bits 31:24 of BCRCERES are 0x65
       H66 = 0x66                        -- Bits 31:24 of BCRCERES are 0x66
       H67 = 0x67                        -- Bits 31:24 of BCRCERES are 0x67
       H68 = 0x68                        -- Bits 31:24 of BCRCERES are 0x68
       H69 = 0x69                        -- Bits 31:24 of BCRCERES are 0x69
       H6A = 0x6A                        -- Bits 31:24 of BCRCERES are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of BCRCERES are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of BCRCERES are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of BCRCERES are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of BCRCERES are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of BCRCERES are 0x6F
       H70 = 0x70                        -- Bits 31:24 of BCRCERES are 0x70
       H71 = 0x71                        -- Bits 31:24 of BCRCERES are 0x71
       H72 = 0x72                        -- Bits 31:24 of BCRCERES are 0x72
       H73 = 0x73                        -- Bits 31:24 of BCRCERES are 0x73
       H74 = 0x74                        -- Bits 31:24 of BCRCERES are 0x74
       H75 = 0x75                        -- Bits 31:24 of BCRCERES are 0x75
       H76 = 0x76                        -- Bits 31:24 of BCRCERES are 0x76
       H77 = 0x77                        -- Bits 31:24 of BCRCERES are 0x77
       H78 = 0x78                        -- Bits 31:24 of BCRCERES are 0x78
       H79 = 0x79                        -- Bits 31:24 of BCRCERES are 0x79
       H7A = 0x7A                        -- Bits 31:24 of BCRCERES are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of BCRCERES are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of BCRCERES are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of BCRCERES are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of BCRCERES are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of BCRCERES are 0x7F
       H80 = 0x80                        -- Bits 31:24 of BCRCERES are 0x80
       H81 = 0x81                        -- Bits 31:24 of BCRCERES are 0x81
       H82 = 0x82                        -- Bits 31:24 of BCRCERES are 0x82
       H83 = 0x83                        -- Bits 31:24 of BCRCERES are 0x83
       H84 = 0x84                        -- Bits 31:24 of BCRCERES are 0x84
       H85 = 0x85                        -- Bits 31:24 of BCRCERES are 0x85
       H86 = 0x86                        -- Bits 31:24 of BCRCERES are 0x86
       H87 = 0x87                        -- Bits 31:24 of BCRCERES are 0x87
       H88 = 0x88                        -- Bits 31:24 of BCRCERES are 0x88
       H89 = 0x89                        -- Bits 31:24 of BCRCERES are 0x89
       H8A = 0x8A                        -- Bits 31:24 of BCRCERES are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of BCRCERES are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of BCRCERES are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of BCRCERES are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of BCRCERES are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of BCRCERES are 0x8F
       H90 = 0x90                        -- Bits 31:24 of BCRCERES are 0x90
       H91 = 0x91                        -- Bits 31:24 of BCRCERES are 0x91
       H92 = 0x92                        -- Bits 31:24 of BCRCERES are 0x92
       H93 = 0x93                        -- Bits 31:24 of BCRCERES are 0x93
       H94 = 0x94                        -- Bits 31:24 of BCRCERES are 0x94
       H95 = 0x95                        -- Bits 31:24 of BCRCERES are 0x95
       H96 = 0x96                        -- Bits 31:24 of BCRCERES are 0x96
       H97 = 0x97                        -- Bits 31:24 of BCRCERES are 0x97
       H98 = 0x98                        -- Bits 31:24 of BCRCERES are 0x98
       H99 = 0x99                        -- Bits 31:24 of BCRCERES are 0x99
       H9A = 0x9A                        -- Bits 31:24 of BCRCERES are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of BCRCERES are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of BCRCERES are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of BCRCERES are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of BCRCERES are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of BCRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of BCRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of BCRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of BCRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of BCRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of BCRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of BCRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of BCRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of BCRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of BCRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of BCRCERES are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of BCRCERES are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of BCRCERES are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of BCRCERES are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of BCRCERES are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of BCRCERES are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of BCRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of BCRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of BCRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of BCRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of BCRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of BCRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of BCRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of BCRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of BCRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of BCRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of BCRCERES are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of BCRCERES are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of BCRCERES are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of BCRCERES are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of BCRCERES are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of BCRCERES are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of BCRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of BCRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of BCRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of BCRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of BCRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of BCRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of BCRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of BCRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of BCRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of BCRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of BCRCERES are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of BCRCERES are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of BCRCERES are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of BCRCERES are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of BCRCERES are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of BCRCERES are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of BCRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of BCRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of BCRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of BCRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of BCRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of BCRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of BCRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of BCRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of BCRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of BCRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of BCRCERES are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of BCRCERES are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of BCRCERES are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of BCRCERES are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of BCRCERES are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of BCRCERES are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of BCRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of BCRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of BCRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of BCRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of BCRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of BCRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of BCRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of BCRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of BCRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of BCRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of BCRCERES are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of BCRCERES are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of BCRCERES are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of BCRCERES are 0xEC
       HED = 0xED                        -- Bits 31:24 of BCRCERES are 0xED
       HEE = 0xEE                        -- Bits 31:24 of BCRCERES are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of BCRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of BCRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of BCRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of BCRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of BCRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of BCRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of BCRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of BCRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of BCRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of BCRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of BCRCERES are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of BCRCERES are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of BCRCERES are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of BCRCERES are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of BCRCERES are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of BCRCERES are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of BCRCERES are 0xFF
       }
--
-- CONFIG21 (0x300014)
--
pragma fuse_def BCRCERESU:20  0xFF {     -- Boot Sector Expected Result for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of BCRCERES are 0x00
       H01 = 0x1                         -- Bits 23:16 of BCRCERES are 0x01
       H02 = 0x2                         -- Bits 23:16 of BCRCERES are 0x02
       H03 = 0x3                         -- Bits 23:16 of BCRCERES are 0x03
       H04 = 0x4                         -- Bits 23:16 of BCRCERES are 0x04
       H05 = 0x5                         -- Bits 23:16 of BCRCERES are 0x05
       H06 = 0x6                         -- Bits 23:16 of BCRCERES are 0x06
       H07 = 0x7                         -- Bits 23:16 of BCRCERES are 0x07
       H08 = 0x8                         -- Bits 23:16 of BCRCERES are 0x08
       H09 = 0x9                         -- Bits 23:16 of BCRCERES are 0x09
       H0A = 0xA                         -- Bits 23:16 of BCRCERES are 0x0A
       H0B = 0xB                         -- Bits 23:16 of BCRCERES are 0x0B
       H0C = 0xC                         -- Bits 23:16 of BCRCERES are 0x0C
       H0D = 0xD                         -- Bits 23:16 of BCRCERES are 0x0D
       H0E = 0xE                         -- Bits 23:16 of BCRCERES are 0x0E
       H0F = 0xF                         -- Bits 23:16 of BCRCERES are 0x0F
       H10 = 0x10                        -- Bits 23:16 of BCRCERES are 0x10
       H11 = 0x11                        -- Bits 23:16 of BCRCERES are 0x11
       H12 = 0x12                        -- Bits 23:16 of BCRCERES are 0x12
       H13 = 0x13                        -- Bits 23:16 of BCRCERES are 0x13
       H14 = 0x14                        -- Bits 23:16 of BCRCERES are 0x14
       H15 = 0x15                        -- Bits 23:16 of BCRCERES are 0x15
       H16 = 0x16                        -- Bits 23:16 of BCRCERES are 0x16
       H17 = 0x17                        -- Bits 23:16 of BCRCERES are 0x17
       H18 = 0x18                        -- Bits 23:16 of BCRCERES are 0x18
       H19 = 0x19                        -- Bits 23:16 of BCRCERES are 0x19
       H1A = 0x1A                        -- Bits 23:16 of BCRCERES are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of BCRCERES are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of BCRCERES are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of BCRCERES are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of BCRCERES are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of BCRCERES are 0x1F
       H20 = 0x20                        -- Bits 23:16 of BCRCERES are 0x20
       H21 = 0x21                        -- Bits 23:16 of BCRCERES are 0x21
       H22 = 0x22                        -- Bits 23:16 of BCRCERES are 0x22
       H23 = 0x23                        -- Bits 23:16 of BCRCERES are 0x23
       H24 = 0x24                        -- Bits 23:16 of BCRCERES are 0x24
       H25 = 0x25                        -- Bits 23:16 of BCRCERES are 0x25
       H26 = 0x26                        -- Bits 23:16 of BCRCERES are 0x26
       H27 = 0x27                        -- Bits 23:16 of BCRCERES are 0x27
       H28 = 0x28                        -- Bits 23:16 of BCRCERES are 0x28
       H29 = 0x29                        -- Bits 23:16 of BCRCERES are 0x29
       H2A = 0x2A                        -- Bits 23:16 of BCRCERES are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of BCRCERES are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of BCRCERES are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of BCRCERES are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of BCRCERES are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of BCRCERES are 0x2F
       H30 = 0x30                        -- Bits 23:16 of BCRCERES are 0x30
       H31 = 0x31                        -- Bits 23:16 of BCRCERES are 0x31
       H32 = 0x32                        -- Bits 23:16 of BCRCERES are 0x32
       H33 = 0x33                        -- Bits 23:16 of BCRCERES are 0x33
       H34 = 0x34                        -- Bits 23:16 of BCRCERES are 0x34
       H35 = 0x35                        -- Bits 23:16 of BCRCERES are 0x35
       H36 = 0x36                        -- Bits 23:16 of BCRCERES are 0x36
       H37 = 0x37                        -- Bits 23:16 of BCRCERES are 0x37
       H38 = 0x38                        -- Bits 23:16 of BCRCERES are 0x38
       H39 = 0x39                        -- Bits 23:16 of BCRCERES are 0x39
       H3A = 0x3A                        -- Bits 23:16 of BCRCERES are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of BCRCERES are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of BCRCERES are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of BCRCERES are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of BCRCERES are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of BCRCERES are 0x3F
       H40 = 0x40                        -- Bits 23:16 of BCRCERES are 0x40
       H41 = 0x41                        -- Bits 23:16 of BCRCERES are 0x41
       H42 = 0x42                        -- Bits 23:16 of BCRCERES are 0x42
       H43 = 0x43                        -- Bits 23:16 of BCRCERES are 0x43
       H44 = 0x44                        -- Bits 23:16 of BCRCERES are 0x44
       H45 = 0x45                        -- Bits 23:16 of BCRCERES are 0x45
       H46 = 0x46                        -- Bits 23:16 of BCRCERES are 0x46
       H47 = 0x47                        -- Bits 23:16 of BCRCERES are 0x47
       H48 = 0x48                        -- Bits 23:16 of BCRCERES are 0x48
       H49 = 0x49                        -- Bits 23:16 of BCRCERES are 0x49
       H4A = 0x4A                        -- Bits 23:16 of BCRCERES are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of BCRCERES are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of BCRCERES are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of BCRCERES are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of BCRCERES are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of BCRCERES are 0x4F
       H50 = 0x50                        -- Bits 23:16 of BCRCERES are 0x50
       H51 = 0x51                        -- Bits 23:16 of BCRCERES are 0x51
       H52 = 0x52                        -- Bits 23:16 of BCRCERES are 0x52
       H53 = 0x53                        -- Bits 23:16 of BCRCERES are 0x53
       H54 = 0x54                        -- Bits 23:16 of BCRCERES are 0x54
       H55 = 0x55                        -- Bits 23:16 of BCRCERES are 0x55
       H56 = 0x56                        -- Bits 23:16 of BCRCERES are 0x56
       H57 = 0x57                        -- Bits 23:16 of BCRCERES are 0x57
       H58 = 0x58                        -- Bits 23:16 of BCRCERES are 0x58
       H59 = 0x59                        -- Bits 23:16 of BCRCERES are 0x59
       H5A = 0x5A                        -- Bits 23:16 of BCRCERES are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of BCRCERES are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of BCRCERES are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of BCRCERES are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of BCRCERES are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of BCRCERES are 0x5F
       H60 = 0x60                        -- Bits 23:16 of BCRCERES are 0x60
       H61 = 0x61                        -- Bits 23:16 of BCRCERES are 0x61
       H62 = 0x62                        -- Bits 23:16 of BCRCERES are 0x62
       H63 = 0x63                        -- Bits 23:16 of BCRCERES are 0x63
       H64 = 0x64                        -- Bits 23:16 of BCRCERES are 0x64
       H65 = 0x65                        -- Bits 23:16 of BCRCERES are 0x65
       H66 = 0x66                        -- Bits 23:16 of BCRCERES are 0x66
       H67 = 0x67                        -- Bits 23:16 of BCRCERES are 0x67
       H68 = 0x68                        -- Bits 23:16 of BCRCERES are 0x68
       H69 = 0x69                        -- Bits 23:16 of BCRCERES are 0x69
       H6A = 0x6A                        -- Bits 23:16 of BCRCERES are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of BCRCERES are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of BCRCERES are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of BCRCERES are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of BCRCERES are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of BCRCERES are 0x6F
       H70 = 0x70                        -- Bits 23:16 of BCRCERES are 0x70
       H71 = 0x71                        -- Bits 23:16 of BCRCERES are 0x71
       H72 = 0x72                        -- Bits 23:16 of BCRCERES are 0x72
       H73 = 0x73                        -- Bits 23:16 of BCRCERES are 0x73
       H74 = 0x74                        -- Bits 23:16 of BCRCERES are 0x74
       H75 = 0x75                        -- Bits 23:16 of BCRCERES are 0x75
       H76 = 0x76                        -- Bits 23:16 of BCRCERES are 0x76
       H77 = 0x77                        -- Bits 23:16 of BCRCERES are 0x77
       H78 = 0x78                        -- Bits 23:16 of BCRCERES are 0x78
       H79 = 0x79                        -- Bits 23:16 of BCRCERES are 0x79
       H7A = 0x7A                        -- Bits 23:16 of BCRCERES are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of BCRCERES are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of BCRCERES are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of BCRCERES are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of BCRCERES are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of BCRCERES are 0x7F
       H80 = 0x80                        -- Bits 23:16 of BCRCERES are 0x80
       H81 = 0x81                        -- Bits 23:16 of BCRCERES are 0x81
       H82 = 0x82                        -- Bits 23:16 of BCRCERES are 0x82
       H83 = 0x83                        -- Bits 23:16 of BCRCERES are 0x83
       H84 = 0x84                        -- Bits 23:16 of BCRCERES are 0x84
       H85 = 0x85                        -- Bits 23:16 of BCRCERES are 0x85
       H86 = 0x86                        -- Bits 23:16 of BCRCERES are 0x86
       H87 = 0x87                        -- Bits 23:16 of BCRCERES are 0x87
       H88 = 0x88                        -- Bits 23:16 of BCRCERES are 0x88
       H89 = 0x89                        -- Bits 23:16 of BCRCERES are 0x89
       H8A = 0x8A                        -- Bits 23:16 of BCRCERES are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of BCRCERES are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of BCRCERES are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of BCRCERES are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of BCRCERES are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of BCRCERES are 0x8F
       H90 = 0x90                        -- Bits 23:16 of BCRCERES are 0x90
       H91 = 0x91                        -- Bits 23:16 of BCRCERES are 0x91
       H92 = 0x92                        -- Bits 23:16 of BCRCERES are 0x92
       H93 = 0x93                        -- Bits 23:16 of BCRCERES are 0x93
       H94 = 0x94                        -- Bits 23:16 of BCRCERES are 0x94
       H95 = 0x95                        -- Bits 23:16 of BCRCERES are 0x95
       H96 = 0x96                        -- Bits 23:16 of BCRCERES are 0x96
       H97 = 0x97                        -- Bits 23:16 of BCRCERES are 0x97
       H98 = 0x98                        -- Bits 23:16 of BCRCERES are 0x98
       H99 = 0x99                        -- Bits 23:16 of BCRCERES are 0x99
       H9A = 0x9A                        -- Bits 23:16 of BCRCERES are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of BCRCERES are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of BCRCERES are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of BCRCERES are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of BCRCERES are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of BCRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of BCRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of BCRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of BCRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of BCRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of BCRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of BCRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of BCRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of BCRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of BCRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of BCRCERES are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of BCRCERES are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of BCRCERES are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of BCRCERES are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of BCRCERES are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of BCRCERES are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of BCRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of BCRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of BCRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of BCRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of BCRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of BCRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of BCRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of BCRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of BCRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of BCRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of BCRCERES are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of BCRCERES are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of BCRCERES are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of BCRCERES are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of BCRCERES are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of BCRCERES are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of BCRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of BCRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of BCRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of BCRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of BCRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of BCRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of BCRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of BCRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of BCRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of BCRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of BCRCERES are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of BCRCERES are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of BCRCERES are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of BCRCERES are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of BCRCERES are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of BCRCERES are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of BCRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of BCRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of BCRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of BCRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of BCRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of BCRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of BCRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of BCRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of BCRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of BCRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of BCRCERES are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of BCRCERES are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of BCRCERES are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of BCRCERES are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of BCRCERES are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of BCRCERES are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of BCRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of BCRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of BCRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of BCRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of BCRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of BCRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of BCRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of BCRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of BCRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of BCRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of BCRCERES are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of BCRCERES are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of BCRCERES are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of BCRCERES are 0xEC
       HED = 0xED                        -- Bits 23:16 of BCRCERES are 0xED
       HEE = 0xEE                        -- Bits 23:16 of BCRCERES are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of BCRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of BCRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of BCRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of BCRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of BCRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of BCRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of BCRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of BCRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of BCRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of BCRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of BCRCERES are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of BCRCERES are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of BCRCERES are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of BCRCERES are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of BCRCERES are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of BCRCERES are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of BCRCERES are 0xFF
       }
--
-- CONFIG22 (0x300015)
--
pragma fuse_def BCRCERESH:21  0xFF {     -- Boot Sector Expected Result for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of BCRCERES are 0x00
       H01 = 0x1                         -- Bits 15:8 of BCRCERES are 0x01
       H02 = 0x2                         -- Bits 15:8 of BCRCERES are 0x02
       H03 = 0x3                         -- Bits 15:8 of BCRCERES are 0x03
       H04 = 0x4                         -- Bits 15:8 of BCRCERES are 0x04
       H05 = 0x5                         -- Bits 15:8 of BCRCERES are 0x05
       H06 = 0x6                         -- Bits 15:8 of BCRCERES are 0x06
       H07 = 0x7                         -- Bits 15:8 of BCRCERES are 0x07
       H08 = 0x8                         -- Bits 15:8 of BCRCERES are 0x08
       H09 = 0x9                         -- Bits 15:8 of BCRCERES are 0x09
       H0A = 0xA                         -- Bits 15:8 of BCRCERES are 0x0A
       H0B = 0xB                         -- Bits 15:8 of BCRCERES are 0x0B
       H0C = 0xC                         -- Bits 15:8 of BCRCERES are 0x0C
       H0D = 0xD                         -- Bits 15:8 of BCRCERES are 0x0D
       H0E = 0xE                         -- Bits 15:8 of BCRCERES are 0x0E
       H0F = 0xF                         -- Bits 15:8 of BCRCERES are 0x0F
       H10 = 0x10                        -- Bits 15:8 of BCRCERES are 0x10
       H11 = 0x11                        -- Bits 15:8 of BCRCERES are 0x11
       H12 = 0x12                        -- Bits 15:8 of BCRCERES are 0x12
       H13 = 0x13                        -- Bits 15:8 of BCRCERES are 0x13
       H14 = 0x14                        -- Bits 15:8 of BCRCERES are 0x14
       H15 = 0x15                        -- Bits 15:8 of BCRCERES are 0x15
       H16 = 0x16                        -- Bits 15:8 of BCRCERES are 0x16
       H17 = 0x17                        -- Bits 15:8 of BCRCERES are 0x17
       H18 = 0x18                        -- Bits 15:8 of BCRCERES are 0x18
       H19 = 0x19                        -- Bits 15:8 of BCRCERES are 0x19
       H1A = 0x1A                        -- Bits 15:8 of BCRCERES are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of BCRCERES are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of BCRCERES are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of BCRCERES are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of BCRCERES are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of BCRCERES are 0x1F
       H20 = 0x20                        -- Bits 15:8 of BCRCERES are 0x20
       H21 = 0x21                        -- Bits 15:8 of BCRCERES are 0x21
       H22 = 0x22                        -- Bits 15:8 of BCRCERES are 0x22
       H23 = 0x23                        -- Bits 15:8 of BCRCERES are 0x23
       H24 = 0x24                        -- Bits 15:8 of BCRCERES are 0x24
       H25 = 0x25                        -- Bits 15:8 of BCRCERES are 0x25
       H26 = 0x26                        -- Bits 15:8 of BCRCERES are 0x26
       H27 = 0x27                        -- Bits 15:8 of BCRCERES are 0x27
       H28 = 0x28                        -- Bits 15:8 of BCRCERES are 0x28
       H29 = 0x29                        -- Bits 15:8 of BCRCERES are 0x29
       H2A = 0x2A                        -- Bits 15:8 of BCRCERES are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of BCRCERES are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of BCRCERES are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of BCRCERES are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of BCRCERES are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of BCRCERES are 0x2F
       H30 = 0x30                        -- Bits 15:8 of BCRCERES are 0x30
       H31 = 0x31                        -- Bits 15:8 of BCRCERES are 0x31
       H32 = 0x32                        -- Bits 15:8 of BCRCERES are 0x32
       H33 = 0x33                        -- Bits 15:8 of BCRCERES are 0x33
       H34 = 0x34                        -- Bits 15:8 of BCRCERES are 0x34
       H35 = 0x35                        -- Bits 15:8 of BCRCERES are 0x35
       H36 = 0x36                        -- Bits 15:8 of BCRCERES are 0x36
       H37 = 0x37                        -- Bits 15:8 of BCRCERES are 0x37
       H38 = 0x38                        -- Bits 15:8 of BCRCERES are 0x38
       H39 = 0x39                        -- Bits 15:8 of BCRCERES are 0x39
       H3A = 0x3A                        -- Bits 15:8 of BCRCERES are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of BCRCERES are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of BCRCERES are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of BCRCERES are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of BCRCERES are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of BCRCERES are 0x3F
       H40 = 0x40                        -- Bits 15:8 of BCRCERES are 0x40
       H41 = 0x41                        -- Bits 15:8 of BCRCERES are 0x41
       H42 = 0x42                        -- Bits 15:8 of BCRCERES are 0x42
       H43 = 0x43                        -- Bits 15:8 of BCRCERES are 0x43
       H44 = 0x44                        -- Bits 15:8 of BCRCERES are 0x44
       H45 = 0x45                        -- Bits 15:8 of BCRCERES are 0x45
       H46 = 0x46                        -- Bits 15:8 of BCRCERES are 0x46
       H47 = 0x47                        -- Bits 15:8 of BCRCERES are 0x47
       H48 = 0x48                        -- Bits 15:8 of BCRCERES are 0x48
       H49 = 0x49                        -- Bits 15:8 of BCRCERES are 0x49
       H4A = 0x4A                        -- Bits 15:8 of BCRCERES are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of BCRCERES are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of BCRCERES are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of BCRCERES are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of BCRCERES are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of BCRCERES are 0x4F
       H50 = 0x50                        -- Bits 15:8 of BCRCERES are 0x50
       H51 = 0x51                        -- Bits 15:8 of BCRCERES are 0x51
       H52 = 0x52                        -- Bits 15:8 of BCRCERES are 0x52
       H53 = 0x53                        -- Bits 15:8 of BCRCERES are 0x53
       H54 = 0x54                        -- Bits 15:8 of BCRCERES are 0x54
       H55 = 0x55                        -- Bits 15:8 of BCRCERES are 0x55
       H56 = 0x56                        -- Bits 15:8 of BCRCERES are 0x56
       H57 = 0x57                        -- Bits 15:8 of BCRCERES are 0x57
       H58 = 0x58                        -- Bits 15:8 of BCRCERES are 0x58
       H59 = 0x59                        -- Bits 15:8 of BCRCERES are 0x59
       H5A = 0x5A                        -- Bits 15:8 of BCRCERES are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of BCRCERES are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of BCRCERES are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of BCRCERES are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of BCRCERES are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of BCRCERES are 0x5F
       H60 = 0x60                        -- Bits 15:8 of BCRCERES are 0x60
       H61 = 0x61                        -- Bits 15:8 of BCRCERES are 0x61
       H62 = 0x62                        -- Bits 15:8 of BCRCERES are 0x62
       H63 = 0x63                        -- Bits 15:8 of BCRCERES are 0x63
       H64 = 0x64                        -- Bits 15:8 of BCRCERES are 0x64
       H65 = 0x65                        -- Bits 15:8 of BCRCERES are 0x65
       H66 = 0x66                        -- Bits 15:8 of BCRCERES are 0x66
       H67 = 0x67                        -- Bits 15:8 of BCRCERES are 0x67
       H68 = 0x68                        -- Bits 15:8 of BCRCERES are 0x68
       H69 = 0x69                        -- Bits 15:8 of BCRCERES are 0x69
       H6A = 0x6A                        -- Bits 15:8 of BCRCERES are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of BCRCERES are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of BCRCERES are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of BCRCERES are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of BCRCERES are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of BCRCERES are 0x6F
       H70 = 0x70                        -- Bits 15:8 of BCRCERES are 0x70
       H71 = 0x71                        -- Bits 15:8 of BCRCERES are 0x71
       H72 = 0x72                        -- Bits 15:8 of BCRCERES are 0x72
       H73 = 0x73                        -- Bits 15:8 of BCRCERES are 0x73
       H74 = 0x74                        -- Bits 15:8 of BCRCERES are 0x74
       H75 = 0x75                        -- Bits 15:8 of BCRCERES are 0x75
       H76 = 0x76                        -- Bits 15:8 of BCRCERES are 0x76
       H77 = 0x77                        -- Bits 15:8 of BCRCERES are 0x77
       H78 = 0x78                        -- Bits 15:8 of BCRCERES are 0x78
       H79 = 0x79                        -- Bits 15:8 of BCRCERES are 0x79
       H7A = 0x7A                        -- Bits 15:8 of BCRCERES are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of BCRCERES are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of BCRCERES are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of BCRCERES are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of BCRCERES are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of BCRCERES are 0x7F
       H80 = 0x80                        -- Bits 15:8 of BCRCERES are 0x80
       H81 = 0x81                        -- Bits 15:8 of BCRCERES are 0x81
       H82 = 0x82                        -- Bits 15:8 of BCRCERES are 0x82
       H83 = 0x83                        -- Bits 15:8 of BCRCERES are 0x83
       H84 = 0x84                        -- Bits 15:8 of BCRCERES are 0x84
       H85 = 0x85                        -- Bits 15:8 of BCRCERES are 0x85
       H86 = 0x86                        -- Bits 15:8 of BCRCERES are 0x86
       H87 = 0x87                        -- Bits 15:8 of BCRCERES are 0x87
       H88 = 0x88                        -- Bits 15:8 of BCRCERES are 0x88
       H89 = 0x89                        -- Bits 15:8 of BCRCERES are 0x89
       H8A = 0x8A                        -- Bits 15:8 of BCRCERES are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of BCRCERES are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of BCRCERES are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of BCRCERES are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of BCRCERES are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of BCRCERES are 0x8F
       H90 = 0x90                        -- Bits 15:8 of BCRCERES are 0x90
       H91 = 0x91                        -- Bits 15:8 of BCRCERES are 0x91
       H92 = 0x92                        -- Bits 15:8 of BCRCERES are 0x92
       H93 = 0x93                        -- Bits 15:8 of BCRCERES are 0x93
       H94 = 0x94                        -- Bits 15:8 of BCRCERES are 0x94
       H95 = 0x95                        -- Bits 15:8 of BCRCERES are 0x95
       H96 = 0x96                        -- Bits 15:8 of BCRCERES are 0x96
       H97 = 0x97                        -- Bits 15:8 of BCRCERES are 0x97
       H98 = 0x98                        -- Bits 15:8 of BCRCERES are 0x98
       H99 = 0x99                        -- Bits 15:8 of BCRCERES are 0x99
       H9A = 0x9A                        -- Bits 15:8 of BCRCERES are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of BCRCERES are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of BCRCERES are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of BCRCERES are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of BCRCERES are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of BCRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of BCRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of BCRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of BCRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of BCRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of BCRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of BCRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of BCRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of BCRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of BCRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of BCRCERES are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of BCRCERES are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of BCRCERES are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of BCRCERES are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of BCRCERES are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of BCRCERES are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of BCRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of BCRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of BCRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of BCRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of BCRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of BCRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of BCRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of BCRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of BCRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of BCRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of BCRCERES are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of BCRCERES are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of BCRCERES are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of BCRCERES are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of BCRCERES are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of BCRCERES are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of BCRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of BCRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of BCRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of BCRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of BCRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of BCRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of BCRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of BCRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of BCRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of BCRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of BCRCERES are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of BCRCERES are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of BCRCERES are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of BCRCERES are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of BCRCERES are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of BCRCERES are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of BCRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of BCRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of BCRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of BCRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of BCRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of BCRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of BCRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of BCRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of BCRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of BCRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of BCRCERES are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of BCRCERES are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of BCRCERES are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of BCRCERES are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of BCRCERES are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of BCRCERES are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of BCRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of BCRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of BCRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of BCRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of BCRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of BCRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of BCRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of BCRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of BCRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of BCRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of BCRCERES are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of BCRCERES are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of BCRCERES are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of BCRCERES are 0xEC
       HED = 0xED                        -- Bits 15:8 of BCRCERES are 0xED
       HEE = 0xEE                        -- Bits 15:8 of BCRCERES are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of BCRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of BCRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of BCRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of BCRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of BCRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of BCRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of BCRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of BCRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of BCRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of BCRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of BCRCERES are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of BCRCERES are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of BCRCERES are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of BCRCERES are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of BCRCERES are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of BCRCERES are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of BCRCERES are 0xFF
       }
--
-- CONFIG23 (0x300016)
--
pragma fuse_def BCRCERESL:22  0xFF {     -- Boot Sector Expected Result for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of BCRCERES are 0x00
       H01 = 0x1                         -- Bits 7:0 of BCRCERES are 0x01
       H02 = 0x2                         -- Bits 7:0 of BCRCERES are 0x02
       H03 = 0x3                         -- Bits 7:0 of BCRCERES are 0x03
       H04 = 0x4                         -- Bits 7:0 of BCRCERES are 0x04
       H05 = 0x5                         -- Bits 7:0 of BCRCERES are 0x05
       H06 = 0x6                         -- Bits 7:0 of BCRCERES are 0x06
       H07 = 0x7                         -- Bits 7:0 of BCRCERES are 0x07
       H08 = 0x8                         -- Bits 7:0 of BCRCERES are 0x08
       H09 = 0x9                         -- Bits 7:0 of BCRCERES are 0x09
       H0A = 0xA                         -- Bits 7:0 of BCRCERES are 0x0A
       H0B = 0xB                         -- Bits 7:0 of BCRCERES are 0x0B
       H0C = 0xC                         -- Bits 7:0 of BCRCERES are 0x0C
       H0D = 0xD                         -- Bits 7:0 of BCRCERES are 0x0D
       H0E = 0xE                         -- Bits 7:0 of BCRCERES are 0x0E
       H0F = 0xF                         -- Bits 7:0 of BCRCERES are 0x0F
       H10 = 0x10                        -- Bits 7:0 of BCRCERES are 0x10
       H11 = 0x11                        -- Bits 7:0 of BCRCERES are 0x11
       H12 = 0x12                        -- Bits 7:0 of BCRCERES are 0x12
       H13 = 0x13                        -- Bits 7:0 of BCRCERES are 0x13
       H14 = 0x14                        -- Bits 7:0 of BCRCERES are 0x14
       H15 = 0x15                        -- Bits 7:0 of BCRCERES are 0x15
       H16 = 0x16                        -- Bits 7:0 of BCRCERES are 0x16
       H17 = 0x17                        -- Bits 7:0 of BCRCERES are 0x17
       H18 = 0x18                        -- Bits 7:0 of BCRCERES are 0x18
       H19 = 0x19                        -- Bits 7:0 of BCRCERES are 0x19
       H1A = 0x1A                        -- Bits 7:0 of BCRCERES are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of BCRCERES are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of BCRCERES are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of BCRCERES are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of BCRCERES are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of BCRCERES are 0x1F
       H20 = 0x20                        -- Bits 7:0 of BCRCERES are 0x20
       H21 = 0x21                        -- Bits 7:0 of BCRCERES are 0x21
       H22 = 0x22                        -- Bits 7:0 of BCRCERES are 0x22
       H23 = 0x23                        -- Bits 7:0 of BCRCERES are 0x23
       H24 = 0x24                        -- Bits 7:0 of BCRCERES are 0x24
       H25 = 0x25                        -- Bits 7:0 of BCRCERES are 0x25
       H26 = 0x26                        -- Bits 7:0 of BCRCERES are 0x26
       H27 = 0x27                        -- Bits 7:0 of BCRCERES are 0x27
       H28 = 0x28                        -- Bits 7:0 of BCRCERES are 0x28
       H29 = 0x29                        -- Bits 7:0 of BCRCERES are 0x29
       H2A = 0x2A                        -- Bits 7:0 of BCRCERES are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of BCRCERES are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of BCRCERES are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of BCRCERES are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of BCRCERES are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of BCRCERES are 0x2F
       H30 = 0x30                        -- Bits 7:0 of BCRCERES are 0x30
       H31 = 0x31                        -- Bits 7:0 of BCRCERES are 0x31
       H32 = 0x32                        -- Bits 7:0 of BCRCERES are 0x32
       H33 = 0x33                        -- Bits 7:0 of BCRCERES are 0x33
       H34 = 0x34                        -- Bits 7:0 of BCRCERES are 0x34
       H35 = 0x35                        -- Bits 7:0 of BCRCERES are 0x35
       H36 = 0x36                        -- Bits 7:0 of BCRCERES are 0x36
       H37 = 0x37                        -- Bits 7:0 of BCRCERES are 0x37
       H38 = 0x38                        -- Bits 7:0 of BCRCERES are 0x38
       H39 = 0x39                        -- Bits 7:0 of BCRCERES are 0x39
       H3A = 0x3A                        -- Bits 7:0 of BCRCERES are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of BCRCERES are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of BCRCERES are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of BCRCERES are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of BCRCERES are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of BCRCERES are 0x3F
       H40 = 0x40                        -- Bits 7:0 of BCRCERES are 0x40
       H41 = 0x41                        -- Bits 7:0 of BCRCERES are 0x41
       H42 = 0x42                        -- Bits 7:0 of BCRCERES are 0x42
       H43 = 0x43                        -- Bits 7:0 of BCRCERES are 0x43
       H44 = 0x44                        -- Bits 7:0 of BCRCERES are 0x44
       H45 = 0x45                        -- Bits 7:0 of BCRCERES are 0x45
       H46 = 0x46                        -- Bits 7:0 of BCRCERES are 0x46
       H47 = 0x47                        -- Bits 7:0 of BCRCERES are 0x47
       H48 = 0x48                        -- Bits 7:0 of BCRCERES are 0x48
       H49 = 0x49                        -- Bits 7:0 of BCRCERES are 0x49
       H4A = 0x4A                        -- Bits 7:0 of BCRCERES are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of BCRCERES are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of BCRCERES are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of BCRCERES are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of BCRCERES are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of BCRCERES are 0x4F
       H50 = 0x50                        -- Bits 7:0 of BCRCERES are 0x50
       H51 = 0x51                        -- Bits 7:0 of BCRCERES are 0x51
       H52 = 0x52                        -- Bits 7:0 of BCRCERES are 0x52
       H53 = 0x53                        -- Bits 7:0 of BCRCERES are 0x53
       H54 = 0x54                        -- Bits 7:0 of BCRCERES are 0x54
       H55 = 0x55                        -- Bits 7:0 of BCRCERES are 0x55
       H56 = 0x56                        -- Bits 7:0 of BCRCERES are 0x56
       H57 = 0x57                        -- Bits 7:0 of BCRCERES are 0x57
       H58 = 0x58                        -- Bits 7:0 of BCRCERES are 0x58
       H59 = 0x59                        -- Bits 7:0 of BCRCERES are 0x59
       H5A = 0x5A                        -- Bits 7:0 of BCRCERES are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of BCRCERES are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of BCRCERES are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of BCRCERES are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of BCRCERES are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of BCRCERES are 0x5F
       H60 = 0x60                        -- Bits 7:0 of BCRCERES are 0x60
       H61 = 0x61                        -- Bits 7:0 of BCRCERES are 0x61
       H62 = 0x62                        -- Bits 7:0 of BCRCERES are 0x62
       H63 = 0x63                        -- Bits 7:0 of BCRCERES are 0x63
       H64 = 0x64                        -- Bits 7:0 of BCRCERES are 0x64
       H65 = 0x65                        -- Bits 7:0 of BCRCERES are 0x65
       H66 = 0x66                        -- Bits 7:0 of BCRCERES are 0x66
       H67 = 0x67                        -- Bits 7:0 of BCRCERES are 0x67
       H68 = 0x68                        -- Bits 7:0 of BCRCERES are 0x68
       H69 = 0x69                        -- Bits 7:0 of BCRCERES are 0x69
       H6A = 0x6A                        -- Bits 7:0 of BCRCERES are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of BCRCERES are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of BCRCERES are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of BCRCERES are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of BCRCERES are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of BCRCERES are 0x6F
       H70 = 0x70                        -- Bits 7:0 of BCRCERES are 0x70
       H71 = 0x71                        -- Bits 7:0 of BCRCERES are 0x71
       H72 = 0x72                        -- Bits 7:0 of BCRCERES are 0x72
       H73 = 0x73                        -- Bits 7:0 of BCRCERES are 0x73
       H74 = 0x74                        -- Bits 7:0 of BCRCERES are 0x74
       H75 = 0x75                        -- Bits 7:0 of BCRCERES are 0x75
       H76 = 0x76                        -- Bits 7:0 of BCRCERES are 0x76
       H77 = 0x77                        -- Bits 7:0 of BCRCERES are 0x77
       H78 = 0x78                        -- Bits 7:0 of BCRCERES are 0x78
       H79 = 0x79                        -- Bits 7:0 of BCRCERES are 0x79
       H7A = 0x7A                        -- Bits 7:0 of BCRCERES are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of BCRCERES are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of BCRCERES are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of BCRCERES are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of BCRCERES are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of BCRCERES are 0x7F
       H80 = 0x80                        -- Bits 7:0 of BCRCERES are 0x80
       H81 = 0x81                        -- Bits 7:0 of BCRCERES are 0x81
       H82 = 0x82                        -- Bits 7:0 of BCRCERES are 0x82
       H83 = 0x83                        -- Bits 7:0 of BCRCERES are 0x83
       H84 = 0x84                        -- Bits 7:0 of BCRCERES are 0x84
       H85 = 0x85                        -- Bits 7:0 of BCRCERES are 0x85
       H86 = 0x86                        -- Bits 7:0 of BCRCERES are 0x86
       H87 = 0x87                        -- Bits 7:0 of BCRCERES are 0x87
       H88 = 0x88                        -- Bits 7:0 of BCRCERES are 0x88
       H89 = 0x89                        -- Bits 7:0 of BCRCERES are 0x89
       H8A = 0x8A                        -- Bits 7:0 of BCRCERES are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of BCRCERES are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of BCRCERES are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of BCRCERES are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of BCRCERES are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of BCRCERES are 0x8F
       H90 = 0x90                        -- Bits 7:0 of BCRCERES are 0x90
       H91 = 0x91                        -- Bits 7:0 of BCRCERES are 0x91
       H92 = 0x92                        -- Bits 7:0 of BCRCERES are 0x92
       H93 = 0x93                        -- Bits 7:0 of BCRCERES are 0x93
       H94 = 0x94                        -- Bits 7:0 of BCRCERES are 0x94
       H95 = 0x95                        -- Bits 7:0 of BCRCERES are 0x95
       H96 = 0x96                        -- Bits 7:0 of BCRCERES are 0x96
       H97 = 0x97                        -- Bits 7:0 of BCRCERES are 0x97
       H98 = 0x98                        -- Bits 7:0 of BCRCERES are 0x98
       H99 = 0x99                        -- Bits 7:0 of BCRCERES are 0x99
       H9A = 0x9A                        -- Bits 7:0 of BCRCERES are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of BCRCERES are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of BCRCERES are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of BCRCERES are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of BCRCERES are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of BCRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of BCRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of BCRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of BCRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of BCRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of BCRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of BCRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of BCRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of BCRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of BCRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of BCRCERES are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of BCRCERES are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of BCRCERES are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of BCRCERES are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of BCRCERES are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of BCRCERES are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of BCRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of BCRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of BCRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of BCRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of BCRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of BCRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of BCRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of BCRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of BCRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of BCRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of BCRCERES are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of BCRCERES are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of BCRCERES are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of BCRCERES are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of BCRCERES are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of BCRCERES are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of BCRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of BCRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of BCRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of BCRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of BCRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of BCRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of BCRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of BCRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of BCRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of BCRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of BCRCERES are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of BCRCERES are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of BCRCERES are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of BCRCERES are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of BCRCERES are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of BCRCERES are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of BCRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of BCRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of BCRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of BCRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of BCRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of BCRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of BCRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of BCRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of BCRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of BCRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of BCRCERES are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of BCRCERES are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of BCRCERES are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of BCRCERES are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of BCRCERES are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of BCRCERES are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of BCRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of BCRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of BCRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of BCRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of BCRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of BCRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of BCRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of BCRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of BCRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of BCRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of BCRCERES are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of BCRCERES are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of BCRCERES are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of BCRCERES are 0xEC
       HED = 0xED                        -- Bits 7:0 of BCRCERES are 0xED
       HEE = 0xEE                        -- Bits 7:0 of BCRCERES are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of BCRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of BCRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of BCRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of BCRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of BCRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of BCRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of BCRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of BCRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of BCRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of BCRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of BCRCERES are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of BCRCERES are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of BCRCERES are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of BCRCERES are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of BCRCERES are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of BCRCERES are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of BCRCERES are 0xFF
       }
--
-- CONFIG24 (0x300017)
--
pragma fuse_def CRCPOLT:23  0xFF {       -- Non-Boot Sector Polynomial for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of CRCPOL are 0x00
       H01 = 0x1                         -- Bits 31:24 of CRCPOL are 0x01
       H02 = 0x2                         -- Bits 31:24 of CRCPOL are 0x02
       H03 = 0x3                         -- Bits 31:24 of CRCPOL are 0x03
       H04 = 0x4                         -- Bits 31:24 of CRCPOL are 0x04
       H05 = 0x5                         -- Bits 31:24 of CRCPOL are 0x05
       H06 = 0x6                         -- Bits 31:24 of CRCPOL are 0x06
       H07 = 0x7                         -- Bits 31:24 of CRCPOL are 0x07
       H08 = 0x8                         -- Bits 31:24 of CRCPOL are 0x08
       H09 = 0x9                         -- Bits 31:24 of CRCPOL are 0x09
       H0A = 0xA                         -- Bits 31:24 of CRCPOL are 0x0A
       H0B = 0xB                         -- Bits 31:24 of CRCPOL are 0x0B
       H0C = 0xC                         -- Bits 31:24 of CRCPOL are 0x0C
       H0D = 0xD                         -- Bits 31:24 of CRCPOL are 0x0D
       H0E = 0xE                         -- Bits 31:24 of CRCPOL are 0x0E
       H0F = 0xF                         -- Bits 31:24 of CRCPOL are 0x0F
       H10 = 0x10                        -- Bits 31:24 of CRCPOL are 0x10
       H11 = 0x11                        -- Bits 31:24 of CRCPOL are 0x11
       H12 = 0x12                        -- Bits 31:24 of CRCPOL are 0x12
       H13 = 0x13                        -- Bits 31:24 of CRCPOL are 0x13
       H14 = 0x14                        -- Bits 31:24 of CRCPOL are 0x14
       H15 = 0x15                        -- Bits 31:24 of CRCPOL are 0x15
       H16 = 0x16                        -- Bits 31:24 of CRCPOL are 0x16
       H17 = 0x17                        -- Bits 31:24 of CRCPOL are 0x17
       H18 = 0x18                        -- Bits 31:24 of CRCPOL are 0x18
       H19 = 0x19                        -- Bits 31:24 of CRCPOL are 0x19
       H1A = 0x1A                        -- Bits 31:24 of CRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of CRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of CRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of CRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of CRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of CRCPOL are 0x1F
       H20 = 0x20                        -- Bits 31:24 of CRCPOL are 0x20
       H21 = 0x21                        -- Bits 31:24 of CRCPOL are 0x21
       H22 = 0x22                        -- Bits 31:24 of CRCPOL are 0x22
       H23 = 0x23                        -- Bits 31:24 of CRCPOL are 0x23
       H24 = 0x24                        -- Bits 31:24 of CRCPOL are 0x24
       H25 = 0x25                        -- Bits 31:24 of CRCPOL are 0x25
       H26 = 0x26                        -- Bits 31:24 of CRCPOL are 0x26
       H27 = 0x27                        -- Bits 31:24 of CRCPOL are 0x27
       H28 = 0x28                        -- Bits 31:24 of CRCPOL are 0x28
       H29 = 0x29                        -- Bits 31:24 of CRCPOL are 0x29
       H2A = 0x2A                        -- Bits 31:24 of CRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of CRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of CRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of CRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of CRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of CRCPOL are 0x2F
       H30 = 0x30                        -- Bits 31:24 of CRCPOL are 0x30
       H31 = 0x31                        -- Bits 31:24 of CRCPOL are 0x31
       H32 = 0x32                        -- Bits 31:24 of CRCPOL are 0x32
       H33 = 0x33                        -- Bits 31:24 of CRCPOL are 0x33
       H34 = 0x34                        -- Bits 31:24 of CRCPOL are 0x34
       H35 = 0x35                        -- Bits 31:24 of CRCPOL are 0x35
       H36 = 0x36                        -- Bits 31:24 of CRCPOL are 0x36
       H37 = 0x37                        -- Bits 31:24 of CRCPOL are 0x37
       H38 = 0x38                        -- Bits 31:24 of CRCPOL are 0x38
       H39 = 0x39                        -- Bits 31:24 of CRCPOL are 0x39
       H3A = 0x3A                        -- Bits 31:24 of CRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of CRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of CRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of CRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of CRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of CRCPOL are 0x3F
       H40 = 0x40                        -- Bits 31:24 of CRCPOL are 0x40
       H41 = 0x41                        -- Bits 31:24 of CRCPOL are 0x41
       H42 = 0x42                        -- Bits 31:24 of CRCPOL are 0x42
       H43 = 0x43                        -- Bits 31:24 of CRCPOL are 0x43
       H44 = 0x44                        -- Bits 31:24 of CRCPOL are 0x44
       H45 = 0x45                        -- Bits 31:24 of CRCPOL are 0x45
       H46 = 0x46                        -- Bits 31:24 of CRCPOL are 0x46
       H47 = 0x47                        -- Bits 31:24 of CRCPOL are 0x47
       H48 = 0x48                        -- Bits 31:24 of CRCPOL are 0x48
       H49 = 0x49                        -- Bits 31:24 of CRCPOL are 0x49
       H4A = 0x4A                        -- Bits 31:24 of CRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of CRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of CRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of CRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of CRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of CRCPOL are 0x4F
       H50 = 0x50                        -- Bits 31:24 of CRCPOL are 0x50
       H51 = 0x51                        -- Bits 31:24 of CRCPOL are 0x51
       H52 = 0x52                        -- Bits 31:24 of CRCPOL are 0x52
       H53 = 0x53                        -- Bits 31:24 of CRCPOL are 0x53
       H54 = 0x54                        -- Bits 31:24 of CRCPOL are 0x54
       H55 = 0x55                        -- Bits 31:24 of CRCPOL are 0x55
       H56 = 0x56                        -- Bits 31:24 of CRCPOL are 0x56
       H57 = 0x57                        -- Bits 31:24 of CRCPOL are 0x57
       H58 = 0x58                        -- Bits 31:24 of CRCPOL are 0x58
       H59 = 0x59                        -- Bits 31:24 of CRCPOL are 0x59
       H5A = 0x5A                        -- Bits 31:24 of CRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of CRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of CRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of CRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of CRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of CRCPOL are 0x5F
       H60 = 0x60                        -- Bits 31:24 of CRCPOL are 0x60
       H61 = 0x61                        -- Bits 31:24 of CRCPOL are 0x61
       H62 = 0x62                        -- Bits 31:24 of CRCPOL are 0x62
       H63 = 0x63                        -- Bits 31:24 of CRCPOL are 0x63
       H64 = 0x64                        -- Bits 31:24 of CRCPOL are 0x64
       H65 = 0x65                        -- Bits 31:24 of CRCPOL are 0x65
       H66 = 0x66                        -- Bits 31:24 of CRCPOL are 0x66
       H67 = 0x67                        -- Bits 31:24 of CRCPOL are 0x67
       H68 = 0x68                        -- Bits 31:24 of CRCPOL are 0x68
       H69 = 0x69                        -- Bits 31:24 of CRCPOL are 0x69
       H6A = 0x6A                        -- Bits 31:24 of CRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of CRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of CRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of CRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of CRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of CRCPOL are 0x6F
       H70 = 0x70                        -- Bits 31:24 of CRCPOL are 0x70
       H71 = 0x71                        -- Bits 31:24 of CRCPOL are 0x71
       H72 = 0x72                        -- Bits 31:24 of CRCPOL are 0x72
       H73 = 0x73                        -- Bits 31:24 of CRCPOL are 0x73
       H74 = 0x74                        -- Bits 31:24 of CRCPOL are 0x74
       H75 = 0x75                        -- Bits 31:24 of CRCPOL are 0x75
       H76 = 0x76                        -- Bits 31:24 of CRCPOL are 0x76
       H77 = 0x77                        -- Bits 31:24 of CRCPOL are 0x77
       H78 = 0x78                        -- Bits 31:24 of CRCPOL are 0x78
       H79 = 0x79                        -- Bits 31:24 of CRCPOL are 0x79
       H7A = 0x7A                        -- Bits 31:24 of CRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of CRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of CRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of CRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of CRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of CRCPOL are 0x7F
       H80 = 0x80                        -- Bits 31:24 of CRCPOL are 0x80
       H81 = 0x81                        -- Bits 31:24 of CRCPOL are 0x81
       H82 = 0x82                        -- Bits 31:24 of CRCPOL are 0x82
       H83 = 0x83                        -- Bits 31:24 of CRCPOL are 0x83
       H84 = 0x84                        -- Bits 31:24 of CRCPOL are 0x84
       H85 = 0x85                        -- Bits 31:24 of CRCPOL are 0x85
       H86 = 0x86                        -- Bits 31:24 of CRCPOL are 0x86
       H87 = 0x87                        -- Bits 31:24 of CRCPOL are 0x87
       H88 = 0x88                        -- Bits 31:24 of CRCPOL are 0x88
       H89 = 0x89                        -- Bits 31:24 of CRCPOL are 0x89
       H8A = 0x8A                        -- Bits 31:24 of CRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of CRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of CRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of CRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of CRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of CRCPOL are 0x8F
       H90 = 0x90                        -- Bits 31:24 of CRCPOL are 0x90
       H91 = 0x91                        -- Bits 31:24 of CRCPOL are 0x91
       H92 = 0x92                        -- Bits 31:24 of CRCPOL are 0x92
       H93 = 0x93                        -- Bits 31:24 of CRCPOL are 0x93
       H94 = 0x94                        -- Bits 31:24 of CRCPOL are 0x94
       H95 = 0x95                        -- Bits 31:24 of CRCPOL are 0x95
       H96 = 0x96                        -- Bits 31:24 of CRCPOL are 0x96
       H97 = 0x97                        -- Bits 31:24 of CRCPOL are 0x97
       H98 = 0x98                        -- Bits 31:24 of CRCPOL are 0x98
       H99 = 0x99                        -- Bits 31:24 of CRCPOL are 0x99
       H9A = 0x9A                        -- Bits 31:24 of CRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of CRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of CRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of CRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of CRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of CRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of CRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of CRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of CRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of CRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of CRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of CRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of CRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of CRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of CRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of CRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of CRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of CRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of CRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of CRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of CRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of CRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of CRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of CRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of CRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of CRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of CRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of CRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of CRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of CRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of CRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of CRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of CRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of CRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of CRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of CRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of CRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of CRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of CRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of CRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of CRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of CRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of CRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of CRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of CRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of CRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of CRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of CRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of CRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of CRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of CRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of CRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of CRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of CRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of CRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of CRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of CRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of CRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of CRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of CRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of CRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of CRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of CRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of CRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of CRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of CRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of CRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of CRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of CRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of CRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of CRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of CRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of CRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of CRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of CRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of CRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of CRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of CRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of CRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of CRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of CRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of CRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of CRCPOL are 0xEC
       HED = 0xED                        -- Bits 31:24 of CRCPOL are 0xED
       HEE = 0xEE                        -- Bits 31:24 of CRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of CRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of CRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of CRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of CRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of CRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of CRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of CRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of CRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of CRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of CRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of CRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of CRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of CRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of CRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of CRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of CRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of CRCPOL are 0xFF
       }
--
-- CONFIG25 (0x300018)
--
pragma fuse_def CRCPOLU:24  0xFF {       -- Non-Boot Sector Polynomial for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of CRCPOL are 0x00
       H01 = 0x1                         -- Bits 23:16 of CRCPOL are 0x01
       H02 = 0x2                         -- Bits 23:16 of CRCPOL are 0x02
       H03 = 0x3                         -- Bits 23:16 of CRCPOL are 0x03
       H04 = 0x4                         -- Bits 23:16 of CRCPOL are 0x04
       H05 = 0x5                         -- Bits 23:16 of CRCPOL are 0x05
       H06 = 0x6                         -- Bits 23:16 of CRCPOL are 0x06
       H07 = 0x7                         -- Bits 23:16 of CRCPOL are 0x07
       H08 = 0x8                         -- Bits 23:16 of CRCPOL are 0x08
       H09 = 0x9                         -- Bits 23:16 of CRCPOL are 0x09
       H0A = 0xA                         -- Bits 23:16 of CRCPOL are 0x0A
       H0B = 0xB                         -- Bits 23:16 of CRCPOL are 0x0B
       H0C = 0xC                         -- Bits 23:16 of CRCPOL are 0x0C
       H0D = 0xD                         -- Bits 23:16 of CRCPOL are 0x0D
       H0E = 0xE                         -- Bits 23:16 of CRCPOL are 0x0E
       H0F = 0xF                         -- Bits 23:16 of CRCPOL are 0x0F
       H10 = 0x10                        -- Bits 23:16 of CRCPOL are 0x10
       H11 = 0x11                        -- Bits 23:16 of CRCPOL are 0x11
       H12 = 0x12                        -- Bits 23:16 of CRCPOL are 0x12
       H13 = 0x13                        -- Bits 23:16 of CRCPOL are 0x13
       H14 = 0x14                        -- Bits 23:16 of CRCPOL are 0x14
       H15 = 0x15                        -- Bits 23:16 of CRCPOL are 0x15
       H16 = 0x16                        -- Bits 23:16 of CRCPOL are 0x16
       H17 = 0x17                        -- Bits 23:16 of CRCPOL are 0x17
       H18 = 0x18                        -- Bits 23:16 of CRCPOL are 0x18
       H19 = 0x19                        -- Bits 23:16 of CRCPOL are 0x19
       H1A = 0x1A                        -- Bits 23:16 of CRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of CRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of CRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of CRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of CRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of CRCPOL are 0x1F
       H20 = 0x20                        -- Bits 23:16 of CRCPOL are 0x20
       H21 = 0x21                        -- Bits 23:16 of CRCPOL are 0x21
       H22 = 0x22                        -- Bits 23:16 of CRCPOL are 0x22
       H23 = 0x23                        -- Bits 23:16 of CRCPOL are 0x23
       H24 = 0x24                        -- Bits 23:16 of CRCPOL are 0x24
       H25 = 0x25                        -- Bits 23:16 of CRCPOL are 0x25
       H26 = 0x26                        -- Bits 23:16 of CRCPOL are 0x26
       H27 = 0x27                        -- Bits 23:16 of CRCPOL are 0x27
       H28 = 0x28                        -- Bits 23:16 of CRCPOL are 0x28
       H29 = 0x29                        -- Bits 23:16 of CRCPOL are 0x29
       H2A = 0x2A                        -- Bits 23:16 of CRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of CRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of CRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of CRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of CRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of CRCPOL are 0x2F
       H30 = 0x30                        -- Bits 23:16 of CRCPOL are 0x30
       H31 = 0x31                        -- Bits 23:16 of CRCPOL are 0x31
       H32 = 0x32                        -- Bits 23:16 of CRCPOL are 0x32
       H33 = 0x33                        -- Bits 23:16 of CRCPOL are 0x33
       H34 = 0x34                        -- Bits 23:16 of CRCPOL are 0x34
       H35 = 0x35                        -- Bits 23:16 of CRCPOL are 0x35
       H36 = 0x36                        -- Bits 23:16 of CRCPOL are 0x36
       H37 = 0x37                        -- Bits 23:16 of CRCPOL are 0x37
       H38 = 0x38                        -- Bits 23:16 of CRCPOL are 0x38
       H39 = 0x39                        -- Bits 23:16 of CRCPOL are 0x39
       H3A = 0x3A                        -- Bits 23:16 of CRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of CRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of CRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of CRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of CRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of CRCPOL are 0x3F
       H40 = 0x40                        -- Bits 23:16 of CRCPOL are 0x40
       H41 = 0x41                        -- Bits 23:16 of CRCPOL are 0x41
       H42 = 0x42                        -- Bits 23:16 of CRCPOL are 0x42
       H43 = 0x43                        -- Bits 23:16 of CRCPOL are 0x43
       H44 = 0x44                        -- Bits 23:16 of CRCPOL are 0x44
       H45 = 0x45                        -- Bits 23:16 of CRCPOL are 0x45
       H46 = 0x46                        -- Bits 23:16 of CRCPOL are 0x46
       H47 = 0x47                        -- Bits 23:16 of CRCPOL are 0x47
       H48 = 0x48                        -- Bits 23:16 of CRCPOL are 0x48
       H49 = 0x49                        -- Bits 23:16 of CRCPOL are 0x49
       H4A = 0x4A                        -- Bits 23:16 of CRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of CRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of CRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of CRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of CRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of CRCPOL are 0x4F
       H50 = 0x50                        -- Bits 23:16 of CRCPOL are 0x50
       H51 = 0x51                        -- Bits 23:16 of CRCPOL are 0x51
       H52 = 0x52                        -- Bits 23:16 of CRCPOL are 0x52
       H53 = 0x53                        -- Bits 23:16 of CRCPOL are 0x53
       H54 = 0x54                        -- Bits 23:16 of CRCPOL are 0x54
       H55 = 0x55                        -- Bits 23:16 of CRCPOL are 0x55
       H56 = 0x56                        -- Bits 23:16 of CRCPOL are 0x56
       H57 = 0x57                        -- Bits 23:16 of CRCPOL are 0x57
       H58 = 0x58                        -- Bits 23:16 of CRCPOL are 0x58
       H59 = 0x59                        -- Bits 23:16 of CRCPOL are 0x59
       H5A = 0x5A                        -- Bits 23:16 of CRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of CRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of CRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of CRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of CRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of CRCPOL are 0x5F
       H60 = 0x60                        -- Bits 23:16 of CRCPOL are 0x60
       H61 = 0x61                        -- Bits 23:16 of CRCPOL are 0x61
       H62 = 0x62                        -- Bits 23:16 of CRCPOL are 0x62
       H63 = 0x63                        -- Bits 23:16 of CRCPOL are 0x63
       H64 = 0x64                        -- Bits 23:16 of CRCPOL are 0x64
       H65 = 0x65                        -- Bits 23:16 of CRCPOL are 0x65
       H66 = 0x66                        -- Bits 23:16 of CRCPOL are 0x66
       H67 = 0x67                        -- Bits 23:16 of CRCPOL are 0x67
       H68 = 0x68                        -- Bits 23:16 of CRCPOL are 0x68
       H69 = 0x69                        -- Bits 23:16 of CRCPOL are 0x69
       H6A = 0x6A                        -- Bits 23:16 of CRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of CRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of CRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of CRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of CRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of CRCPOL are 0x6F
       H70 = 0x70                        -- Bits 23:16 of CRCPOL are 0x70
       H71 = 0x71                        -- Bits 23:16 of CRCPOL are 0x71
       H72 = 0x72                        -- Bits 23:16 of CRCPOL are 0x72
       H73 = 0x73                        -- Bits 23:16 of CRCPOL are 0x73
       H74 = 0x74                        -- Bits 23:16 of CRCPOL are 0x74
       H75 = 0x75                        -- Bits 23:16 of CRCPOL are 0x75
       H76 = 0x76                        -- Bits 23:16 of CRCPOL are 0x76
       H77 = 0x77                        -- Bits 23:16 of CRCPOL are 0x77
       H78 = 0x78                        -- Bits 23:16 of CRCPOL are 0x78
       H79 = 0x79                        -- Bits 23:16 of CRCPOL are 0x79
       H7A = 0x7A                        -- Bits 23:16 of CRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of CRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of CRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of CRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of CRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of CRCPOL are 0x7F
       H80 = 0x80                        -- Bits 23:16 of CRCPOL are 0x80
       H81 = 0x81                        -- Bits 23:16 of CRCPOL are 0x81
       H82 = 0x82                        -- Bits 23:16 of CRCPOL are 0x82
       H83 = 0x83                        -- Bits 23:16 of CRCPOL are 0x83
       H84 = 0x84                        -- Bits 23:16 of CRCPOL are 0x84
       H85 = 0x85                        -- Bits 23:16 of CRCPOL are 0x85
       H86 = 0x86                        -- Bits 23:16 of CRCPOL are 0x86
       H87 = 0x87                        -- Bits 23:16 of CRCPOL are 0x87
       H88 = 0x88                        -- Bits 23:16 of CRCPOL are 0x88
       H89 = 0x89                        -- Bits 23:16 of CRCPOL are 0x89
       H8A = 0x8A                        -- Bits 23:16 of CRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of CRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of CRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of CRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of CRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of CRCPOL are 0x8F
       H90 = 0x90                        -- Bits 23:16 of CRCPOL are 0x90
       H91 = 0x91                        -- Bits 23:16 of CRCPOL are 0x91
       H92 = 0x92                        -- Bits 23:16 of CRCPOL are 0x92
       H93 = 0x93                        -- Bits 23:16 of CRCPOL are 0x93
       H94 = 0x94                        -- Bits 23:16 of CRCPOL are 0x94
       H95 = 0x95                        -- Bits 23:16 of CRCPOL are 0x95
       H96 = 0x96                        -- Bits 23:16 of CRCPOL are 0x96
       H97 = 0x97                        -- Bits 23:16 of CRCPOL are 0x97
       H98 = 0x98                        -- Bits 23:16 of CRCPOL are 0x98
       H99 = 0x99                        -- Bits 23:16 of CRCPOL are 0x99
       H9A = 0x9A                        -- Bits 23:16 of CRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of CRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of CRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of CRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of CRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of CRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of CRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of CRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of CRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of CRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of CRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of CRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of CRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of CRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of CRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of CRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of CRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of CRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of CRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of CRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of CRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of CRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of CRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of CRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of CRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of CRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of CRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of CRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of CRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of CRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of CRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of CRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of CRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of CRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of CRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of CRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of CRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of CRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of CRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of CRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of CRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of CRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of CRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of CRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of CRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of CRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of CRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of CRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of CRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of CRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of CRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of CRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of CRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of CRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of CRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of CRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of CRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of CRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of CRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of CRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of CRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of CRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of CRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of CRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of CRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of CRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of CRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of CRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of CRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of CRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of CRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of CRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of CRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of CRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of CRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of CRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of CRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of CRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of CRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of CRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of CRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of CRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of CRCPOL are 0xEC
       HED = 0xED                        -- Bits 23:16 of CRCPOL are 0xED
       HEE = 0xEE                        -- Bits 23:16 of CRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of CRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of CRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of CRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of CRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of CRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of CRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of CRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of CRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of CRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of CRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of CRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of CRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of CRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of CRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of CRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of CRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of CRCPOL are 0xFF
       }
--
-- CONFIG26 (0x300019)
--
pragma fuse_def CRCPOLH:25  0xFF {       -- Non-Boot Sector Polynomial for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of CRCPOL are 0x00
       H01 = 0x1                         -- Bits 15:8 of CRCPOL are 0x01
       H02 = 0x2                         -- Bits 15:8 of CRCPOL are 0x02
       H03 = 0x3                         -- Bits 15:8 of CRCPOL are 0x03
       H04 = 0x4                         -- Bits 15:8 of CRCPOL are 0x04
       H05 = 0x5                         -- Bits 15:8 of CRCPOL are 0x05
       H06 = 0x6                         -- Bits 15:8 of CRCPOL are 0x06
       H07 = 0x7                         -- Bits 15:8 of CRCPOL are 0x07
       H08 = 0x8                         -- Bits 15:8 of CRCPOL are 0x08
       H09 = 0x9                         -- Bits 15:8 of CRCPOL are 0x09
       H0A = 0xA                         -- Bits 15:8 of CRCPOL are 0x0A
       H0B = 0xB                         -- Bits 15:8 of CRCPOL are 0x0B
       H0C = 0xC                         -- Bits 15:8 of CRCPOL are 0x0C
       H0D = 0xD                         -- Bits 15:8 of CRCPOL are 0x0D
       H0E = 0xE                         -- Bits 15:8 of CRCPOL are 0x0E
       H0F = 0xF                         -- Bits 15:8 of CRCPOL are 0x0F
       H10 = 0x10                        -- Bits 15:8 of CRCPOL are 0x10
       H11 = 0x11                        -- Bits 15:8 of CRCPOL are 0x11
       H12 = 0x12                        -- Bits 15:8 of CRCPOL are 0x12
       H13 = 0x13                        -- Bits 15:8 of CRCPOL are 0x13
       H14 = 0x14                        -- Bits 15:8 of CRCPOL are 0x14
       H15 = 0x15                        -- Bits 15:8 of CRCPOL are 0x15
       H16 = 0x16                        -- Bits 15:8 of CRCPOL are 0x16
       H17 = 0x17                        -- Bits 15:8 of CRCPOL are 0x17
       H18 = 0x18                        -- Bits 15:8 of CRCPOL are 0x18
       H19 = 0x19                        -- Bits 15:8 of CRCPOL are 0x19
       H1A = 0x1A                        -- Bits 15:8 of CRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of CRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of CRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of CRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of CRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of CRCPOL are 0x1F
       H20 = 0x20                        -- Bits 15:8 of CRCPOL are 0x20
       H21 = 0x21                        -- Bits 15:8 of CRCPOL are 0x21
       H22 = 0x22                        -- Bits 15:8 of CRCPOL are 0x22
       H23 = 0x23                        -- Bits 15:8 of CRCPOL are 0x23
       H24 = 0x24                        -- Bits 15:8 of CRCPOL are 0x24
       H25 = 0x25                        -- Bits 15:8 of CRCPOL are 0x25
       H26 = 0x26                        -- Bits 15:8 of CRCPOL are 0x26
       H27 = 0x27                        -- Bits 15:8 of CRCPOL are 0x27
       H28 = 0x28                        -- Bits 15:8 of CRCPOL are 0x28
       H29 = 0x29                        -- Bits 15:8 of CRCPOL are 0x29
       H2A = 0x2A                        -- Bits 15:8 of CRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of CRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of CRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of CRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of CRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of CRCPOL are 0x2F
       H30 = 0x30                        -- Bits 15:8 of CRCPOL are 0x30
       H31 = 0x31                        -- Bits 15:8 of CRCPOL are 0x31
       H32 = 0x32                        -- Bits 15:8 of CRCPOL are 0x32
       H33 = 0x33                        -- Bits 15:8 of CRCPOL are 0x33
       H34 = 0x34                        -- Bits 15:8 of CRCPOL are 0x34
       H35 = 0x35                        -- Bits 15:8 of CRCPOL are 0x35
       H36 = 0x36                        -- Bits 15:8 of CRCPOL are 0x36
       H37 = 0x37                        -- Bits 15:8 of CRCPOL are 0x37
       H38 = 0x38                        -- Bits 15:8 of CRCPOL are 0x38
       H39 = 0x39                        -- Bits 15:8 of CRCPOL are 0x39
       H3A = 0x3A                        -- Bits 15:8 of CRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of CRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of CRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of CRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of CRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of CRCPOL are 0x3F
       H40 = 0x40                        -- Bits 15:8 of CRCPOL are 0x40
       H41 = 0x41                        -- Bits 15:8 of CRCPOL are 0x41
       H42 = 0x42                        -- Bits 15:8 of CRCPOL are 0x42
       H43 = 0x43                        -- Bits 15:8 of CRCPOL are 0x43
       H44 = 0x44                        -- Bits 15:8 of CRCPOL are 0x44
       H45 = 0x45                        -- Bits 15:8 of CRCPOL are 0x45
       H46 = 0x46                        -- Bits 15:8 of CRCPOL are 0x46
       H47 = 0x47                        -- Bits 15:8 of CRCPOL are 0x47
       H48 = 0x48                        -- Bits 15:8 of CRCPOL are 0x48
       H49 = 0x49                        -- Bits 15:8 of CRCPOL are 0x49
       H4A = 0x4A                        -- Bits 15:8 of CRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of CRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of CRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of CRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of CRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of CRCPOL are 0x4F
       H50 = 0x50                        -- Bits 15:8 of CRCPOL are 0x50
       H51 = 0x51                        -- Bits 15:8 of CRCPOL are 0x51
       H52 = 0x52                        -- Bits 15:8 of CRCPOL are 0x52
       H53 = 0x53                        -- Bits 15:8 of CRCPOL are 0x53
       H54 = 0x54                        -- Bits 15:8 of CRCPOL are 0x54
       H55 = 0x55                        -- Bits 15:8 of CRCPOL are 0x55
       H56 = 0x56                        -- Bits 15:8 of CRCPOL are 0x56
       H57 = 0x57                        -- Bits 15:8 of CRCPOL are 0x57
       H58 = 0x58                        -- Bits 15:8 of CRCPOL are 0x58
       H59 = 0x59                        -- Bits 15:8 of CRCPOL are 0x59
       H5A = 0x5A                        -- Bits 15:8 of CRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of CRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of CRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of CRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of CRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of CRCPOL are 0x5F
       H60 = 0x60                        -- Bits 15:8 of CRCPOL are 0x60
       H61 = 0x61                        -- Bits 15:8 of CRCPOL are 0x61
       H62 = 0x62                        -- Bits 15:8 of CRCPOL are 0x62
       H63 = 0x63                        -- Bits 15:8 of CRCPOL are 0x63
       H64 = 0x64                        -- Bits 15:8 of CRCPOL are 0x64
       H65 = 0x65                        -- Bits 15:8 of CRCPOL are 0x65
       H66 = 0x66                        -- Bits 15:8 of CRCPOL are 0x66
       H67 = 0x67                        -- Bits 15:8 of CRCPOL are 0x67
       H68 = 0x68                        -- Bits 15:8 of CRCPOL are 0x68
       H69 = 0x69                        -- Bits 15:8 of CRCPOL are 0x69
       H6A = 0x6A                        -- Bits 15:8 of CRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of CRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of CRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of CRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of CRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of CRCPOL are 0x6F
       H70 = 0x70                        -- Bits 15:8 of CRCPOL are 0x70
       H71 = 0x71                        -- Bits 15:8 of CRCPOL are 0x71
       H72 = 0x72                        -- Bits 15:8 of CRCPOL are 0x72
       H73 = 0x73                        -- Bits 15:8 of CRCPOL are 0x73
       H74 = 0x74                        -- Bits 15:8 of CRCPOL are 0x74
       H75 = 0x75                        -- Bits 15:8 of CRCPOL are 0x75
       H76 = 0x76                        -- Bits 15:8 of CRCPOL are 0x76
       H77 = 0x77                        -- Bits 15:8 of CRCPOL are 0x77
       H78 = 0x78                        -- Bits 15:8 of CRCPOL are 0x78
       H79 = 0x79                        -- Bits 15:8 of CRCPOL are 0x79
       H7A = 0x7A                        -- Bits 15:8 of CRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of CRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of CRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of CRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of CRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of CRCPOL are 0x7F
       H80 = 0x80                        -- Bits 15:8 of CRCPOL are 0x80
       H81 = 0x81                        -- Bits 15:8 of CRCPOL are 0x81
       H82 = 0x82                        -- Bits 15:8 of CRCPOL are 0x82
       H83 = 0x83                        -- Bits 15:8 of CRCPOL are 0x83
       H84 = 0x84                        -- Bits 15:8 of CRCPOL are 0x84
       H85 = 0x85                        -- Bits 15:8 of CRCPOL are 0x85
       H86 = 0x86                        -- Bits 15:8 of CRCPOL are 0x86
       H87 = 0x87                        -- Bits 15:8 of CRCPOL are 0x87
       H88 = 0x88                        -- Bits 15:8 of CRCPOL are 0x88
       H89 = 0x89                        -- Bits 15:8 of CRCPOL are 0x89
       H8A = 0x8A                        -- Bits 15:8 of CRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of CRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of CRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of CRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of CRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of CRCPOL are 0x8F
       H90 = 0x90                        -- Bits 15:8 of CRCPOL are 0x90
       H91 = 0x91                        -- Bits 15:8 of CRCPOL are 0x91
       H92 = 0x92                        -- Bits 15:8 of CRCPOL are 0x92
       H93 = 0x93                        -- Bits 15:8 of CRCPOL are 0x93
       H94 = 0x94                        -- Bits 15:8 of CRCPOL are 0x94
       H95 = 0x95                        -- Bits 15:8 of CRCPOL are 0x95
       H96 = 0x96                        -- Bits 15:8 of CRCPOL are 0x96
       H97 = 0x97                        -- Bits 15:8 of CRCPOL are 0x97
       H98 = 0x98                        -- Bits 15:8 of CRCPOL are 0x98
       H99 = 0x99                        -- Bits 15:8 of CRCPOL are 0x99
       H9A = 0x9A                        -- Bits 15:8 of CRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of CRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of CRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of CRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of CRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of CRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of CRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of CRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of CRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of CRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of CRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of CRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of CRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of CRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of CRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of CRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of CRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of CRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of CRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of CRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of CRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of CRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of CRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of CRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of CRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of CRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of CRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of CRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of CRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of CRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of CRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of CRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of CRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of CRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of CRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of CRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of CRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of CRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of CRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of CRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of CRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of CRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of CRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of CRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of CRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of CRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of CRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of CRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of CRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of CRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of CRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of CRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of CRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of CRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of CRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of CRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of CRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of CRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of CRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of CRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of CRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of CRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of CRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of CRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of CRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of CRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of CRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of CRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of CRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of CRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of CRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of CRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of CRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of CRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of CRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of CRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of CRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of CRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of CRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of CRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of CRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of CRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of CRCPOL are 0xEC
       HED = 0xED                        -- Bits 15:8 of CRCPOL are 0xED
       HEE = 0xEE                        -- Bits 15:8 of CRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of CRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of CRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of CRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of CRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of CRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of CRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of CRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of CRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of CRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of CRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of CRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of CRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of CRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of CRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of CRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of CRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of CRCPOL are 0xFF
       }
--
-- CONFIG27 (0x30001A)
--
pragma fuse_def CRCPOLL:26  0xFF {       -- Non-Boot Sector Polynomial for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of CRCPOL are 0x00
       H01 = 0x1                         -- Bits 7:0 of CRCPOL are 0x01
       H02 = 0x2                         -- Bits 7:0 of CRCPOL are 0x02
       H03 = 0x3                         -- Bits 7:0 of CRCPOL are 0x03
       H04 = 0x4                         -- Bits 7:0 of CRCPOL are 0x04
       H05 = 0x5                         -- Bits 7:0 of CRCPOL are 0x05
       H06 = 0x6                         -- Bits 7:0 of CRCPOL are 0x06
       H07 = 0x7                         -- Bits 7:0 of CRCPOL are 0x07
       H08 = 0x8                         -- Bits 7:0 of CRCPOL are 0x08
       H09 = 0x9                         -- Bits 7:0 of CRCPOL are 0x09
       H0A = 0xA                         -- Bits 7:0 of CRCPOL are 0x0A
       H0B = 0xB                         -- Bits 7:0 of CRCPOL are 0x0B
       H0C = 0xC                         -- Bits 7:0 of CRCPOL are 0x0C
       H0D = 0xD                         -- Bits 7:0 of CRCPOL are 0x0D
       H0E = 0xE                         -- Bits 7:0 of CRCPOL are 0x0E
       H0F = 0xF                         -- Bits 7:0 of CRCPOL are 0x0F
       H10 = 0x10                        -- Bits 7:0 of CRCPOL are 0x10
       H11 = 0x11                        -- Bits 7:0 of CRCPOL are 0x11
       H12 = 0x12                        -- Bits 7:0 of CRCPOL are 0x12
       H13 = 0x13                        -- Bits 7:0 of CRCPOL are 0x13
       H14 = 0x14                        -- Bits 7:0 of CRCPOL are 0x14
       H15 = 0x15                        -- Bits 7:0 of CRCPOL are 0x15
       H16 = 0x16                        -- Bits 7:0 of CRCPOL are 0x16
       H17 = 0x17                        -- Bits 7:0 of CRCPOL are 0x17
       H18 = 0x18                        -- Bits 7:0 of CRCPOL are 0x18
       H19 = 0x19                        -- Bits 7:0 of CRCPOL are 0x19
       H1A = 0x1A                        -- Bits 7:0 of CRCPOL are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of CRCPOL are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of CRCPOL are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of CRCPOL are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of CRCPOL are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of CRCPOL are 0x1F
       H20 = 0x20                        -- Bits 7:0 of CRCPOL are 0x20
       H21 = 0x21                        -- Bits 7:0 of CRCPOL are 0x21
       H22 = 0x22                        -- Bits 7:0 of CRCPOL are 0x22
       H23 = 0x23                        -- Bits 7:0 of CRCPOL are 0x23
       H24 = 0x24                        -- Bits 7:0 of CRCPOL are 0x24
       H25 = 0x25                        -- Bits 7:0 of CRCPOL are 0x25
       H26 = 0x26                        -- Bits 7:0 of CRCPOL are 0x26
       H27 = 0x27                        -- Bits 7:0 of CRCPOL are 0x27
       H28 = 0x28                        -- Bits 7:0 of CRCPOL are 0x28
       H29 = 0x29                        -- Bits 7:0 of CRCPOL are 0x29
       H2A = 0x2A                        -- Bits 7:0 of CRCPOL are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of CRCPOL are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of CRCPOL are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of CRCPOL are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of CRCPOL are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of CRCPOL are 0x2F
       H30 = 0x30                        -- Bits 7:0 of CRCPOL are 0x30
       H31 = 0x31                        -- Bits 7:0 of CRCPOL are 0x31
       H32 = 0x32                        -- Bits 7:0 of CRCPOL are 0x32
       H33 = 0x33                        -- Bits 7:0 of CRCPOL are 0x33
       H34 = 0x34                        -- Bits 7:0 of CRCPOL are 0x34
       H35 = 0x35                        -- Bits 7:0 of CRCPOL are 0x35
       H36 = 0x36                        -- Bits 7:0 of CRCPOL are 0x36
       H37 = 0x37                        -- Bits 7:0 of CRCPOL are 0x37
       H38 = 0x38                        -- Bits 7:0 of CRCPOL are 0x38
       H39 = 0x39                        -- Bits 7:0 of CRCPOL are 0x39
       H3A = 0x3A                        -- Bits 7:0 of CRCPOL are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of CRCPOL are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of CRCPOL are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of CRCPOL are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of CRCPOL are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of CRCPOL are 0x3F
       H40 = 0x40                        -- Bits 7:0 of CRCPOL are 0x40
       H41 = 0x41                        -- Bits 7:0 of CRCPOL are 0x41
       H42 = 0x42                        -- Bits 7:0 of CRCPOL are 0x42
       H43 = 0x43                        -- Bits 7:0 of CRCPOL are 0x43
       H44 = 0x44                        -- Bits 7:0 of CRCPOL are 0x44
       H45 = 0x45                        -- Bits 7:0 of CRCPOL are 0x45
       H46 = 0x46                        -- Bits 7:0 of CRCPOL are 0x46
       H47 = 0x47                        -- Bits 7:0 of CRCPOL are 0x47
       H48 = 0x48                        -- Bits 7:0 of CRCPOL are 0x48
       H49 = 0x49                        -- Bits 7:0 of CRCPOL are 0x49
       H4A = 0x4A                        -- Bits 7:0 of CRCPOL are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of CRCPOL are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of CRCPOL are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of CRCPOL are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of CRCPOL are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of CRCPOL are 0x4F
       H50 = 0x50                        -- Bits 7:0 of CRCPOL are 0x50
       H51 = 0x51                        -- Bits 7:0 of CRCPOL are 0x51
       H52 = 0x52                        -- Bits 7:0 of CRCPOL are 0x52
       H53 = 0x53                        -- Bits 7:0 of CRCPOL are 0x53
       H54 = 0x54                        -- Bits 7:0 of CRCPOL are 0x54
       H55 = 0x55                        -- Bits 7:0 of CRCPOL are 0x55
       H56 = 0x56                        -- Bits 7:0 of CRCPOL are 0x56
       H57 = 0x57                        -- Bits 7:0 of CRCPOL are 0x57
       H58 = 0x58                        -- Bits 7:0 of CRCPOL are 0x58
       H59 = 0x59                        -- Bits 7:0 of CRCPOL are 0x59
       H5A = 0x5A                        -- Bits 7:0 of CRCPOL are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of CRCPOL are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of CRCPOL are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of CRCPOL are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of CRCPOL are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of CRCPOL are 0x5F
       H60 = 0x60                        -- Bits 7:0 of CRCPOL are 0x60
       H61 = 0x61                        -- Bits 7:0 of CRCPOL are 0x61
       H62 = 0x62                        -- Bits 7:0 of CRCPOL are 0x62
       H63 = 0x63                        -- Bits 7:0 of CRCPOL are 0x63
       H64 = 0x64                        -- Bits 7:0 of CRCPOL are 0x64
       H65 = 0x65                        -- Bits 7:0 of CRCPOL are 0x65
       H66 = 0x66                        -- Bits 7:0 of CRCPOL are 0x66
       H67 = 0x67                        -- Bits 7:0 of CRCPOL are 0x67
       H68 = 0x68                        -- Bits 7:0 of CRCPOL are 0x68
       H69 = 0x69                        -- Bits 7:0 of CRCPOL are 0x69
       H6A = 0x6A                        -- Bits 7:0 of CRCPOL are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of CRCPOL are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of CRCPOL are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of CRCPOL are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of CRCPOL are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of CRCPOL are 0x6F
       H70 = 0x70                        -- Bits 7:0 of CRCPOL are 0x70
       H71 = 0x71                        -- Bits 7:0 of CRCPOL are 0x71
       H72 = 0x72                        -- Bits 7:0 of CRCPOL are 0x72
       H73 = 0x73                        -- Bits 7:0 of CRCPOL are 0x73
       H74 = 0x74                        -- Bits 7:0 of CRCPOL are 0x74
       H75 = 0x75                        -- Bits 7:0 of CRCPOL are 0x75
       H76 = 0x76                        -- Bits 7:0 of CRCPOL are 0x76
       H77 = 0x77                        -- Bits 7:0 of CRCPOL are 0x77
       H78 = 0x78                        -- Bits 7:0 of CRCPOL are 0x78
       H79 = 0x79                        -- Bits 7:0 of CRCPOL are 0x79
       H7A = 0x7A                        -- Bits 7:0 of CRCPOL are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of CRCPOL are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of CRCPOL are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of CRCPOL are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of CRCPOL are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of CRCPOL are 0x7F
       H80 = 0x80                        -- Bits 7:0 of CRCPOL are 0x80
       H81 = 0x81                        -- Bits 7:0 of CRCPOL are 0x81
       H82 = 0x82                        -- Bits 7:0 of CRCPOL are 0x82
       H83 = 0x83                        -- Bits 7:0 of CRCPOL are 0x83
       H84 = 0x84                        -- Bits 7:0 of CRCPOL are 0x84
       H85 = 0x85                        -- Bits 7:0 of CRCPOL are 0x85
       H86 = 0x86                        -- Bits 7:0 of CRCPOL are 0x86
       H87 = 0x87                        -- Bits 7:0 of CRCPOL are 0x87
       H88 = 0x88                        -- Bits 7:0 of CRCPOL are 0x88
       H89 = 0x89                        -- Bits 7:0 of CRCPOL are 0x89
       H8A = 0x8A                        -- Bits 7:0 of CRCPOL are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of CRCPOL are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of CRCPOL are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of CRCPOL are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of CRCPOL are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of CRCPOL are 0x8F
       H90 = 0x90                        -- Bits 7:0 of CRCPOL are 0x90
       H91 = 0x91                        -- Bits 7:0 of CRCPOL are 0x91
       H92 = 0x92                        -- Bits 7:0 of CRCPOL are 0x92
       H93 = 0x93                        -- Bits 7:0 of CRCPOL are 0x93
       H94 = 0x94                        -- Bits 7:0 of CRCPOL are 0x94
       H95 = 0x95                        -- Bits 7:0 of CRCPOL are 0x95
       H96 = 0x96                        -- Bits 7:0 of CRCPOL are 0x96
       H97 = 0x97                        -- Bits 7:0 of CRCPOL are 0x97
       H98 = 0x98                        -- Bits 7:0 of CRCPOL are 0x98
       H99 = 0x99                        -- Bits 7:0 of CRCPOL are 0x99
       H9A = 0x9A                        -- Bits 7:0 of CRCPOL are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of CRCPOL are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of CRCPOL are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of CRCPOL are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of CRCPOL are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of CRCPOL are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of CRCPOL are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of CRCPOL are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of CRCPOL are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of CRCPOL are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of CRCPOL are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of CRCPOL are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of CRCPOL are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of CRCPOL are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of CRCPOL are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of CRCPOL are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of CRCPOL are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of CRCPOL are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of CRCPOL are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of CRCPOL are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of CRCPOL are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of CRCPOL are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of CRCPOL are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of CRCPOL are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of CRCPOL are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of CRCPOL are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of CRCPOL are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of CRCPOL are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of CRCPOL are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of CRCPOL are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of CRCPOL are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of CRCPOL are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of CRCPOL are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of CRCPOL are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of CRCPOL are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of CRCPOL are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of CRCPOL are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of CRCPOL are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of CRCPOL are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of CRCPOL are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of CRCPOL are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of CRCPOL are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of CRCPOL are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of CRCPOL are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of CRCPOL are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of CRCPOL are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of CRCPOL are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of CRCPOL are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of CRCPOL are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of CRCPOL are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of CRCPOL are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of CRCPOL are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of CRCPOL are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of CRCPOL are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of CRCPOL are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of CRCPOL are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of CRCPOL are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of CRCPOL are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of CRCPOL are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of CRCPOL are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of CRCPOL are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of CRCPOL are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of CRCPOL are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of CRCPOL are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of CRCPOL are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of CRCPOL are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of CRCPOL are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of CRCPOL are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of CRCPOL are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of CRCPOL are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of CRCPOL are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of CRCPOL are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of CRCPOL are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of CRCPOL are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of CRCPOL are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of CRCPOL are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of CRCPOL are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of CRCPOL are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of CRCPOL are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of CRCPOL are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of CRCPOL are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of CRCPOL are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of CRCPOL are 0xEC
       HED = 0xED                        -- Bits 7:0 of CRCPOL are 0xED
       HEE = 0xEE                        -- Bits 7:0 of CRCPOL are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of CRCPOL are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of CRCPOL are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of CRCPOL are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of CRCPOL are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of CRCPOL are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of CRCPOL are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of CRCPOL are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of CRCPOL are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of CRCPOL are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of CRCPOL are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of CRCPOL are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of CRCPOL are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of CRCPOL are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of CRCPOL are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of CRCPOL are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of CRCPOL are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of CRCPOL are 0xFF
       }
--
-- CONFIG28 (0x30001B)
--
pragma fuse_def CRCSEEDT:27  0xFF {      -- Non-Boot Sector Seed for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of CRCSEED are 0x00
       H01 = 0x1                         -- Bits 31:24 of CRCSEED are 0x01
       H02 = 0x2                         -- Bits 31:24 of CRCSEED are 0x02
       H03 = 0x3                         -- Bits 31:24 of CRCSEED are 0x03
       H04 = 0x4                         -- Bits 31:24 of CRCSEED are 0x04
       H05 = 0x5                         -- Bits 31:24 of CRCSEED are 0x05
       H06 = 0x6                         -- Bits 31:24 of CRCSEED are 0x06
       H07 = 0x7                         -- Bits 31:24 of CRCSEED are 0x07
       H08 = 0x8                         -- Bits 31:24 of CRCSEED are 0x08
       H09 = 0x9                         -- Bits 31:24 of CRCSEED are 0x09
       H0A = 0xA                         -- Bits 31:24 of CRCSEED are 0x0A
       H0B = 0xB                         -- Bits 31:24 of CRCSEED are 0x0B
       H0C = 0xC                         -- Bits 31:24 of CRCSEED are 0x0C
       H0D = 0xD                         -- Bits 31:24 of CRCSEED are 0x0D
       H0E = 0xE                         -- Bits 31:24 of CRCSEED are 0x0E
       H0F = 0xF                         -- Bits 31:24 of CRCSEED are 0x0F
       H10 = 0x10                        -- Bits 31:24 of CRCSEED are 0x10
       H11 = 0x11                        -- Bits 31:24 of CRCSEED are 0x11
       H12 = 0x12                        -- Bits 31:24 of CRCSEED are 0x12
       H13 = 0x13                        -- Bits 31:24 of CRCSEED are 0x13
       H14 = 0x14                        -- Bits 31:24 of CRCSEED are 0x14
       H15 = 0x15                        -- Bits 31:24 of CRCSEED are 0x15
       H16 = 0x16                        -- Bits 31:24 of CRCSEED are 0x16
       H17 = 0x17                        -- Bits 31:24 of CRCSEED are 0x17
       H18 = 0x18                        -- Bits 31:24 of CRCSEED are 0x18
       H19 = 0x19                        -- Bits 31:24 of CRCSEED are 0x19
       H1A = 0x1A                        -- Bits 31:24 of CRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of CRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of CRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of CRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of CRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of CRCSEED are 0x1F
       H20 = 0x20                        -- Bits 31:24 of CRCSEED are 0x20
       H21 = 0x21                        -- Bits 31:24 of CRCSEED are 0x21
       H22 = 0x22                        -- Bits 31:24 of CRCSEED are 0x22
       H23 = 0x23                        -- Bits 31:24 of CRCSEED are 0x23
       H24 = 0x24                        -- Bits 31:24 of CRCSEED are 0x24
       H25 = 0x25                        -- Bits 31:24 of CRCSEED are 0x25
       H26 = 0x26                        -- Bits 31:24 of CRCSEED are 0x26
       H27 = 0x27                        -- Bits 31:24 of CRCSEED are 0x27
       H28 = 0x28                        -- Bits 31:24 of CRCSEED are 0x28
       H29 = 0x29                        -- Bits 31:24 of CRCSEED are 0x29
       H2A = 0x2A                        -- Bits 31:24 of CRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of CRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of CRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of CRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of CRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of CRCSEED are 0x2F
       H30 = 0x30                        -- Bits 31:24 of CRCSEED are 0x30
       H31 = 0x31                        -- Bits 31:24 of CRCSEED are 0x31
       H32 = 0x32                        -- Bits 31:24 of CRCSEED are 0x32
       H33 = 0x33                        -- Bits 31:24 of CRCSEED are 0x33
       H34 = 0x34                        -- Bits 31:24 of CRCSEED are 0x34
       H35 = 0x35                        -- Bits 31:24 of CRCSEED are 0x35
       H36 = 0x36                        -- Bits 31:24 of CRCSEED are 0x36
       H37 = 0x37                        -- Bits 31:24 of CRCSEED are 0x37
       H38 = 0x38                        -- Bits 31:24 of CRCSEED are 0x38
       H39 = 0x39                        -- Bits 31:24 of CRCSEED are 0x39
       H3A = 0x3A                        -- Bits 31:24 of CRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of CRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of CRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of CRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of CRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of CRCSEED are 0x3F
       H40 = 0x40                        -- Bits 31:24 of CRCSEED are 0x40
       H41 = 0x41                        -- Bits 31:24 of CRCSEED are 0x41
       H42 = 0x42                        -- Bits 31:24 of CRCSEED are 0x42
       H43 = 0x43                        -- Bits 31:24 of CRCSEED are 0x43
       H44 = 0x44                        -- Bits 31:24 of CRCSEED are 0x44
       H45 = 0x45                        -- Bits 31:24 of CRCSEED are 0x45
       H46 = 0x46                        -- Bits 31:24 of CRCSEED are 0x46
       H47 = 0x47                        -- Bits 31:24 of CRCSEED are 0x47
       H48 = 0x48                        -- Bits 31:24 of CRCSEED are 0x48
       H49 = 0x49                        -- Bits 31:24 of CRCSEED are 0x49
       H4A = 0x4A                        -- Bits 31:24 of CRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of CRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of CRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of CRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of CRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of CRCSEED are 0x4F
       H50 = 0x50                        -- Bits 31:24 of CRCSEED are 0x50
       H51 = 0x51                        -- Bits 31:24 of CRCSEED are 0x51
       H52 = 0x52                        -- Bits 31:24 of CRCSEED are 0x52
       H53 = 0x53                        -- Bits 31:24 of CRCSEED are 0x53
       H54 = 0x54                        -- Bits 31:24 of CRCSEED are 0x54
       H55 = 0x55                        -- Bits 31:24 of CRCSEED are 0x55
       H56 = 0x56                        -- Bits 31:24 of CRCSEED are 0x56
       H57 = 0x57                        -- Bits 31:24 of CRCSEED are 0x57
       H58 = 0x58                        -- Bits 31:24 of CRCSEED are 0x58
       H59 = 0x59                        -- Bits 31:24 of CRCSEED are 0x59
       H5A = 0x5A                        -- Bits 31:24 of CRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of CRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of CRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of CRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of CRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of CRCSEED are 0x5F
       H60 = 0x60                        -- Bits 31:24 of CRCSEED are 0x60
       H61 = 0x61                        -- Bits 31:24 of CRCSEED are 0x61
       H62 = 0x62                        -- Bits 31:24 of CRCSEED are 0x62
       H63 = 0x63                        -- Bits 31:24 of CRCSEED are 0x63
       H64 = 0x64                        -- Bits 31:24 of CRCSEED are 0x64
       H65 = 0x65                        -- Bits 31:24 of CRCSEED are 0x65
       H66 = 0x66                        -- Bits 31:24 of CRCSEED are 0x66
       H67 = 0x67                        -- Bits 31:24 of CRCSEED are 0x67
       H68 = 0x68                        -- Bits 31:24 of CRCSEED are 0x68
       H69 = 0x69                        -- Bits 31:24 of CRCSEED are 0x69
       H6A = 0x6A                        -- Bits 31:24 of CRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of CRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of CRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of CRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of CRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of CRCSEED are 0x6F
       H70 = 0x70                        -- Bits 31:24 of CRCSEED are 0x70
       H71 = 0x71                        -- Bits 31:24 of CRCSEED are 0x71
       H72 = 0x72                        -- Bits 31:24 of CRCSEED are 0x72
       H73 = 0x73                        -- Bits 31:24 of CRCSEED are 0x73
       H74 = 0x74                        -- Bits 31:24 of CRCSEED are 0x74
       H75 = 0x75                        -- Bits 31:24 of CRCSEED are 0x75
       H76 = 0x76                        -- Bits 31:24 of CRCSEED are 0x76
       H77 = 0x77                        -- Bits 31:24 of CRCSEED are 0x77
       H78 = 0x78                        -- Bits 31:24 of CRCSEED are 0x78
       H79 = 0x79                        -- Bits 31:24 of CRCSEED are 0x79
       H7A = 0x7A                        -- Bits 31:24 of CRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of CRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of CRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of CRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of CRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of CRCSEED are 0x7F
       H80 = 0x80                        -- Bits 31:24 of CRCSEED are 0x80
       H81 = 0x81                        -- Bits 31:24 of CRCSEED are 0x81
       H82 = 0x82                        -- Bits 31:24 of CRCSEED are 0x82
       H83 = 0x83                        -- Bits 31:24 of CRCSEED are 0x83
       H84 = 0x84                        -- Bits 31:24 of CRCSEED are 0x84
       H85 = 0x85                        -- Bits 31:24 of CRCSEED are 0x85
       H86 = 0x86                        -- Bits 31:24 of CRCSEED are 0x86
       H87 = 0x87                        -- Bits 31:24 of CRCSEED are 0x87
       H88 = 0x88                        -- Bits 31:24 of CRCSEED are 0x88
       H89 = 0x89                        -- Bits 31:24 of CRCSEED are 0x89
       H8A = 0x8A                        -- Bits 31:24 of CRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of CRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of CRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of CRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of CRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of CRCSEED are 0x8F
       H90 = 0x90                        -- Bits 31:24 of CRCSEED are 0x90
       H91 = 0x91                        -- Bits 31:24 of CRCSEED are 0x91
       H92 = 0x92                        -- Bits 31:24 of CRCSEED are 0x92
       H93 = 0x93                        -- Bits 31:24 of CRCSEED are 0x93
       H94 = 0x94                        -- Bits 31:24 of CRCSEED are 0x94
       H95 = 0x95                        -- Bits 31:24 of CRCSEED are 0x95
       H96 = 0x96                        -- Bits 31:24 of CRCSEED are 0x96
       H97 = 0x97                        -- Bits 31:24 of CRCSEED are 0x97
       H98 = 0x98                        -- Bits 31:24 of CRCSEED are 0x98
       H99 = 0x99                        -- Bits 31:24 of CRCSEED are 0x99
       H9A = 0x9A                        -- Bits 31:24 of CRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of CRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of CRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of CRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of CRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of CRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of CRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of CRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of CRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of CRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of CRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of CRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of CRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of CRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of CRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of CRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of CRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of CRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of CRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of CRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of CRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of CRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of CRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of CRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of CRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of CRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of CRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of CRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of CRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of CRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of CRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of CRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of CRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of CRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of CRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of CRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of CRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of CRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of CRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of CRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of CRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of CRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of CRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of CRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of CRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of CRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of CRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of CRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of CRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of CRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of CRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of CRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of CRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of CRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of CRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of CRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of CRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of CRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of CRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of CRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of CRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of CRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of CRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of CRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of CRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of CRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of CRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of CRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of CRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of CRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of CRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of CRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of CRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of CRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of CRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of CRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of CRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of CRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of CRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of CRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of CRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of CRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of CRCSEED are 0xEC
       HED = 0xED                        -- Bits 31:24 of CRCSEED are 0xED
       HEE = 0xEE                        -- Bits 31:24 of CRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of CRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of CRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of CRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of CRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of CRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of CRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of CRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of CRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of CRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of CRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of CRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of CRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of CRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of CRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of CRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of CRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of CRCSEED are 0xFF
       }
--
-- CONFIG29 (0x30001C)
--
pragma fuse_def CRCSEEDU:28  0xFF {      -- Non-Boot Sector Seed for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of CRCSEED are 0x00
       H01 = 0x1                         -- Bits 23:16 of CRCSEED are 0x01
       H02 = 0x2                         -- Bits 23:16 of CRCSEED are 0x02
       H03 = 0x3                         -- Bits 23:16 of CRCSEED are 0x03
       H04 = 0x4                         -- Bits 23:16 of CRCSEED are 0x04
       H05 = 0x5                         -- Bits 23:16 of CRCSEED are 0x05
       H06 = 0x6                         -- Bits 23:16 of CRCSEED are 0x06
       H07 = 0x7                         -- Bits 23:16 of CRCSEED are 0x07
       H08 = 0x8                         -- Bits 23:16 of CRCSEED are 0x08
       H09 = 0x9                         -- Bits 23:16 of CRCSEED are 0x09
       H0A = 0xA                         -- Bits 23:16 of CRCSEED are 0x0A
       H0B = 0xB                         -- Bits 23:16 of CRCSEED are 0x0B
       H0C = 0xC                         -- Bits 23:16 of CRCSEED are 0x0C
       H0D = 0xD                         -- Bits 23:16 of CRCSEED are 0x0D
       H0E = 0xE                         -- Bits 23:16 of CRCSEED are 0x0E
       H0F = 0xF                         -- Bits 23:16 of CRCSEED are 0x0F
       H10 = 0x10                        -- Bits 23:16 of CRCSEED are 0x10
       H11 = 0x11                        -- Bits 23:16 of CRCSEED are 0x11
       H12 = 0x12                        -- Bits 23:16 of CRCSEED are 0x12
       H13 = 0x13                        -- Bits 23:16 of CRCSEED are 0x13
       H14 = 0x14                        -- Bits 23:16 of CRCSEED are 0x14
       H15 = 0x15                        -- Bits 23:16 of CRCSEED are 0x15
       H16 = 0x16                        -- Bits 23:16 of CRCSEED are 0x16
       H17 = 0x17                        -- Bits 23:16 of CRCSEED are 0x17
       H18 = 0x18                        -- Bits 23:16 of CRCSEED are 0x18
       H19 = 0x19                        -- Bits 23:16 of CRCSEED are 0x19
       H1A = 0x1A                        -- Bits 23:16 of CRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of CRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of CRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of CRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of CRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of CRCSEED are 0x1F
       H20 = 0x20                        -- Bits 23:16 of CRCSEED are 0x20
       H21 = 0x21                        -- Bits 23:16 of CRCSEED are 0x21
       H22 = 0x22                        -- Bits 23:16 of CRCSEED are 0x22
       H23 = 0x23                        -- Bits 23:16 of CRCSEED are 0x23
       H24 = 0x24                        -- Bits 23:16 of CRCSEED are 0x24
       H25 = 0x25                        -- Bits 23:16 of CRCSEED are 0x25
       H26 = 0x26                        -- Bits 23:16 of CRCSEED are 0x26
       H27 = 0x27                        -- Bits 23:16 of CRCSEED are 0x27
       H28 = 0x28                        -- Bits 23:16 of CRCSEED are 0x28
       H29 = 0x29                        -- Bits 23:16 of CRCSEED are 0x29
       H2A = 0x2A                        -- Bits 23:16 of CRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of CRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of CRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of CRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of CRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of CRCSEED are 0x2F
       H30 = 0x30                        -- Bits 23:16 of CRCSEED are 0x30
       H31 = 0x31                        -- Bits 23:16 of CRCSEED are 0x31
       H32 = 0x32                        -- Bits 23:16 of CRCSEED are 0x32
       H33 = 0x33                        -- Bits 23:16 of CRCSEED are 0x33
       H34 = 0x34                        -- Bits 23:16 of CRCSEED are 0x34
       H35 = 0x35                        -- Bits 23:16 of CRCSEED are 0x35
       H36 = 0x36                        -- Bits 23:16 of CRCSEED are 0x36
       H37 = 0x37                        -- Bits 23:16 of CRCSEED are 0x37
       H38 = 0x38                        -- Bits 23:16 of CRCSEED are 0x38
       H39 = 0x39                        -- Bits 23:16 of CRCSEED are 0x39
       H3A = 0x3A                        -- Bits 23:16 of CRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of CRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of CRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of CRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of CRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of CRCSEED are 0x3F
       H40 = 0x40                        -- Bits 23:16 of CRCSEED are 0x40
       H41 = 0x41                        -- Bits 23:16 of CRCSEED are 0x41
       H42 = 0x42                        -- Bits 23:16 of CRCSEED are 0x42
       H43 = 0x43                        -- Bits 23:16 of CRCSEED are 0x43
       H44 = 0x44                        -- Bits 23:16 of CRCSEED are 0x44
       H45 = 0x45                        -- Bits 23:16 of CRCSEED are 0x45
       H46 = 0x46                        -- Bits 23:16 of CRCSEED are 0x46
       H47 = 0x47                        -- Bits 23:16 of CRCSEED are 0x47
       H48 = 0x48                        -- Bits 23:16 of CRCSEED are 0x48
       H49 = 0x49                        -- Bits 23:16 of CRCSEED are 0x49
       H4A = 0x4A                        -- Bits 23:16 of CRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of CRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of CRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of CRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of CRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of CRCSEED are 0x4F
       H50 = 0x50                        -- Bits 23:16 of CRCSEED are 0x50
       H51 = 0x51                        -- Bits 23:16 of CRCSEED are 0x51
       H52 = 0x52                        -- Bits 23:16 of CRCSEED are 0x52
       H53 = 0x53                        -- Bits 23:16 of CRCSEED are 0x53
       H54 = 0x54                        -- Bits 23:16 of CRCSEED are 0x54
       H55 = 0x55                        -- Bits 23:16 of CRCSEED are 0x55
       H56 = 0x56                        -- Bits 23:16 of CRCSEED are 0x56
       H57 = 0x57                        -- Bits 23:16 of CRCSEED are 0x57
       H58 = 0x58                        -- Bits 23:16 of CRCSEED are 0x58
       H59 = 0x59                        -- Bits 23:16 of CRCSEED are 0x59
       H5A = 0x5A                        -- Bits 23:16 of CRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of CRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of CRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of CRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of CRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of CRCSEED are 0x5F
       H60 = 0x60                        -- Bits 23:16 of CRCSEED are 0x60
       H61 = 0x61                        -- Bits 23:16 of CRCSEED are 0x61
       H62 = 0x62                        -- Bits 23:16 of CRCSEED are 0x62
       H63 = 0x63                        -- Bits 23:16 of CRCSEED are 0x63
       H64 = 0x64                        -- Bits 23:16 of CRCSEED are 0x64
       H65 = 0x65                        -- Bits 23:16 of CRCSEED are 0x65
       H66 = 0x66                        -- Bits 23:16 of CRCSEED are 0x66
       H67 = 0x67                        -- Bits 23:16 of CRCSEED are 0x67
       H68 = 0x68                        -- Bits 23:16 of CRCSEED are 0x68
       H69 = 0x69                        -- Bits 23:16 of CRCSEED are 0x69
       H6A = 0x6A                        -- Bits 23:16 of CRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of CRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of CRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of CRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of CRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of CRCSEED are 0x6F
       H70 = 0x70                        -- Bits 23:16 of CRCSEED are 0x70
       H71 = 0x71                        -- Bits 23:16 of CRCSEED are 0x71
       H72 = 0x72                        -- Bits 23:16 of CRCSEED are 0x72
       H73 = 0x73                        -- Bits 23:16 of CRCSEED are 0x73
       H74 = 0x74                        -- Bits 23:16 of CRCSEED are 0x74
       H75 = 0x75                        -- Bits 23:16 of CRCSEED are 0x75
       H76 = 0x76                        -- Bits 23:16 of CRCSEED are 0x76
       H77 = 0x77                        -- Bits 23:16 of CRCSEED are 0x77
       H78 = 0x78                        -- Bits 23:16 of CRCSEED are 0x78
       H79 = 0x79                        -- Bits 23:16 of CRCSEED are 0x79
       H7A = 0x7A                        -- Bits 23:16 of CRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of CRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of CRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of CRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of CRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of CRCSEED are 0x7F
       H80 = 0x80                        -- Bits 23:16 of CRCSEED are 0x80
       H81 = 0x81                        -- Bits 23:16 of CRCSEED are 0x81
       H82 = 0x82                        -- Bits 23:16 of CRCSEED are 0x82
       H83 = 0x83                        -- Bits 23:16 of CRCSEED are 0x83
       H84 = 0x84                        -- Bits 23:16 of CRCSEED are 0x84
       H85 = 0x85                        -- Bits 23:16 of CRCSEED are 0x85
       H86 = 0x86                        -- Bits 23:16 of CRCSEED are 0x86
       H87 = 0x87                        -- Bits 23:16 of CRCSEED are 0x87
       H88 = 0x88                        -- Bits 23:16 of CRCSEED are 0x88
       H89 = 0x89                        -- Bits 23:16 of CRCSEED are 0x89
       H8A = 0x8A                        -- Bits 23:16 of CRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of CRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of CRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of CRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of CRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of CRCSEED are 0x8F
       H90 = 0x90                        -- Bits 23:16 of CRCSEED are 0x90
       H91 = 0x91                        -- Bits 23:16 of CRCSEED are 0x91
       H92 = 0x92                        -- Bits 23:16 of CRCSEED are 0x92
       H93 = 0x93                        -- Bits 23:16 of CRCSEED are 0x93
       H94 = 0x94                        -- Bits 23:16 of CRCSEED are 0x94
       H95 = 0x95                        -- Bits 23:16 of CRCSEED are 0x95
       H96 = 0x96                        -- Bits 23:16 of CRCSEED are 0x96
       H97 = 0x97                        -- Bits 23:16 of CRCSEED are 0x97
       H98 = 0x98                        -- Bits 23:16 of CRCSEED are 0x98
       H99 = 0x99                        -- Bits 23:16 of CRCSEED are 0x99
       H9A = 0x9A                        -- Bits 23:16 of CRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of CRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of CRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of CRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of CRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of CRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of CRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of CRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of CRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of CRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of CRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of CRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of CRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of CRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of CRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of CRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of CRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of CRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of CRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of CRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of CRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of CRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of CRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of CRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of CRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of CRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of CRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of CRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of CRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of CRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of CRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of CRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of CRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of CRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of CRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of CRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of CRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of CRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of CRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of CRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of CRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of CRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of CRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of CRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of CRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of CRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of CRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of CRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of CRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of CRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of CRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of CRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of CRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of CRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of CRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of CRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of CRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of CRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of CRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of CRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of CRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of CRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of CRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of CRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of CRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of CRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of CRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of CRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of CRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of CRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of CRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of CRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of CRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of CRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of CRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of CRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of CRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of CRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of CRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of CRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of CRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of CRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of CRCSEED are 0xEC
       HED = 0xED                        -- Bits 23:16 of CRCSEED are 0xED
       HEE = 0xEE                        -- Bits 23:16 of CRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of CRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of CRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of CRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of CRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of CRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of CRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of CRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of CRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of CRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of CRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of CRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of CRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of CRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of CRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of CRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of CRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of CRCSEED are 0xFF
       }
--
-- CONFIG30 (0x30001D)
--
pragma fuse_def CRCSEEDH:29  0xFF {      -- Non-Boot Sector Seed for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of CRCSEED are 0x00
       H01 = 0x1                         -- Bits 15:8 of CRCSEED are 0x01
       H02 = 0x2                         -- Bits 15:8 of CRCSEED are 0x02
       H03 = 0x3                         -- Bits 15:8 of CRCSEED are 0x03
       H04 = 0x4                         -- Bits 15:8 of CRCSEED are 0x04
       H05 = 0x5                         -- Bits 15:8 of CRCSEED are 0x05
       H06 = 0x6                         -- Bits 15:8 of CRCSEED are 0x06
       H07 = 0x7                         -- Bits 15:8 of CRCSEED are 0x07
       H08 = 0x8                         -- Bits 15:8 of CRCSEED are 0x08
       H09 = 0x9                         -- Bits 15:8 of CRCSEED are 0x09
       H0A = 0xA                         -- Bits 15:8 of CRCSEED are 0x0A
       H0B = 0xB                         -- Bits 15:8 of CRCSEED are 0x0B
       H0C = 0xC                         -- Bits 15:8 of CRCSEED are 0x0C
       H0D = 0xD                         -- Bits 15:8 of CRCSEED are 0x0D
       H0E = 0xE                         -- Bits 15:8 of CRCSEED are 0x0E
       H0F = 0xF                         -- Bits 15:8 of CRCSEED are 0x0F
       H10 = 0x10                        -- Bits 15:8 of CRCSEED are 0x10
       H11 = 0x11                        -- Bits 15:8 of CRCSEED are 0x11
       H12 = 0x12                        -- Bits 15:8 of CRCSEED are 0x12
       H13 = 0x13                        -- Bits 15:8 of CRCSEED are 0x13
       H14 = 0x14                        -- Bits 15:8 of CRCSEED are 0x14
       H15 = 0x15                        -- Bits 15:8 of CRCSEED are 0x15
       H16 = 0x16                        -- Bits 15:8 of CRCSEED are 0x16
       H17 = 0x17                        -- Bits 15:8 of CRCSEED are 0x17
       H18 = 0x18                        -- Bits 15:8 of CRCSEED are 0x18
       H19 = 0x19                        -- Bits 15:8 of CRCSEED are 0x19
       H1A = 0x1A                        -- Bits 15:8 of CRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of CRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of CRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of CRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of CRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of CRCSEED are 0x1F
       H20 = 0x20                        -- Bits 15:8 of CRCSEED are 0x20
       H21 = 0x21                        -- Bits 15:8 of CRCSEED are 0x21
       H22 = 0x22                        -- Bits 15:8 of CRCSEED are 0x22
       H23 = 0x23                        -- Bits 15:8 of CRCSEED are 0x23
       H24 = 0x24                        -- Bits 15:8 of CRCSEED are 0x24
       H25 = 0x25                        -- Bits 15:8 of CRCSEED are 0x25
       H26 = 0x26                        -- Bits 15:8 of CRCSEED are 0x26
       H27 = 0x27                        -- Bits 15:8 of CRCSEED are 0x27
       H28 = 0x28                        -- Bits 15:8 of CRCSEED are 0x28
       H29 = 0x29                        -- Bits 15:8 of CRCSEED are 0x29
       H2A = 0x2A                        -- Bits 15:8 of CRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of CRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of CRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of CRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of CRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of CRCSEED are 0x2F
       H30 = 0x30                        -- Bits 15:8 of CRCSEED are 0x30
       H31 = 0x31                        -- Bits 15:8 of CRCSEED are 0x31
       H32 = 0x32                        -- Bits 15:8 of CRCSEED are 0x32
       H33 = 0x33                        -- Bits 15:8 of CRCSEED are 0x33
       H34 = 0x34                        -- Bits 15:8 of CRCSEED are 0x34
       H35 = 0x35                        -- Bits 15:8 of CRCSEED are 0x35
       H36 = 0x36                        -- Bits 15:8 of CRCSEED are 0x36
       H37 = 0x37                        -- Bits 15:8 of CRCSEED are 0x37
       H38 = 0x38                        -- Bits 15:8 of CRCSEED are 0x38
       H39 = 0x39                        -- Bits 15:8 of CRCSEED are 0x39
       H3A = 0x3A                        -- Bits 15:8 of CRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of CRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of CRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of CRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of CRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of CRCSEED are 0x3F
       H40 = 0x40                        -- Bits 15:8 of CRCSEED are 0x40
       H41 = 0x41                        -- Bits 15:8 of CRCSEED are 0x41
       H42 = 0x42                        -- Bits 15:8 of CRCSEED are 0x42
       H43 = 0x43                        -- Bits 15:8 of CRCSEED are 0x43
       H44 = 0x44                        -- Bits 15:8 of CRCSEED are 0x44
       H45 = 0x45                        -- Bits 15:8 of CRCSEED are 0x45
       H46 = 0x46                        -- Bits 15:8 of CRCSEED are 0x46
       H47 = 0x47                        -- Bits 15:8 of CRCSEED are 0x47
       H48 = 0x48                        -- Bits 15:8 of CRCSEED are 0x48
       H49 = 0x49                        -- Bits 15:8 of CRCSEED are 0x49
       H4A = 0x4A                        -- Bits 15:8 of CRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of CRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of CRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of CRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of CRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of CRCSEED are 0x4F
       H50 = 0x50                        -- Bits 15:8 of CRCSEED are 0x50
       H51 = 0x51                        -- Bits 15:8 of CRCSEED are 0x51
       H52 = 0x52                        -- Bits 15:8 of CRCSEED are 0x52
       H53 = 0x53                        -- Bits 15:8 of CRCSEED are 0x53
       H54 = 0x54                        -- Bits 15:8 of CRCSEED are 0x54
       H55 = 0x55                        -- Bits 15:8 of CRCSEED are 0x55
       H56 = 0x56                        -- Bits 15:8 of CRCSEED are 0x56
       H57 = 0x57                        -- Bits 15:8 of CRCSEED are 0x57
       H58 = 0x58                        -- Bits 15:8 of CRCSEED are 0x58
       H59 = 0x59                        -- Bits 15:8 of CRCSEED are 0x59
       H5A = 0x5A                        -- Bits 15:8 of CRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of CRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of CRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of CRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of CRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of CRCSEED are 0x5F
       H60 = 0x60                        -- Bits 15:8 of CRCSEED are 0x60
       H61 = 0x61                        -- Bits 15:8 of CRCSEED are 0x61
       H62 = 0x62                        -- Bits 15:8 of CRCSEED are 0x62
       H63 = 0x63                        -- Bits 15:8 of CRCSEED are 0x63
       H64 = 0x64                        -- Bits 15:8 of CRCSEED are 0x64
       H65 = 0x65                        -- Bits 15:8 of CRCSEED are 0x65
       H66 = 0x66                        -- Bits 15:8 of CRCSEED are 0x66
       H67 = 0x67                        -- Bits 15:8 of CRCSEED are 0x67
       H68 = 0x68                        -- Bits 15:8 of CRCSEED are 0x68
       H69 = 0x69                        -- Bits 15:8 of CRCSEED are 0x69
       H6A = 0x6A                        -- Bits 15:8 of CRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of CRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of CRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of CRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of CRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of CRCSEED are 0x6F
       H70 = 0x70                        -- Bits 15:8 of CRCSEED are 0x70
       H71 = 0x71                        -- Bits 15:8 of CRCSEED are 0x71
       H72 = 0x72                        -- Bits 15:8 of CRCSEED are 0x72
       H73 = 0x73                        -- Bits 15:8 of CRCSEED are 0x73
       H74 = 0x74                        -- Bits 15:8 of CRCSEED are 0x74
       H75 = 0x75                        -- Bits 15:8 of CRCSEED are 0x75
       H76 = 0x76                        -- Bits 15:8 of CRCSEED are 0x76
       H77 = 0x77                        -- Bits 15:8 of CRCSEED are 0x77
       H78 = 0x78                        -- Bits 15:8 of CRCSEED are 0x78
       H79 = 0x79                        -- Bits 15:8 of CRCSEED are 0x79
       H7A = 0x7A                        -- Bits 15:8 of CRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of CRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of CRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of CRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of CRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of CRCSEED are 0x7F
       H80 = 0x80                        -- Bits 15:8 of CRCSEED are 0x80
       H81 = 0x81                        -- Bits 15:8 of CRCSEED are 0x81
       H82 = 0x82                        -- Bits 15:8 of CRCSEED are 0x82
       H83 = 0x83                        -- Bits 15:8 of CRCSEED are 0x83
       H84 = 0x84                        -- Bits 15:8 of CRCSEED are 0x84
       H85 = 0x85                        -- Bits 15:8 of CRCSEED are 0x85
       H86 = 0x86                        -- Bits 15:8 of CRCSEED are 0x86
       H87 = 0x87                        -- Bits 15:8 of CRCSEED are 0x87
       H88 = 0x88                        -- Bits 15:8 of CRCSEED are 0x88
       H89 = 0x89                        -- Bits 15:8 of CRCSEED are 0x89
       H8A = 0x8A                        -- Bits 15:8 of CRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of CRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of CRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of CRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of CRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of CRCSEED are 0x8F
       H90 = 0x90                        -- Bits 15:8 of CRCSEED are 0x90
       H91 = 0x91                        -- Bits 15:8 of CRCSEED are 0x91
       H92 = 0x92                        -- Bits 15:8 of CRCSEED are 0x92
       H93 = 0x93                        -- Bits 15:8 of CRCSEED are 0x93
       H94 = 0x94                        -- Bits 15:8 of CRCSEED are 0x94
       H95 = 0x95                        -- Bits 15:8 of CRCSEED are 0x95
       H96 = 0x96                        -- Bits 15:8 of CRCSEED are 0x96
       H97 = 0x97                        -- Bits 15:8 of CRCSEED are 0x97
       H98 = 0x98                        -- Bits 15:8 of CRCSEED are 0x98
       H99 = 0x99                        -- Bits 15:8 of CRCSEED are 0x99
       H9A = 0x9A                        -- Bits 15:8 of CRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of CRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of CRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of CRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of CRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of CRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of CRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of CRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of CRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of CRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of CRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of CRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of CRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of CRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of CRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of CRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of CRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of CRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of CRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of CRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of CRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of CRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of CRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of CRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of CRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of CRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of CRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of CRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of CRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of CRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of CRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of CRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of CRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of CRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of CRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of CRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of CRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of CRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of CRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of CRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of CRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of CRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of CRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of CRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of CRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of CRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of CRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of CRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of CRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of CRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of CRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of CRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of CRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of CRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of CRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of CRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of CRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of CRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of CRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of CRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of CRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of CRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of CRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of CRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of CRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of CRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of CRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of CRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of CRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of CRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of CRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of CRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of CRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of CRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of CRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of CRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of CRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of CRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of CRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of CRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of CRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of CRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of CRCSEED are 0xEC
       HED = 0xED                        -- Bits 15:8 of CRCSEED are 0xED
       HEE = 0xEE                        -- Bits 15:8 of CRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of CRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of CRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of CRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of CRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of CRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of CRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of CRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of CRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of CRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of CRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of CRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of CRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of CRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of CRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of CRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of CRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of CRCSEED are 0xFF
       }
--
-- CONFIG31 (0x30001E)
--
pragma fuse_def CRCSEEDL:30  0xFF {      -- Non-Boot Sector Seed for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of CRCSEED are 0x00
       H01 = 0x1                         -- Bits 7:0 of CRCSEED are 0x01
       H02 = 0x2                         -- Bits 7:0 of CRCSEED are 0x02
       H03 = 0x3                         -- Bits 7:0 of CRCSEED are 0x03
       H04 = 0x4                         -- Bits 7:0 of CRCSEED are 0x04
       H05 = 0x5                         -- Bits 7:0 of CRCSEED are 0x05
       H06 = 0x6                         -- Bits 7:0 of CRCSEED are 0x06
       H07 = 0x7                         -- Bits 7:0 of CRCSEED are 0x07
       H08 = 0x8                         -- Bits 7:0 of CRCSEED are 0x08
       H09 = 0x9                         -- Bits 7:0 of CRCSEED are 0x09
       H0A = 0xA                         -- Bits 7:0 of CRCSEED are 0x0A
       H0B = 0xB                         -- Bits 7:0 of CRCSEED are 0x0B
       H0C = 0xC                         -- Bits 7:0 of CRCSEED are 0x0C
       H0D = 0xD                         -- Bits 7:0 of CRCSEED are 0x0D
       H0E = 0xE                         -- Bits 7:0 of CRCSEED are 0x0E
       H0F = 0xF                         -- Bits 7:0 of CRCSEED are 0x0F
       H10 = 0x10                        -- Bits 7:0 of CRCSEED are 0x10
       H11 = 0x11                        -- Bits 7:0 of CRCSEED are 0x11
       H12 = 0x12                        -- Bits 7:0 of CRCSEED are 0x12
       H13 = 0x13                        -- Bits 7:0 of CRCSEED are 0x13
       H14 = 0x14                        -- Bits 7:0 of CRCSEED are 0x14
       H15 = 0x15                        -- Bits 7:0 of CRCSEED are 0x15
       H16 = 0x16                        -- Bits 7:0 of CRCSEED are 0x16
       H17 = 0x17                        -- Bits 7:0 of CRCSEED are 0x17
       H18 = 0x18                        -- Bits 7:0 of CRCSEED are 0x18
       H19 = 0x19                        -- Bits 7:0 of CRCSEED are 0x19
       H1A = 0x1A                        -- Bits 7:0 of CRCSEED are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of CRCSEED are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of CRCSEED are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of CRCSEED are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of CRCSEED are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of CRCSEED are 0x1F
       H20 = 0x20                        -- Bits 7:0 of CRCSEED are 0x20
       H21 = 0x21                        -- Bits 7:0 of CRCSEED are 0x21
       H22 = 0x22                        -- Bits 7:0 of CRCSEED are 0x22
       H23 = 0x23                        -- Bits 7:0 of CRCSEED are 0x23
       H24 = 0x24                        -- Bits 7:0 of CRCSEED are 0x24
       H25 = 0x25                        -- Bits 7:0 of CRCSEED are 0x25
       H26 = 0x26                        -- Bits 7:0 of CRCSEED are 0x26
       H27 = 0x27                        -- Bits 7:0 of CRCSEED are 0x27
       H28 = 0x28                        -- Bits 7:0 of CRCSEED are 0x28
       H29 = 0x29                        -- Bits 7:0 of CRCSEED are 0x29
       H2A = 0x2A                        -- Bits 7:0 of CRCSEED are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of CRCSEED are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of CRCSEED are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of CRCSEED are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of CRCSEED are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of CRCSEED are 0x2F
       H30 = 0x30                        -- Bits 7:0 of CRCSEED are 0x30
       H31 = 0x31                        -- Bits 7:0 of CRCSEED are 0x31
       H32 = 0x32                        -- Bits 7:0 of CRCSEED are 0x32
       H33 = 0x33                        -- Bits 7:0 of CRCSEED are 0x33
       H34 = 0x34                        -- Bits 7:0 of CRCSEED are 0x34
       H35 = 0x35                        -- Bits 7:0 of CRCSEED are 0x35
       H36 = 0x36                        -- Bits 7:0 of CRCSEED are 0x36
       H37 = 0x37                        -- Bits 7:0 of CRCSEED are 0x37
       H38 = 0x38                        -- Bits 7:0 of CRCSEED are 0x38
       H39 = 0x39                        -- Bits 7:0 of CRCSEED are 0x39
       H3A = 0x3A                        -- Bits 7:0 of CRCSEED are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of CRCSEED are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of CRCSEED are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of CRCSEED are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of CRCSEED are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of CRCSEED are 0x3F
       H40 = 0x40                        -- Bits 7:0 of CRCSEED are 0x40
       H41 = 0x41                        -- Bits 7:0 of CRCSEED are 0x41
       H42 = 0x42                        -- Bits 7:0 of CRCSEED are 0x42
       H43 = 0x43                        -- Bits 7:0 of CRCSEED are 0x43
       H44 = 0x44                        -- Bits 7:0 of CRCSEED are 0x44
       H45 = 0x45                        -- Bits 7:0 of CRCSEED are 0x45
       H46 = 0x46                        -- Bits 7:0 of CRCSEED are 0x46
       H47 = 0x47                        -- Bits 7:0 of CRCSEED are 0x47
       H48 = 0x48                        -- Bits 7:0 of CRCSEED are 0x48
       H49 = 0x49                        -- Bits 7:0 of CRCSEED are 0x49
       H4A = 0x4A                        -- Bits 7:0 of CRCSEED are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of CRCSEED are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of CRCSEED are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of CRCSEED are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of CRCSEED are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of CRCSEED are 0x4F
       H50 = 0x50                        -- Bits 7:0 of CRCSEED are 0x50
       H51 = 0x51                        -- Bits 7:0 of CRCSEED are 0x51
       H52 = 0x52                        -- Bits 7:0 of CRCSEED are 0x52
       H53 = 0x53                        -- Bits 7:0 of CRCSEED are 0x53
       H54 = 0x54                        -- Bits 7:0 of CRCSEED are 0x54
       H55 = 0x55                        -- Bits 7:0 of CRCSEED are 0x55
       H56 = 0x56                        -- Bits 7:0 of CRCSEED are 0x56
       H57 = 0x57                        -- Bits 7:0 of CRCSEED are 0x57
       H58 = 0x58                        -- Bits 7:0 of CRCSEED are 0x58
       H59 = 0x59                        -- Bits 7:0 of CRCSEED are 0x59
       H5A = 0x5A                        -- Bits 7:0 of CRCSEED are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of CRCSEED are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of CRCSEED are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of CRCSEED are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of CRCSEED are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of CRCSEED are 0x5F
       H60 = 0x60                        -- Bits 7:0 of CRCSEED are 0x60
       H61 = 0x61                        -- Bits 7:0 of CRCSEED are 0x61
       H62 = 0x62                        -- Bits 7:0 of CRCSEED are 0x62
       H63 = 0x63                        -- Bits 7:0 of CRCSEED are 0x63
       H64 = 0x64                        -- Bits 7:0 of CRCSEED are 0x64
       H65 = 0x65                        -- Bits 7:0 of CRCSEED are 0x65
       H66 = 0x66                        -- Bits 7:0 of CRCSEED are 0x66
       H67 = 0x67                        -- Bits 7:0 of CRCSEED are 0x67
       H68 = 0x68                        -- Bits 7:0 of CRCSEED are 0x68
       H69 = 0x69                        -- Bits 7:0 of CRCSEED are 0x69
       H6A = 0x6A                        -- Bits 7:0 of CRCSEED are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of CRCSEED are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of CRCSEED are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of CRCSEED are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of CRCSEED are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of CRCSEED are 0x6F
       H70 = 0x70                        -- Bits 7:0 of CRCSEED are 0x70
       H71 = 0x71                        -- Bits 7:0 of CRCSEED are 0x71
       H72 = 0x72                        -- Bits 7:0 of CRCSEED are 0x72
       H73 = 0x73                        -- Bits 7:0 of CRCSEED are 0x73
       H74 = 0x74                        -- Bits 7:0 of CRCSEED are 0x74
       H75 = 0x75                        -- Bits 7:0 of CRCSEED are 0x75
       H76 = 0x76                        -- Bits 7:0 of CRCSEED are 0x76
       H77 = 0x77                        -- Bits 7:0 of CRCSEED are 0x77
       H78 = 0x78                        -- Bits 7:0 of CRCSEED are 0x78
       H79 = 0x79                        -- Bits 7:0 of CRCSEED are 0x79
       H7A = 0x7A                        -- Bits 7:0 of CRCSEED are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of CRCSEED are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of CRCSEED are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of CRCSEED are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of CRCSEED are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of CRCSEED are 0x7F
       H80 = 0x80                        -- Bits 7:0 of CRCSEED are 0x80
       H81 = 0x81                        -- Bits 7:0 of CRCSEED are 0x81
       H82 = 0x82                        -- Bits 7:0 of CRCSEED are 0x82
       H83 = 0x83                        -- Bits 7:0 of CRCSEED are 0x83
       H84 = 0x84                        -- Bits 7:0 of CRCSEED are 0x84
       H85 = 0x85                        -- Bits 7:0 of CRCSEED are 0x85
       H86 = 0x86                        -- Bits 7:0 of CRCSEED are 0x86
       H87 = 0x87                        -- Bits 7:0 of CRCSEED are 0x87
       H88 = 0x88                        -- Bits 7:0 of CRCSEED are 0x88
       H89 = 0x89                        -- Bits 7:0 of CRCSEED are 0x89
       H8A = 0x8A                        -- Bits 7:0 of CRCSEED are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of CRCSEED are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of CRCSEED are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of CRCSEED are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of CRCSEED are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of CRCSEED are 0x8F
       H90 = 0x90                        -- Bits 7:0 of CRCSEED are 0x90
       H91 = 0x91                        -- Bits 7:0 of CRCSEED are 0x91
       H92 = 0x92                        -- Bits 7:0 of CRCSEED are 0x92
       H93 = 0x93                        -- Bits 7:0 of CRCSEED are 0x93
       H94 = 0x94                        -- Bits 7:0 of CRCSEED are 0x94
       H95 = 0x95                        -- Bits 7:0 of CRCSEED are 0x95
       H96 = 0x96                        -- Bits 7:0 of CRCSEED are 0x96
       H97 = 0x97                        -- Bits 7:0 of CRCSEED are 0x97
       H98 = 0x98                        -- Bits 7:0 of CRCSEED are 0x98
       H99 = 0x99                        -- Bits 7:0 of CRCSEED are 0x99
       H9A = 0x9A                        -- Bits 7:0 of CRCSEED are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of CRCSEED are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of CRCSEED are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of CRCSEED are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of CRCSEED are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of CRCSEED are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of CRCSEED are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of CRCSEED are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of CRCSEED are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of CRCSEED are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of CRCSEED are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of CRCSEED are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of CRCSEED are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of CRCSEED are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of CRCSEED are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of CRCSEED are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of CRCSEED are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of CRCSEED are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of CRCSEED are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of CRCSEED are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of CRCSEED are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of CRCSEED are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of CRCSEED are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of CRCSEED are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of CRCSEED are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of CRCSEED are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of CRCSEED are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of CRCSEED are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of CRCSEED are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of CRCSEED are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of CRCSEED are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of CRCSEED are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of CRCSEED are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of CRCSEED are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of CRCSEED are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of CRCSEED are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of CRCSEED are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of CRCSEED are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of CRCSEED are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of CRCSEED are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of CRCSEED are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of CRCSEED are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of CRCSEED are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of CRCSEED are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of CRCSEED are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of CRCSEED are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of CRCSEED are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of CRCSEED are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of CRCSEED are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of CRCSEED are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of CRCSEED are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of CRCSEED are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of CRCSEED are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of CRCSEED are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of CRCSEED are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of CRCSEED are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of CRCSEED are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of CRCSEED are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of CRCSEED are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of CRCSEED are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of CRCSEED are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of CRCSEED are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of CRCSEED are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of CRCSEED are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of CRCSEED are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of CRCSEED are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of CRCSEED are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of CRCSEED are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of CRCSEED are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of CRCSEED are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of CRCSEED are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of CRCSEED are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of CRCSEED are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of CRCSEED are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of CRCSEED are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of CRCSEED are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of CRCSEED are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of CRCSEED are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of CRCSEED are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of CRCSEED are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of CRCSEED are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of CRCSEED are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of CRCSEED are 0xEC
       HED = 0xED                        -- Bits 7:0 of CRCSEED are 0xED
       HEE = 0xEE                        -- Bits 7:0 of CRCSEED are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of CRCSEED are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of CRCSEED are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of CRCSEED are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of CRCSEED are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of CRCSEED are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of CRCSEED are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of CRCSEED are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of CRCSEED are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of CRCSEED are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of CRCSEED are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of CRCSEED are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of CRCSEED are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of CRCSEED are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of CRCSEED are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of CRCSEED are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of CRCSEED are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of CRCSEED are 0xFF
       }
--
-- CONFIG32 (0x30001F)
--
pragma fuse_def CRCEREST:31  0xFF {      -- Non-Boot Sector Expected Result for CRC on boot bits 31-24
       H00 = 0x0                         -- Bits 31:24 of CRCERES are 0x00
       H01 = 0x1                         -- Bits 31:24 of CRCERES are 0x01
       H02 = 0x2                         -- Bits 31:24 of CRCERES are 0x02
       H03 = 0x3                         -- Bits 31:24 of CRCERES are 0x03
       H04 = 0x4                         -- Bits 31:24 of CRCERES are 0x04
       H05 = 0x5                         -- Bits 31:24 of CRCERES are 0x05
       H06 = 0x6                         -- Bits 31:24 of CRCERES are 0x06
       H07 = 0x7                         -- Bits 31:24 of CRCERES are 0x07
       H08 = 0x8                         -- Bits 31:24 of CRCERES are 0x08
       H09 = 0x9                         -- Bits 31:24 of CRCERES are 0x09
       H0A = 0xA                         -- Bits 31:24 of CRCERES are 0x0A
       H0B = 0xB                         -- Bits 31:24 of CRCERES are 0x0B
       H0C = 0xC                         -- Bits 31:24 of CRCERES are 0x0C
       H0D = 0xD                         -- Bits 31:24 of CRCERES are 0x0D
       H0E = 0xE                         -- Bits 31:24 of CRCERES are 0x0E
       H0F = 0xF                         -- Bits 31:24 of CRCERES are 0x0F
       H10 = 0x10                        -- Bits 31:24 of CRCERES are 0x10
       H11 = 0x11                        -- Bits 31:24 of CRCERES are 0x11
       H12 = 0x12                        -- Bits 31:24 of CRCERES are 0x12
       H13 = 0x13                        -- Bits 31:24 of CRCERES are 0x13
       H14 = 0x14                        -- Bits 31:24 of CRCERES are 0x14
       H15 = 0x15                        -- Bits 31:24 of CRCERES are 0x15
       H16 = 0x16                        -- Bits 31:24 of CRCERES are 0x16
       H17 = 0x17                        -- Bits 31:24 of CRCERES are 0x17
       H18 = 0x18                        -- Bits 31:24 of CRCERES are 0x18
       H19 = 0x19                        -- Bits 31:24 of CRCERES are 0x19
       H1A = 0x1A                        -- Bits 31:24 of CRCERES are 0x1A
       H1B = 0x1B                        -- Bits 31:24 of CRCERES are 0x1B
       H1C = 0x1C                        -- Bits 31:24 of CRCERES are 0x1C
       H1D = 0x1D                        -- Bits 31:24 of CRCERES are 0x1D
       H1E = 0x1E                        -- Bits 31:24 of CRCERES are 0x1E
       H1F = 0x1F                        -- Bits 31:24 of CRCERES are 0x1F
       H20 = 0x20                        -- Bits 31:24 of CRCERES are 0x20
       H21 = 0x21                        -- Bits 31:24 of CRCERES are 0x21
       H22 = 0x22                        -- Bits 31:24 of CRCERES are 0x22
       H23 = 0x23                        -- Bits 31:24 of CRCERES are 0x23
       H24 = 0x24                        -- Bits 31:24 of CRCERES are 0x24
       H25 = 0x25                        -- Bits 31:24 of CRCERES are 0x25
       H26 = 0x26                        -- Bits 31:24 of CRCERES are 0x26
       H27 = 0x27                        -- Bits 31:24 of CRCERES are 0x27
       H28 = 0x28                        -- Bits 31:24 of CRCERES are 0x28
       H29 = 0x29                        -- Bits 31:24 of CRCERES are 0x29
       H2A = 0x2A                        -- Bits 31:24 of CRCERES are 0x2A
       H2B = 0x2B                        -- Bits 31:24 of CRCERES are 0x2B
       H2C = 0x2C                        -- Bits 31:24 of CRCERES are 0x2C
       H2D = 0x2D                        -- Bits 31:24 of CRCERES are 0x2D
       H2E = 0x2E                        -- Bits 31:24 of CRCERES are 0x2E
       H2F = 0x2F                        -- Bits 31:24 of CRCERES are 0x2F
       H30 = 0x30                        -- Bits 31:24 of CRCERES are 0x30
       H31 = 0x31                        -- Bits 31:24 of CRCERES are 0x31
       H32 = 0x32                        -- Bits 31:24 of CRCERES are 0x32
       H33 = 0x33                        -- Bits 31:24 of CRCERES are 0x33
       H34 = 0x34                        -- Bits 31:24 of CRCERES are 0x34
       H35 = 0x35                        -- Bits 31:24 of CRCERES are 0x35
       H36 = 0x36                        -- Bits 31:24 of CRCERES are 0x36
       H37 = 0x37                        -- Bits 31:24 of CRCERES are 0x37
       H38 = 0x38                        -- Bits 31:24 of CRCERES are 0x38
       H39 = 0x39                        -- Bits 31:24 of CRCERES are 0x39
       H3A = 0x3A                        -- Bits 31:24 of CRCERES are 0x3A
       H3B = 0x3B                        -- Bits 31:24 of CRCERES are 0x3B
       H3C = 0x3C                        -- Bits 31:24 of CRCERES are 0x3C
       H3D = 0x3D                        -- Bits 31:24 of CRCERES are 0x3D
       H3E = 0x3E                        -- Bits 31:24 of CRCERES are 0x3E
       H3F = 0x3F                        -- Bits 31:24 of CRCERES are 0x3F
       H40 = 0x40                        -- Bits 31:24 of CRCERES are 0x40
       H41 = 0x41                        -- Bits 31:24 of CRCERES are 0x41
       H42 = 0x42                        -- Bits 31:24 of CRCERES are 0x42
       H43 = 0x43                        -- Bits 31:24 of CRCERES are 0x43
       H44 = 0x44                        -- Bits 31:24 of CRCERES are 0x44
       H45 = 0x45                        -- Bits 31:24 of CRCERES are 0x45
       H46 = 0x46                        -- Bits 31:24 of CRCERES are 0x46
       H47 = 0x47                        -- Bits 31:24 of CRCERES are 0x47
       H48 = 0x48                        -- Bits 31:24 of CRCERES are 0x48
       H49 = 0x49                        -- Bits 31:24 of CRCERES are 0x49
       H4A = 0x4A                        -- Bits 31:24 of CRCERES are 0x4A
       H4B = 0x4B                        -- Bits 31:24 of CRCERES are 0x4B
       H4C = 0x4C                        -- Bits 31:24 of CRCERES are 0x4C
       H4D = 0x4D                        -- Bits 31:24 of CRCERES are 0x4D
       H4E = 0x4E                        -- Bits 31:24 of CRCERES are 0x4E
       H4F = 0x4F                        -- Bits 31:24 of CRCERES are 0x4F
       H50 = 0x50                        -- Bits 31:24 of CRCERES are 0x50
       H51 = 0x51                        -- Bits 31:24 of CRCERES are 0x51
       H52 = 0x52                        -- Bits 31:24 of CRCERES are 0x52
       H53 = 0x53                        -- Bits 31:24 of CRCERES are 0x53
       H54 = 0x54                        -- Bits 31:24 of CRCERES are 0x54
       H55 = 0x55                        -- Bits 31:24 of CRCERES are 0x55
       H56 = 0x56                        -- Bits 31:24 of CRCERES are 0x56
       H57 = 0x57                        -- Bits 31:24 of CRCERES are 0x57
       H58 = 0x58                        -- Bits 31:24 of CRCERES are 0x58
       H59 = 0x59                        -- Bits 31:24 of CRCERES are 0x59
       H5A = 0x5A                        -- Bits 31:24 of CRCERES are 0x5A
       H5B = 0x5B                        -- Bits 31:24 of CRCERES are 0x5B
       H5C = 0x5C                        -- Bits 31:24 of CRCERES are 0x5C
       H5D = 0x5D                        -- Bits 31:24 of CRCERES are 0x5D
       H5E = 0x5E                        -- Bits 31:24 of CRCERES are 0x5E
       H5F = 0x5F                        -- Bits 31:24 of CRCERES are 0x5F
       H60 = 0x60                        -- Bits 31:24 of CRCERES are 0x60
       H61 = 0x61                        -- Bits 31:24 of CRCERES are 0x61
       H62 = 0x62                        -- Bits 31:24 of CRCERES are 0x62
       H63 = 0x63                        -- Bits 31:24 of CRCERES are 0x63
       H64 = 0x64                        -- Bits 31:24 of CRCERES are 0x64
       H65 = 0x65                        -- Bits 31:24 of CRCERES are 0x65
       H66 = 0x66                        -- Bits 31:24 of CRCERES are 0x66
       H67 = 0x67                        -- Bits 31:24 of CRCERES are 0x67
       H68 = 0x68                        -- Bits 31:24 of CRCERES are 0x68
       H69 = 0x69                        -- Bits 31:24 of CRCERES are 0x69
       H6A = 0x6A                        -- Bits 31:24 of CRCERES are 0x6A
       H6B = 0x6B                        -- Bits 31:24 of CRCERES are 0x6B
       H6C = 0x6C                        -- Bits 31:24 of CRCERES are 0x6C
       H6D = 0x6D                        -- Bits 31:24 of CRCERES are 0x6D
       H6E = 0x6E                        -- Bits 31:24 of CRCERES are 0x6E
       H6F = 0x6F                        -- Bits 31:24 of CRCERES are 0x6F
       H70 = 0x70                        -- Bits 31:24 of CRCERES are 0x70
       H71 = 0x71                        -- Bits 31:24 of CRCERES are 0x71
       H72 = 0x72                        -- Bits 31:24 of CRCERES are 0x72
       H73 = 0x73                        -- Bits 31:24 of CRCERES are 0x73
       H74 = 0x74                        -- Bits 31:24 of CRCERES are 0x74
       H75 = 0x75                        -- Bits 31:24 of CRCERES are 0x75
       H76 = 0x76                        -- Bits 31:24 of CRCERES are 0x76
       H77 = 0x77                        -- Bits 31:24 of CRCERES are 0x77
       H78 = 0x78                        -- Bits 31:24 of CRCERES are 0x78
       H79 = 0x79                        -- Bits 31:24 of CRCERES are 0x79
       H7A = 0x7A                        -- Bits 31:24 of CRCERES are 0x7A
       H7B = 0x7B                        -- Bits 31:24 of CRCERES are 0x7B
       H7C = 0x7C                        -- Bits 31:24 of CRCERES are 0x7C
       H7D = 0x7D                        -- Bits 31:24 of CRCERES are 0x7D
       H7E = 0x7E                        -- Bits 31:24 of CRCERES are 0x7E
       H7F = 0x7F                        -- Bits 31:24 of CRCERES are 0x7F
       H80 = 0x80                        -- Bits 31:24 of CRCERES are 0x80
       H81 = 0x81                        -- Bits 31:24 of CRCERES are 0x81
       H82 = 0x82                        -- Bits 31:24 of CRCERES are 0x82
       H83 = 0x83                        -- Bits 31:24 of CRCERES are 0x83
       H84 = 0x84                        -- Bits 31:24 of CRCERES are 0x84
       H85 = 0x85                        -- Bits 31:24 of CRCERES are 0x85
       H86 = 0x86                        -- Bits 31:24 of CRCERES are 0x86
       H87 = 0x87                        -- Bits 31:24 of CRCERES are 0x87
       H88 = 0x88                        -- Bits 31:24 of CRCERES are 0x88
       H89 = 0x89                        -- Bits 31:24 of CRCERES are 0x89
       H8A = 0x8A                        -- Bits 31:24 of CRCERES are 0x8A
       H8B = 0x8B                        -- Bits 31:24 of CRCERES are 0x8B
       H8C = 0x8C                        -- Bits 31:24 of CRCERES are 0x8C
       H8D = 0x8D                        -- Bits 31:24 of CRCERES are 0x8D
       H8E = 0x8E                        -- Bits 31:24 of CRCERES are 0x8E
       H8F = 0x8F                        -- Bits 31:24 of CRCERES are 0x8F
       H90 = 0x90                        -- Bits 31:24 of CRCERES are 0x90
       H91 = 0x91                        -- Bits 31:24 of CRCERES are 0x91
       H92 = 0x92                        -- Bits 31:24 of CRCERES are 0x92
       H93 = 0x93                        -- Bits 31:24 of CRCERES are 0x93
       H94 = 0x94                        -- Bits 31:24 of CRCERES are 0x94
       H95 = 0x95                        -- Bits 31:24 of CRCERES are 0x95
       H96 = 0x96                        -- Bits 31:24 of CRCERES are 0x96
       H97 = 0x97                        -- Bits 31:24 of CRCERES are 0x97
       H98 = 0x98                        -- Bits 31:24 of CRCERES are 0x98
       H99 = 0x99                        -- Bits 31:24 of CRCERES are 0x99
       H9A = 0x9A                        -- Bits 31:24 of CRCERES are 0x9A
       H9B = 0x9B                        -- Bits 31:24 of CRCERES are 0x9B
       H9C = 0x9C                        -- Bits 31:24 of CRCERES are 0x9C
       H9D = 0x9D                        -- Bits 31:24 of CRCERES are 0x9D
       H9E = 0x9E                        -- Bits 31:24 of CRCERES are 0x9E
       H9F = 0x9F                        -- Bits 31:24 of CRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 31:24 of CRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 31:24 of CRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 31:24 of CRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 31:24 of CRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 31:24 of CRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 31:24 of CRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 31:24 of CRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 31:24 of CRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 31:24 of CRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 31:24 of CRCERES are 0xA9
       HAA = 0xAA                        -- Bits 31:24 of CRCERES are 0xAA
       HAB = 0xAB                        -- Bits 31:24 of CRCERES are 0xAB
       HAC = 0xAC                        -- Bits 31:24 of CRCERES are 0xAC
       HAD = 0xAD                        -- Bits 31:24 of CRCERES are 0xAD
       HAE = 0xAE                        -- Bits 31:24 of CRCERES are 0xAE
       HAF = 0xAF                        -- Bits 31:24 of CRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 31:24 of CRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 31:24 of CRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 31:24 of CRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 31:24 of CRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 31:24 of CRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 31:24 of CRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 31:24 of CRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 31:24 of CRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 31:24 of CRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 31:24 of CRCERES are 0xB9
       HBA = 0xBA                        -- Bits 31:24 of CRCERES are 0xBA
       HBB = 0xBB                        -- Bits 31:24 of CRCERES are 0xBB
       HBC = 0xBC                        -- Bits 31:24 of CRCERES are 0xBC
       HBD = 0xBD                        -- Bits 31:24 of CRCERES are 0xBD
       HBE = 0xBE                        -- Bits 31:24 of CRCERES are 0xBE
       HBF = 0xBF                        -- Bits 31:24 of CRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 31:24 of CRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 31:24 of CRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 31:24 of CRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 31:24 of CRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 31:24 of CRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 31:24 of CRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 31:24 of CRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 31:24 of CRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 31:24 of CRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 31:24 of CRCERES are 0xC9
       HCA = 0xCA                        -- Bits 31:24 of CRCERES are 0xCA
       HCB = 0xCB                        -- Bits 31:24 of CRCERES are 0xCB
       HCC = 0xCC                        -- Bits 31:24 of CRCERES are 0xCC
       HCD = 0xCD                        -- Bits 31:24 of CRCERES are 0xCD
       HCE = 0xCE                        -- Bits 31:24 of CRCERES are 0xCE
       HCF = 0xCF                        -- Bits 31:24 of CRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 31:24 of CRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 31:24 of CRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 31:24 of CRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 31:24 of CRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 31:24 of CRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 31:24 of CRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 31:24 of CRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 31:24 of CRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 31:24 of CRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 31:24 of CRCERES are 0xD9
       HDA = 0xDA                        -- Bits 31:24 of CRCERES are 0xDA
       HDB = 0xDB                        -- Bits 31:24 of CRCERES are 0xDB
       HDC = 0xDC                        -- Bits 31:24 of CRCERES are 0xDC
       HDD = 0xDD                        -- Bits 31:24 of CRCERES are 0xDD
       HDE = 0xDE                        -- Bits 31:24 of CRCERES are 0xDE
       HDF = 0xDF                        -- Bits 31:24 of CRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 31:24 of CRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 31:24 of CRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 31:24 of CRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 31:24 of CRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 31:24 of CRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 31:24 of CRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 31:24 of CRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 31:24 of CRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 31:24 of CRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 31:24 of CRCERES are 0xE9
       HEA = 0xEA                        -- Bits 31:24 of CRCERES are 0xEA
       HEB = 0xEB                        -- Bits 31:24 of CRCERES are 0xEB
       HEC = 0xEC                        -- Bits 31:24 of CRCERES are 0xEC
       HED = 0xED                        -- Bits 31:24 of CRCERES are 0xED
       HEE = 0xEE                        -- Bits 31:24 of CRCERES are 0xEE
       HEF = 0xEF                        -- Bits 31:24 of CRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 31:24 of CRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 31:24 of CRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 31:24 of CRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 31:24 of CRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 31:24 of CRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 31:24 of CRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 31:24 of CRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 31:24 of CRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 31:24 of CRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 31:24 of CRCERES are 0xF9
       HFA = 0xFA                        -- Bits 31:24 of CRCERES are 0xFA
       HFB = 0xFB                        -- Bits 31:24 of CRCERES are 0xFB
       HFC = 0xFC                        -- Bits 31:24 of CRCERES are 0xFC
       HFD = 0xFD                        -- Bits 31:24 of CRCERES are 0xFD
       HFE = 0xFE                        -- Bits 31:24 of CRCERES are 0xFE
       HFF = 0xFF                        -- Bits 31:24 of CRCERES are 0xFF
       }
--
-- CONFIG33 (0x300020)
--
pragma fuse_def CRCERESU:32  0xFF {      -- Non-Boot Sector Expected Result for CRC on boot bits 23-16
       H00 = 0x0                         -- Bits 23:16 of CRCERES are 0x00
       H01 = 0x1                         -- Bits 23:16 of CRCERES are 0x01
       H02 = 0x2                         -- Bits 23:16 of CRCERES are 0x02
       H03 = 0x3                         -- Bits 23:16 of CRCERES are 0x03
       H04 = 0x4                         -- Bits 23:16 of CRCERES are 0x04
       H05 = 0x5                         -- Bits 23:16 of CRCERES are 0x05
       H06 = 0x6                         -- Bits 23:16 of CRCERES are 0x06
       H07 = 0x7                         -- Bits 23:16 of CRCERES are 0x07
       H08 = 0x8                         -- Bits 23:16 of CRCERES are 0x08
       H09 = 0x9                         -- Bits 23:16 of CRCERES are 0x09
       H0A = 0xA                         -- Bits 23:16 of CRCERES are 0x0A
       H0B = 0xB                         -- Bits 23:16 of CRCERES are 0x0B
       H0C = 0xC                         -- Bits 23:16 of CRCERES are 0x0C
       H0D = 0xD                         -- Bits 23:16 of CRCERES are 0x0D
       H0E = 0xE                         -- Bits 23:16 of CRCERES are 0x0E
       H0F = 0xF                         -- Bits 23:16 of CRCERES are 0x0F
       H10 = 0x10                        -- Bits 23:16 of CRCERES are 0x10
       H11 = 0x11                        -- Bits 23:16 of CRCERES are 0x11
       H12 = 0x12                        -- Bits 23:16 of CRCERES are 0x12
       H13 = 0x13                        -- Bits 23:16 of CRCERES are 0x13
       H14 = 0x14                        -- Bits 23:16 of CRCERES are 0x14
       H15 = 0x15                        -- Bits 23:16 of CRCERES are 0x15
       H16 = 0x16                        -- Bits 23:16 of CRCERES are 0x16
       H17 = 0x17                        -- Bits 23:16 of CRCERES are 0x17
       H18 = 0x18                        -- Bits 23:16 of CRCERES are 0x18
       H19 = 0x19                        -- Bits 23:16 of CRCERES are 0x19
       H1A = 0x1A                        -- Bits 23:16 of CRCERES are 0x1A
       H1B = 0x1B                        -- Bits 23:16 of CRCERES are 0x1B
       H1C = 0x1C                        -- Bits 23:16 of CRCERES are 0x1C
       H1D = 0x1D                        -- Bits 23:16 of CRCERES are 0x1D
       H1E = 0x1E                        -- Bits 23:16 of CRCERES are 0x1E
       H1F = 0x1F                        -- Bits 23:16 of CRCERES are 0x1F
       H20 = 0x20                        -- Bits 23:16 of CRCERES are 0x20
       H21 = 0x21                        -- Bits 23:16 of CRCERES are 0x21
       H22 = 0x22                        -- Bits 23:16 of CRCERES are 0x22
       H23 = 0x23                        -- Bits 23:16 of CRCERES are 0x23
       H24 = 0x24                        -- Bits 23:16 of CRCERES are 0x24
       H25 = 0x25                        -- Bits 23:16 of CRCERES are 0x25
       H26 = 0x26                        -- Bits 23:16 of CRCERES are 0x26
       H27 = 0x27                        -- Bits 23:16 of CRCERES are 0x27
       H28 = 0x28                        -- Bits 23:16 of CRCERES are 0x28
       H29 = 0x29                        -- Bits 23:16 of CRCERES are 0x29
       H2A = 0x2A                        -- Bits 23:16 of CRCERES are 0x2A
       H2B = 0x2B                        -- Bits 23:16 of CRCERES are 0x2B
       H2C = 0x2C                        -- Bits 23:16 of CRCERES are 0x2C
       H2D = 0x2D                        -- Bits 23:16 of CRCERES are 0x2D
       H2E = 0x2E                        -- Bits 23:16 of CRCERES are 0x2E
       H2F = 0x2F                        -- Bits 23:16 of CRCERES are 0x2F
       H30 = 0x30                        -- Bits 23:16 of CRCERES are 0x30
       H31 = 0x31                        -- Bits 23:16 of CRCERES are 0x31
       H32 = 0x32                        -- Bits 23:16 of CRCERES are 0x32
       H33 = 0x33                        -- Bits 23:16 of CRCERES are 0x33
       H34 = 0x34                        -- Bits 23:16 of CRCERES are 0x34
       H35 = 0x35                        -- Bits 23:16 of CRCERES are 0x35
       H36 = 0x36                        -- Bits 23:16 of CRCERES are 0x36
       H37 = 0x37                        -- Bits 23:16 of CRCERES are 0x37
       H38 = 0x38                        -- Bits 23:16 of CRCERES are 0x38
       H39 = 0x39                        -- Bits 23:16 of CRCERES are 0x39
       H3A = 0x3A                        -- Bits 23:16 of CRCERES are 0x3A
       H3B = 0x3B                        -- Bits 23:16 of CRCERES are 0x3B
       H3C = 0x3C                        -- Bits 23:16 of CRCERES are 0x3C
       H3D = 0x3D                        -- Bits 23:16 of CRCERES are 0x3D
       H3E = 0x3E                        -- Bits 23:16 of CRCERES are 0x3E
       H3F = 0x3F                        -- Bits 23:16 of CRCERES are 0x3F
       H40 = 0x40                        -- Bits 23:16 of CRCERES are 0x40
       H41 = 0x41                        -- Bits 23:16 of CRCERES are 0x41
       H42 = 0x42                        -- Bits 23:16 of CRCERES are 0x42
       H43 = 0x43                        -- Bits 23:16 of CRCERES are 0x43
       H44 = 0x44                        -- Bits 23:16 of CRCERES are 0x44
       H45 = 0x45                        -- Bits 23:16 of CRCERES are 0x45
       H46 = 0x46                        -- Bits 23:16 of CRCERES are 0x46
       H47 = 0x47                        -- Bits 23:16 of CRCERES are 0x47
       H48 = 0x48                        -- Bits 23:16 of CRCERES are 0x48
       H49 = 0x49                        -- Bits 23:16 of CRCERES are 0x49
       H4A = 0x4A                        -- Bits 23:16 of CRCERES are 0x4A
       H4B = 0x4B                        -- Bits 23:16 of CRCERES are 0x4B
       H4C = 0x4C                        -- Bits 23:16 of CRCERES are 0x4C
       H4D = 0x4D                        -- Bits 23:16 of CRCERES are 0x4D
       H4E = 0x4E                        -- Bits 23:16 of CRCERES are 0x4E
       H4F = 0x4F                        -- Bits 23:16 of CRCERES are 0x4F
       H50 = 0x50                        -- Bits 23:16 of CRCERES are 0x50
       H51 = 0x51                        -- Bits 23:16 of CRCERES are 0x51
       H52 = 0x52                        -- Bits 23:16 of CRCERES are 0x52
       H53 = 0x53                        -- Bits 23:16 of CRCERES are 0x53
       H54 = 0x54                        -- Bits 23:16 of CRCERES are 0x54
       H55 = 0x55                        -- Bits 23:16 of CRCERES are 0x55
       H56 = 0x56                        -- Bits 23:16 of CRCERES are 0x56
       H57 = 0x57                        -- Bits 23:16 of CRCERES are 0x57
       H58 = 0x58                        -- Bits 23:16 of CRCERES are 0x58
       H59 = 0x59                        -- Bits 23:16 of CRCERES are 0x59
       H5A = 0x5A                        -- Bits 23:16 of CRCERES are 0x5A
       H5B = 0x5B                        -- Bits 23:16 of CRCERES are 0x5B
       H5C = 0x5C                        -- Bits 23:16 of CRCERES are 0x5C
       H5D = 0x5D                        -- Bits 23:16 of CRCERES are 0x5D
       H5E = 0x5E                        -- Bits 23:16 of CRCERES are 0x5E
       H5F = 0x5F                        -- Bits 23:16 of CRCERES are 0x5F
       H60 = 0x60                        -- Bits 23:16 of CRCERES are 0x60
       H61 = 0x61                        -- Bits 23:16 of CRCERES are 0x61
       H62 = 0x62                        -- Bits 23:16 of CRCERES are 0x62
       H63 = 0x63                        -- Bits 23:16 of CRCERES are 0x63
       H64 = 0x64                        -- Bits 23:16 of CRCERES are 0x64
       H65 = 0x65                        -- Bits 23:16 of CRCERES are 0x65
       H66 = 0x66                        -- Bits 23:16 of CRCERES are 0x66
       H67 = 0x67                        -- Bits 23:16 of CRCERES are 0x67
       H68 = 0x68                        -- Bits 23:16 of CRCERES are 0x68
       H69 = 0x69                        -- Bits 23:16 of CRCERES are 0x69
       H6A = 0x6A                        -- Bits 23:16 of CRCERES are 0x6A
       H6B = 0x6B                        -- Bits 23:16 of CRCERES are 0x6B
       H6C = 0x6C                        -- Bits 23:16 of CRCERES are 0x6C
       H6D = 0x6D                        -- Bits 23:16 of CRCERES are 0x6D
       H6E = 0x6E                        -- Bits 23:16 of CRCERES are 0x6E
       H6F = 0x6F                        -- Bits 23:16 of CRCERES are 0x6F
       H70 = 0x70                        -- Bits 23:16 of CRCERES are 0x70
       H71 = 0x71                        -- Bits 23:16 of CRCERES are 0x71
       H72 = 0x72                        -- Bits 23:16 of CRCERES are 0x72
       H73 = 0x73                        -- Bits 23:16 of CRCERES are 0x73
       H74 = 0x74                        -- Bits 23:16 of CRCERES are 0x74
       H75 = 0x75                        -- Bits 23:16 of CRCERES are 0x75
       H76 = 0x76                        -- Bits 23:16 of CRCERES are 0x76
       H77 = 0x77                        -- Bits 23:16 of CRCERES are 0x77
       H78 = 0x78                        -- Bits 23:16 of CRCERES are 0x78
       H79 = 0x79                        -- Bits 23:16 of CRCERES are 0x79
       H7A = 0x7A                        -- Bits 23:16 of CRCERES are 0x7A
       H7B = 0x7B                        -- Bits 23:16 of CRCERES are 0x7B
       H7C = 0x7C                        -- Bits 23:16 of CRCERES are 0x7C
       H7D = 0x7D                        -- Bits 23:16 of CRCERES are 0x7D
       H7E = 0x7E                        -- Bits 23:16 of CRCERES are 0x7E
       H7F = 0x7F                        -- Bits 23:16 of CRCERES are 0x7F
       H80 = 0x80                        -- Bits 23:16 of CRCERES are 0x80
       H81 = 0x81                        -- Bits 23:16 of CRCERES are 0x81
       H82 = 0x82                        -- Bits 23:16 of CRCERES are 0x82
       H83 = 0x83                        -- Bits 23:16 of CRCERES are 0x83
       H84 = 0x84                        -- Bits 23:16 of CRCERES are 0x84
       H85 = 0x85                        -- Bits 23:16 of CRCERES are 0x85
       H86 = 0x86                        -- Bits 23:16 of CRCERES are 0x86
       H87 = 0x87                        -- Bits 23:16 of CRCERES are 0x87
       H88 = 0x88                        -- Bits 23:16 of CRCERES are 0x88
       H89 = 0x89                        -- Bits 23:16 of CRCERES are 0x89
       H8A = 0x8A                        -- Bits 23:16 of CRCERES are 0x8A
       H8B = 0x8B                        -- Bits 23:16 of CRCERES are 0x8B
       H8C = 0x8C                        -- Bits 23:16 of CRCERES are 0x8C
       H8D = 0x8D                        -- Bits 23:16 of CRCERES are 0x8D
       H8E = 0x8E                        -- Bits 23:16 of CRCERES are 0x8E
       H8F = 0x8F                        -- Bits 23:16 of CRCERES are 0x8F
       H90 = 0x90                        -- Bits 23:16 of CRCERES are 0x90
       H91 = 0x91                        -- Bits 23:16 of CRCERES are 0x91
       H92 = 0x92                        -- Bits 23:16 of CRCERES are 0x92
       H93 = 0x93                        -- Bits 23:16 of CRCERES are 0x93
       H94 = 0x94                        -- Bits 23:16 of CRCERES are 0x94
       H95 = 0x95                        -- Bits 23:16 of CRCERES are 0x95
       H96 = 0x96                        -- Bits 23:16 of CRCERES are 0x96
       H97 = 0x97                        -- Bits 23:16 of CRCERES are 0x97
       H98 = 0x98                        -- Bits 23:16 of CRCERES are 0x98
       H99 = 0x99                        -- Bits 23:16 of CRCERES are 0x99
       H9A = 0x9A                        -- Bits 23:16 of CRCERES are 0x9A
       H9B = 0x9B                        -- Bits 23:16 of CRCERES are 0x9B
       H9C = 0x9C                        -- Bits 23:16 of CRCERES are 0x9C
       H9D = 0x9D                        -- Bits 23:16 of CRCERES are 0x9D
       H9E = 0x9E                        -- Bits 23:16 of CRCERES are 0x9E
       H9F = 0x9F                        -- Bits 23:16 of CRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 23:16 of CRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 23:16 of CRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 23:16 of CRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 23:16 of CRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 23:16 of CRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 23:16 of CRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 23:16 of CRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 23:16 of CRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 23:16 of CRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 23:16 of CRCERES are 0xA9
       HAA = 0xAA                        -- Bits 23:16 of CRCERES are 0xAA
       HAB = 0xAB                        -- Bits 23:16 of CRCERES are 0xAB
       HAC = 0xAC                        -- Bits 23:16 of CRCERES are 0xAC
       HAD = 0xAD                        -- Bits 23:16 of CRCERES are 0xAD
       HAE = 0xAE                        -- Bits 23:16 of CRCERES are 0xAE
       HAF = 0xAF                        -- Bits 23:16 of CRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 23:16 of CRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 23:16 of CRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 23:16 of CRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 23:16 of CRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 23:16 of CRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 23:16 of CRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 23:16 of CRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 23:16 of CRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 23:16 of CRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 23:16 of CRCERES are 0xB9
       HBA = 0xBA                        -- Bits 23:16 of CRCERES are 0xBA
       HBB = 0xBB                        -- Bits 23:16 of CRCERES are 0xBB
       HBC = 0xBC                        -- Bits 23:16 of CRCERES are 0xBC
       HBD = 0xBD                        -- Bits 23:16 of CRCERES are 0xBD
       HBE = 0xBE                        -- Bits 23:16 of CRCERES are 0xBE
       HBF = 0xBF                        -- Bits 23:16 of CRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 23:16 of CRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 23:16 of CRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 23:16 of CRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 23:16 of CRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 23:16 of CRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 23:16 of CRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 23:16 of CRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 23:16 of CRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 23:16 of CRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 23:16 of CRCERES are 0xC9
       HCA = 0xCA                        -- Bits 23:16 of CRCERES are 0xCA
       HCB = 0xCB                        -- Bits 23:16 of CRCERES are 0xCB
       HCC = 0xCC                        -- Bits 23:16 of CRCERES are 0xCC
       HCD = 0xCD                        -- Bits 23:16 of CRCERES are 0xCD
       HCE = 0xCE                        -- Bits 23:16 of CRCERES are 0xCE
       HCF = 0xCF                        -- Bits 23:16 of CRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 23:16 of CRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 23:16 of CRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 23:16 of CRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 23:16 of CRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 23:16 of CRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 23:16 of CRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 23:16 of CRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 23:16 of CRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 23:16 of CRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 23:16 of CRCERES are 0xD9
       HDA = 0xDA                        -- Bits 23:16 of CRCERES are 0xDA
       HDB = 0xDB                        -- Bits 23:16 of CRCERES are 0xDB
       HDC = 0xDC                        -- Bits 23:16 of CRCERES are 0xDC
       HDD = 0xDD                        -- Bits 23:16 of CRCERES are 0xDD
       HDE = 0xDE                        -- Bits 23:16 of CRCERES are 0xDE
       HDF = 0xDF                        -- Bits 23:16 of CRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 23:16 of CRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 23:16 of CRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 23:16 of CRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 23:16 of CRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 23:16 of CRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 23:16 of CRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 23:16 of CRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 23:16 of CRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 23:16 of CRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 23:16 of CRCERES are 0xE9
       HEA = 0xEA                        -- Bits 23:16 of CRCERES are 0xEA
       HEB = 0xEB                        -- Bits 23:16 of CRCERES are 0xEB
       HEC = 0xEC                        -- Bits 23:16 of CRCERES are 0xEC
       HED = 0xED                        -- Bits 23:16 of CRCERES are 0xED
       HEE = 0xEE                        -- Bits 23:16 of CRCERES are 0xEE
       HEF = 0xEF                        -- Bits 23:16 of CRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 23:16 of CRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 23:16 of CRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 23:16 of CRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 23:16 of CRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 23:16 of CRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 23:16 of CRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 23:16 of CRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 23:16 of CRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 23:16 of CRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 23:16 of CRCERES are 0xF9
       HFA = 0xFA                        -- Bits 23:16 of CRCERES are 0xFA
       HFB = 0xFB                        -- Bits 23:16 of CRCERES are 0xFB
       HFC = 0xFC                        -- Bits 23:16 of CRCERES are 0xFC
       HFD = 0xFD                        -- Bits 23:16 of CRCERES are 0xFD
       HFE = 0xFE                        -- Bits 23:16 of CRCERES are 0xFE
       HFF = 0xFF                        -- Bits 23:16 of CRCERES are 0xFF
       }
--
-- CONFIG34 (0x300021)
--
pragma fuse_def CRCERESH:33  0xFF {      -- Non-Boot Sector Expected Result for CRC on boot bits 15-8
       H00 = 0x0                         -- Bits 15:8 of CRCERES are 0x00
       H01 = 0x1                         -- Bits 15:8 of CRCERES are 0x01
       H02 = 0x2                         -- Bits 15:8 of CRCERES are 0x02
       H03 = 0x3                         -- Bits 15:8 of CRCERES are 0x03
       H04 = 0x4                         -- Bits 15:8 of CRCERES are 0x04
       H05 = 0x5                         -- Bits 15:8 of CRCERES are 0x05
       H06 = 0x6                         -- Bits 15:8 of CRCERES are 0x06
       H07 = 0x7                         -- Bits 15:8 of CRCERES are 0x07
       H08 = 0x8                         -- Bits 15:8 of CRCERES are 0x08
       H09 = 0x9                         -- Bits 15:8 of CRCERES are 0x09
       H0A = 0xA                         -- Bits 15:8 of CRCERES are 0x0A
       H0B = 0xB                         -- Bits 15:8 of CRCERES are 0x0B
       H0C = 0xC                         -- Bits 15:8 of CRCERES are 0x0C
       H0D = 0xD                         -- Bits 15:8 of CRCERES are 0x0D
       H0E = 0xE                         -- Bits 15:8 of CRCERES are 0x0E
       H0F = 0xF                         -- Bits 15:8 of CRCERES are 0x0F
       H10 = 0x10                        -- Bits 15:8 of CRCERES are 0x10
       H11 = 0x11                        -- Bits 15:8 of CRCERES are 0x11
       H12 = 0x12                        -- Bits 15:8 of CRCERES are 0x12
       H13 = 0x13                        -- Bits 15:8 of CRCERES are 0x13
       H14 = 0x14                        -- Bits 15:8 of CRCERES are 0x14
       H15 = 0x15                        -- Bits 15:8 of CRCERES are 0x15
       H16 = 0x16                        -- Bits 15:8 of CRCERES are 0x16
       H17 = 0x17                        -- Bits 15:8 of CRCERES are 0x17
       H18 = 0x18                        -- Bits 15:8 of CRCERES are 0x18
       H19 = 0x19                        -- Bits 15:8 of CRCERES are 0x19
       H1A = 0x1A                        -- Bits 15:8 of CRCERES are 0x1A
       H1B = 0x1B                        -- Bits 15:8 of CRCERES are 0x1B
       H1C = 0x1C                        -- Bits 15:8 of CRCERES are 0x1C
       H1D = 0x1D                        -- Bits 15:8 of CRCERES are 0x1D
       H1E = 0x1E                        -- Bits 15:8 of CRCERES are 0x1E
       H1F = 0x1F                        -- Bits 15:8 of CRCERES are 0x1F
       H20 = 0x20                        -- Bits 15:8 of CRCERES are 0x20
       H21 = 0x21                        -- Bits 15:8 of CRCERES are 0x21
       H22 = 0x22                        -- Bits 15:8 of CRCERES are 0x22
       H23 = 0x23                        -- Bits 15:8 of CRCERES are 0x23
       H24 = 0x24                        -- Bits 15:8 of CRCERES are 0x24
       H25 = 0x25                        -- Bits 15:8 of CRCERES are 0x25
       H26 = 0x26                        -- Bits 15:8 of CRCERES are 0x26
       H27 = 0x27                        -- Bits 15:8 of CRCERES are 0x27
       H28 = 0x28                        -- Bits 15:8 of CRCERES are 0x28
       H29 = 0x29                        -- Bits 15:8 of CRCERES are 0x29
       H2A = 0x2A                        -- Bits 15:8 of CRCERES are 0x2A
       H2B = 0x2B                        -- Bits 15:8 of CRCERES are 0x2B
       H2C = 0x2C                        -- Bits 15:8 of CRCERES are 0x2C
       H2D = 0x2D                        -- Bits 15:8 of CRCERES are 0x2D
       H2E = 0x2E                        -- Bits 15:8 of CRCERES are 0x2E
       H2F = 0x2F                        -- Bits 15:8 of CRCERES are 0x2F
       H30 = 0x30                        -- Bits 15:8 of CRCERES are 0x30
       H31 = 0x31                        -- Bits 15:8 of CRCERES are 0x31
       H32 = 0x32                        -- Bits 15:8 of CRCERES are 0x32
       H33 = 0x33                        -- Bits 15:8 of CRCERES are 0x33
       H34 = 0x34                        -- Bits 15:8 of CRCERES are 0x34
       H35 = 0x35                        -- Bits 15:8 of CRCERES are 0x35
       H36 = 0x36                        -- Bits 15:8 of CRCERES are 0x36
       H37 = 0x37                        -- Bits 15:8 of CRCERES are 0x37
       H38 = 0x38                        -- Bits 15:8 of CRCERES are 0x38
       H39 = 0x39                        -- Bits 15:8 of CRCERES are 0x39
       H3A = 0x3A                        -- Bits 15:8 of CRCERES are 0x3A
       H3B = 0x3B                        -- Bits 15:8 of CRCERES are 0x3B
       H3C = 0x3C                        -- Bits 15:8 of CRCERES are 0x3C
       H3D = 0x3D                        -- Bits 15:8 of CRCERES are 0x3D
       H3E = 0x3E                        -- Bits 15:8 of CRCERES are 0x3E
       H3F = 0x3F                        -- Bits 15:8 of CRCERES are 0x3F
       H40 = 0x40                        -- Bits 15:8 of CRCERES are 0x40
       H41 = 0x41                        -- Bits 15:8 of CRCERES are 0x41
       H42 = 0x42                        -- Bits 15:8 of CRCERES are 0x42
       H43 = 0x43                        -- Bits 15:8 of CRCERES are 0x43
       H44 = 0x44                        -- Bits 15:8 of CRCERES are 0x44
       H45 = 0x45                        -- Bits 15:8 of CRCERES are 0x45
       H46 = 0x46                        -- Bits 15:8 of CRCERES are 0x46
       H47 = 0x47                        -- Bits 15:8 of CRCERES are 0x47
       H48 = 0x48                        -- Bits 15:8 of CRCERES are 0x48
       H49 = 0x49                        -- Bits 15:8 of CRCERES are 0x49
       H4A = 0x4A                        -- Bits 15:8 of CRCERES are 0x4A
       H4B = 0x4B                        -- Bits 15:8 of CRCERES are 0x4B
       H4C = 0x4C                        -- Bits 15:8 of CRCERES are 0x4C
       H4D = 0x4D                        -- Bits 15:8 of CRCERES are 0x4D
       H4E = 0x4E                        -- Bits 15:8 of CRCERES are 0x4E
       H4F = 0x4F                        -- Bits 15:8 of CRCERES are 0x4F
       H50 = 0x50                        -- Bits 15:8 of CRCERES are 0x50
       H51 = 0x51                        -- Bits 15:8 of CRCERES are 0x51
       H52 = 0x52                        -- Bits 15:8 of CRCERES are 0x52
       H53 = 0x53                        -- Bits 15:8 of CRCERES are 0x53
       H54 = 0x54                        -- Bits 15:8 of CRCERES are 0x54
       H55 = 0x55                        -- Bits 15:8 of CRCERES are 0x55
       H56 = 0x56                        -- Bits 15:8 of CRCERES are 0x56
       H57 = 0x57                        -- Bits 15:8 of CRCERES are 0x57
       H58 = 0x58                        -- Bits 15:8 of CRCERES are 0x58
       H59 = 0x59                        -- Bits 15:8 of CRCERES are 0x59
       H5A = 0x5A                        -- Bits 15:8 of CRCERES are 0x5A
       H5B = 0x5B                        -- Bits 15:8 of CRCERES are 0x5B
       H5C = 0x5C                        -- Bits 15:8 of CRCERES are 0x5C
       H5D = 0x5D                        -- Bits 15:8 of CRCERES are 0x5D
       H5E = 0x5E                        -- Bits 15:8 of CRCERES are 0x5E
       H5F = 0x5F                        -- Bits 15:8 of CRCERES are 0x5F
       H60 = 0x60                        -- Bits 15:8 of CRCERES are 0x60
       H61 = 0x61                        -- Bits 15:8 of CRCERES are 0x61
       H62 = 0x62                        -- Bits 15:8 of CRCERES are 0x62
       H63 = 0x63                        -- Bits 15:8 of CRCERES are 0x63
       H64 = 0x64                        -- Bits 15:8 of CRCERES are 0x64
       H65 = 0x65                        -- Bits 15:8 of CRCERES are 0x65
       H66 = 0x66                        -- Bits 15:8 of CRCERES are 0x66
       H67 = 0x67                        -- Bits 15:8 of CRCERES are 0x67
       H68 = 0x68                        -- Bits 15:8 of CRCERES are 0x68
       H69 = 0x69                        -- Bits 15:8 of CRCERES are 0x69
       H6A = 0x6A                        -- Bits 15:8 of CRCERES are 0x6A
       H6B = 0x6B                        -- Bits 15:8 of CRCERES are 0x6B
       H6C = 0x6C                        -- Bits 15:8 of CRCERES are 0x6C
       H6D = 0x6D                        -- Bits 15:8 of CRCERES are 0x6D
       H6E = 0x6E                        -- Bits 15:8 of CRCERES are 0x6E
       H6F = 0x6F                        -- Bits 15:8 of CRCERES are 0x6F
       H70 = 0x70                        -- Bits 15:8 of CRCERES are 0x70
       H71 = 0x71                        -- Bits 15:8 of CRCERES are 0x71
       H72 = 0x72                        -- Bits 15:8 of CRCERES are 0x72
       H73 = 0x73                        -- Bits 15:8 of CRCERES are 0x73
       H74 = 0x74                        -- Bits 15:8 of CRCERES are 0x74
       H75 = 0x75                        -- Bits 15:8 of CRCERES are 0x75
       H76 = 0x76                        -- Bits 15:8 of CRCERES are 0x76
       H77 = 0x77                        -- Bits 15:8 of CRCERES are 0x77
       H78 = 0x78                        -- Bits 15:8 of CRCERES are 0x78
       H79 = 0x79                        -- Bits 15:8 of CRCERES are 0x79
       H7A = 0x7A                        -- Bits 15:8 of CRCERES are 0x7A
       H7B = 0x7B                        -- Bits 15:8 of CRCERES are 0x7B
       H7C = 0x7C                        -- Bits 15:8 of CRCERES are 0x7C
       H7D = 0x7D                        -- Bits 15:8 of CRCERES are 0x7D
       H7E = 0x7E                        -- Bits 15:8 of CRCERES are 0x7E
       H7F = 0x7F                        -- Bits 15:8 of CRCERES are 0x7F
       H80 = 0x80                        -- Bits 15:8 of CRCERES are 0x80
       H81 = 0x81                        -- Bits 15:8 of CRCERES are 0x81
       H82 = 0x82                        -- Bits 15:8 of CRCERES are 0x82
       H83 = 0x83                        -- Bits 15:8 of CRCERES are 0x83
       H84 = 0x84                        -- Bits 15:8 of CRCERES are 0x84
       H85 = 0x85                        -- Bits 15:8 of CRCERES are 0x85
       H86 = 0x86                        -- Bits 15:8 of CRCERES are 0x86
       H87 = 0x87                        -- Bits 15:8 of CRCERES are 0x87
       H88 = 0x88                        -- Bits 15:8 of CRCERES are 0x88
       H89 = 0x89                        -- Bits 15:8 of CRCERES are 0x89
       H8A = 0x8A                        -- Bits 15:8 of CRCERES are 0x8A
       H8B = 0x8B                        -- Bits 15:8 of CRCERES are 0x8B
       H8C = 0x8C                        -- Bits 15:8 of CRCERES are 0x8C
       H8D = 0x8D                        -- Bits 15:8 of CRCERES are 0x8D
       H8E = 0x8E                        -- Bits 15:8 of CRCERES are 0x8E
       H8F = 0x8F                        -- Bits 15:8 of CRCERES are 0x8F
       H90 = 0x90                        -- Bits 15:8 of CRCERES are 0x90
       H91 = 0x91                        -- Bits 15:8 of CRCERES are 0x91
       H92 = 0x92                        -- Bits 15:8 of CRCERES are 0x92
       H93 = 0x93                        -- Bits 15:8 of CRCERES are 0x93
       H94 = 0x94                        -- Bits 15:8 of CRCERES are 0x94
       H95 = 0x95                        -- Bits 15:8 of CRCERES are 0x95
       H96 = 0x96                        -- Bits 15:8 of CRCERES are 0x96
       H97 = 0x97                        -- Bits 15:8 of CRCERES are 0x97
       H98 = 0x98                        -- Bits 15:8 of CRCERES are 0x98
       H99 = 0x99                        -- Bits 15:8 of CRCERES are 0x99
       H9A = 0x9A                        -- Bits 15:8 of CRCERES are 0x9A
       H9B = 0x9B                        -- Bits 15:8 of CRCERES are 0x9B
       H9C = 0x9C                        -- Bits 15:8 of CRCERES are 0x9C
       H9D = 0x9D                        -- Bits 15:8 of CRCERES are 0x9D
       H9E = 0x9E                        -- Bits 15:8 of CRCERES are 0x9E
       H9F = 0x9F                        -- Bits 15:8 of CRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 15:8 of CRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 15:8 of CRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 15:8 of CRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 15:8 of CRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 15:8 of CRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 15:8 of CRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 15:8 of CRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 15:8 of CRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 15:8 of CRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 15:8 of CRCERES are 0xA9
       HAA = 0xAA                        -- Bits 15:8 of CRCERES are 0xAA
       HAB = 0xAB                        -- Bits 15:8 of CRCERES are 0xAB
       HAC = 0xAC                        -- Bits 15:8 of CRCERES are 0xAC
       HAD = 0xAD                        -- Bits 15:8 of CRCERES are 0xAD
       HAE = 0xAE                        -- Bits 15:8 of CRCERES are 0xAE
       HAF = 0xAF                        -- Bits 15:8 of CRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 15:8 of CRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 15:8 of CRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 15:8 of CRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 15:8 of CRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 15:8 of CRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 15:8 of CRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 15:8 of CRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 15:8 of CRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 15:8 of CRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 15:8 of CRCERES are 0xB9
       HBA = 0xBA                        -- Bits 15:8 of CRCERES are 0xBA
       HBB = 0xBB                        -- Bits 15:8 of CRCERES are 0xBB
       HBC = 0xBC                        -- Bits 15:8 of CRCERES are 0xBC
       HBD = 0xBD                        -- Bits 15:8 of CRCERES are 0xBD
       HBE = 0xBE                        -- Bits 15:8 of CRCERES are 0xBE
       HBF = 0xBF                        -- Bits 15:8 of CRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 15:8 of CRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 15:8 of CRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 15:8 of CRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 15:8 of CRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 15:8 of CRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 15:8 of CRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 15:8 of CRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 15:8 of CRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 15:8 of CRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 15:8 of CRCERES are 0xC9
       HCA = 0xCA                        -- Bits 15:8 of CRCERES are 0xCA
       HCB = 0xCB                        -- Bits 15:8 of CRCERES are 0xCB
       HCC = 0xCC                        -- Bits 15:8 of CRCERES are 0xCC
       HCD = 0xCD                        -- Bits 15:8 of CRCERES are 0xCD
       HCE = 0xCE                        -- Bits 15:8 of CRCERES are 0xCE
       HCF = 0xCF                        -- Bits 15:8 of CRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 15:8 of CRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 15:8 of CRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 15:8 of CRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 15:8 of CRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 15:8 of CRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 15:8 of CRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 15:8 of CRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 15:8 of CRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 15:8 of CRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 15:8 of CRCERES are 0xD9
       HDA = 0xDA                        -- Bits 15:8 of CRCERES are 0xDA
       HDB = 0xDB                        -- Bits 15:8 of CRCERES are 0xDB
       HDC = 0xDC                        -- Bits 15:8 of CRCERES are 0xDC
       HDD = 0xDD                        -- Bits 15:8 of CRCERES are 0xDD
       HDE = 0xDE                        -- Bits 15:8 of CRCERES are 0xDE
       HDF = 0xDF                        -- Bits 15:8 of CRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 15:8 of CRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 15:8 of CRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 15:8 of CRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 15:8 of CRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 15:8 of CRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 15:8 of CRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 15:8 of CRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 15:8 of CRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 15:8 of CRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 15:8 of CRCERES are 0xE9
       HEA = 0xEA                        -- Bits 15:8 of CRCERES are 0xEA
       HEB = 0xEB                        -- Bits 15:8 of CRCERES are 0xEB
       HEC = 0xEC                        -- Bits 15:8 of CRCERES are 0xEC
       HED = 0xED                        -- Bits 15:8 of CRCERES are 0xED
       HEE = 0xEE                        -- Bits 15:8 of CRCERES are 0xEE
       HEF = 0xEF                        -- Bits 15:8 of CRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 15:8 of CRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 15:8 of CRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 15:8 of CRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 15:8 of CRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 15:8 of CRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 15:8 of CRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 15:8 of CRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 15:8 of CRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 15:8 of CRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 15:8 of CRCERES are 0xF9
       HFA = 0xFA                        -- Bits 15:8 of CRCERES are 0xFA
       HFB = 0xFB                        -- Bits 15:8 of CRCERES are 0xFB
       HFC = 0xFC                        -- Bits 15:8 of CRCERES are 0xFC
       HFD = 0xFD                        -- Bits 15:8 of CRCERES are 0xFD
       HFE = 0xFE                        -- Bits 15:8 of CRCERES are 0xFE
       HFF = 0xFF                        -- Bits 15:8 of CRCERES are 0xFF
       }
--
-- CONFIG35 (0x300022)
--
pragma fuse_def CRCERESL:34  0xFF {      -- Non-Boot Sector Expected Result for CRC on boot bits 7-0
       H00 = 0x0                         -- Bits 7:0 of CRCERES are 0x00
       H01 = 0x1                         -- Bits 7:0 of CRCERES are 0x01
       H02 = 0x2                         -- Bits 7:0 of CRCERES are 0x02
       H03 = 0x3                         -- Bits 7:0 of CRCERES are 0x03
       H04 = 0x4                         -- Bits 7:0 of CRCERES are 0x04
       H05 = 0x5                         -- Bits 7:0 of CRCERES are 0x05
       H06 = 0x6                         -- Bits 7:0 of CRCERES are 0x06
       H07 = 0x7                         -- Bits 7:0 of CRCERES are 0x07
       H08 = 0x8                         -- Bits 7:0 of CRCERES are 0x08
       H09 = 0x9                         -- Bits 7:0 of CRCERES are 0x09
       H0A = 0xA                         -- Bits 7:0 of CRCERES are 0x0A
       H0B = 0xB                         -- Bits 7:0 of CRCERES are 0x0B
       H0C = 0xC                         -- Bits 7:0 of CRCERES are 0x0C
       H0D = 0xD                         -- Bits 7:0 of CRCERES are 0x0D
       H0E = 0xE                         -- Bits 7:0 of CRCERES are 0x0E
       H0F = 0xF                         -- Bits 7:0 of CRCERES are 0x0F
       H10 = 0x10                        -- Bits 7:0 of CRCERES are 0x10
       H11 = 0x11                        -- Bits 7:0 of CRCERES are 0x11
       H12 = 0x12                        -- Bits 7:0 of CRCERES are 0x12
       H13 = 0x13                        -- Bits 7:0 of CRCERES are 0x13
       H14 = 0x14                        -- Bits 7:0 of CRCERES are 0x14
       H15 = 0x15                        -- Bits 7:0 of CRCERES are 0x15
       H16 = 0x16                        -- Bits 7:0 of CRCERES are 0x16
       H17 = 0x17                        -- Bits 7:0 of CRCERES are 0x17
       H18 = 0x18                        -- Bits 7:0 of CRCERES are 0x18
       H19 = 0x19                        -- Bits 7:0 of CRCERES are 0x19
       H1A = 0x1A                        -- Bits 7:0 of CRCERES are 0x1A
       H1B = 0x1B                        -- Bits 7:0 of CRCERES are 0x1B
       H1C = 0x1C                        -- Bits 7:0 of CRCERES are 0x1C
       H1D = 0x1D                        -- Bits 7:0 of CRCERES are 0x1D
       H1E = 0x1E                        -- Bits 7:0 of CRCERES are 0x1E
       H1F = 0x1F                        -- Bits 7:0 of CRCERES are 0x1F
       H20 = 0x20                        -- Bits 7:0 of CRCERES are 0x20
       H21 = 0x21                        -- Bits 7:0 of CRCERES are 0x21
       H22 = 0x22                        -- Bits 7:0 of CRCERES are 0x22
       H23 = 0x23                        -- Bits 7:0 of CRCERES are 0x23
       H24 = 0x24                        -- Bits 7:0 of CRCERES are 0x24
       H25 = 0x25                        -- Bits 7:0 of CRCERES are 0x25
       H26 = 0x26                        -- Bits 7:0 of CRCERES are 0x26
       H27 = 0x27                        -- Bits 7:0 of CRCERES are 0x27
       H28 = 0x28                        -- Bits 7:0 of CRCERES are 0x28
       H29 = 0x29                        -- Bits 7:0 of CRCERES are 0x29
       H2A = 0x2A                        -- Bits 7:0 of CRCERES are 0x2A
       H2B = 0x2B                        -- Bits 7:0 of CRCERES are 0x2B
       H2C = 0x2C                        -- Bits 7:0 of CRCERES are 0x2C
       H2D = 0x2D                        -- Bits 7:0 of CRCERES are 0x2D
       H2E = 0x2E                        -- Bits 7:0 of CRCERES are 0x2E
       H2F = 0x2F                        -- Bits 7:0 of CRCERES are 0x2F
       H30 = 0x30                        -- Bits 7:0 of CRCERES are 0x30
       H31 = 0x31                        -- Bits 7:0 of CRCERES are 0x31
       H32 = 0x32                        -- Bits 7:0 of CRCERES are 0x32
       H33 = 0x33                        -- Bits 7:0 of CRCERES are 0x33
       H34 = 0x34                        -- Bits 7:0 of CRCERES are 0x34
       H35 = 0x35                        -- Bits 7:0 of CRCERES are 0x35
       H36 = 0x36                        -- Bits 7:0 of CRCERES are 0x36
       H37 = 0x37                        -- Bits 7:0 of CRCERES are 0x37
       H38 = 0x38                        -- Bits 7:0 of CRCERES are 0x38
       H39 = 0x39                        -- Bits 7:0 of CRCERES are 0x39
       H3A = 0x3A                        -- Bits 7:0 of CRCERES are 0x3A
       H3B = 0x3B                        -- Bits 7:0 of CRCERES are 0x3B
       H3C = 0x3C                        -- Bits 7:0 of CRCERES are 0x3C
       H3D = 0x3D                        -- Bits 7:0 of CRCERES are 0x3D
       H3E = 0x3E                        -- Bits 7:0 of CRCERES are 0x3E
       H3F = 0x3F                        -- Bits 7:0 of CRCERES are 0x3F
       H40 = 0x40                        -- Bits 7:0 of CRCERES are 0x40
       H41 = 0x41                        -- Bits 7:0 of CRCERES are 0x41
       H42 = 0x42                        -- Bits 7:0 of CRCERES are 0x42
       H43 = 0x43                        -- Bits 7:0 of CRCERES are 0x43
       H44 = 0x44                        -- Bits 7:0 of CRCERES are 0x44
       H45 = 0x45                        -- Bits 7:0 of CRCERES are 0x45
       H46 = 0x46                        -- Bits 7:0 of CRCERES are 0x46
       H47 = 0x47                        -- Bits 7:0 of CRCERES are 0x47
       H48 = 0x48                        -- Bits 7:0 of CRCERES are 0x48
       H49 = 0x49                        -- Bits 7:0 of CRCERES are 0x49
       H4A = 0x4A                        -- Bits 7:0 of CRCERES are 0x4A
       H4B = 0x4B                        -- Bits 7:0 of CRCERES are 0x4B
       H4C = 0x4C                        -- Bits 7:0 of CRCERES are 0x4C
       H4D = 0x4D                        -- Bits 7:0 of CRCERES are 0x4D
       H4E = 0x4E                        -- Bits 7:0 of CRCERES are 0x4E
       H4F = 0x4F                        -- Bits 7:0 of CRCERES are 0x4F
       H50 = 0x50                        -- Bits 7:0 of CRCERES are 0x50
       H51 = 0x51                        -- Bits 7:0 of CRCERES are 0x51
       H52 = 0x52                        -- Bits 7:0 of CRCERES are 0x52
       H53 = 0x53                        -- Bits 7:0 of CRCERES are 0x53
       H54 = 0x54                        -- Bits 7:0 of CRCERES are 0x54
       H55 = 0x55                        -- Bits 7:0 of CRCERES are 0x55
       H56 = 0x56                        -- Bits 7:0 of CRCERES are 0x56
       H57 = 0x57                        -- Bits 7:0 of CRCERES are 0x57
       H58 = 0x58                        -- Bits 7:0 of CRCERES are 0x58
       H59 = 0x59                        -- Bits 7:0 of CRCERES are 0x59
       H5A = 0x5A                        -- Bits 7:0 of CRCERES are 0x5A
       H5B = 0x5B                        -- Bits 7:0 of CRCERES are 0x5B
       H5C = 0x5C                        -- Bits 7:0 of CRCERES are 0x5C
       H5D = 0x5D                        -- Bits 7:0 of CRCERES are 0x5D
       H5E = 0x5E                        -- Bits 7:0 of CRCERES are 0x5E
       H5F = 0x5F                        -- Bits 7:0 of CRCERES are 0x5F
       H60 = 0x60                        -- Bits 7:0 of CRCERES are 0x60
       H61 = 0x61                        -- Bits 7:0 of CRCERES are 0x61
       H62 = 0x62                        -- Bits 7:0 of CRCERES are 0x62
       H63 = 0x63                        -- Bits 7:0 of CRCERES are 0x63
       H64 = 0x64                        -- Bits 7:0 of CRCERES are 0x64
       H65 = 0x65                        -- Bits 7:0 of CRCERES are 0x65
       H66 = 0x66                        -- Bits 7:0 of CRCERES are 0x66
       H67 = 0x67                        -- Bits 7:0 of CRCERES are 0x67
       H68 = 0x68                        -- Bits 7:0 of CRCERES are 0x68
       H69 = 0x69                        -- Bits 7:0 of CRCERES are 0x69
       H6A = 0x6A                        -- Bits 7:0 of CRCERES are 0x6A
       H6B = 0x6B                        -- Bits 7:0 of CRCERES are 0x6B
       H6C = 0x6C                        -- Bits 7:0 of CRCERES are 0x6C
       H6D = 0x6D                        -- Bits 7:0 of CRCERES are 0x6D
       H6E = 0x6E                        -- Bits 7:0 of CRCERES are 0x6E
       H6F = 0x6F                        -- Bits 7:0 of CRCERES are 0x6F
       H70 = 0x70                        -- Bits 7:0 of CRCERES are 0x70
       H71 = 0x71                        -- Bits 7:0 of CRCERES are 0x71
       H72 = 0x72                        -- Bits 7:0 of CRCERES are 0x72
       H73 = 0x73                        -- Bits 7:0 of CRCERES are 0x73
       H74 = 0x74                        -- Bits 7:0 of CRCERES are 0x74
       H75 = 0x75                        -- Bits 7:0 of CRCERES are 0x75
       H76 = 0x76                        -- Bits 7:0 of CRCERES are 0x76
       H77 = 0x77                        -- Bits 7:0 of CRCERES are 0x77
       H78 = 0x78                        -- Bits 7:0 of CRCERES are 0x78
       H79 = 0x79                        -- Bits 7:0 of CRCERES are 0x79
       H7A = 0x7A                        -- Bits 7:0 of CRCERES are 0x7A
       H7B = 0x7B                        -- Bits 7:0 of CRCERES are 0x7B
       H7C = 0x7C                        -- Bits 7:0 of CRCERES are 0x7C
       H7D = 0x7D                        -- Bits 7:0 of CRCERES are 0x7D
       H7E = 0x7E                        -- Bits 7:0 of CRCERES are 0x7E
       H7F = 0x7F                        -- Bits 7:0 of CRCERES are 0x7F
       H80 = 0x80                        -- Bits 7:0 of CRCERES are 0x80
       H81 = 0x81                        -- Bits 7:0 of CRCERES are 0x81
       H82 = 0x82                        -- Bits 7:0 of CRCERES are 0x82
       H83 = 0x83                        -- Bits 7:0 of CRCERES are 0x83
       H84 = 0x84                        -- Bits 7:0 of CRCERES are 0x84
       H85 = 0x85                        -- Bits 7:0 of CRCERES are 0x85
       H86 = 0x86                        -- Bits 7:0 of CRCERES are 0x86
       H87 = 0x87                        -- Bits 7:0 of CRCERES are 0x87
       H88 = 0x88                        -- Bits 7:0 of CRCERES are 0x88
       H89 = 0x89                        -- Bits 7:0 of CRCERES are 0x89
       H8A = 0x8A                        -- Bits 7:0 of CRCERES are 0x8A
       H8B = 0x8B                        -- Bits 7:0 of CRCERES are 0x8B
       H8C = 0x8C                        -- Bits 7:0 of CRCERES are 0x8C
       H8D = 0x8D                        -- Bits 7:0 of CRCERES are 0x8D
       H8E = 0x8E                        -- Bits 7:0 of CRCERES are 0x8E
       H8F = 0x8F                        -- Bits 7:0 of CRCERES are 0x8F
       H90 = 0x90                        -- Bits 7:0 of CRCERES are 0x90
       H91 = 0x91                        -- Bits 7:0 of CRCERES are 0x91
       H92 = 0x92                        -- Bits 7:0 of CRCERES are 0x92
       H93 = 0x93                        -- Bits 7:0 of CRCERES are 0x93
       H94 = 0x94                        -- Bits 7:0 of CRCERES are 0x94
       H95 = 0x95                        -- Bits 7:0 of CRCERES are 0x95
       H96 = 0x96                        -- Bits 7:0 of CRCERES are 0x96
       H97 = 0x97                        -- Bits 7:0 of CRCERES are 0x97
       H98 = 0x98                        -- Bits 7:0 of CRCERES are 0x98
       H99 = 0x99                        -- Bits 7:0 of CRCERES are 0x99
       H9A = 0x9A                        -- Bits 7:0 of CRCERES are 0x9A
       H9B = 0x9B                        -- Bits 7:0 of CRCERES are 0x9B
       H9C = 0x9C                        -- Bits 7:0 of CRCERES are 0x9C
       H9D = 0x9D                        -- Bits 7:0 of CRCERES are 0x9D
       H9E = 0x9E                        -- Bits 7:0 of CRCERES are 0x9E
       H9F = 0x9F                        -- Bits 7:0 of CRCERES are 0x9F
       HA0 = 0xA0                        -- Bits 7:0 of CRCERES are 0xA0
       HA1 = 0xA1                        -- Bits 7:0 of CRCERES are 0xA1
       HA2 = 0xA2                        -- Bits 7:0 of CRCERES are 0xA2
       HA3 = 0xA3                        -- Bits 7:0 of CRCERES are 0xA3
       HA4 = 0xA4                        -- Bits 7:0 of CRCERES are 0xA4
       HA5 = 0xA5                        -- Bits 7:0 of CRCERES are 0xA5
       HA6 = 0xA6                        -- Bits 7:0 of CRCERES are 0xA6
       HA7 = 0xA7                        -- Bits 7:0 of CRCERES are 0xA7
       HA8 = 0xA8                        -- Bits 7:0 of CRCERES are 0xA8
       HA9 = 0xA9                        -- Bits 7:0 of CRCERES are 0xA9
       HAA = 0xAA                        -- Bits 7:0 of CRCERES are 0xAA
       HAB = 0xAB                        -- Bits 7:0 of CRCERES are 0xAB
       HAC = 0xAC                        -- Bits 7:0 of CRCERES are 0xAC
       HAD = 0xAD                        -- Bits 7:0 of CRCERES are 0xAD
       HAE = 0xAE                        -- Bits 7:0 of CRCERES are 0xAE
       HAF = 0xAF                        -- Bits 7:0 of CRCERES are 0xAF
       HB0 = 0xB0                        -- Bits 7:0 of CRCERES are 0xB0
       HB1 = 0xB1                        -- Bits 7:0 of CRCERES are 0xB1
       HB2 = 0xB2                        -- Bits 7:0 of CRCERES are 0xB2
       HB3 = 0xB3                        -- Bits 7:0 of CRCERES are 0xB3
       HB4 = 0xB4                        -- Bits 7:0 of CRCERES are 0xB4
       HB5 = 0xB5                        -- Bits 7:0 of CRCERES are 0xB5
       HB6 = 0xB6                        -- Bits 7:0 of CRCERES are 0xB6
       HB7 = 0xB7                        -- Bits 7:0 of CRCERES are 0xB7
       HB8 = 0xB8                        -- Bits 7:0 of CRCERES are 0xB8
       HB9 = 0xB9                        -- Bits 7:0 of CRCERES are 0xB9
       HBA = 0xBA                        -- Bits 7:0 of CRCERES are 0xBA
       HBB = 0xBB                        -- Bits 7:0 of CRCERES are 0xBB
       HBC = 0xBC                        -- Bits 7:0 of CRCERES are 0xBC
       HBD = 0xBD                        -- Bits 7:0 of CRCERES are 0xBD
       HBE = 0xBE                        -- Bits 7:0 of CRCERES are 0xBE
       HBF = 0xBF                        -- Bits 7:0 of CRCERES are 0xBF
       HC0 = 0xC0                        -- Bits 7:0 of CRCERES are 0xC0
       HC1 = 0xC1                        -- Bits 7:0 of CRCERES are 0xC1
       HC2 = 0xC2                        -- Bits 7:0 of CRCERES are 0xC2
       HC3 = 0xC3                        -- Bits 7:0 of CRCERES are 0xC3
       HC4 = 0xC4                        -- Bits 7:0 of CRCERES are 0xC4
       HC5 = 0xC5                        -- Bits 7:0 of CRCERES are 0xC5
       HC6 = 0xC6                        -- Bits 7:0 of CRCERES are 0xC6
       HC7 = 0xC7                        -- Bits 7:0 of CRCERES are 0xC7
       HC8 = 0xC8                        -- Bits 7:0 of CRCERES are 0xC8
       HC9 = 0xC9                        -- Bits 7:0 of CRCERES are 0xC9
       HCA = 0xCA                        -- Bits 7:0 of CRCERES are 0xCA
       HCB = 0xCB                        -- Bits 7:0 of CRCERES are 0xCB
       HCC = 0xCC                        -- Bits 7:0 of CRCERES are 0xCC
       HCD = 0xCD                        -- Bits 7:0 of CRCERES are 0xCD
       HCE = 0xCE                        -- Bits 7:0 of CRCERES are 0xCE
       HCF = 0xCF                        -- Bits 7:0 of CRCERES are 0xCF
       HD0 = 0xD0                        -- Bits 7:0 of CRCERES are 0xD0
       HD1 = 0xD1                        -- Bits 7:0 of CRCERES are 0xD1
       HD2 = 0xD2                        -- Bits 7:0 of CRCERES are 0xD2
       HD3 = 0xD3                        -- Bits 7:0 of CRCERES are 0xD3
       HD4 = 0xD4                        -- Bits 7:0 of CRCERES are 0xD4
       HD5 = 0xD5                        -- Bits 7:0 of CRCERES are 0xD5
       HD6 = 0xD6                        -- Bits 7:0 of CRCERES are 0xD6
       HD7 = 0xD7                        -- Bits 7:0 of CRCERES are 0xD7
       HD8 = 0xD8                        -- Bits 7:0 of CRCERES are 0xD8
       HD9 = 0xD9                        -- Bits 7:0 of CRCERES are 0xD9
       HDA = 0xDA                        -- Bits 7:0 of CRCERES are 0xDA
       HDB = 0xDB                        -- Bits 7:0 of CRCERES are 0xDB
       HDC = 0xDC                        -- Bits 7:0 of CRCERES are 0xDC
       HDD = 0xDD                        -- Bits 7:0 of CRCERES are 0xDD
       HDE = 0xDE                        -- Bits 7:0 of CRCERES are 0xDE
       HDF = 0xDF                        -- Bits 7:0 of CRCERES are 0xDF
       HE0 = 0xE0                        -- Bits 7:0 of CRCERES are 0xE0
       HE1 = 0xE1                        -- Bits 7:0 of CRCERES are 0xE1
       HE2 = 0xE2                        -- Bits 7:0 of CRCERES are 0xE2
       HE3 = 0xE3                        -- Bits 7:0 of CRCERES are 0xE3
       HE4 = 0xE4                        -- Bits 7:0 of CRCERES are 0xE4
       HE5 = 0xE5                        -- Bits 7:0 of CRCERES are 0xE5
       HE6 = 0xE6                        -- Bits 7:0 of CRCERES are 0xE6
       HE7 = 0xE7                        -- Bits 7:0 of CRCERES are 0xE7
       HE8 = 0xE8                        -- Bits 7:0 of CRCERES are 0xE8
       HE9 = 0xE9                        -- Bits 7:0 of CRCERES are 0xE9
       HEA = 0xEA                        -- Bits 7:0 of CRCERES are 0xEA
       HEB = 0xEB                        -- Bits 7:0 of CRCERES are 0xEB
       HEC = 0xEC                        -- Bits 7:0 of CRCERES are 0xEC
       HED = 0xED                        -- Bits 7:0 of CRCERES are 0xED
       HEE = 0xEE                        -- Bits 7:0 of CRCERES are 0xEE
       HEF = 0xEF                        -- Bits 7:0 of CRCERES are 0xEF
       HF0 = 0xF0                        -- Bits 7:0 of CRCERES are 0xF0
       HF1 = 0xF1                        -- Bits 7:0 of CRCERES are 0xF1
       HF2 = 0xF2                        -- Bits 7:0 of CRCERES are 0xF2
       HF3 = 0xF3                        -- Bits 7:0 of CRCERES are 0xF3
       HF4 = 0xF4                        -- Bits 7:0 of CRCERES are 0xF4
       HF5 = 0xF5                        -- Bits 7:0 of CRCERES are 0xF5
       HF6 = 0xF6                        -- Bits 7:0 of CRCERES are 0xF6
       HF7 = 0xF7                        -- Bits 7:0 of CRCERES are 0xF7
       HF8 = 0xF8                        -- Bits 7:0 of CRCERES are 0xF8
       HF9 = 0xF9                        -- Bits 7:0 of CRCERES are 0xF9
       HFA = 0xFA                        -- Bits 7:0 of CRCERES are 0xFA
       HFB = 0xFB                        -- Bits 7:0 of CRCERES are 0xFB
       HFC = 0xFC                        -- Bits 7:0 of CRCERES are 0xFC
       HFD = 0xFD                        -- Bits 7:0 of CRCERES are 0xFD
       HFE = 0xFE                        -- Bits 7:0 of CRCERES are 0xFE
       HFF = 0xFF                        -- Bits 7:0 of CRCERES are 0xFF
       }
--
