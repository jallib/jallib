-- ------------------------------------------------
-- Title: JalV2 device include file for 18f13k50
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f13k50, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC18F13K50.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Fri Mar  7 10:07:16 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x4740            -- ID for PIC programmer
const  word  CHIP_ID     = 0xA135            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "18F13K50"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_16       -- (banks=16)
pragma  target  chip     18F13K50
pragma  target  bank     0x0100
pragma  stack            31
pragma  code             8192
pragma  eeprom           0xF00000,256
pragma  ID               0x200000,8
pragma  data             0x0-0xFF,0x200-0x2FF
pragma  shared           0x0-0x5F,0xF60-0xFFF
--
var volatile byte _pic_accum at 0x0      -- (compiler)
--
const word   _FUSES_CT             = 14
const byte*3 _FUSE_BASE[_FUSES_CT] = {
                                       0x300000,
                                       0x300001,
                                       0x300002,
                                       0x300003,
                                       0x300004,
                                       0x300005,
                                       0x300006,
                                       0x300007,
                                       0x300008,
                                       0x300009,
                                       0x30000A,
                                       0x30000B,
                                       0x30000C,
                                       0x30000D 
                                     }
const byte   _FUSES[_FUSES_CT]     = {
                                       0x00,     -- CONFIG1L
                                       0x27,     -- CONFIG1H
                                       0x3F,     -- CONFIG2L
                                       0x1F,     -- CONFIG2H
                                       0xFF,     -- RESERVED
                                       0x88,     -- CONFIG3H
                                       0x85,     -- CONFIG4L
                                       0xFF,     -- RESERVED
                                       0x03,     -- CONFIG5L
                                       0xC0,     -- CONFIG5H
                                       0x03,     -- CONFIG6L
                                       0xE0,     -- CONFIG6H
                                       0x03,     -- CONFIG7L
                                       0x40      -- CONFIG7H
                                     }
--
-- ------------------------------------------------
var volatile byte   UEP0                      at { 0xF53 }
var volatile bit    UEP0_EPSTALL              at UEP0 : 0
var volatile bit    UEP0_EPINEN               at UEP0 : 1
var volatile bit    UEP0_EPOUTEN              at UEP0 : 2
var volatile bit    UEP0_EPCONDIS             at UEP0 : 3
var volatile bit    UEP0_EPHSHK               at UEP0 : 4
var volatile bit    UEP0_EP0STALL             at UEP0 : 0
var volatile bit    UEP0_EP0INEN              at UEP0 : 1
var volatile bit    UEP0_EP0OUTEN             at UEP0 : 2
var volatile bit    UEP0_EP0CONDIS            at UEP0 : 3
var volatile bit    UEP0_EP0HSHK              at UEP0 : 4
var volatile bit    UEP0_EPSTALL0             at UEP0 : 0
var volatile bit    UEP0_EPINEN0              at UEP0 : 1
var volatile bit    UEP0_EPOUTEN0             at UEP0 : 2
var volatile bit    UEP0_EPCONDIS0            at UEP0 : 3
var volatile bit    UEP0_EPHSHK0              at UEP0 : 4
-- ------------------------------------------------
var volatile byte   UEP1                      at { 0xF54 }
var volatile bit    UEP1_EPSTALL              at UEP1 : 0
var volatile bit    UEP1_EPINEN               at UEP1 : 1
var volatile bit    UEP1_EPOUTEN              at UEP1 : 2
var volatile bit    UEP1_EPCONDIS             at UEP1 : 3
var volatile bit    UEP1_EPHSHK               at UEP1 : 4
var volatile bit    UEP1_EP1STALL             at UEP1 : 0
var volatile bit    UEP1_EP1INEN              at UEP1 : 1
var volatile bit    UEP1_EP1OUTEN             at UEP1 : 2
var volatile bit    UEP1_EP1CONDIS            at UEP1 : 3
var volatile bit    UEP1_EP1HSHK              at UEP1 : 4
var volatile bit    UEP1_EPSTALL1             at UEP1 : 0
var volatile bit    UEP1_EPINEN1              at UEP1 : 1
var volatile bit    UEP1_EPOUTEN1             at UEP1 : 2
var volatile bit    UEP1_EPCONDIS1            at UEP1 : 3
var volatile bit    UEP1_EPHSHK1              at UEP1 : 4
-- ------------------------------------------------
var volatile byte   UEP2                      at { 0xF55 }
var volatile bit    UEP2_EPSTALL              at UEP2 : 0
var volatile bit    UEP2_EPINEN               at UEP2 : 1
var volatile bit    UEP2_EPOUTEN              at UEP2 : 2
var volatile bit    UEP2_EPCONDIS             at UEP2 : 3
var volatile bit    UEP2_EPHSHK               at UEP2 : 4
var volatile bit    UEP2_EP2STALL             at UEP2 : 0
var volatile bit    UEP2_EP2INEN              at UEP2 : 1
var volatile bit    UEP2_EP2OUTEN             at UEP2 : 2
var volatile bit    UEP2_EP2CONDIS            at UEP2 : 3
var volatile bit    UEP2_EP2HSHK              at UEP2 : 4
var volatile bit    UEP2_EPSTALL2             at UEP2 : 0
var volatile bit    UEP2_EPINEN2              at UEP2 : 1
var volatile bit    UEP2_EPOUTEN2             at UEP2 : 2
var volatile bit    UEP2_EPCONDIS2            at UEP2 : 3
var volatile bit    UEP2_EPHSHK2              at UEP2 : 4
-- ------------------------------------------------
var volatile byte   UEP3                      at { 0xF56 }
var volatile bit    UEP3_EPSTALL              at UEP3 : 0
var volatile bit    UEP3_EPINEN               at UEP3 : 1
var volatile bit    UEP3_EPOUTEN              at UEP3 : 2
var volatile bit    UEP3_EPCONDIS             at UEP3 : 3
var volatile bit    UEP3_EPHSHK               at UEP3 : 4
var volatile bit    UEP3_EP3STALL             at UEP3 : 0
var volatile bit    UEP3_EP3INEN              at UEP3 : 1
var volatile bit    UEP3_EP3OUTEN             at UEP3 : 2
var volatile bit    UEP3_EP3CONDIS            at UEP3 : 3
var volatile bit    UEP3_EP3HSHK              at UEP3 : 4
var volatile bit    UEP3_EPSTALL3             at UEP3 : 0
var volatile bit    UEP3_EPINEN3              at UEP3 : 1
var volatile bit    UEP3_EPOUTEN3             at UEP3 : 2
var volatile bit    UEP3_EPCONDIS3            at UEP3 : 3
var volatile bit    UEP3_EPHSHK3              at UEP3 : 4
-- ------------------------------------------------
var volatile byte   UEP4                      at { 0xF57 }
var volatile bit    UEP4_EPSTALL              at UEP4 : 0
var volatile bit    UEP4_EPINEN               at UEP4 : 1
var volatile bit    UEP4_EPOUTEN              at UEP4 : 2
var volatile bit    UEP4_EPCONDIS             at UEP4 : 3
var volatile bit    UEP4_EPHSHK               at UEP4 : 4
var volatile bit    UEP4_EP4STALL             at UEP4 : 0
var volatile bit    UEP4_EP4INEN              at UEP4 : 1
var volatile bit    UEP4_EP4OUTEN             at UEP4 : 2
var volatile bit    UEP4_EP4CONDIS            at UEP4 : 3
var volatile bit    UEP4_EP4HSHK              at UEP4 : 4
var volatile bit    UEP4_EPSTALL4             at UEP4 : 0
var volatile bit    UEP4_EPINEN4              at UEP4 : 1
var volatile bit    UEP4_EPOUTEN4             at UEP4 : 2
var volatile bit    UEP4_EPCONDIS4            at UEP4 : 3
var volatile bit    UEP4_EPHSHK4              at UEP4 : 4
-- ------------------------------------------------
var volatile byte   UEP5                      at { 0xF58 }
var volatile bit    UEP5_EPSTALL              at UEP5 : 0
var volatile bit    UEP5_EPINEN               at UEP5 : 1
var volatile bit    UEP5_EPOUTEN              at UEP5 : 2
var volatile bit    UEP5_EPCONDIS             at UEP5 : 3
var volatile bit    UEP5_EPHSHK               at UEP5 : 4
var volatile bit    UEP5_EP5STALL             at UEP5 : 0
var volatile bit    UEP5_EP5INEN              at UEP5 : 1
var volatile bit    UEP5_EP5OUTEN             at UEP5 : 2
var volatile bit    UEP5_EP5CONDIS            at UEP5 : 3
var volatile bit    UEP5_EP5HSHK              at UEP5 : 4
var volatile bit    UEP5_EPSTALL5             at UEP5 : 0
var volatile bit    UEP5_EPINEN5              at UEP5 : 1
var volatile bit    UEP5_EPOUTEN5             at UEP5 : 2
var volatile bit    UEP5_EPCONDIS5            at UEP5 : 3
var volatile bit    UEP5_EPHSHK5              at UEP5 : 4
-- ------------------------------------------------
var volatile byte   UEP6                      at { 0xF59 }
var volatile bit    UEP6_EPSTALL              at UEP6 : 0
var volatile bit    UEP6_EPINEN               at UEP6 : 1
var volatile bit    UEP6_EPOUTEN              at UEP6 : 2
var volatile bit    UEP6_EPCONDIS             at UEP6 : 3
var volatile bit    UEP6_EPHSHK               at UEP6 : 4
var volatile bit    UEP6_EP6STALL             at UEP6 : 0
var volatile bit    UEP6_EP6INEN              at UEP6 : 1
var volatile bit    UEP6_EP6OUTEN             at UEP6 : 2
var volatile bit    UEP6_EP6CONDIS            at UEP6 : 3
var volatile bit    UEP6_EP6HSHK              at UEP6 : 4
var volatile bit    UEP6_EPSTALL6             at UEP6 : 0
var volatile bit    UEP6_EPINEN6              at UEP6 : 1
var volatile bit    UEP6_EPOUTEN6             at UEP6 : 2
var volatile bit    UEP6_EPCONDIS6            at UEP6 : 3
var volatile bit    UEP6_EPHSHK6              at UEP6 : 4
-- ------------------------------------------------
var volatile byte   UEP7                      at { 0xF5A }
var volatile bit    UEP7_EPSTALL              at UEP7 : 0
var volatile bit    UEP7_EPINEN               at UEP7 : 1
var volatile bit    UEP7_EPOUTEN              at UEP7 : 2
var volatile bit    UEP7_EPCONDIS             at UEP7 : 3
var volatile bit    UEP7_EPHSHK               at UEP7 : 4
var volatile bit    UEP7_EP7STALL             at UEP7 : 0
var volatile bit    UEP7_EP7INEN              at UEP7 : 1
var volatile bit    UEP7_EP7OUTEN             at UEP7 : 2
var volatile bit    UEP7_EP7CONDIS            at UEP7 : 3
var volatile bit    UEP7_EP7HSHK              at UEP7 : 4
var volatile bit    UEP7_EPSTALL7             at UEP7 : 0
var volatile bit    UEP7_EPINEN7              at UEP7 : 1
var volatile bit    UEP7_EPOUTEN7             at UEP7 : 2
var volatile bit    UEP7_EPCONDIS7            at UEP7 : 3
var volatile bit    UEP7_EPHSHK7              at UEP7 : 4
-- ------------------------------------------------
var volatile byte   UEIE                      at { 0xF5B }
var volatile bit    UEIE_PIDEE                at UEIE : 0
var volatile bit    UEIE_CRC5EE               at UEIE : 1
var volatile bit    UEIE_CRC16EE              at UEIE : 2
var volatile bit    UEIE_DFN8EE               at UEIE : 3
var volatile bit    UEIE_BTOEE                at UEIE : 4
var volatile bit    UEIE_BTSEE                at UEIE : 7
-- ------------------------------------------------
var volatile byte   UADDR                     at { 0xF5C }
var volatile bit*7  UADDR_ADDR                at UADDR : 0
var volatile bit    UADDR_ADDR0               at UADDR : 0
var volatile bit    UADDR_ADDR1               at UADDR : 1
var volatile bit    UADDR_ADDR2               at UADDR : 2
var volatile bit    UADDR_ADDR3               at UADDR : 3
var volatile bit    UADDR_ADDR4               at UADDR : 4
var volatile bit    UADDR_ADDR5               at UADDR : 5
var volatile bit    UADDR_ADDR6               at UADDR : 6
-- ------------------------------------------------
var volatile byte   UFRML                     at { 0xF5D }
var volatile bit    UFRML_FRM0                at UFRML : 0
var volatile bit    UFRML_FRM1                at UFRML : 1
var volatile bit    UFRML_FRM2                at UFRML : 2
var volatile bit    UFRML_FRM3                at UFRML : 3
var volatile bit    UFRML_FRM4                at UFRML : 4
var volatile bit    UFRML_FRM5                at UFRML : 5
var volatile bit    UFRML_FRM6                at UFRML : 6
var volatile bit    UFRML_FRM7                at UFRML : 7
-- ------------------------------------------------
var volatile byte   UFRMH                     at { 0xF5E }
var volatile bit*3  UFRMH_FRMH                at UFRMH : 0
var volatile bit    UFRMH_FRM8                at UFRMH : 0
var volatile bit    UFRMH_FRM9                at UFRMH : 1
var volatile bit    UFRMH_FRM10               at UFRMH : 2
-- ------------------------------------------------
var volatile byte   UEIR                      at { 0xF5F }
var volatile bit    UEIR_PIDEF                at UEIR : 0
var volatile bit    UEIR_CRC5EF               at UEIR : 1
var volatile bit    UEIR_CRC16EF              at UEIR : 2
var volatile bit    UEIR_DFN8EF               at UEIR : 3
var volatile bit    UEIR_BTOEF                at UEIR : 4
var volatile bit    UEIR_BTSEF                at UEIR : 7
-- ------------------------------------------------
var volatile byte   UIE                       at { 0xF60 }
var volatile bit    UIE_URSTIE                at UIE : 0
var volatile bit    UIE_UERRIE                at UIE : 1
var volatile bit    UIE_ACTVIE                at UIE : 2
var volatile bit    UIE_TRNIE                 at UIE : 3
var volatile bit    UIE_IDLEIE                at UIE : 4
var volatile bit    UIE_STALLIE               at UIE : 5
var volatile bit    UIE_SOFIE                 at UIE : 6
-- ------------------------------------------------
var volatile byte   UCFG                      at { 0xF61 }
var volatile bit    UCFG_PPB0                 at UCFG : 0
var volatile bit    UCFG_PPB1                 at UCFG : 1
var volatile bit    UCFG_FSEN                 at UCFG : 2
var volatile bit    UCFG_UPUEN                at UCFG : 4
var volatile bit    UCFG_UTEYE                at UCFG : 7
var volatile bit    UCFG_UPP0                 at UCFG : 0
var volatile bit    UCFG_UPP1                 at UCFG : 1
-- ------------------------------------------------
var volatile byte   UIR                       at { 0xF62 }
var volatile bit    UIR_URSTIF                at UIR : 0
var volatile bit    UIR_UERRIF                at UIR : 1
var volatile bit    UIR_ACTVIF                at UIR : 2
var volatile bit    UIR_TRNIF                 at UIR : 3
var volatile bit    UIR_IDLEIF                at UIR : 4
var volatile bit    UIR_STALLIF               at UIR : 5
var volatile bit    UIR_SOFIF                 at UIR : 6
-- ------------------------------------------------
var volatile byte   USTAT                     at { 0xF63 }
var volatile bit    USTAT_PPBI                at USTAT : 1
var volatile bit    USTAT_DIR                 at USTAT : 2
var volatile bit    USTAT_ENDP0               at USTAT : 3
var volatile bit    USTAT_ENDP1               at USTAT : 4
var volatile bit    USTAT_ENDP2               at USTAT : 5
var volatile bit    USTAT_ENDP3               at USTAT : 6
-- ------------------------------------------------
var volatile byte   UCON                      at { 0xF64 }
var volatile bit    UCON_SUSPND               at UCON : 1
var volatile bit    UCON_RESUME               at UCON : 2
var volatile bit    UCON_USBEN                at UCON : 3
var volatile bit    UCON_PKTDIS               at UCON : 4
var volatile bit    UCON_SE0                  at UCON : 5
var volatile bit    UCON_PPBRST               at UCON : 6
-- ------------------------------------------------
var volatile byte   SRCON0                    at { 0xF68 }
var volatile bit    SRCON0_SRPR               at SRCON0 : 0
var volatile bit    SRCON0_SRPS               at SRCON0 : 1
var volatile bit    SRCON0_SRNQEN             at SRCON0 : 2
var volatile bit    SRCON0_SRQEN              at SRCON0 : 3
var volatile bit*3  SRCON0_SRCLK              at SRCON0 : 4
var volatile bit    SRCON0_SRLEN              at SRCON0 : 7
var volatile bit    SRCON0_SRCLK0             at SRCON0 : 4
var volatile bit    SRCON0_SRCLK1             at SRCON0 : 5
var volatile bit    SRCON0_SRCLK2             at SRCON0 : 6
-- ------------------------------------------------
var volatile byte   SRCON1                    at { 0xF69 }
var volatile bit    SRCON1_SRRC1E             at SRCON1 : 0
var volatile bit    SRCON1_SRRC2E             at SRCON1 : 1
var volatile bit    SRCON1_SRRCKE             at SRCON1 : 2
var volatile bit    SRCON1_SRRPE              at SRCON1 : 3
var volatile bit    SRCON1_SRSC1E             at SRCON1 : 4
var volatile bit    SRCON1_SRSC2E             at SRCON1 : 5
var volatile bit    SRCON1_SRSCKE             at SRCON1 : 6
var volatile bit    SRCON1_SRSPE              at SRCON1 : 7
-- ------------------------------------------------
var volatile byte   CM2CON0                   at { 0xF6B }
var volatile bit*2  CM2CON0_C2CH              at CM2CON0 : 0
var volatile bit    CM2CON0_C2R               at CM2CON0 : 2
var volatile bit    CM2CON0_C2SP              at CM2CON0 : 3
var volatile bit    CM2CON0_C2POL             at CM2CON0 : 4
var volatile bit    CM2CON0_C2OE              at CM2CON0 : 5
var volatile bit    CM2CON0_C2OUT             at CM2CON0 : 6
var volatile bit    CM2CON0_C2ON              at CM2CON0 : 7
var volatile bit    CM2CON0_C2CH0             at CM2CON0 : 0
var volatile bit    CM2CON0_C2CH1             at CM2CON0 : 1
-- ------------------------------------------------
var volatile byte   CM2CON1                   at { 0xF6C }
var volatile bit    CM2CON1_C2SYNC            at CM2CON1 : 0
var volatile bit    CM2CON1_C1SYNC            at CM2CON1 : 1
var volatile bit    CM2CON1_C2HYS             at CM2CON1 : 2
var volatile bit    CM2CON1_C1HYS             at CM2CON1 : 3
var volatile bit    CM2CON1_C2RSEL            at CM2CON1 : 4
var volatile bit    CM2CON1_C1RSEL            at CM2CON1 : 5
var volatile bit    CM2CON1_MC2OUT            at CM2CON1 : 6
var volatile bit    CM2CON1_MC1OUT            at CM2CON1 : 7
-- ------------------------------------------------
var volatile byte   CM1CON0                   at { 0xF6D }
var volatile bit*2  CM1CON0_C1CH              at CM1CON0 : 0
var volatile bit    CM1CON0_C1R               at CM1CON0 : 2
var volatile bit    CM1CON0_C1SP              at CM1CON0 : 3
var volatile bit    CM1CON0_C1POL             at CM1CON0 : 4
var volatile bit    CM1CON0_C1OE              at CM1CON0 : 5
var volatile bit    CM1CON0_C1OUT             at CM1CON0 : 6
var volatile bit    CM1CON0_C1ON              at CM1CON0 : 7
var volatile bit    CM1CON0_C1CH0             at CM1CON0 : 0
var volatile bit    CM1CON0_C1CH1             at CM1CON0 : 1
-- ------------------------------------------------
var volatile byte   SSPMSK                    at { 0xF6F }
-- ------------------------------------------------
var volatile byte   SLRCON                    at { 0xF76 }
var volatile bit    SLRCON_SLRA               at SLRCON : 0
var volatile bit    SLRCON_SLRB               at SLRCON : 1
var volatile bit    SLRCON_SLRC               at SLRCON : 2
-- ------------------------------------------------
var volatile byte   WPUA                      at { 0xF77 }
var volatile bit    WPUA_WPUA3                at WPUA : 3
var volatile bit    WPUA_WPUA4                at WPUA : 4
var volatile bit    WPUA_WPUA5                at WPUA : 5
-- ------------------------------------------------
var volatile byte   WPUB                      at { 0xF78 }
var volatile bit    WPUB_WPUB4                at WPUB : 4
var volatile bit    WPUB_WPUB5                at WPUB : 5
var volatile bit    WPUB_WPUB6                at WPUB : 6
var volatile bit    WPUB_WPUB7                at WPUB : 7
-- ------------------------------------------------
var volatile byte   IOCA                      at { 0xF79 }
var volatile bit    IOCA_IOCA0                at IOCA : 0
var volatile bit    IOCA_IOCA1                at IOCA : 1
var volatile bit    IOCA_IOCA3                at IOCA : 3
var volatile bit    IOCA_IOCA4                at IOCA : 4
var volatile bit    IOCA_IOCA5                at IOCA : 5
-- ------------------------------------------------
var volatile byte   IOCB                      at { 0xF7A }
var volatile bit    IOCB_IOCB4                at IOCB : 4
var volatile bit    IOCB_IOCB5                at IOCB : 5
var volatile bit    IOCB_IOCB6                at IOCB : 6
var volatile bit    IOCB_IOCB7                at IOCB : 7
-- ------------------------------------------------
var volatile byte   ANSEL                     at { 0xF7E }
var volatile bit    ANSEL_ANS3                at ANSEL : 3
var volatile bit    ANSEL_ANS4                at ANSEL : 4
var volatile bit    ANSEL_ANS5                at ANSEL : 5
var volatile bit    ANSEL_ANS6                at ANSEL : 6
var volatile bit    ANSEL_ANS7                at ANSEL : 7
-- ------------------------------------------------
var volatile byte   ANSELH                    at { 0xF7F }
var volatile bit    ANSELH_ANS8               at ANSELH : 0
var volatile bit    ANSELH_ANS9               at ANSELH : 1
var volatile bit    ANSELH_ANS10              at ANSELH : 2
var volatile bit    ANSELH_ANS11              at ANSELH : 3
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xF80 }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    pin_A3                    at PORTA : 3
--
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    PORTA_AN3                 at PORTA : 4
var volatile bit    PORTA_OSC2                at PORTA : 4
var volatile bit    PORTA_OSC1                at PORTA : 5
var volatile bit    PORTA_CLKOUT              at PORTA : 4
var volatile bit    PORTA_CLKIN               at PORTA : 5
var volatile bit    PORTA_ULPWUIN             at PORTA : 0
var volatile bit    PORTA_LVDIN               at PORTA : 5
-- ------------------------------------------------
var volatile byte   PORTB                     at { 0xF81 }
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    PORTB_RB7                 at PORTB : 7
var volatile bit    PORTB_SDI                 at PORTB : 4
var volatile bit    PORTB_RX                  at PORTB : 5
var volatile bit    PORTB_SCL                 at PORTB : 6
var volatile bit    PORTB_TX                  at PORTB : 7
var volatile bit    PORTB_SDA                 at PORTB : 4
var volatile bit    PORTB_DT                  at PORTB : 5
var volatile bit    PORTB_SCK                 at PORTB : 6
var volatile bit    PORTB_CK                  at PORTB : 7
var volatile bit    PORTB_AN10                at PORTB : 4
var volatile bit    PORTB_AN11                at PORTB : 5
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xF82 }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    PORTC_RC7                 at PORTC : 7
var volatile bit    PORTC_AN4                 at PORTC : 0
var volatile bit    PORTC_AN5                 at PORTC : 1
var volatile bit    PORTC_AN6                 at PORTC : 2
var volatile bit    PORTC_AN7                 at PORTC : 3
var volatile bit    PORTC_AN8                 at PORTC : 6
var volatile bit    PORTC_AN9                 at PORTC : 7
var volatile bit    PORTC_C12INP              at PORTC : 0
var volatile bit    PORTC_C12IN1M             at PORTC : 1
var volatile bit    PORTC_C12IN2M             at PORTC : 2
var volatile bit    PORTC_C12IN3M             at PORTC : 3
var volatile bit    PORTC_C12OUT              at PORTC : 4
var volatile bit    PORTC_CCP1                at PORTC : 5
var volatile bit    PORTC_NSS                 at PORTC : 6
var volatile bit    PORTC_INT0                at PORTC : 0
var volatile bit    PORTC_INT1                at PORTC : 1
var volatile bit    PORTC_INT2                at PORTC : 2
var volatile bit    PORTC_PGM                 at PORTC : 3
var volatile bit    PORTC_SRQ                 at PORTC : 4
var volatile bit    PORTC_T0CKI               at PORTC : 5
var volatile bit    PORTC_T13CKI              at PORTC : 6
var volatile bit    PORTC_T1OSCO              at PORTC : 7
var volatile bit    PORTC_VREFP               at PORTC : 0
var volatile bit    PORTC_VREFM               at PORTC : 1
var volatile bit    PORTC_CVREF               at PORTC : 2
var volatile bit    PORTC_T1OSCI              at PORTC : 6
var volatile bit    PORTC_P1D                 at PORTC : 2
var volatile bit    PORTC_P1C                 at PORTC : 3
var volatile bit    PORTC_P1B                 at PORTC : 4
var volatile bit    PORTC_P1A                 at PORTC : 5
var volatile bit    PORTC_SS                  at PORTC : 6
var volatile bit    PORTC_SDO                 at PORTC : 7
var volatile bit    PORTC_CCP2                at PORTC : 1
var volatile bit    PORTC_PA1                 at PORTC : 2
var volatile bit    PORTC_PA2                 at PORTC : 1
-- ------------------------------------------------
var volatile byte   LATA                      at { 0xF89 }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    pin_A0                    at PORTA : 0
--
var volatile bit    pin_A1                    at PORTA : 1
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_AN3                   is pin_A4
alias               pin_OSC2                  is pin_A4
alias               pin_CLKOUT                is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_OSC1                  is pin_A5
alias               pin_CLKIN                 is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LA4                  at LATA : 4
var volatile bit    LATA_LA5                  at LATA : 5
-- ------------------------------------------------
var volatile byte   LATB                      at { 0xF8A }
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB4                at LATB : 4
var volatile bit    pin_B4                    at PORTB : 4
alias               pin_AN10                  is pin_B4
alias               pin_SDI                   is pin_B4
alias               pin_SDA                   is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                at LATB : 5
var volatile bit    pin_B5                    at PORTB : 5
alias               pin_AN11                  is pin_B5
alias               pin_RX                    is pin_B5
alias               pin_DT                    is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                at LATB : 6
var volatile bit    pin_B6                    at PORTB : 6
alias               pin_SCK                   is pin_B6
alias               pin_SCL                   is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB7                at LATB : 7
var volatile bit    pin_B7                    at PORTB : 7
alias               pin_TX                    is pin_B7
alias               pin_CK                    is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LB4                  at LATB : 4
var volatile bit    LATB_LB5                  at LATB : 5
var volatile bit    LATB_LB6                  at LATB : 6
var volatile bit    LATB_LB7                  at LATB : 7
-- ------------------------------------------------
var volatile byte   LATC                      at { 0xF8B }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_AN4                   is pin_C0
alias               pin_C12IN_POS             is pin_C0
alias               pin_VREF_POS              is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_AN5                   is pin_C1
alias               pin_C12IN1_NEG            is pin_C1
alias               pin_VREF_NEG              is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_AN6                   is pin_C2
alias               pin_P1D                   is pin_C2
alias               pin_C12IN2_NEG            is pin_C2
alias               pin_CVREF                 is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_AN7                   is pin_C3
alias               pin_P1C                   is pin_C3
alias               pin_C12IN3_NEG            is pin_C3
alias               pin_PGM                   is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_P1B                   is pin_C4
alias               pin_C12OUT                is pin_C4
alias               pin_SRQ                   is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_CCP1                  is pin_C5
alias               pin_P1A                   is pin_C5
alias               pin_T0CKI                 is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                at LATC : 6
var volatile bit    pin_C6                    at PORTC : 6
alias               pin_AN8                   is pin_C6
alias               pin_SS                    is pin_C6
alias               pin_T13CKI                is pin_C6
alias               pin_T1OSCI                is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC7                at LATC : 7
var volatile bit    pin_C7                    at PORTC : 7
alias               pin_AN9                   is pin_C7
alias               pin_SDO                   is pin_C7
alias               pin_T1OSCO                is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LC0                  at LATC : 0
var volatile bit    LATC_LC1                  at LATC : 1
var volatile bit    LATC_LC2                  at LATC : 2
var volatile bit    LATC_LC3                  at LATC : 3
var volatile bit    LATC_LC4                  at LATC : 4
var volatile bit    LATC_LC5                  at LATC : 5
var volatile bit    LATC_LC6                  at LATC : 6
var volatile bit    LATC_LC7                  at LATC : 7
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0xF92 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_AN3_direction         is pin_A4_direction
alias               pin_OSC2_direction        is pin_A4_direction
alias               pin_CLKOUT_direction      is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_OSC1_direction        is pin_A5_direction
alias               pin_CLKIN_direction       is pin_A5_direction
--
var volatile bit    TRISA_RA4                 at TRISA : 4
var volatile bit    TRISA_RA5                 at TRISA : 5
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0xF93 }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_AN10_direction        is pin_B4_direction
alias               pin_SDI_direction         is pin_B4_direction
alias               pin_SDA_direction         is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_AN11_direction        is pin_B5_direction
alias               pin_RX_direction          is pin_B5_direction
alias               pin_DT_direction          is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_SCK_direction         is pin_B6_direction
alias               pin_SCL_direction         is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_TX_direction          is pin_B7_direction
alias               pin_CK_direction          is pin_B7_direction
--
var volatile bit    TRISB_RB4                 at TRISB : 4
var volatile bit    TRISB_RB5                 at TRISB : 5
var volatile bit    TRISB_RB6                 at TRISB : 6
var volatile bit    TRISB_RB7                 at TRISB : 7
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0xF94 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_AN4_direction         is pin_C0_direction
alias               pin_C12IN_POS_direction   is pin_C0_direction
alias               pin_VREF_POS_direction    is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_AN5_direction         is pin_C1_direction
alias               pin_C12IN1_NEG_direction  is pin_C1_direction
alias               pin_VREF_NEG_direction    is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_AN6_direction         is pin_C2_direction
alias               pin_P1D_direction         is pin_C2_direction
alias               pin_C12IN2_NEG_direction  is pin_C2_direction
alias               pin_CVREF_direction       is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_AN7_direction         is pin_C3_direction
alias               pin_P1C_direction         is pin_C3_direction
alias               pin_C12IN3_NEG_direction  is pin_C3_direction
alias               pin_PGM_direction         is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_P1B_direction         is pin_C4_direction
alias               pin_C12OUT_direction      is pin_C4_direction
alias               pin_SRQ_direction         is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_CCP1_direction        is pin_C5_direction
alias               pin_P1A_direction         is pin_C5_direction
alias               pin_T0CKI_direction       is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_AN8_direction         is pin_C6_direction
alias               pin_SS_direction          is pin_C6_direction
alias               pin_T13CKI_direction      is pin_C6_direction
alias               pin_T1OSCI_direction      is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_AN9_direction         is pin_C7_direction
alias               pin_SDO_direction         is pin_C7_direction
alias               pin_T1OSCO_direction      is pin_C7_direction
--
var volatile bit    TRISC_RC0                 at TRISC : 0
var volatile bit    TRISC_RC1                 at TRISC : 1
var volatile bit    TRISC_RC2                 at TRISC : 2
var volatile bit    TRISC_RC3                 at TRISC : 3
var volatile bit    TRISC_RC4                 at TRISC : 4
var volatile bit    TRISC_RC5                 at TRISC : 5
var volatile bit    TRISC_RC6                 at TRISC : 6
var volatile bit    TRISC_RC7                 at TRISC : 7
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0xF9B }
var volatile bit*6  OSCTUNE_TUN               at OSCTUNE : 0
var volatile bit    OSCTUNE_SPLLEN            at OSCTUNE : 6
var volatile bit    OSCTUNE_INTSRC            at OSCTUNE : 7
var volatile bit    OSCTUNE_TUN0              at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN1              at OSCTUNE : 1
var volatile bit    OSCTUNE_TUN2              at OSCTUNE : 2
var volatile bit    OSCTUNE_TUN3              at OSCTUNE : 3
var volatile bit    OSCTUNE_TUN4              at OSCTUNE : 4
var volatile bit    OSCTUNE_TUN5              at OSCTUNE : 5
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0xF9D }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_CCP1IE               at PIE1 : 2
alias               PIE1_CCPIE                is PIE1_CCP1IE
var volatile bit    PIE1_SSPIE                at PIE1 : 3
var volatile bit    PIE1_TXIE                 at PIE1 : 4
var volatile bit    PIE1_RCIE                 at PIE1 : 5
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_TX1IE                at PIE1 : 4
var volatile bit    PIE1_RC1IE                at PIE1 : 5
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0xF9E }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_CCP1IF               at PIR1 : 2
alias               PIR1_CCPIF                is PIR1_CCP1IF
var volatile bit    PIR1_SSPIF                at PIR1 : 3
var volatile bit    PIR1_TXIF                 at PIR1 : 4
var volatile bit    PIR1_RCIF                 at PIR1 : 5
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_TX1IF                at PIR1 : 4
var volatile bit    PIR1_RC1IF                at PIR1 : 5
-- ------------------------------------------------
var volatile byte   IPR1                      at { 0xF9F }
var volatile bit    IPR1_TMR1IP               at IPR1 : 0
var volatile bit    IPR1_TMR2IP               at IPR1 : 1
var volatile bit    IPR1_CCP1IP               at IPR1 : 2
alias               IPR1_CCPIP                is IPR1_CCP1IP
var volatile bit    IPR1_SSPIP                at IPR1 : 3
var volatile bit    IPR1_TXIP                 at IPR1 : 4
var volatile bit    IPR1_RCIP                 at IPR1 : 5
var volatile bit    IPR1_ADIP                 at IPR1 : 6
var volatile bit    IPR1_TX1IP                at IPR1 : 4
var volatile bit    IPR1_RC1IP                at IPR1 : 5
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0xFA0 }
var volatile bit    PIE2_TMR3IE               at PIE2 : 1
var volatile bit    PIE2_USBIE                at PIE2 : 2
var volatile bit    PIE2_BCLIE                at PIE2 : 3
var volatile bit    PIE2_EEIE                 at PIE2 : 4
var volatile bit    PIE2_C2IE                 at PIE2 : 5
var volatile bit    PIE2_C1IE                 at PIE2 : 6
var volatile bit    PIE2_OSCFIE               at PIE2 : 7
var volatile bit    PIE2_CMIE                 at PIE2 : 6
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0xFA1 }
var volatile bit    PIR2_TMR3IF               at PIR2 : 1
var volatile bit    PIR2_USBIF                at PIR2 : 2
var volatile bit    PIR2_BCLIF                at PIR2 : 3
var volatile bit    PIR2_EEIF                 at PIR2 : 4
var volatile bit    PIR2_C2IF                 at PIR2 : 5
var volatile bit    PIR2_C1IF                 at PIR2 : 6
var volatile bit    PIR2_OSCFIF               at PIR2 : 7
var volatile bit    PIR2_CMIF                 at PIR2 : 6
-- ------------------------------------------------
var volatile byte   IPR2                      at { 0xFA2 }
var volatile bit    IPR2_TMR3IP               at IPR2 : 1
var volatile bit    IPR2_USBIP                at IPR2 : 2
var volatile bit    IPR2_BCLIP                at IPR2 : 3
var volatile bit    IPR2_EEIP                 at IPR2 : 4
var volatile bit    IPR2_C2IP                 at IPR2 : 5
var volatile bit    IPR2_C1IP                 at IPR2 : 6
var volatile bit    IPR2_OSCFIP               at IPR2 : 7
var volatile bit    IPR2_CMIP                 at IPR2 : 6
-- ------------------------------------------------
var volatile byte   EECON1                    at { 0xFA6 }
var volatile bit    EECON1_RD                 at EECON1 : 0
var volatile bit    EECON1_WR                 at EECON1 : 1
var volatile bit    EECON1_WREN               at EECON1 : 2
var volatile bit    EECON1_WRERR              at EECON1 : 3
var volatile bit    EECON1_FREE               at EECON1 : 4
var volatile bit    EECON1_CFGS               at EECON1 : 6
var volatile bit    EECON1_EEPGD              at EECON1 : 7
var volatile bit    EECON1_EEFS               at EECON1 : 6
-- ------------------------------------------------
var volatile byte   EECON2                    at { 0xFA7 }
-- ------------------------------------------------
var volatile byte   EEDATA                    at { 0xFA8 }
-- ------------------------------------------------
var volatile byte   EEADR                     at { 0xFA9 }
var volatile bit    EEADR_EEADR0              at EEADR : 0
var volatile bit    EEADR_EEADR1              at EEADR : 1
var volatile bit    EEADR_EEADR2              at EEADR : 2
var volatile bit    EEADR_EEADR3              at EEADR : 3
var volatile bit    EEADR_EEADR4              at EEADR : 4
var volatile bit    EEADR_EEADR5              at EEADR : 5
var volatile bit    EEADR_EEADR6              at EEADR : 6
var volatile bit    EEADR_EEADR7              at EEADR : 7
-- ------------------------------------------------
var volatile byte   RCSTA                     at { 0xFAB }
var volatile bit    RCSTA_RX9D                at RCSTA : 0
var volatile bit    RCSTA_OERR                at RCSTA : 1
var volatile bit    RCSTA_FERR                at RCSTA : 2
var volatile bit    RCSTA_ADDEN               at RCSTA : 3
var volatile bit    RCSTA_CREN                at RCSTA : 4
var volatile bit    RCSTA_SREN                at RCSTA : 5
var volatile bit    RCSTA_RX9                 at RCSTA : 6
var volatile bit    RCSTA_SPEN                at RCSTA : 7
var volatile bit    RCSTA_ADEN                at RCSTA : 3
var volatile bit    RCSTA_SRENA               at RCSTA : 5
-- ------------------------------------------------
var volatile byte   TXSTA                     at { 0xFAC }
var volatile bit    TXSTA_TX9D                at TXSTA : 0
var volatile bit    TXSTA_TRMT                at TXSTA : 1
var volatile bit    TXSTA_BRGH                at TXSTA : 2
var volatile bit    TXSTA_SENDB               at TXSTA : 3
var volatile bit    TXSTA_SYNC                at TXSTA : 4
var volatile bit    TXSTA_TXEN                at TXSTA : 5
var volatile bit    TXSTA_TX9                 at TXSTA : 6
var volatile bit    TXSTA_CSRC                at TXSTA : 7
var volatile bit    TXSTA_TX9D1               at TXSTA : 0
var volatile bit    TXSTA_TRMT1               at TXSTA : 1
var volatile bit    TXSTA_BRGH1               at TXSTA : 2
var volatile bit    TXSTA_SENDB1              at TXSTA : 3
var volatile bit    TXSTA_SYNC1               at TXSTA : 4
var volatile bit    TXSTA_TXEN1               at TXSTA : 5
var volatile bit    TXSTA_TX91                at TXSTA : 6
var volatile bit    TXSTA_CSRC1               at TXSTA : 7
-- ------------------------------------------------
var volatile byte   TXREG                     at { 0xFAD }
-- ------------------------------------------------
var volatile byte   RCREG                     at { 0xFAE }
-- ------------------------------------------------
var volatile byte   SPBRG                     at { 0xFAF }
alias               SPBRGL                    is SPBRG
-- ------------------------------------------------
var volatile byte   SPBRGH                    at { 0xFB0 }
-- ------------------------------------------------
var volatile byte   T3CON                     at { 0xFB1 }
var volatile bit    T3CON_TMR3ON              at T3CON : 0
var volatile bit    T3CON_TMR3CS              at T3CON : 1
var volatile bit    T3CON_NT3SYNC             at T3CON : 2
alias               T3CON_T3SYNC              is T3CON_NT3SYNC
var volatile bit    T3CON_T3CCP1              at T3CON : 3
var volatile bit*2  T3CON_T3CKPS              at T3CON : 4
var volatile bit    T3CON_RD16                at T3CON : 7
var volatile bit    T3CON_T3CKPS0             at T3CON : 4
var volatile bit    T3CON_T3CKPS1             at T3CON : 5
var volatile bit    T3CON_SOSCEN3             at T3CON : 3
var volatile bit    T3CON_RD163               at T3CON : 7
var volatile bit    T3CON_T3RD16              at T3CON : 7
-- ------------------------------------------------
var volatile word   TMR3                      at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3L                     at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3H                     at { 0xFB3 }
-- ------------------------------------------------
var volatile byte   ECCP1AS                   at { 0xFB6 }
var volatile bit*2  ECCP1AS_PSSBD             at ECCP1AS : 0
var volatile bit*2  ECCP1AS_PSSAC             at ECCP1AS : 2
var volatile bit*3  ECCP1AS_ECCPAS            at ECCP1AS : 4
var volatile bit    ECCP1AS_ECCPASE           at ECCP1AS : 7
var volatile bit    ECCP1AS_PSSBD0            at ECCP1AS : 0
var volatile bit    ECCP1AS_PSSBD1            at ECCP1AS : 1
var volatile bit    ECCP1AS_PSSAC0            at ECCP1AS : 2
var volatile bit    ECCP1AS_PSSAC1            at ECCP1AS : 3
var volatile bit    ECCP1AS_ECCPAS0           at ECCP1AS : 4
var volatile bit    ECCP1AS_ECCPAS1           at ECCP1AS : 5
var volatile bit    ECCP1AS_ECCPAS2           at ECCP1AS : 6
-- ------------------------------------------------
var volatile byte   PWM1CON                   at { 0xFB7 }
var volatile bit*7  PWM1CON_PDC               at PWM1CON : 0
var volatile bit    PWM1CON_PRSEN             at PWM1CON : 7
var volatile bit    PWM1CON_PDC0              at PWM1CON : 0
var volatile bit    PWM1CON_PDC1              at PWM1CON : 1
var volatile bit    PWM1CON_PDC2              at PWM1CON : 2
var volatile bit    PWM1CON_PDC3              at PWM1CON : 3
var volatile bit    PWM1CON_PDC4              at PWM1CON : 4
var volatile bit    PWM1CON_PDC5              at PWM1CON : 5
var volatile bit    PWM1CON_PDC6              at PWM1CON : 6
-- ------------------------------------------------
var volatile byte   BAUDCON                   at { 0xFB8 }
var volatile bit    BAUDCON_ABDEN             at BAUDCON : 0
var volatile bit    BAUDCON_WUE               at BAUDCON : 1
var volatile bit    BAUDCON_BRG16             at BAUDCON : 3
var volatile bit    BAUDCON_CKTXP             at BAUDCON : 4
alias               BAUDCON_TXCKP             is BAUDCON_CKTXP
var volatile bit    BAUDCON_DTRXP             at BAUDCON : 5
alias               BAUDCON_RXDTP             is BAUDCON_DTRXP
var volatile bit    BAUDCON_RCIDL             at BAUDCON : 6
var volatile bit    BAUDCON_ABDOVF            at BAUDCON : 7
var volatile bit    BAUDCON_SCKP              at BAUDCON : 4
var volatile bit    BAUDCON_RXCKP             at BAUDCON : 5
-- ------------------------------------------------
var volatile byte   PSTRCON                   at { 0xFB9 }
var volatile bit    PSTRCON_STRA              at PSTRCON : 0
var volatile bit    PSTRCON_STRB              at PSTRCON : 1
var volatile bit    PSTRCON_STRC              at PSTRCON : 2
var volatile bit    PSTRCON_STRD              at PSTRCON : 3
var volatile bit    PSTRCON_STRSYNC           at PSTRCON : 4
-- ------------------------------------------------
var volatile byte   REFCON0                   at { 0xFBA }
var volatile bit    REFCON0_TSRS              at REFCON0 : 2
var volatile bit    REFCON0_TSEN              at REFCON0 : 3
var volatile bit    REFCON0_FVR1S0            at REFCON0 : 4
var volatile bit    REFCON0_FVR1S1            at REFCON0 : 5
var volatile bit    REFCON0_FVR1ST            at REFCON0 : 6
var volatile bit    REFCON0_FVR1EN            at REFCON0 : 7
var volatile bit*2  REFCON0_FVR1S             at REFCON0 : 4
-- ------------------------------------------------
var volatile byte   REFCON1                   at { 0xFBB }
var volatile bit    REFCON1_D1NSS             at REFCON1 : 0
var volatile bit*2  REFCON1_D1PSS             at REFCON1 : 2
var volatile bit    REFCON1_DAC1OE            at REFCON1 : 5
var volatile bit    REFCON1_D1LPS             at REFCON1 : 6
var volatile bit    REFCON1_D1EN              at REFCON1 : 7
var volatile bit    REFCON1_D1PSS0            at REFCON1 : 2
var volatile bit    REFCON1_D1PSS1            at REFCON1 : 3
var volatile bit    REFCON1_D1NSS0            at REFCON1 : 0
-- ------------------------------------------------
var volatile byte   REFCON2                   at { 0xFBC }
var volatile bit*5  REFCON2_DAC1R             at REFCON2 : 0
var volatile bit    REFCON2_DAC1R0            at REFCON2 : 0
var volatile bit    REFCON2_DAC1R1            at REFCON2 : 1
var volatile bit    REFCON2_DAC1R2            at REFCON2 : 2
var volatile bit    REFCON2_DAC1R3            at REFCON2 : 3
var volatile bit    REFCON2_DAC1R4            at REFCON2 : 4
-- ------------------------------------------------
var volatile byte   CCP1CON                   at { 0xFBD }
var volatile bit*4  CCP1CON_CCP1M             at CCP1CON : 0
alias               CCP1CON_MODE              is CCP1CON_CCP1M
var volatile bit*2  CCP1CON_DC1B              at CCP1CON : 4
var volatile bit*2  CCP1CON_P1M               at CCP1CON : 6
var volatile bit    CCP1CON_CCP1M0            at CCP1CON : 0
var volatile bit    CCP1CON_CCP1M1            at CCP1CON : 1
var volatile bit    CCP1CON_CCP1M2            at CCP1CON : 2
var volatile bit    CCP1CON_CCP1M3            at CCP1CON : 3
var volatile bit    CCP1CON_DC1B0             at CCP1CON : 4
var volatile bit    CCP1CON_DC1B1             at CCP1CON : 5
var volatile bit    CCP1CON_P1M0              at CCP1CON : 6
var volatile bit    CCP1CON_P1M1              at CCP1CON : 7
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0xFBE }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0xFBE }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0xFBF }
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0xFC0 }
var volatile bit*3  ADCON2_ADCS               at ADCON2 : 0
var volatile bit*3  ADCON2_ACQT               at ADCON2 : 3
var volatile bit    ADCON2_ADFM               at ADCON2 : 7
var volatile bit    ADCON2_ADCS0              at ADCON2 : 0
var volatile bit    ADCON2_ADCS1              at ADCON2 : 1
var volatile bit    ADCON2_ADCS2              at ADCON2 : 2
var volatile bit    ADCON2_ACQT0              at ADCON2 : 3
var volatile bit    ADCON2_ACQT1              at ADCON2 : 4
var volatile bit    ADCON2_ACQT2              at ADCON2 : 5
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0xFC1 }
var volatile bit    ADCON1_NVCFG0             at ADCON1 : 0
var volatile bit*2  ADCON1_VCFG               at ADCON1 : 0
var volatile bit    ADCON1_NVCFG1             at ADCON1 : 1
var volatile bit    ADCON1_PVCFG0             at ADCON1 : 2
var volatile bit    ADCON1_PVCFG1             at ADCON1 : 3
var volatile bit    ADCON1_CHSN3              at ADCON1 : 3
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0xFC2 }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*4  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_GO                 at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_CHS3               at ADCON0 : 5
var volatile bit    ADCON0_DONE               at ADCON0 : 1
var volatile bit    ADCON0_NDONE              at ADCON0 : 1
var volatile bit    ADCON0_GO_DONE            at ADCON0 : 1
var volatile bit    ADCON0_GODONE             at ADCON0 : 1
-- ------------------------------------------------
var volatile word   ADRES                     at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0xFC4 }
-- ------------------------------------------------
var volatile byte   SSPCON2                   at { 0xFC5 }
var volatile bit    SSPCON2_SEN               at SSPCON2 : 0
var volatile bit    SSPCON2_RSEN              at SSPCON2 : 1
var volatile bit    SSPCON2_PEN               at SSPCON2 : 2
var volatile bit    SSPCON2_RCEN              at SSPCON2 : 3
var volatile bit    SSPCON2_ACKEN             at SSPCON2 : 4
var volatile bit    SSPCON2_ACKDT             at SSPCON2 : 5
var volatile bit    SSPCON2_ACKSTAT           at SSPCON2 : 6
var volatile bit    SSPCON2_GCEN              at SSPCON2 : 7
-- ------------------------------------------------
var volatile byte   SSPCON1                   at { 0xFC6 }
var volatile bit*4  SSPCON1_SSPM              at SSPCON1 : 0
var volatile bit    SSPCON1_CKP               at SSPCON1 : 4
var volatile bit    SSPCON1_SSPEN             at SSPCON1 : 5
var volatile bit    SSPCON1_SSPOV             at SSPCON1 : 6
var volatile bit    SSPCON1_WCOL              at SSPCON1 : 7
var volatile bit    SSPCON1_SSPM0             at SSPCON1 : 0
var volatile bit    SSPCON1_SSPM1             at SSPCON1 : 1
var volatile bit    SSPCON1_SSPM2             at SSPCON1 : 2
var volatile bit    SSPCON1_SSPM3             at SSPCON1 : 3
-- ------------------------------------------------
var volatile byte   SSPSTAT                   at { 0xFC7 }
var volatile bit    SSPSTAT_BF                at SSPSTAT : 0
var volatile bit    SSPSTAT_UA                at SSPSTAT : 1
var volatile bit    SSPSTAT_R_NW              at SSPSTAT : 2
var volatile bit    SSPSTAT_S                 at SSPSTAT : 3
var volatile bit    SSPSTAT_P                 at SSPSTAT : 4
var volatile bit    SSPSTAT_D_NA              at SSPSTAT : 5
var volatile bit    SSPSTAT_CKE               at SSPSTAT : 6
var volatile bit    SSPSTAT_SMP               at SSPSTAT : 7
var volatile bit    SSPSTAT_R                 at SSPSTAT : 2
var volatile bit    SSPSTAT_D                 at SSPSTAT : 5
var volatile bit    SSPSTAT_W                 at SSPSTAT : 2
var volatile bit    SSPSTAT_A                 at SSPSTAT : 5
var volatile bit    SSPSTAT_NW                at SSPSTAT : 2
var volatile bit    SSPSTAT_NA                at SSPSTAT : 5
var volatile bit    SSPSTAT_R_W               at SSPSTAT : 2
var volatile bit    SSPSTAT_D_A               at SSPSTAT : 5
var volatile bit    SSPSTAT_NWRITE            at SSPSTAT : 2
var volatile bit    SSPSTAT_NADDRESS          at SSPSTAT : 5
var volatile bit    SSPSTAT_RW                at SSPSTAT : 2
var volatile bit    SSPSTAT_START             at SSPSTAT : 3
var volatile bit    SSPSTAT_STOP              at SSPSTAT : 4
var volatile bit    SSPSTAT_DA                at SSPSTAT : 5
var volatile bit    SSPSTAT_NOT_W             at SSPSTAT : 2
var volatile bit    SSPSTAT_NOT_A             at SSPSTAT : 5
-- ------------------------------------------------
var volatile byte   SSPADD                    at { 0xFC8 }
-- ------------------------------------------------
var volatile byte   SSPBUF                    at { 0xFC9 }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0xFCA }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_T2OUTPS0            at T2CON : 3
var volatile bit    T2CON_T2OUTPS1            at T2CON : 4
var volatile bit    T2CON_T2OUTPS2            at T2CON : 5
var volatile bit    T2CON_T2OUTPS3            at T2CON : 6
-- ------------------------------------------------
var volatile byte   PR2                       at { 0xFCB }
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0xFCC }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0xFCD }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_TMR1CS              at T1CON : 1
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit    T1CON_T1OSCEN             at T1CON : 3
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit    T1CON_T1RUN               at T1CON : 6
var volatile bit    T1CON_RD16                at T1CON : 7
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_SOSCEN              at T1CON : 3
var volatile bit    T1CON_T1RD16              at T1CON : 7
-- ------------------------------------------------
var volatile word   TMR1                      at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0xFCF }
-- ------------------------------------------------
var volatile byte   RCON                      at { 0xFD0 }
var volatile bit    RCON_NBOR                 at RCON : 0
var volatile bit    RCON_NPOR                 at RCON : 1
var volatile bit    RCON_NPD                  at RCON : 2
var volatile bit    RCON_NTO                  at RCON : 3
var volatile bit    RCON_NRI                  at RCON : 4
var volatile bit    RCON_SBOREN               at RCON : 6
var volatile bit    RCON_IPEN                 at RCON : 7
var volatile bit    RCON_BOR                  at RCON : 0
var volatile bit    RCON_POR                  at RCON : 1
var volatile bit    RCON_PD                   at RCON : 2
var volatile bit    RCON_TO                   at RCON : 3
var volatile bit    RCON_RI                   at RCON : 4
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0xFD1 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit    WDTCON_SWDTE              at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON2                   at { 0xFD2 }
var volatile bit    OSCCON2_LFIOFS            at OSCCON2 : 0
var volatile bit    OSCCON2_HFIOFL            at OSCCON2 : 1
var volatile bit    OSCCON2_PRI_SD            at OSCCON2 : 2
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0xFD3 }
var volatile bit    OSCCON_SCS0               at OSCCON : 0
var volatile bit*2  OSCCON_SCS                at OSCCON : 0
var volatile bit    OSCCON_SCS1               at OSCCON : 1
var volatile bit    OSCCON_IOFS               at OSCCON : 2
var volatile bit    OSCCON_OSTS               at OSCCON : 3
var volatile bit*3  OSCCON_IRCF               at OSCCON : 4
var volatile bit    OSCCON_IDLEN              at OSCCON : 7
var volatile bit    OSCCON_IRCF0              at OSCCON : 4
var volatile bit    OSCCON_IRCF1              at OSCCON : 5
var volatile bit    OSCCON_IRCF2              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   T0CON                     at { 0xFD5 }
var volatile bit*3  T0CON_T0PS                at T0CON : 0
var volatile bit    T0CON_PSA                 at T0CON : 3
var volatile bit    T0CON_T0SE                at T0CON : 4
var volatile bit    T0CON_T0CS                at T0CON : 5
var volatile bit    T0CON_T08BIT              at T0CON : 6
var volatile bit    T0CON_TMR0ON              at T0CON : 7
var volatile bit    T0CON_T0PS0               at T0CON : 0
var volatile bit    T0CON_T0PS1               at T0CON : 1
var volatile bit    T0CON_T0PS2               at T0CON : 2
-- ------------------------------------------------
var volatile word   TMR0                      at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0L                     at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0H                     at { 0xFD7 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0xFD8 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_OV                 at STATUS : 3
var volatile bit    STATUS_N                  at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile bit    STATUS_OVERFLOW           at STATUS : 3
var volatile bit    STATUS_NEGATIVE           at STATUS : 4
var volatile byte   _status                   at { 0xFD8 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _ov                       =  3
const        byte   _n                        =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
const        byte   _overflow                 =  3
const        byte   _negative                 =  4
const        byte   _banked                   =  1
const        byte   _access                   =  0
-- ------------------------------------------------
var volatile word   FSR2                      at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2L                     at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2H                     at { 0xFDA }
var volatile bit*4  FSR2H_FSR2H               at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    at { 0xFDB }
-- ------------------------------------------------
var volatile byte   PREINC2                   at { 0xFDC }
-- ------------------------------------------------
var volatile byte   POSTDEC2                  at { 0xFDD }
-- ------------------------------------------------
var volatile byte   POSTINC2                  at { 0xFDE }
-- ------------------------------------------------
var volatile byte   INDF2                     at { 0xFDF }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0xFE0 }
var volatile bit*4  BSR_BSR                   at BSR : 0
var volatile byte   _bsr                      at { 0xFE0 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0xFE1 }
var volatile word   _fsr1                     at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0xFE1 }
var volatile byte   _fsr1l                    at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0xFE2 }
var volatile bit*4  FSR1H_FSR1H               at FSR1H : 0
var volatile byte   _fsr1h                    at { 0xFE2 }
-- ------------------------------------------------
var volatile byte   PLUSW1                    at { 0xFE3 }
-- ------------------------------------------------
var volatile byte   PREINC1                   at { 0xFE4 }
-- ------------------------------------------------
var volatile byte   POSTDEC1                  at { 0xFE5 }
-- ------------------------------------------------
var volatile byte   POSTINC1                  at { 0xFE6 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0xFE7 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0xFE8 }
-- ------------------------------------------------
var volatile word   FSR0                      at { 0xFE9 }
var volatile word   _fsr0                     at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0xFE9 }
var volatile byte   _fsr0l                    at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0xFEA }
var volatile bit*4  FSR0H_FSR0H               at FSR0H : 0
var volatile byte   _fsr0h                    at { 0xFEA }
-- ------------------------------------------------
var volatile byte   PLUSW0                    at { 0xFEB }
-- ------------------------------------------------
var volatile byte   PREINC0                   at { 0xFEC }
-- ------------------------------------------------
var volatile byte   POSTDEC0                  at { 0xFED }
-- ------------------------------------------------
var volatile byte   POSTINC0                  at { 0xFEE }
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0xFEF }
var volatile byte   _ind                      at { 0xFEF }
-- ------------------------------------------------
var volatile byte   INTCON3                   at { 0xFF0 }
var volatile bit    INTCON3_INT1IF            at INTCON3 : 0
var volatile bit    INTCON3_INT2IF            at INTCON3 : 1
var volatile bit    INTCON3_INT1IE            at INTCON3 : 3
var volatile bit    INTCON3_INT2IE            at INTCON3 : 4
var volatile bit    INTCON3_INT1IP            at INTCON3 : 6
var volatile bit    INTCON3_INT2IP            at INTCON3 : 7
var volatile bit    INTCON3_INT1F             at INTCON3 : 0
var volatile bit    INTCON3_INT2F             at INTCON3 : 1
var volatile bit    INTCON3_INT1E             at INTCON3 : 3
var volatile bit    INTCON3_INT2E             at INTCON3 : 4
var volatile bit    INTCON3_INT1P             at INTCON3 : 6
var volatile bit    INTCON3_INT2P             at INTCON3 : 7
-- ------------------------------------------------
var volatile byte   INTCON2                   at { 0xFF1 }
var volatile bit    INTCON2_RABIP             at INTCON2 : 0
var volatile bit    INTCON2_TMR0IP            at INTCON2 : 2
var volatile bit    INTCON2_INTEDG2           at INTCON2 : 4
var volatile bit    INTCON2_INTEDG1           at INTCON2 : 5
var volatile bit    INTCON2_INTEDG0           at INTCON2 : 6
var volatile bit    INTCON2_NRABPU            at INTCON2 : 7
var volatile bit    INTCON2_RABPU             at INTCON2 : 7
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xFF2 }
var volatile bit    INTCON_RABIF              at INTCON : 0
var volatile bit    INTCON_INT0IF             at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_RABIE              at INTCON : 3
var volatile bit    INTCON_INT0IE             at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE_GIEL          at INTCON : 6
var volatile bit    INTCON_GIE_GIEH           at INTCON : 7
var volatile bit    INTCON_INT0F              at INTCON : 1
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_INT0E              at INTCON : 4
var volatile bit    INTCON_T0IE               at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_GIEL               at INTCON : 6
var volatile bit    INTCON_GIEH               at INTCON : 7
-- ------------------------------------------------
var volatile word   PROD                      at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODL                     at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODH                     at { 0xFF4 }
-- ------------------------------------------------
var volatile byte   TABLAT                    at { 0xFF5 }
var volatile byte   _tablat                   at { 0xFF5 }
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    at { 0xFF6 }
var volatile byte*3 _tblptr                   at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRL                   at { 0xFF6 }
var volatile byte   _tblptrl                  at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRH                   at { 0xFF7 }
var volatile byte   _tblptrh                  at { 0xFF7 }
-- ------------------------------------------------
var volatile byte   TBLPTRU                   at { 0xFF8 }
var volatile bit*5  TBLPTRU_TBLPTRU           at TBLPTRU : 0
var volatile bit    TBLPTRU_ACSS              at TBLPTRU : 5
var volatile byte   _tblptru                  at { 0xFF8 }
-- ------------------------------------------------
var volatile byte*3 PCLAT                     at { 0xFF9 }
var volatile byte*3 _pclat                    at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0xFF9 }
var volatile byte   _pcl                      at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xFFA }
var volatile byte   _pclath                   at { 0xFFA }
-- ------------------------------------------------
var volatile byte   PCLATU                    at { 0xFFB }
var volatile bit*5  PCLATU_PCU                at PCLATU : 0
var volatile byte   _pclatu                   at { 0xFFB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0xFFC }
var volatile bit*5  STKPTR_STKPTR             at STKPTR : 0
var volatile bit    STKPTR_STKUNF             at STKPTR : 6
var volatile bit    STKPTR_STKFUL             at STKPTR : 7
var volatile bit    STKPTR_SP0                at STKPTR : 0
var volatile bit    STKPTR_SP1                at STKPTR : 1
var volatile bit    STKPTR_SP2                at STKPTR : 2
var volatile bit    STKPTR_SP3                at STKPTR : 3
var volatile bit    STKPTR_SP4                at STKPTR : 4
var volatile bit    STKPTR_STKOVF             at STKPTR : 7
-- ------------------------------------------------
var volatile byte*3 TOS                       at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0xFFE }
-- ------------------------------------------------
var volatile byte   TOSU                      at { 0xFFF }
var volatile bit*5  TOSU_TOSU                 at TOSU : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSEL  = 0b0000_0000
   ANSELH = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CM1CON0 = 0b0000_1000
   CM2CON0 = 0b0000_1000
   CM2CON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
const word USB_BDT_ADDRESS  = 0x0200
--
-- Free shared memory: 0x1-0x5F
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1L (0x300000)
--
pragma fuse_def CPUDIV:0  0x18 {         -- CPU System Clock Selection bits
       P4 = 0x18                         -- CPU System Clock divided by 4
       P3 = 0x10                         -- CPU System Clock divided by 3
       P2 = 0x8                          -- CPU System Clock divided by 2
       P1 = 0x0                          -- No CPU System Clock divide
       }
pragma fuse_def USBDIV:0  0x20 {         -- USB Clock Selection bit
       P2 = 0x20                         -- USB clock comes from the OSC1/OSC2 divided by 2
       P1 = 0x0                          -- USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
       }
--
-- CONFIG1H (0x300001)
--
pragma fuse_def OSC:1  0xF {             -- Oscillator Selection bits
       ECL_NOCLKOUT = 0xD                -- EC (low)
       ECL_CLKOUT = 0xC                  -- EC, CLKOUT function on OSC2 (low)
       ECM_NOCLKOUT = 0xB                -- EC (medium)
       ECM_CLKOUT = 0xA                  -- EC, CLKOUT function on OSC2 (medium)
       INTOSC_CLKOUT = 0x9               -- Internal RC oscillator, CLKOUT function on OSC2
       INTOSC_NOCLKOUT = 0x8             -- Internal RC oscillator
       RC_NOCLKOUT = 0x7                 -- External RC oscillator
       ECH_NOCLKOUT = 0x5                -- EC (high)
       ECH_CLKOUT = 0x4                  -- EC, CLKOUT function on OSC2 (high)
       RC_CLKOUT = 0x3                   -- External RC oscillator, CLKOUT function on OSC2
       HS = 0x2                          -- HS oscillator
       XT = 0x1                          -- XT oscillator
       LP = 0x0                          -- LP oscillator
       }
pragma fuse_def PLLEN:1  0x10 {          -- 4 X PLL Enable bit
       ENABLED = 0x10                    -- Oscillator multiplied by 4
       DISABLED = 0x0                    -- PLL is under software control
       }
pragma fuse_def PCLKEN:1  0x20 {         -- Primary Clock Enable bit
       ENABLED = 0x20                    -- Primary clock enabled
       DISABLED = 0x0                    -- Primary clock is under software control
       }
pragma fuse_def FCMEN:1  0x40 {          -- Fail-Safe Clock Monitor Enable
       ENABLED = 0x40                    -- Fail-Safe Clock Monitor enabled
       DISABLED = 0x0                    -- Fail-Safe Clock Monitor disabled
       }
pragma fuse_def IESO:1  0x80 {           -- Internal/External Oscillator Switchover bit
       DISABLED = 0x0                    -- Oscillator Switchover mode disabled
       ENABLED = 0x80                    -- Oscillator Switchover mode enabled
       }
--
-- CONFIG2L (0x300002)
--
pragma fuse_def PWRTE:2  0x1 {           -- Power-up Timer Enable bit
       DISABLED = 0x1                    -- PWRT disabled
       ENABLED = 0x0                     -- PWRT enabled
       }
pragma fuse_def BROWNOUT:2  0x6 {        -- Brown-out Reset Enable bits
       ENABLED = 0x6                     -- Brown-out Reset enabled in hardware only (SBOREN is disabled)
       RUNONLY = 0x4                     -- Brown-out Reset enabled in hardware only and disabled in Sleep mode (SBOREN is disabled)
       CONTROL = 0x2                     -- Brown-out Reset enabled and controlled by software (SBOREN is enabled)
       DISABLED = 0x0                    -- Brown-out Reset disabled in hardware and software
       }
pragma fuse_def VOLTAGE:2  0x18 {        -- Brown-out Reset Voltage bits
       V19 = 0x18                        -- VBOR set to 1.9 V nominal
       V22 = 0x10                        -- VBOR set to 2.2 V nominal
       V27 = 0x8                         -- VBOR set to 2.7 V nominal
       V30 = 0x0                         -- VBOR set to 3.0 V nominal
       }
--
-- CONFIG2H (0x300003)
--
pragma fuse_def WDT:3  0x1 {             -- Watchdog Timer Enable bit
       ENABLED = 0x1                     -- WDT is always enabled. SWDTEN bit has no effect.
       CONTROL = 0x0                     -- WDT is controlled by SWDTEN bit of the WDTCON register
       }
pragma fuse_def WDTPS:3  0x1E {          -- Watchdog Timer Postscale Select bits
       P32K = 0x1E                       -- 1:32768
       P16K = 0x1C                       -- 1:16384
       P8K = 0x1A                        -- 1:8192
       P4K = 0x18                        -- 1:4096
       P2K = 0x16                        -- 1:2048
       P1K = 0x14                        -- 1:1024
       P512  = 0x12                      -- 1:512
       P256  = 0x10                      -- 1:256
       P128  = 0xE                       -- 1:128
       P64  = 0xC                        -- 1:64
       P32  = 0xA                        -- 1:32
       P16  = 0x8                        -- 1:16
       P8  = 0x6                         -- 1:8
       P4  = 0x4                         -- 1:4
       P2  = 0x2                         -- 1:2
       P1  = 0x0                         -- 1:1
       }
--
-- CONFIG3H (0x300005)
--
pragma fuse_def HFOFST:5  0x8 {          -- HFINTOSC Fast Start-up bit
       ENABLED = 0x8                     -- HFINTOSC starts clocking the CPU without waiting for the oscillator to stablize.
       DISABLED = 0x0                    -- The system clock is held off until the HFINTOSC is stable.
       }
pragma fuse_def MCLR:5  0x80 {           -- MCLR Pin Enable bit
       EXTERNAL = 0x80                   -- MCLR pin enabled; RA3 input pin disabled
       INTERNAL = 0x0                    -- RA3 input pin enabled; MCLR disabled
       }
--
-- CONFIG4L (0x300006)
--
pragma fuse_def STVR:6  0x1 {            -- Stack Full/Underflow Reset Enable bit
       ENABLED = 0x1                     -- Stack full/underflow will cause Reset
       DISABLED = 0x0                    -- Stack full/underflow will not cause Reset
       }
pragma fuse_def LVP:6  0x4 {             -- Single-Supply ICSP Enable bit
       ENABLED = 0x4                     -- Single-Supply ICSP enabled
       DISABLED = 0x0                    -- Single-Supply ICSP disabled
       }
pragma fuse_def BBSIZ:6  0x8 {           -- Boot Block Size Select bit
       W1K = 0x8                         -- 1kW boot block size
       W512 = 0x0                        -- 512W boot block size
       }
pragma fuse_def XINST:6  0x40 {          -- Extended Instruction Set Enable bit
--     ENABLED = 0x40                    -- NOTE: not supported by JALV2
       DISABLED = 0x0                    -- Instruction set extension and Indexed Addressing mode disabled (Legacy mode)
       }
pragma fuse_def DEBUG:6  0x80 {          -- Background Debugger Enable bit
       DISABLED = 0x80                   -- Background debugger disabled, RA0 and RA1 configured as general purpose I/O pins
       ENABLED = 0x0                     -- Background debugger enabled, RA0 and RA1 are dedicated to In-Circuit Debug
       }
--
-- CONFIG5L (0x300008)
--
pragma fuse_def CP0:8  0x1 {             -- Code Protection bit
       DISABLED = 0x1                    -- Block 0 not code-protected
       ENABLED = 0x0                     -- Block 0 code-protected
       }
pragma fuse_def CP1:8  0x2 {             -- Code Protection bit
       DISABLED = 0x2                    -- Block 1 not code-protected
       ENABLED = 0x0                     -- Block 1 code-protected
       }
--
-- CONFIG5H (0x300009)
--
pragma fuse_def CPB:9  0x40 {            -- Boot Block Code Protection bit
       DISABLED = 0x40                   -- Boot block not code-protected
       ENABLED = 0x0                     -- Boot block code-protected
       }
pragma fuse_def CPD:9  0x80 {            -- Data EEPROM Code Protection bit
       DISABLED = 0x80                   -- Data EEPROM not code-protected
       ENABLED = 0x0                     -- Data EEPROM code-protected
       }
--
-- CONFIG6L (0x30000A)
--
pragma fuse_def WRT0:10  0x1 {           -- Table Write Protection bit
       DISABLED = 0x1                    -- Block 0 not write-protected
       ENABLED = 0x0                     -- Block 0 write-protected
       }
pragma fuse_def WRT1:10  0x2 {           -- Table Write Protection bit
       DISABLED = 0x2                    -- Block 1 not write-protected
       ENABLED = 0x0                     -- Block 1 write-protected
       }
--
-- CONFIG6H (0x30000B)
--
pragma fuse_def WRTC:11  0x20 {          -- Configuration Register Write Protection bit
       DISABLED = 0x20                   -- Configuration registers not write-protected
       ENABLED = 0x0                     -- Configuration registers write-protected
       }
pragma fuse_def WRTB:11  0x40 {          -- Boot Block Write Protection bit
       DISABLED = 0x40                   -- Boot block not write-protected
       ENABLED = 0x0                     -- Boot block write-protected
       }
pragma fuse_def WRTD:11  0x80 {          -- Data EEPROM Write Protection bit
       DISABLED = 0x80                   -- Data EEPROM not write-protected
       ENABLED = 0x0                     -- Data EEPROM write-protected
       }
--
-- CONFIG7L (0x30000C)
--
pragma fuse_def EBTR0:12  0x1 {          -- Table Read Protection bit
       DISABLED = 0x1                    -- Block 0 not protected from table reads executed in other blocks
       ENABLED = 0x0                     -- Block 0 protected from table reads executed in other blocks
       }
pragma fuse_def EBTR1:12  0x2 {          -- Table Read Protection bit
       DISABLED = 0x2                    -- Block 1 not protected from table reads executed in other blocks
       ENABLED = 0x0                     -- Block 1 protected from table reads executed in other blocks
       }
--
-- CONFIG7H (0x30000D)
--
pragma fuse_def EBTRB:13  0x40 {         -- Boot Block Table Read Protection bit
       DISABLED = 0x40                   -- Boot block not protected from table reads executed in other blocks
       ENABLED = 0x0                     -- Boot block protected from table reads executed in other blocks
       }
--
