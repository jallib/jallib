-- ------------------------------------------------
-- Title: JalV2 device include file for 16f15223
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16f15223, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC16F15223.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Fri Mar  7 10:07:12 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x30E4            -- ID for PIC programmer
const  word  CHIP_ID     = 0xA301            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "16F15223"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_14H       -- (banks=64)
pragma  target  inst     1            -- instruction set : cpu_p16f1_v1
pragma  target  chip     16F15223
pragma  target  bank     0x0080
pragma  target  page     0x0800
pragma  stack            16
pragma  code             2048
pragma  ID               0x8000,4
pragma  data             0x20-0x7F,0xA0-0xEF,0x120-0x16F
pragma  shared           0x00-0x0B,0x70-0x7F
--
var volatile byte _pic_accum at 0x7F      -- (compiler)
--
const word   _FUSES_CT             = 5
const word   _FUSE_BASE[_FUSES_CT] = {
                                       0x8007,
                                       0x8008,
                                       0x8009,
                                       0x800A,
                                       0x800B 
                                     }
const word   _FUSES[_FUSES_CT]     = {
                                       0x3FFF,     -- CONFIG1
                                       0x3FFF,     -- CONFIG2
                                       0x3FFF,     -- CONFIG3
                                       0x3FFF,     -- CONFIG4
                                       0x3FFF      -- CONFIG5
                                     }
--
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0x0 }
var volatile byte   _ind                      at { 0x0 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0x1 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x2 }
var volatile byte   _pcl                      at { 0x2 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x3 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_NPD                at STATUS : 3
var volatile bit    STATUS_NTO                at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile byte   _status                   at { 0x3 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _not_pd                   =  3
const        byte   _not_to                   =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
-- ------------------------------------------------
var volatile word   FSR0                      at { 0x4 }
var volatile word   _fsr0                     at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0x4 }
var volatile byte   _fsr0l                    at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0x5 }
var volatile byte   _fsr0h                    at { 0x5 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0x6 }
var volatile word   _fsr1                     at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0x6 }
var volatile byte   _fsr1l                    at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0x7 }
var volatile byte   _fsr1h                    at { 0x7 }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0x8 }
var volatile bit*6  BSR_BSR                   at BSR : 0
var volatile bit    BSR_BSR0                  at BSR : 0
var volatile bit    BSR_BSR1                  at BSR : 1
var volatile bit    BSR_BSR2                  at BSR : 2
var volatile bit    BSR_BSR3                  at BSR : 3
var volatile bit    BSR_BSR4                  at BSR : 4
var volatile bit    BSR_BSR5                  at BSR : 5
var volatile byte   _bsr                      at { 0x8 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0x9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xA }
var volatile bit*7  PCLATH_PCLATH             at PCLATH : 0
var volatile byte   _pclath                   at { 0xA }
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xB }
var volatile bit    INTCON_INTEDG             at INTCON : 0
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xC }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xE }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x12 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_ANA0_direction        is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_ANA1_direction        is pin_A1_direction
alias               pin_VREF_POS_direction    is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_ANA2_direction        is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_ANA4_direction        is pin_A4_direction
alias               pin_CLKOUT_direction      is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_ANA5_direction        is pin_A5_direction
alias               pin_CLKIN_direction       is pin_A5_direction
alias               pin_ECIN_direction        is pin_A5_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0x14 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_SMB_I2C_RC0_direction is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_SMB_I2C_RC1_direction is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_ANC2_direction        is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_ANC3_direction        is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_ANC4_direction        is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_ANC5_direction        is pin_C5_direction
--
-- ------------------------------------------------
var volatile byte   LATA                      at { 0x18 }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_ANA0                  is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_ANA1                  is pin_A1
alias               pin_VREF_POS              is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_ANA2                  is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                at LATA : 3
var volatile bit    pin_A3                    at PORTA : 3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_ANA4                  is pin_A4
alias               pin_CLKOUT                is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_ANA5                  is pin_A5
alias               pin_CLKIN                 is pin_A5
alias               pin_ECIN                  is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                      at { 0x1A }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_SMB_I2C_RC0           is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_SMB_I2C_RC1           is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_ANC2                  is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_ANC3                  is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_ANC4                  is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_ANC5                  is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   CPCON                     at { 0x9A }
var volatile bit    CPCON_CPRDY               at CPCON : 0
var volatile bit    CPCON_CPT                 at CPCON : 1
var volatile bit*2  CPCON_CPON                at CPCON : 6
-- ------------------------------------------------
var volatile word   ADRES                     at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0x9C }
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0x9D }
var volatile bit    ADCON0_ON                 at ADCON0 : 0
var volatile bit    ADCON0_GO                 at ADCON0 : 1
var volatile bit*6  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*6  ADCON0_ADCHS              at ADCON0 : 2
var volatile bit    ADCON0_ADGO               at ADCON0 : 1
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0x9E }
var volatile bit*2  ADCON1_PREF               at ADCON1 : 0
var volatile bit*3  ADCON1_CS                 at ADCON1 : 4
var volatile bit    ADCON1_FM                 at ADCON1 : 7
var volatile bit*2  ADCON1_ADPREF             at ADCON1 : 0
var volatile bit*3  ADCON1_ADCS               at ADCON1 : 4
var volatile bit    ADCON1_ADFM               at ADCON1 : 7
-- ------------------------------------------------
var volatile byte   ADACT                     at { 0x9F }
var volatile bit*4  ADACT_ACT                 at ADACT : 0
var volatile bit*4  ADACT_ADACT               at ADACT : 0
-- ------------------------------------------------
var volatile byte   RC0I2C                    at { 0x10E }
var volatile bit*2  RC0I2C_TH                 at RC0I2C : 0
var volatile bit*2  RC0I2C_PU                 at RC0I2C : 4
var volatile bit    RC0I2C_SLEW               at RC0I2C : 6
-- ------------------------------------------------
var volatile byte   RC1I2C                    at { 0x10F }
var volatile bit*2  RC1I2C_TH                 at RC1I2C : 0
var volatile bit*2  RC1I2C_PU                 at RC1I2C : 4
var volatile bit    RC1I2C_SLEW               at RC1I2C : 6
-- ------------------------------------------------
var volatile byte   RC1REG                    at { 0x119 }
--
alias               RCREG                     is RC1REG
-- ------------------------------------------------
var volatile byte   TX1REG                    at { 0x11A }
--
alias               TXREG                     is TX1REG
-- ------------------------------------------------
var volatile word   SP1BRG                    at { 0x11B }
--
alias               SPBRG                     is SP1BRG
-- ------------------------------------------------
var volatile byte   SP1BRGL                   at { 0x11B }
--
alias               SPBRGL                    is SP1BRGL
-- ------------------------------------------------
var volatile byte   SP1BRGH                   at { 0x11C }
--
alias               SPBRGH                    is SP1BRGH
-- ------------------------------------------------
var volatile byte   RC1STA                    at { 0x11D }
var volatile bit    RC1STA_RX9D               at RC1STA : 0
var volatile bit    RC1STA_OERR               at RC1STA : 1
var volatile bit    RC1STA_FERR               at RC1STA : 2
var volatile bit    RC1STA_ADDEN              at RC1STA : 3
var volatile bit    RC1STA_CREN               at RC1STA : 4
var volatile bit    RC1STA_SREN               at RC1STA : 5
var volatile bit    RC1STA_RX9                at RC1STA : 6
var volatile bit    RC1STA_SPEN               at RC1STA : 7
--
alias               RCSTA                     is RC1STA
alias               RCSTA_RX9D                is RC1STA_RX9D
alias               RCSTA_OERR                is RC1STA_OERR
alias               RCSTA_FERR                is RC1STA_FERR
alias               RCSTA_ADDEN               is RC1STA_ADDEN
alias               RCSTA_CREN                is RC1STA_CREN
alias               RCSTA_SREN                is RC1STA_SREN
alias               RCSTA_RX9                 is RC1STA_RX9
alias               RCSTA_SPEN                is RC1STA_SPEN
-- ------------------------------------------------
var volatile byte   TX1STA                    at { 0x11E }
var volatile bit    TX1STA_TX9D               at TX1STA : 0
var volatile bit    TX1STA_TRMT               at TX1STA : 1
var volatile bit    TX1STA_BRGH               at TX1STA : 2
var volatile bit    TX1STA_SENDB              at TX1STA : 3
var volatile bit    TX1STA_SYNC               at TX1STA : 4
var volatile bit    TX1STA_TXEN               at TX1STA : 5
var volatile bit    TX1STA_TX9                at TX1STA : 6
var volatile bit    TX1STA_CSRC               at TX1STA : 7
--
alias               TXSTA                     is TX1STA
alias               TXSTA_TX9D                is TX1STA_TX9D
alias               TXSTA_TRMT                is TX1STA_TRMT
alias               TXSTA_BRGH                is TX1STA_BRGH
alias               TXSTA_SENDB               is TX1STA_SENDB
alias               TXSTA_SYNC                is TX1STA_SYNC
alias               TXSTA_TXEN                is TX1STA_TXEN
alias               TXSTA_TX9                 is TX1STA_TX9
alias               TXSTA_CSRC                is TX1STA_CSRC
-- ------------------------------------------------
var volatile byte   BAUD1CON                  at { 0x11F }
var volatile bit    BAUD1CON_ABDEN            at BAUD1CON : 0
var volatile bit    BAUD1CON_WUE              at BAUD1CON : 1
var volatile bit    BAUD1CON_BRG16            at BAUD1CON : 3
var volatile bit    BAUD1CON_SCKP             at BAUD1CON : 4
var volatile bit    BAUD1CON_RCIDL            at BAUD1CON : 6
var volatile bit    BAUD1CON_ABDOVF           at BAUD1CON : 7
--
alias               BAUDCON                   is BAUD1CON
alias               BAUDCON_ABDEN             is BAUD1CON_ABDEN
alias               BAUDCON_WUE               is BAUD1CON_WUE
alias               BAUDCON_BRG16             is BAUD1CON_BRG16
alias               BAUDCON_SCKP              is BAUD1CON_SCKP
alias               BAUDCON_RCIDL             is BAUD1CON_RCIDL
alias               BAUDCON_ABDOVF            is BAUD1CON_ABDOVF
-- ------------------------------------------------
var volatile byte   SSP1BUF                   at { 0x18C }
--
alias               SSPBUF                    is SSP1BUF
-- ------------------------------------------------
var volatile byte   SSP1ADD                   at { 0x18D }
--
alias               SSPADD                    is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1MSK                   at { 0x18E }
--
alias               SSPMSK                    is SSP1MSK
-- ------------------------------------------------
var volatile byte   SSP1STAT                  at { 0x18F }
var volatile bit    SSP1STAT_BF               at SSP1STAT : 0
var volatile bit    SSP1STAT_UA               at SSP1STAT : 1
var volatile bit    SSP1STAT_R_NW             at SSP1STAT : 2
var volatile bit    SSP1STAT_S                at SSP1STAT : 3
var volatile bit    SSP1STAT_P                at SSP1STAT : 4
var volatile bit    SSP1STAT_D_NA             at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE              at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP              at SSP1STAT : 7
var volatile bit    SSP1STAT_R_W              at SSP1STAT : 2
var volatile bit    SSP1STAT_D_A              at SSP1STAT : 5
var volatile bit    SSP1STAT_NW               at SSP1STAT : 2
var volatile bit    SSP1STAT_NA               at SSP1STAT : 5
var volatile bit    SSP1STAT_NWRITE           at SSP1STAT : 2
var volatile bit    SSP1STAT_NADDRESS         at SSP1STAT : 5
var volatile bit    SSP1STAT_READ_WRITE       at SSP1STAT : 2
var volatile bit    SSP1STAT_DATA_ADDRESS     at SSP1STAT : 5
var volatile bit    SSP1STAT_I2C_READ         at SSP1STAT : 2
var volatile bit    SSP1STAT_I2C_START        at SSP1STAT : 3
var volatile bit    SSP1STAT_I2C_STOP         at SSP1STAT : 4
var volatile bit    SSP1STAT_I2C_DAT          at SSP1STAT : 5
var volatile bit    SSP1STAT_BF1              at SSP1STAT : 0
var volatile bit    SSP1STAT_UA1              at SSP1STAT : 1
var volatile bit    SSP1STAT_R                at SSP1STAT : 2
var volatile bit    SSP1STAT_START            at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP             at SSP1STAT : 4
var volatile bit    SSP1STAT_D                at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE1             at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP1             at SSP1STAT : 7
var volatile bit    SSP1STAT_RW               at SSP1STAT : 2
var volatile bit    SSP1STAT_START1           at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP1            at SSP1STAT : 4
var volatile bit    SSP1STAT_DA               at SSP1STAT : 5
var volatile bit    SSP1STAT_RW1              at SSP1STAT : 2
var volatile bit    SSP1STAT_I2C_START1       at SSP1STAT : 3
var volatile bit    SSP1STAT_I2C_STOP2        at SSP1STAT : 4
var volatile bit    SSP1STAT_DA1              at SSP1STAT : 5
var volatile bit    SSP1STAT_I2C_READ1        at SSP1STAT : 2
var volatile bit    SSP1STAT_S2               at SSP1STAT : 3
var volatile bit    SSP1STAT_P2               at SSP1STAT : 4
var volatile bit    SSP1STAT_DATA_ADDRESS1    at SSP1STAT : 5
var volatile bit    SSP1STAT_READ_WRITE1      at SSP1STAT : 2
var volatile bit    SSP1STAT_D_A1             at SSP1STAT : 5
var volatile bit    SSP1STAT_R_W1             at SSP1STAT : 2
var volatile bit    SSP1STAT_D_NA1            at SSP1STAT : 5
var volatile bit    SSP1STAT_R_NW1            at SSP1STAT : 2
var volatile bit    SSP1STAT_I2C_DAT1         at SSP1STAT : 5
var volatile bit    SSP1STAT_NW2              at SSP1STAT : 2
var volatile bit    SSP1STAT_NA2              at SSP1STAT : 5
var volatile bit    SSP1STAT_NWRITE1          at SSP1STAT : 2
var volatile bit    SSP1STAT_NADDRESS1        at SSP1STAT : 5
--
alias               SSPSTAT                   is SSP1STAT
alias               SSPSTAT_BF                is SSP1STAT_BF
alias               SSPSTAT_UA                is SSP1STAT_UA
alias               SSPSTAT_R_NW              is SSP1STAT_R_NW
alias               SSPSTAT_S                 is SSP1STAT_S
alias               SSPSTAT_P                 is SSP1STAT_P
alias               SSPSTAT_D_NA              is SSP1STAT_D_NA
alias               SSPSTAT_CKE               is SSP1STAT_CKE
alias               SSPSTAT_SMP               is SSP1STAT_SMP
alias               SSPSTAT_R_W               is SSP1STAT_R_W
alias               SSPSTAT_D_A               is SSP1STAT_D_A
alias               SSPSTAT_NW                is SSP1STAT_NW
alias               SSPSTAT_NA                is SSP1STAT_NA
alias               SSPSTAT_NWRITE            is SSP1STAT_NWRITE
alias               SSPSTAT_NADDRESS          is SSP1STAT_NADDRESS
alias               SSPSTAT_READ_WRITE        is SSP1STAT_READ_WRITE
alias               SSPSTAT_DATA_ADDRESS      is SSP1STAT_DATA_ADDRESS
alias               SSPSTAT_I2C_READ          is SSP1STAT_I2C_READ
alias               SSPSTAT_I2C_START         is SSP1STAT_I2C_START
alias               SSPSTAT_I2C_STOP          is SSP1STAT_I2C_STOP
alias               SSPSTAT_I2C_DAT           is SSP1STAT_I2C_DAT
alias               SSPSTAT_BF1               is SSP1STAT_BF1
alias               SSPSTAT_UA1               is SSP1STAT_UA1
alias               SSPSTAT_R                 is SSP1STAT_R
alias               SSPSTAT_START             is SSP1STAT_START
alias               SSPSTAT_STOP              is SSP1STAT_STOP
alias               SSPSTAT_D                 is SSP1STAT_D
alias               SSPSTAT_CKE1              is SSP1STAT_CKE1
alias               SSPSTAT_SMP1              is SSP1STAT_SMP1
alias               SSPSTAT_RW                is SSP1STAT_RW
alias               SSPSTAT_START1            is SSP1STAT_START1
alias               SSPSTAT_STOP1             is SSP1STAT_STOP1
alias               SSPSTAT_DA                is SSP1STAT_DA
alias               SSPSTAT_RW1               is SSP1STAT_RW1
alias               SSPSTAT_I2C_START1        is SSP1STAT_I2C_START1
alias               SSPSTAT_I2C_STOP2         is SSP1STAT_I2C_STOP2
alias               SSPSTAT_DA1               is SSP1STAT_DA1
alias               SSPSTAT_I2C_READ1         is SSP1STAT_I2C_READ1
alias               SSPSTAT_S2                is SSP1STAT_S2
alias               SSPSTAT_P2                is SSP1STAT_P2
alias               SSPSTAT_DATA_ADDRESS1     is SSP1STAT_DATA_ADDRESS1
alias               SSPSTAT_READ_WRITE1       is SSP1STAT_READ_WRITE1
alias               SSPSTAT_D_A1              is SSP1STAT_D_A1
alias               SSPSTAT_R_W1              is SSP1STAT_R_W1
alias               SSPSTAT_D_NA1             is SSP1STAT_D_NA1
alias               SSPSTAT_R_NW1             is SSP1STAT_R_NW1
alias               SSPSTAT_I2C_DAT1          is SSP1STAT_I2C_DAT1
alias               SSPSTAT_NW2               is SSP1STAT_NW2
alias               SSPSTAT_NA2               is SSP1STAT_NA2
alias               SSPSTAT_NWRITE1           is SSP1STAT_NWRITE1
alias               SSPSTAT_NADDRESS1         is SSP1STAT_NADDRESS1
-- ------------------------------------------------
var volatile byte   SSP1CON1                  at { 0x190 }
var volatile bit*4  SSP1CON1_SSPM             at SSP1CON1 : 0
var volatile bit    SSP1CON1_CKP              at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN            at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV            at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL             at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPM0            at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM1            at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM2            at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM3            at SSP1CON1 : 3
var volatile bit    SSP1CON1_SSPM01           at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM11           at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM21           at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM31           at SSP1CON1 : 3
var volatile bit    SSP1CON1_CKP1             at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN1           at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV1           at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL1            at SSP1CON1 : 7
--
alias               SSPCON1                   is SSP1CON1
alias               SSPCON1_SSPM              is SSP1CON1_SSPM
alias               SSPCON1_CKP               is SSP1CON1_CKP
alias               SSPCON1_SSPEN             is SSP1CON1_SSPEN
alias               SSPCON1_SSPOV             is SSP1CON1_SSPOV
alias               SSPCON1_WCOL              is SSP1CON1_WCOL
alias               SSPCON1_SSPM0             is SSP1CON1_SSPM0
alias               SSPCON1_SSPM1             is SSP1CON1_SSPM1
alias               SSPCON1_SSPM2             is SSP1CON1_SSPM2
alias               SSPCON1_SSPM3             is SSP1CON1_SSPM3
alias               SSPCON1_SSPM01            is SSP1CON1_SSPM01
alias               SSPCON1_SSPM11            is SSP1CON1_SSPM11
alias               SSPCON1_SSPM21            is SSP1CON1_SSPM21
alias               SSPCON1_SSPM31            is SSP1CON1_SSPM31
alias               SSPCON1_CKP1              is SSP1CON1_CKP1
alias               SSPCON1_SSPEN1            is SSP1CON1_SSPEN1
alias               SSPCON1_SSPOV1            is SSP1CON1_SSPOV1
alias               SSPCON1_WCOL1             is SSP1CON1_WCOL1
-- ------------------------------------------------
var volatile byte   SSP1CON2                  at { 0x191 }
var volatile bit    SSP1CON2_SEN              at SSP1CON2 : 0
var volatile bit    SSP1CON2_RSEN             at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN              at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN             at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN            at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT            at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT          at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN             at SSP1CON2 : 7
var volatile bit*5  SSP1CON2_ADMSK            at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK1           at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK2           at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK3           at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK4           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK5           at SSP1CON2 : 5
var volatile bit    SSP1CON2_SEN1             at SSP1CON2 : 0
var volatile bit    SSP1CON2_ADMSK11          at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK21          at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK31          at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN1           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT1           at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT1         at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN1            at SSP1CON2 : 7
var volatile bit    SSP1CON2_RSEN1            at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN1             at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN1            at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK41          at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK51          at SSP1CON2 : 5
--
alias               SSPCON2                   is SSP1CON2
alias               SSPCON2_SEN               is SSP1CON2_SEN
alias               SSPCON2_RSEN              is SSP1CON2_RSEN
alias               SSPCON2_PEN               is SSP1CON2_PEN
alias               SSPCON2_RCEN              is SSP1CON2_RCEN
alias               SSPCON2_ACKEN             is SSP1CON2_ACKEN
alias               SSPCON2_ACKDT             is SSP1CON2_ACKDT
alias               SSPCON2_ACKSTAT           is SSP1CON2_ACKSTAT
alias               SSPCON2_GCEN              is SSP1CON2_GCEN
alias               SSPCON2_ADMSK             is SSP1CON2_ADMSK
alias               SSPCON2_ADMSK1            is SSP1CON2_ADMSK1
alias               SSPCON2_ADMSK2            is SSP1CON2_ADMSK2
alias               SSPCON2_ADMSK3            is SSP1CON2_ADMSK3
alias               SSPCON2_ADMSK4            is SSP1CON2_ADMSK4
alias               SSPCON2_ADMSK5            is SSP1CON2_ADMSK5
alias               SSPCON2_SEN1              is SSP1CON2_SEN1
alias               SSPCON2_ADMSK11           is SSP1CON2_ADMSK11
alias               SSPCON2_ADMSK21           is SSP1CON2_ADMSK21
alias               SSPCON2_ADMSK31           is SSP1CON2_ADMSK31
alias               SSPCON2_ACKEN1            is SSP1CON2_ACKEN1
alias               SSPCON2_ACKDT1            is SSP1CON2_ACKDT1
alias               SSPCON2_ACKSTAT1          is SSP1CON2_ACKSTAT1
alias               SSPCON2_GCEN1             is SSP1CON2_GCEN1
alias               SSPCON2_RSEN1             is SSP1CON2_RSEN1
alias               SSPCON2_PEN1              is SSP1CON2_PEN1
alias               SSPCON2_RCEN1             is SSP1CON2_RCEN1
alias               SSPCON2_ADMSK41           is SSP1CON2_ADMSK41
alias               SSPCON2_ADMSK51           is SSP1CON2_ADMSK51
-- ------------------------------------------------
var volatile byte   SSP1CON3                  at { 0x192 }
var volatile bit    SSP1CON3_DHEN             at SSP1CON3 : 0
var volatile bit    SSP1CON3_AHEN             at SSP1CON3 : 1
var volatile bit    SSP1CON3_SBCDE            at SSP1CON3 : 2
var volatile bit    SSP1CON3_SDAHT            at SSP1CON3 : 3
var volatile bit    SSP1CON3_BOEN             at SSP1CON3 : 4
var volatile bit    SSP1CON3_SCIE             at SSP1CON3 : 5
var volatile bit    SSP1CON3_PCIE             at SSP1CON3 : 6
var volatile bit    SSP1CON3_ACKTIM           at SSP1CON3 : 7
--
alias               SSPCON3                   is SSP1CON3
alias               SSPCON3_DHEN              is SSP1CON3_DHEN
alias               SSPCON3_AHEN              is SSP1CON3_AHEN
alias               SSPCON3_SBCDE             is SSP1CON3_SBCDE
alias               SSPCON3_SDAHT             is SSP1CON3_SDAHT
alias               SSPCON3_BOEN              is SSP1CON3_BOEN
alias               SSPCON3_SCIE              is SSP1CON3_SCIE
alias               SSPCON3_PCIE              is SSP1CON3_PCIE
alias               SSPCON3_ACKTIM            is SSP1CON3_ACKTIM
-- ------------------------------------------------
var volatile word   TMR1                      at { 0x20C }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0x20C }
var volatile bit    TMR1L_TMR1L0              at TMR1L : 0
var volatile bit    TMR1L_TMR1L1              at TMR1L : 1
var volatile bit    TMR1L_TMR1L2              at TMR1L : 2
var volatile bit    TMR1L_TMR1L3              at TMR1L : 3
var volatile bit    TMR1L_TMR1L4              at TMR1L : 4
var volatile bit    TMR1L_TMR1L5              at TMR1L : 5
var volatile bit    TMR1L_TMR1L6              at TMR1L : 6
var volatile bit    TMR1L_TMR1L7              at TMR1L : 7
var volatile bit    TMR1L_TMR10               at TMR1L : 0
var volatile bit    TMR1L_TMR11               at TMR1L : 1
var volatile bit    TMR1L_TMR12               at TMR1L : 2
var volatile bit    TMR1L_TMR13               at TMR1L : 3
var volatile bit    TMR1L_TMR14               at TMR1L : 4
var volatile bit    TMR1L_TMR15               at TMR1L : 5
var volatile bit    TMR1L_TMR16               at TMR1L : 6
var volatile bit    TMR1L_TMR17               at TMR1L : 7
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0x20D }
var volatile bit    TMR1H_TMR1H0              at TMR1H : 0
var volatile bit    TMR1H_TMR1H1              at TMR1H : 1
var volatile bit    TMR1H_TMR1H2              at TMR1H : 2
var volatile bit    TMR1H_TMR1H3              at TMR1H : 3
var volatile bit    TMR1H_TMR1H4              at TMR1H : 4
var volatile bit    TMR1H_TMR1H5              at TMR1H : 5
var volatile bit    TMR1H_TMR1H6              at TMR1H : 6
var volatile bit    TMR1H_TMR1H7              at TMR1H : 7
var volatile bit    TMR1H_TMR18               at TMR1H : 0
var volatile bit    TMR1H_TMR19               at TMR1H : 1
var volatile bit    TMR1H_TMR110              at TMR1H : 2
var volatile bit    TMR1H_TMR111              at TMR1H : 3
var volatile bit    TMR1H_TMR112              at TMR1H : 4
var volatile bit    TMR1H_TMR113              at TMR1H : 5
var volatile bit    TMR1H_TMR114              at TMR1H : 6
var volatile bit    TMR1H_TMR115              at TMR1H : 7
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0x20E }
var volatile bit    T1CON_ON                  at T1CON : 0
var volatile bit    T1CON_RD16                at T1CON : 1
var volatile bit    T1CON_NOT_SYNC            at T1CON : 2
alias               T1CON_NT1SYNC             is T1CON_NOT_SYNC
alias               T1CON_T1SYNC              is T1CON_NOT_SYNC
var volatile bit*2  T1CON_CKPS                at T1CON : 4
alias               T1CON_TMR1CKPS            is T1CON_CKPS
alias               T1CON_T1CKPS              is T1CON_CKPS
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_T1RD16              at T1CON : 1
var volatile bit    T1CON_NOT_T1SYNC          at T1CON : 2
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_NSYNC               at T1CON : 2
var volatile bit    T1CON_CKPS0               at T1CON : 4
var volatile bit    T1CON_CKPS1               at T1CON : 5
var volatile bit    T1CON_RD161               at T1CON : 1
-- ------------------------------------------------
var volatile byte   T1GCON                    at { 0x20F }
var volatile bit    T1GCON_GVAL               at T1GCON : 2
var volatile bit    T1GCON_GGO                at T1GCON : 3
var volatile bit    T1GCON_GSPM               at T1GCON : 4
var volatile bit    T1GCON_GTM                at T1GCON : 5
var volatile bit    T1GCON_GPOL               at T1GCON : 6
var volatile bit    T1GCON_GE                 at T1GCON : 7
var volatile bit    T1GCON_T1GVAL             at T1GCON : 2
var volatile bit    T1GCON_T1GGO              at T1GCON : 3
var volatile bit    T1GCON_T1GSPM             at T1GCON : 4
var volatile bit    T1GCON_T1GTM              at T1GCON : 5
var volatile bit    T1GCON_T1GPOL             at T1GCON : 6
var volatile bit    T1GCON_T1GE               at T1GCON : 7
var volatile bit    T1GCON_NOT_DONE           at T1GCON : 3
var volatile bit    T1GCON_NOT_T1DONE         at T1GCON : 3
var volatile bit    T1GCON_GGO_NDONE          at T1GCON : 3
var volatile bit    T1GCON_T1GGO_NDONE        at T1GCON : 3
-- ------------------------------------------------
var volatile byte   T1GATE                    at { 0x210 }
var volatile bit*5  T1GATE_GSS                at T1GATE : 0
var volatile bit    T1GATE_GSS0               at T1GATE : 0
var volatile bit    T1GATE_GSS1               at T1GATE : 1
var volatile bit    T1GATE_GSS2               at T1GATE : 2
var volatile bit    T1GATE_GSS3               at T1GATE : 3
var volatile bit    T1GATE_GSS4               at T1GATE : 4
var volatile bit    T1GATE_T1GSS0             at T1GATE : 0
var volatile bit    T1GATE_T1GSS1             at T1GATE : 1
var volatile bit    T1GATE_T1GSS2             at T1GATE : 2
var volatile bit    T1GATE_T1GSS3             at T1GATE : 3
var volatile bit    T1GATE_T1GSS4             at T1GATE : 4
-- ------------------------------------------------
var volatile byte   T1CLK                     at { 0x211 }
var volatile bit*4  T1CLK_CS                  at T1CLK : 0
var volatile bit    T1CLK_T1CS0               at T1CLK : 0
var volatile bit    T1CLK_T1CS1               at T1CLK : 1
var volatile bit    T1CLK_T1CS2               at T1CLK : 2
var volatile bit    T1CLK_T1CS3               at T1CLK : 3
var volatile bit    T1CLK_CS0                 at T1CLK : 0
var volatile bit    T1CLK_CS1                 at T1CLK : 1
var volatile bit    T1CLK_CS2                 at T1CLK : 2
var volatile bit    T1CLK_CS3                 at T1CLK : 3
-- ------------------------------------------------
var volatile byte   T2TMR                     at { 0x28C }
-- ------------------------------------------------
var volatile byte   T2PR                      at { 0x28D }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x28E }
var volatile bit*4  T2CON_OUTPS               at T2CON : 0
var volatile bit*3  T2CON_CKPS                at T2CON : 4
alias               T2CON_TMR2CKPS            is T2CON_CKPS
alias               T2CON_T2CKPS              is T2CON_CKPS
var volatile bit    T2CON_ON                  at T2CON : 7
var volatile bit    T2CON_OUTPS0              at T2CON : 0
var volatile bit    T2CON_OUTPS1              at T2CON : 1
var volatile bit    T2CON_OUTPS2              at T2CON : 2
var volatile bit    T2CON_OUTPS3              at T2CON : 3
var volatile bit    T2CON_CKPS0               at T2CON : 4
var volatile bit    T2CON_CKPS1               at T2CON : 5
var volatile bit    T2CON_CKPS2               at T2CON : 6
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 0
var volatile bit    T2CON_T2ON                at T2CON : 7
var volatile bit    T2CON_T2OUTPS0            at T2CON : 0
var volatile bit    T2CON_T2OUTPS1            at T2CON : 1
var volatile bit    T2CON_T2OUTPS2            at T2CON : 2
var volatile bit    T2CON_T2OUTPS3            at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 4
var volatile bit    T2CON_T2CKPS1             at T2CON : 5
var volatile bit    T2CON_T2CKPS2             at T2CON : 6
var volatile bit    T2CON_TMR2ON              at T2CON : 7
-- ------------------------------------------------
var volatile byte   T2HLT                     at { 0x28F }
var volatile bit*5  T2HLT_MODE                at T2HLT : 0
var volatile bit    T2HLT_CKSYNC              at T2HLT : 5
var volatile bit    T2HLT_CKPOL               at T2HLT : 6
var volatile bit    T2HLT_PSYNC               at T2HLT : 7
var volatile bit    T2HLT_MODE0               at T2HLT : 0
var volatile bit    T2HLT_MODE1               at T2HLT : 1
var volatile bit    T2HLT_MODE2               at T2HLT : 2
var volatile bit    T2HLT_MODE3               at T2HLT : 3
var volatile bit    T2HLT_MODE4               at T2HLT : 4
var volatile bit*5  T2HLT_T2MODE              at T2HLT : 0
var volatile bit    T2HLT_T2CKSYNC            at T2HLT : 5
var volatile bit    T2HLT_T2CKPOL             at T2HLT : 6
var volatile bit    T2HLT_T2PSYNC             at T2HLT : 7
var volatile bit    T2HLT_T2MODE0             at T2HLT : 0
var volatile bit    T2HLT_T2MODE1             at T2HLT : 1
var volatile bit    T2HLT_T2MODE2             at T2HLT : 2
var volatile bit    T2HLT_T2MODE3             at T2HLT : 3
var volatile bit    T2HLT_T2MODE4             at T2HLT : 4
-- ------------------------------------------------
var volatile byte   T2CLKCON                  at { 0x290 }
var volatile bit*4  T2CLKCON_CS               at T2CLKCON : 0
var volatile bit    T2CLKCON_CS0              at T2CLKCON : 0
var volatile bit    T2CLKCON_CS1              at T2CLKCON : 1
var volatile bit    T2CLKCON_CS2              at T2CLKCON : 2
var volatile bit*4  T2CLKCON_T2CS             at T2CLKCON : 0
var volatile bit    T2CLKCON_T2CS0            at T2CLKCON : 0
var volatile bit    T2CLKCON_T2CS1            at T2CLKCON : 1
var volatile bit    T2CLKCON_T2CS2            at T2CLKCON : 2
-- ------------------------------------------------
var volatile byte   T2RST                     at { 0x291 }
var volatile bit*5  T2RST_RSEL                at T2RST : 0
var volatile bit    T2RST_RSEL0               at T2RST : 0
var volatile bit    T2RST_RSEL1               at T2RST : 1
var volatile bit    T2RST_RSEL2               at T2RST : 2
var volatile bit    T2RST_RSEL3               at T2RST : 3
var volatile bit*5  T2RST_T2RSEL              at T2RST : 0
var volatile bit    T2RST_T2RSEL0             at T2RST : 0
var volatile bit    T2RST_T2RSEL1             at T2RST : 1
var volatile bit    T2RST_T2RSEL2             at T2RST : 2
var volatile bit    T2RST_T2RSEL3             at T2RST : 3
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0x30C }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0x30C }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0x30D }
-- ------------------------------------------------
var volatile byte   CCP1CON                   at { 0x30E }
var volatile bit*4  CCP1CON_MODE              at CCP1CON : 0
var volatile bit    CCP1CON_FMT               at CCP1CON : 4
var volatile bit    CCP1CON_OUT               at CCP1CON : 5
var volatile bit    CCP1CON_EN                at CCP1CON : 7
var volatile bit    CCP1CON_MODE0             at CCP1CON : 0
var volatile bit    CCP1CON_MODE1             at CCP1CON : 1
var volatile bit    CCP1CON_MODE2             at CCP1CON : 2
var volatile bit    CCP1CON_MODE3             at CCP1CON : 3
var volatile bit*4  CCP1CON_CCP1MODE          at CCP1CON : 0
var volatile bit    CCP1CON_CCP1FMT           at CCP1CON : 4
var volatile bit    CCP1CON_CCP1OUT           at CCP1CON : 5
var volatile bit    CCP1CON_CCP1EN            at CCP1CON : 7
var volatile bit    CCP1CON_CCP1MODE0         at CCP1CON : 0
var volatile bit    CCP1CON_CCP1MODE1         at CCP1CON : 1
var volatile bit    CCP1CON_CCP1MODE2         at CCP1CON : 2
var volatile bit    CCP1CON_CCP1MODE3         at CCP1CON : 3
var volatile bit    CCP1CON_P1M1              at CCP1CON : 7
-- ------------------------------------------------
var volatile byte   CCP1CAP                   at { 0x30F }
var volatile bit*2  CCP1CAP_CTS               at CCP1CAP : 0
var volatile bit    CCP1CAP_CTS0              at CCP1CAP : 0
var volatile bit    CCP1CAP_CTS1              at CCP1CAP : 1
var volatile bit*3  CCP1CAP_CCP1CTS           at CCP1CAP : 0
var volatile bit    CCP1CAP_CCP1CTS0          at CCP1CAP : 0
var volatile bit    CCP1CAP_CCP1CTS1          at CCP1CAP : 1
-- ------------------------------------------------
var volatile word   CCPR2                     at { 0x310 }
-- ------------------------------------------------
var volatile byte   CCPR2L                    at { 0x310 }
-- ------------------------------------------------
var volatile byte   CCPR2H                    at { 0x311 }
-- ------------------------------------------------
var volatile byte   CCP2CON                   at { 0x312 }
var volatile bit*4  CCP2CON_MODE              at CCP2CON : 0
var volatile bit    CCP2CON_FMT               at CCP2CON : 4
var volatile bit    CCP2CON_OUT               at CCP2CON : 5
var volatile bit    CCP2CON_EN                at CCP2CON : 7
var volatile bit    CCP2CON_MODE0             at CCP2CON : 0
var volatile bit    CCP2CON_MODE1             at CCP2CON : 1
var volatile bit    CCP2CON_MODE2             at CCP2CON : 2
var volatile bit    CCP2CON_MODE3             at CCP2CON : 3
var volatile bit*4  CCP2CON_CCP2MODE          at CCP2CON : 0
var volatile bit    CCP2CON_CCP2FMT           at CCP2CON : 4
var volatile bit    CCP2CON_CCP2OUT           at CCP2CON : 5
var volatile bit    CCP2CON_CCP2EN            at CCP2CON : 7
var volatile bit    CCP2CON_CCP2MODE0         at CCP2CON : 0
var volatile bit    CCP2CON_CCP2MODE1         at CCP2CON : 1
var volatile bit    CCP2CON_CCP2MODE2         at CCP2CON : 2
var volatile bit    CCP2CON_CCP2MODE3         at CCP2CON : 3
var volatile bit    CCP2CON_P2M1              at CCP2CON : 7
-- ------------------------------------------------
var volatile byte   CCP2CAP                   at { 0x313 }
var volatile bit*2  CCP2CAP_CTS               at CCP2CAP : 0
var volatile bit    CCP2CAP_CTS0              at CCP2CAP : 0
var volatile bit    CCP2CAP_CTS1              at CCP2CAP : 1
var volatile bit*3  CCP2CAP_CCP2CTS           at CCP2CAP : 0
var volatile bit    CCP2CAP_CCP2CTS0          at CCP2CAP : 0
var volatile bit    CCP2CAP_CCP2CTS1          at CCP2CAP : 1
-- ------------------------------------------------
var volatile word   PWM3DC                    at { 0x314 }
-- ------------------------------------------------
var volatile byte   PWM3DCL                   at { 0x314 }
var volatile bit*2  PWM3DCL_DCL               at PWM3DCL : 6
-- ------------------------------------------------
var volatile byte   PWM3DCH                   at { 0x315 }
-- ------------------------------------------------
var volatile byte   PWM3CON                   at { 0x316 }
var volatile bit    PWM3CON_POL               at PWM3CON : 4
var volatile bit    PWM3CON_OUT               at PWM3CON : 5
var volatile bit    PWM3CON_EN                at PWM3CON : 7
var volatile bit    PWM3CON_PWM3POL           at PWM3CON : 4
var volatile bit    PWM3CON_PWM3OUT           at PWM3CON : 5
var volatile bit    PWM3CON_PWM3EN            at PWM3CON : 7
-- ------------------------------------------------
var volatile word   PWM4DC                    at { 0x318 }
-- ------------------------------------------------
var volatile byte   PWM4DCL                   at { 0x318 }
var volatile bit*2  PWM4DCL_DCL               at PWM4DCL : 6
-- ------------------------------------------------
var volatile byte   PWM4DCH                   at { 0x319 }
-- ------------------------------------------------
var volatile byte   PWM4CON                   at { 0x31A }
var volatile bit    PWM4CON_POL               at PWM4CON : 4
var volatile bit    PWM4CON_OUT               at PWM4CON : 5
var volatile bit    PWM4CON_EN                at PWM4CON : 7
var volatile bit    PWM4CON_PWM4POL           at PWM4CON : 4
var volatile bit    PWM4CON_PWM4OUT           at PWM4CON : 5
var volatile bit    PWM4CON_PWM4EN            at PWM4CON : 7
-- ------------------------------------------------
var volatile word   TMR0                      at { 0x59C }
-- ------------------------------------------------
var volatile byte   TMR0L                     at { 0x59C }
var volatile bit    TMR0L_TMR0L0              at TMR0L : 0
var volatile bit    TMR0L_TMR0L1              at TMR0L : 1
var volatile bit    TMR0L_TMR0L2              at TMR0L : 2
var volatile bit    TMR0L_TMR0L3              at TMR0L : 3
var volatile bit    TMR0L_TMR0L4              at TMR0L : 4
var volatile bit    TMR0L_TMR0L5              at TMR0L : 5
var volatile bit    TMR0L_TMR0L6              at TMR0L : 6
var volatile bit    TMR0L_TMR0L7              at TMR0L : 7
-- ------------------------------------------------
var volatile byte   TMR0H                     at { 0x59D }
var volatile bit    TMR0H_TMR0H0              at TMR0H : 0
var volatile bit    TMR0H_TMR0H1              at TMR0H : 1
var volatile bit    TMR0H_TMR0H2              at TMR0H : 2
var volatile bit    TMR0H_TMR0H3              at TMR0H : 3
var volatile bit    TMR0H_TMR0H4              at TMR0H : 4
var volatile bit    TMR0H_TMR0H5              at TMR0H : 5
var volatile bit    TMR0H_TMR0H6              at TMR0H : 6
var volatile bit    TMR0H_TMR0H7              at TMR0H : 7
var volatile bit    TMR0H_T0PR0               at TMR0H : 0
var volatile bit    TMR0H_T0PR1               at TMR0H : 1
var volatile bit    TMR0H_T0PR2               at TMR0H : 2
var volatile bit    TMR0H_T0PR3               at TMR0H : 3
var volatile bit    TMR0H_T0PR4               at TMR0H : 4
var volatile bit    TMR0H_T0PR5               at TMR0H : 5
var volatile bit    TMR0H_T0PR6               at TMR0H : 6
var volatile bit    TMR0H_T0PR7               at TMR0H : 7
-- ------------------------------------------------
var volatile byte   T0CON0                    at { 0x59E }
var volatile bit*4  T0CON0_OUTPS              at T0CON0 : 0
var volatile bit    T0CON0_MD16               at T0CON0 : 4
var volatile bit    T0CON0_OUT                at T0CON0 : 5
var volatile bit    T0CON0_EN                 at T0CON0 : 7
var volatile bit*4  T0CON0_T0OUTPS            at T0CON0 : 0
var volatile bit    T0CON0_T0MD16             at T0CON0 : 4
var volatile bit    T0CON0_T0OUT              at T0CON0 : 5
var volatile bit    T0CON0_T0EN               at T0CON0 : 7
var volatile bit    T0CON0_OUTPS0             at T0CON0 : 0
var volatile bit    T0CON0_OUTPS1             at T0CON0 : 1
var volatile bit    T0CON0_OUTPS2             at T0CON0 : 2
var volatile bit    T0CON0_OUTPS3             at T0CON0 : 3
var volatile bit    T0CON0_T016BIT            at T0CON0 : 4
var volatile bit    T0CON0_T0OUTPS0           at T0CON0 : 0
var volatile bit    T0CON0_T0OUTPS1           at T0CON0 : 1
var volatile bit    T0CON0_T0OUTPS2           at T0CON0 : 2
var volatile bit    T0CON0_T0OUTPS3           at T0CON0 : 3
-- ------------------------------------------------
var volatile byte   T0CON1                    at { 0x59F }
var volatile bit*4  T0CON1_CKPS               at T0CON1 : 0
var volatile bit    T0CON1_ASYNC              at T0CON1 : 4
var volatile bit*3  T0CON1_CS                 at T0CON1 : 5
var volatile bit    T0CON1_CKPS0              at T0CON1 : 0
var volatile bit    T0CON1_CKPS1              at T0CON1 : 1
var volatile bit    T0CON1_CKPS2              at T0CON1 : 2
var volatile bit    T0CON1_CKPS3              at T0CON1 : 3
var volatile bit    T0CON1_T0ASYNC            at T0CON1 : 4
var volatile bit    T0CON1_CS0                at T0CON1 : 5
var volatile bit    T0CON1_CS1                at T0CON1 : 6
var volatile bit    T0CON1_CS2                at T0CON1 : 7
var volatile bit*4  T0CON1_T0CKPS             at T0CON1 : 0
var volatile bit*3  T0CON1_T0CS               at T0CON1 : 5
var volatile bit    T0CON1_T0CKPS0            at T0CON1 : 0
var volatile bit    T0CON1_T0CKPS1            at T0CON1 : 1
var volatile bit    T0CON1_T0CKPS2            at T0CON1 : 2
var volatile bit    T0CON1_T0CKPS3            at T0CON1 : 3
var volatile bit    T0CON1_T0CS0              at T0CON1 : 5
var volatile bit    T0CON1_T0CS1              at T0CON1 : 6
var volatile bit    T0CON1_T0CS2              at T0CON1 : 7
-- ------------------------------------------------
var volatile byte   PIR0                      at { 0x70C }
var volatile bit    PIR0_INTF                 at PIR0 : 0
var volatile bit    PIR0_IOCIF                at PIR0 : 4
var volatile bit    PIR0_TMR0IF               at PIR0 : 5
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0x70D }
var volatile bit    PIR1_ADIF                 at PIR1 : 0
var volatile bit    PIR1_SSP1IF               at PIR1 : 1
alias               PIR1_SSPIF                is PIR1_SSP1IF
var volatile bit    PIR1_BCL1IF               at PIR1 : 2
var volatile bit    PIR1_TX1IF                at PIR1 : 3
alias               PIR1_TXIF                 is PIR1_TX1IF
var volatile bit    PIR1_RC1IF                at PIR1 : 4
alias               PIR1_RCIF                 is PIR1_RC1IF
var volatile bit    PIR1_TMR1IF               at PIR1 : 5
var volatile bit    PIR1_TMR2IF               at PIR1 : 6
var volatile bit    PIR1_CCP1IF               at PIR1 : 7
alias               PIR1_CCPIF                is PIR1_CCP1IF
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0x70E }
var volatile bit    PIR2_TMR1GIF              at PIR2 : 5
var volatile bit    PIR2_NVMIF                at PIR2 : 6
var volatile bit    PIR2_CCP2IF               at PIR2 : 7
-- ------------------------------------------------
var volatile byte   PIE0                      at { 0x716 }
var volatile bit    PIE0_INTE                 at PIE0 : 0
var volatile bit    PIE0_IOCIE                at PIE0 : 4
var volatile bit    PIE0_TMR0IE               at PIE0 : 5
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0x717 }
var volatile bit    PIE1_ADIE                 at PIE1 : 0
var volatile bit    PIE1_SSP1IE               at PIE1 : 1
alias               PIE1_SSPIE                is PIE1_SSP1IE
var volatile bit    PIE1_BCL1IE               at PIE1 : 2
var volatile bit    PIE1_TX1IE                at PIE1 : 3
alias               PIE1_TXIE                 is PIE1_TX1IE
var volatile bit    PIE1_RC1IE                at PIE1 : 4
alias               PIE1_RCIE                 is PIE1_RC1IE
var volatile bit    PIE1_TMR1IE               at PIE1 : 5
var volatile bit    PIE1_TMR2IE               at PIE1 : 6
var volatile bit    PIE1_CCP1IE               at PIE1 : 7
alias               PIE1_CCPIE                is PIE1_CCP1IE
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0x718 }
var volatile bit    PIE2_TMR1GIE              at PIE2 : 5
var volatile bit    PIE2_NVMIE                at PIE2 : 6
var volatile bit    PIE2_CCP2IE               at PIE2 : 7
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0x80C }
var volatile bit    WDTCON_SEN                at WDTCON : 0
var volatile bit*5  WDTCON_PS                 at WDTCON : 1
var volatile bit    WDTCON_CS                 at WDTCON : 7
var volatile bit    WDTCON_WDTSEN             at WDTCON : 0
var volatile bit*5  WDTCON_WDTPS              at WDTCON : 1
var volatile bit    WDTCON_WDTCS              at WDTCON : 7
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
-- ------------------------------------------------
var volatile byte   BORCON                    at { 0x811 }
var volatile bit    BORCON_BORRDY             at BORCON : 0
var volatile bit    BORCON_SBOREN             at BORCON : 7
-- ------------------------------------------------
var volatile byte   PCON0                     at { 0x813 }
var volatile bit    PCON0_NBOR                at PCON0 : 0
var volatile bit    PCON0_NPOR                at PCON0 : 1
var volatile bit    PCON0_NRI                 at PCON0 : 2
var volatile bit    PCON0_NRMCLR              at PCON0 : 3
var volatile bit    PCON0_NRWDT               at PCON0 : 4
var volatile bit    PCON0_STKUNF              at PCON0 : 6
var volatile bit    PCON0_STKOVF              at PCON0 : 7
-- ------------------------------------------------
var volatile byte   PCON1                     at { 0x814 }
var volatile bit    PCON1_NMEMV               at PCON1 : 1
-- ------------------------------------------------
var volatile word   NVMADR                    at { 0x81A }
-- ------------------------------------------------
var volatile byte   NVMADRL                   at { 0x81A }
-- ------------------------------------------------
var volatile byte   NVMADRH                   at { 0x81B }
var volatile bit*7  NVMADRH_NVMADRH           at NVMADRH : 0
-- ------------------------------------------------
var volatile word   NVMDAT                    at { 0x81C }
-- ------------------------------------------------
var volatile byte   NVMDATL                   at { 0x81C }
-- ------------------------------------------------
var volatile byte   NVMDATH                   at { 0x81D }
var volatile bit*6  NVMDATH_NVMDATH           at NVMDATH : 0
-- ------------------------------------------------
var volatile byte   NVMCON1                   at { 0x81E }
var volatile bit    NVMCON1_RD                at NVMCON1 : 0
var volatile bit    NVMCON1_WR                at NVMCON1 : 1
var volatile bit    NVMCON1_WREN              at NVMCON1 : 2
var volatile bit    NVMCON1_WRERR             at NVMCON1 : 3
var volatile bit    NVMCON1_FREE              at NVMCON1 : 4
var volatile bit    NVMCON1_LWLO              at NVMCON1 : 5
var volatile bit    NVMCON1_NVMREGS           at NVMCON1 : 6
-- ------------------------------------------------
var volatile byte   NVMCON2                   at { 0x81F }
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0x88E }
var volatile bit*2  OSCCON_COSC               at OSCCON : 4
var volatile bit    OSCCON_NDIV0              at OSCCON : 0
var volatile bit    OSCCON_NDIV1              at OSCCON : 1
var volatile bit    OSCCON_NDIV2              at OSCCON : 2
var volatile bit    OSCCON_NDIV3              at OSCCON : 3
var volatile bit    OSCCON_NOSC0              at OSCCON : 4
var volatile bit    OSCCON_NOSC1              at OSCCON : 5
var volatile bit    OSCCON_NOSC2              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   OSCSTAT                   at { 0x890 }
var volatile bit    OSCSTAT_SFOR              at OSCSTAT : 1
var volatile bit    OSCSTAT_ADOR              at OSCSTAT : 2
var volatile bit    OSCSTAT_LFOR              at OSCSTAT : 4
var volatile bit    OSCSTAT_MFOR              at OSCSTAT : 5
var volatile bit    OSCSTAT_HFOR              at OSCSTAT : 6
-- ------------------------------------------------
var volatile byte   OSCEN                     at { 0x891 }
var volatile bit    OSCEN_ADOEN               at OSCEN : 2
var volatile bit    OSCEN_LFOEN               at OSCEN : 4
var volatile bit    OSCEN_MFOEN               at OSCEN : 5
var volatile bit    OSCEN_HFOEN               at OSCEN : 6
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0x892 }
var volatile bit*6  OSCTUNE_TUN               at OSCTUNE : 0
var volatile bit    OSCTUNE_HFTUN0            at OSCTUNE : 0
var volatile bit    OSCTUNE_HFTUN1            at OSCTUNE : 1
var volatile bit    OSCTUNE_HFTUN2            at OSCTUNE : 2
var volatile bit    OSCTUNE_HFTUN3            at OSCTUNE : 3
var volatile bit    OSCTUNE_HFTUN4            at OSCTUNE : 4
var volatile bit    OSCTUNE_HFTUN5            at OSCTUNE : 5
-- ------------------------------------------------
var volatile byte   OSCFRQ                    at { 0x893 }
var volatile bit*3  OSCFRQ_FRQ                at OSCFRQ : 0
var volatile bit    OSCFRQ_HFFRQ0             at OSCFRQ : 0
var volatile bit    OSCFRQ_HFFRQ1             at OSCFRQ : 1
var volatile bit    OSCFRQ_HFFRQ2             at OSCFRQ : 2
-- ------------------------------------------------
var volatile byte   FVRCON                    at { 0x90C }
var volatile bit*2  FVRCON_ADFVR              at FVRCON : 0
var volatile bit    FVRCON_FVRRDY             at FVRCON : 6
var volatile bit    FVRCON_FVREN              at FVRCON : 7
var volatile bit    FVRCON_ADFVR0             at FVRCON : 0
var volatile bit    FVRCON_ADFVR1             at FVRCON : 1
var volatile bit    FVRCON_CDAFVR0            at FVRCON : 2
var volatile bit*2  FVRCON_CDAFVR             at FVRCON : 2
var volatile bit    FVRCON_CDAFVR1            at FVRCON : 3
-- ------------------------------------------------
var volatile byte   PPSLOCK                   at { 0x1E8F }
var volatile bit    PPSLOCK_PPSLOCKED         at PPSLOCK : 0
-- ------------------------------------------------
var volatile byte   INTPPS                    at { 0x1E90 }
-- ------------------------------------------------
var volatile byte   T0CKIPPS                  at { 0x1E91 }
-- ------------------------------------------------
var volatile byte   T1CKIPPS                  at { 0x1E92 }
-- ------------------------------------------------
var volatile byte   T1GPPS                    at { 0x1E93 }
-- ------------------------------------------------
var volatile byte   T2INPPS                   at { 0x1E9C }
-- ------------------------------------------------
var volatile byte   CCP1PPS                   at { 0x1EA1 }
-- ------------------------------------------------
var volatile byte   CCP2PPS                   at { 0x1EA2 }
-- ------------------------------------------------
var volatile byte   ADACTPPS                  at { 0x1EC3 }
-- ------------------------------------------------
var volatile byte   SSP1CLKPPS                at { 0x1EC5 }
--
alias               SSPCLKPPS                 is SSP1CLKPPS
-- ------------------------------------------------
var volatile byte   SSP1DATPPS                at { 0x1EC6 }
--
alias               SSPDATPPS                 is SSP1DATPPS
-- ------------------------------------------------
var volatile byte   SSP1SSPPS                 at { 0x1EC7 }
--
alias               SSPSSPPS                  is SSP1SSPPS
-- ------------------------------------------------
var volatile byte   RX1PPS                    at { 0x1ECB }
-- ------------------------------------------------
var volatile byte   CK1PPS                    at { 0x1ECC }
-- ------------------------------------------------
var volatile byte   RA0PPS                    at { 0x1F10 }
-- ------------------------------------------------
var volatile byte   RA1PPS                    at { 0x1F11 }
-- ------------------------------------------------
var volatile byte   RA2PPS                    at { 0x1F12 }
-- ------------------------------------------------
var volatile byte   RA4PPS                    at { 0x1F14 }
-- ------------------------------------------------
var volatile byte   RA5PPS                    at { 0x1F15 }
-- ------------------------------------------------
var volatile byte   RC0PPS                    at { 0x1F20 }
-- ------------------------------------------------
var volatile byte   RC1PPS                    at { 0x1F21 }
-- ------------------------------------------------
var volatile byte   RC2PPS                    at { 0x1F22 }
-- ------------------------------------------------
var volatile byte   RC3PPS                    at { 0x1F23 }
-- ------------------------------------------------
var volatile byte   RC4PPS                    at { 0x1F24 }
-- ------------------------------------------------
var volatile byte   RC5PPS                    at { 0x1F25 }
-- ------------------------------------------------
var volatile byte   ANSELA                    at { 0x1F38 }
var volatile bit    ANSELA_ANSA0              at ANSELA : 0
var volatile bit    ANSELA_ANSA1              at ANSELA : 1
var volatile bit    ANSELA_ANSA2              at ANSELA : 2
var volatile bit    ANSELA_ANSA4              at ANSELA : 4
var volatile bit    ANSELA_ANSA5              at ANSELA : 5
-- ------------------------------------------------
var volatile byte   WPUA                      at { 0x1F39 }
var volatile bit    WPUA_WPUA0                at WPUA : 0
var volatile bit    WPUA_WPUA1                at WPUA : 1
var volatile bit    WPUA_WPUA2                at WPUA : 2
var volatile bit    WPUA_WPUA3                at WPUA : 3
var volatile bit    WPUA_WPUA4                at WPUA : 4
var volatile bit    WPUA_WPUA5                at WPUA : 5
-- ------------------------------------------------
var volatile byte   ODCONA                    at { 0x1F3A }
var volatile bit    ODCONA_ODCA0              at ODCONA : 0
var volatile bit    ODCONA_ODCA1              at ODCONA : 1
var volatile bit    ODCONA_ODCA2              at ODCONA : 2
var volatile bit    ODCONA_ODCA4              at ODCONA : 4
var volatile bit    ODCONA_ODCA5              at ODCONA : 5
-- ------------------------------------------------
var volatile byte   SLRCONA                   at { 0x1F3B }
var volatile bit    SLRCONA_SLRA0             at SLRCONA : 0
var volatile bit    SLRCONA_SLRA1             at SLRCONA : 1
var volatile bit    SLRCONA_SLRA2             at SLRCONA : 2
var volatile bit    SLRCONA_SLRA4             at SLRCONA : 4
var volatile bit    SLRCONA_SLRA5             at SLRCONA : 5
-- ------------------------------------------------
var volatile byte   INLVLA                    at { 0x1F3C }
var volatile bit    INLVLA_INLVLA0            at INLVLA : 0
var volatile bit    INLVLA_INLVLA1            at INLVLA : 1
var volatile bit    INLVLA_INLVLA2            at INLVLA : 2
var volatile bit    INLVLA_INLVLA3            at INLVLA : 3
var volatile bit    INLVLA_INLVLA4            at INLVLA : 4
var volatile bit    INLVLA_INLVLA5            at INLVLA : 5
-- ------------------------------------------------
var volatile byte   IOCAP                     at { 0x1F3D }
var volatile bit    IOCAP_IOCAP0              at IOCAP : 0
var volatile bit    IOCAP_IOCAP1              at IOCAP : 1
var volatile bit    IOCAP_IOCAP2              at IOCAP : 2
var volatile bit    IOCAP_IOCAP3              at IOCAP : 3
var volatile bit    IOCAP_IOCAP4              at IOCAP : 4
var volatile bit    IOCAP_IOCAP5              at IOCAP : 5
-- ------------------------------------------------
var volatile byte   IOCAN                     at { 0x1F3E }
var volatile bit    IOCAN_IOCAN0              at IOCAN : 0
var volatile bit    IOCAN_IOCAN1              at IOCAN : 1
var volatile bit    IOCAN_IOCAN2              at IOCAN : 2
var volatile bit    IOCAN_IOCAN3              at IOCAN : 3
var volatile bit    IOCAN_IOCAN4              at IOCAN : 4
var volatile bit    IOCAN_IOCAN5              at IOCAN : 5
-- ------------------------------------------------
var volatile byte   IOCAF                     at { 0x1F3F }
var volatile bit    IOCAF_IOCAF0              at IOCAF : 0
var volatile bit    IOCAF_IOCAF1              at IOCAF : 1
var volatile bit    IOCAF_IOCAF2              at IOCAF : 2
var volatile bit    IOCAF_IOCAF3              at IOCAF : 3
var volatile bit    IOCAF_IOCAF4              at IOCAF : 4
var volatile bit    IOCAF_IOCAF5              at IOCAF : 5
-- ------------------------------------------------
var volatile byte   ANSELC                    at { 0x1F4E }
var volatile bit    ANSELC_ANSC0              at ANSELC : 0
var volatile bit    ANSELC_ANSC1              at ANSELC : 1
var volatile bit    ANSELC_ANSC2              at ANSELC : 2
var volatile bit    ANSELC_ANSC3              at ANSELC : 3
var volatile bit    ANSELC_ANSC4              at ANSELC : 4
var volatile bit    ANSELC_ANSC5              at ANSELC : 5
-- ------------------------------------------------
var volatile byte   WPUC                      at { 0x1F4F }
var volatile bit    WPUC_WPUC0                at WPUC : 0
var volatile bit    WPUC_WPUC1                at WPUC : 1
var volatile bit    WPUC_WPUC2                at WPUC : 2
var volatile bit    WPUC_WPUC3                at WPUC : 3
var volatile bit    WPUC_WPUC4                at WPUC : 4
var volatile bit    WPUC_WPUC5                at WPUC : 5
-- ------------------------------------------------
var volatile byte   ODCONC                    at { 0x1F50 }
var volatile bit    ODCONC_ODCC0              at ODCONC : 0
var volatile bit    ODCONC_ODCC1              at ODCONC : 1
var volatile bit    ODCONC_ODCC2              at ODCONC : 2
var volatile bit    ODCONC_ODCC3              at ODCONC : 3
var volatile bit    ODCONC_ODCC4              at ODCONC : 4
var volatile bit    ODCONC_ODCC5              at ODCONC : 5
-- ------------------------------------------------
var volatile byte   SLRCONC                   at { 0x1F51 }
var volatile bit    SLRCONC_SLRC0             at SLRCONC : 0
var volatile bit    SLRCONC_SLRC1             at SLRCONC : 1
var volatile bit    SLRCONC_SLRC2             at SLRCONC : 2
var volatile bit    SLRCONC_SLRC3             at SLRCONC : 3
var volatile bit    SLRCONC_SLRC4             at SLRCONC : 4
var volatile bit    SLRCONC_SLRC5             at SLRCONC : 5
-- ------------------------------------------------
var volatile byte   INLVLC                    at { 0x1F52 }
var volatile bit    INLVLC_INLVLC0            at INLVLC : 0
var volatile bit    INLVLC_INLVLC1            at INLVLC : 1
var volatile bit    INLVLC_INLVLC2            at INLVLC : 2
var volatile bit    INLVLC_INLVLC3            at INLVLC : 3
var volatile bit    INLVLC_INLVLC4            at INLVLC : 4
var volatile bit    INLVLC_INLVLC5            at INLVLC : 5
-- ------------------------------------------------
var volatile byte   IOCCP                     at { 0x1F53 }
var volatile bit    IOCCP_IOCCP0              at IOCCP : 0
var volatile bit    IOCCP_IOCCP1              at IOCCP : 1
var volatile bit    IOCCP_IOCCP2              at IOCCP : 2
var volatile bit    IOCCP_IOCCP3              at IOCCP : 3
var volatile bit    IOCCP_IOCCP4              at IOCCP : 4
var volatile bit    IOCCP_IOCCP5              at IOCCP : 5
-- ------------------------------------------------
var volatile byte   IOCCN                     at { 0x1F54 }
var volatile bit    IOCCN_IOCCN0              at IOCCN : 0
var volatile bit    IOCCN_IOCCN1              at IOCCN : 1
var volatile bit    IOCCN_IOCCN2              at IOCCN : 2
var volatile bit    IOCCN_IOCCN3              at IOCCN : 3
var volatile bit    IOCCN_IOCCN4              at IOCCN : 4
var volatile bit    IOCCN_IOCCN5              at IOCCN : 5
-- ------------------------------------------------
var volatile byte   IOCCF                     at { 0x1F55 }
var volatile bit    IOCCF_IOCCF0              at IOCCF : 0
var volatile bit    IOCCF_IOCCF1              at IOCCF : 1
var volatile bit    IOCCF_IOCCF2              at IOCCF : 2
var volatile bit    IOCCF_IOCCF3              at IOCCF : 3
var volatile bit    IOCCF_IOCCF4              at IOCCF : 4
var volatile bit    IOCCF_IOCCF5              at IOCCF : 5
-- ------------------------------------------------
var volatile byte   STATUS_SHAD               at { 0x1FE4 }
-- ------------------------------------------------
var volatile byte   WREG_SHAD                 at { 0x1FE5 }
-- ------------------------------------------------
var volatile byte   BSR_SHAD                  at { 0x1FE6 }
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD               at { 0x1FE7 }
-- ------------------------------------------------
var volatile word   FSR0_SHAD                 at { 0x1FE8 }
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                at { 0x1FE8 }
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                at { 0x1FE9 }
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                at { 0x1FEA }
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                at { 0x1FEB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0x1FED }
var volatile bit    STKPTR_STKPTR0            at STKPTR : 0
var volatile bit    STKPTR_STKPTR1            at STKPTR : 1
var volatile bit    STKPTR_STKPTR2            at STKPTR : 2
var volatile bit    STKPTR_STKPTR3            at STKPTR : 3
var volatile bit    STKPTR_STKPTR4            at STKPTR : 4
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0x1FEE }
var volatile bit    TOSL_TOSL0                at TOSL : 0
var volatile bit    TOSL_TOSL1                at TOSL : 1
var volatile bit    TOSL_TOSL2                at TOSL : 2
var volatile bit    TOSL_TOSL3                at TOSL : 3
var volatile bit    TOSL_TOSL4                at TOSL : 4
var volatile bit    TOSL_TOSL5                at TOSL : 5
var volatile bit    TOSL_TOSL6                at TOSL : 6
var volatile bit    TOSL_TOSL7                at TOSL : 7
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0x1FEF }
var volatile bit    TOSH_TOSH0                at TOSH : 0
var volatile bit    TOSH_TOSH1                at TOSH : 1
var volatile bit    TOSH_TOSH2                at TOSH : 2
var volatile bit    TOSH_TOSH3                at TOSH : 3
var volatile bit    TOSH_TOSH4                at TOSH : 4
var volatile bit    TOSH_TOSH5                at TOSH : 5
var volatile bit    TOSH_TOSH6                at TOSH : 6
var volatile bit    TOSH_TOSH7                at TOSH : 7
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000
   ANSELC = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_4
--
--    PPS OUTPUT constants
--
const byte PPS_NULL      = 0x00
const byte PPS_LATXY     = 0x00
const byte PPS_CCP1      = 0x01
const byte PPS_CCP2      = 0x02
const byte PPS_PWM3OUT   = 0x03
const byte PPS_PWM4OUT   = 0x04
const byte PPS_TX1       = 0x05
const byte PPS_CK1       = 0x05
const byte PPS_DT1       = 0x06
const byte PPS_SCK1      = 0x07
const byte PPS_SCL1      = 0x07
const byte PPS_SDO1      = 0x08
const byte PPS_SDA1      = 0x08
const byte PPS_TMR0      = 0x09
--
--
-- Free shared memory: 0x70-0x7E
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0  0x3 {             -- External Oscillator Mode Selection bits
       ECH_NOCLKOUT = 0x3                -- EC (external clock) 16 MHz and above
       ECL_NOCLKOUT = 0x2                -- EC (external clock) below 16MHz
       OFF = 0x1                         -- Oscillator not enabled
       }
pragma fuse_def RSTOSC:0  0x30 {         -- Power-up Default Value for COSC bits
       EXTOSC = 0x30                     -- EXTOSC operating per FEXTOSC bits
       HFINTOSC_1MHZ = 0x20              -- HFINTOSC (1 MHz)
       LFINTOSC = 0x10                   -- LFINTOSC
       HFINTOSC_32MHZ = 0x0              -- HFINTOSC (32 MHz)
       }
pragma fuse_def CLKOUTEN:0  0x100 {      -- Clock Out Enable bit
       ENABLED = 0x0                     -- CLKOUT function is enabled; FOSC/4 clock appears on RA4
       DISABLED = 0x100                  -- CLKOUT function is disabled; I/O function on RA4
       }
pragma fuse_def VDDAR:0  0x1000 {        -- VDD Range Analog Calibration Selection bit
       HIGH = 0x1000                     -- Internal analog systems are calibrated for operation between VDD = 2.3V - 5.5V
       LOW = 0x0                         -- Internal analog systems are calibrated for operation between VDD = 1.8V - 3.6V
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def MCLR:1  0x1 {            -- Master Clear Enable bit
       EXTERNAL = 0x1                    -- If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
       INTERNAL = 0x0                    -- If LVP = 0, MCLR pin is port defined function; If LVP = 1, RA3 pin function is MCLR
       }
pragma fuse_def PWRTS:1  0x6 {           -- Power-up Timer Selection bits
       PWRT_OFF = 0x6                    -- PWRT is disabled
       PWRT_64 = 0x4                     -- PWRT set at 64 ms
       PWRT_16 = 0x2                     -- PWRT set at 16 ms
       PWRT_1 = 0x0                      -- PWRT set at 1 ms
       }
pragma fuse_def WDT:1  0x18 {            -- WDT Operating Mode bits
       ENABLED = 0x18                    -- WDT enabled regardless of Sleep; SEN bit is ignored
       RUNONLY = 0x10                    -- WDT enabled while Sleep = 0, suspended when Sleep = 1; SEN is ignored
       CONTROL = 0x8                     -- WDT enabled/disabled by SEN bit
       DISABLED = 0x0                    -- WDT disabled; SEN is ignored
       }
pragma fuse_def BROWNOUT:1  0xC0 {       -- Brown-out Reset Enable bits
       ENABLED = 0xC0                    -- Brown-out Reset Enabled, SBOREN bit is ignored
       RUNONLY = 0x80                    -- Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ignored
       CONTROL = 0x40                    -- Brown-out Reset enabled according to SBOREN bit
       DISABLED = 0x0                    -- Brown-out Reset disabled
       }
pragma fuse_def VOLTAGE:1  0x200 {       -- Brown-out Reset Voltage Selection bit
       V19 = 0x200                       -- Brown-out Reset Voltage (VBOR) set to 1.9V
       V29 = 0x0                         -- Brown-out Reset Voltage (VBOR) is set to 2.85V
       }
pragma fuse_def PPS1WAY:1  0x800 {       -- PPSLOCKED One-Way Set Enable bit
       ENABLED = 0x800                   -- The PPSLOCKED bit can be set once after an unlocking sequence is executed; once PPSLOCKED is set, all future changes to PPS registers are prevented
       DISABLED = 0x0                    -- The PPSLOCKED bit can be set and cleared as needed (unlocking sequence is required)
       }
pragma fuse_def STVR:1  0x1000 {         -- Stack Overflow/Underflow Reset Enable bit
       ENABLED = 0x1000                  -- Stack Overflow or Underflow will cause a reset
       DISABLED = 0x0                    -- Stack Overflow or Underflow will not cause a reset
       }
--
-- CONFIG3 (0x8009)
--
--
-- CONFIG4 (0x800A)
--
pragma fuse_def BBSIZ:3  0x7 {           -- Boot Block Size Selection bits
       W512 = 0x7                        -- 512 words boot block size
       W1K = 0x6                         -- 1024 words boot block size
       W2K = 0x5                         -- 2048 words boot block size
       W4K = 0x4                         -- 4096 words boot block size
       W8K = 0x3                         -- * half of user program memory
       W16K = 0x2                        -- * half of user program memory
       W32K = 0x1                        -- * half of user program memory
       W64K = 0x0                        -- * half of user program memory
       }
pragma fuse_def BBEN:3  0x8 {            -- Boot Block Enable bit
       DISABLED = 0x8                    -- Boot Block is disabled
       ENABLED = 0x0                     -- Boot Block is enabled
       }
pragma fuse_def SAFEN:3  0x10 {          -- SAF Enable bit
       DISABLED = 0x10                   -- SAF is disabled
       ENABLED = 0x0                     -- SAF is enabled
       }
pragma fuse_def WRTAPP:3  0x80 {         -- Application Block Write Protection bit
       DISABLED = 0x80                   -- Application Block is not write-protected
       ENABLED = 0x0                     -- Application Block is write-protected
       }
pragma fuse_def WRTB:3  0x100 {          -- Boot Block Write Protection bit
       DISABLED = 0x100                  -- Boot Block is not write-protected
       ENABLED = 0x0                     -- Boot Block is write-protected
       }
pragma fuse_def WRTC:3  0x200 {          -- Configuration Registers Write Protection bit
       DISABLED = 0x200                  -- Configuration Registers are not write-protected
       ENABLED = 0x0                     -- Configuration Registers are write-protected
       }
pragma fuse_def WRTSAF:3  0x800 {        -- Storage Area Flash (SAF) Write Protection bit
       DISABLED = 0x800                  -- SAF is not write-protected
       ENABLED = 0x0                     -- SAF is write-protected
       }
pragma fuse_def LVP:3  0x2000 {          -- Low Voltage Programming Enable bit
       ENABLED = 0x2000                  -- Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Configuration bit is ignored.
       DISABLED = 0x0                    -- High Voltage on MCLR/Vpp must be used for programming
       }
--
-- CONFIG5 (0x800B)
--
pragma fuse_def CP:4  0x1 {              -- User Program Flash Memory Code Protection bit
       DISABLED = 0x1                    -- User Program Flash Memory code protection is disabled
       ENABLED = 0x0                     -- User Program Flash Memory code protection is enabled
       }
--
