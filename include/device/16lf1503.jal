-- ------------------------------------------------
-- Title: JalV2 device include file for 16lf1503
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16lf1503, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC16LF1503.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Sat Mar 22 19:15:17 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x2DA0            -- ID for PIC programmer
const  word  CHIP_ID     = 0xA503            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "16LF1503"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_14H       -- (banks=32)
pragma  target  chip     16LF1503
pragma  target  bank     0x0080
pragma  target  page     0x0800
pragma  stack            16
pragma  code             2048
pragma  ID               0x8000,4
pragma  data             0x20-0x7F,0xA0-0xBF
pragma  shared           0x00-0x0B,0x70-0x7F
--
var volatile byte _pic_accum at 0x7F      -- (compiler)
--
const word   _FUSES_CT             = 2
const word   _FUSE_BASE[_FUSES_CT] = {
                                       0x8007,
                                       0x8008 
                                     }
const word   _FUSES[_FUSES_CT]     = {
                                       0x3FFF,     -- CONFIG1
                                       0x3FFF      -- CONFIG2
                                     }
--
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0x0 }
var volatile byte   _ind                      at { 0x0 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0x1 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x2 }
var volatile byte   _pcl                      at { 0x2 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x3 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_NPD                at STATUS : 3
var volatile bit    STATUS_NTO                at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile byte   _status                   at { 0x3 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _not_pd                   =  3
const        byte   _not_to                   =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
-- ------------------------------------------------
var volatile word   FSR0                      at { 0x4 }
var volatile word   _fsr0                     at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0x4 }
var volatile byte   _fsr0l                    at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0x5 }
var volatile byte   _fsr0h                    at { 0x5 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0x6 }
var volatile word   _fsr1                     at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0x6 }
var volatile byte   _fsr1l                    at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0x7 }
var volatile byte   _fsr1h                    at { 0x7 }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0x8 }
var volatile bit*5  BSR_BSR                   at BSR : 0
var volatile bit    BSR_BSR0                  at BSR : 0
var volatile bit    BSR_BSR1                  at BSR : 1
var volatile bit    BSR_BSR2                  at BSR : 2
var volatile bit    BSR_BSR3                  at BSR : 3
var volatile bit    BSR_BSR4                  at BSR : 4
var volatile byte   _bsr                      at { 0x8 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0x9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xA }
var volatile bit*7  PCLATH_PCLATH             at PCLATH : 0
var volatile byte   _pclath                   at { 0xA }
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xB }
var volatile bit    INTCON_IOCIF              at INTCON : 0
var volatile bit    INTCON_INTF               at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_IOCIE              at INTCON : 3
var volatile bit    INTCON_INTE               at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_T0IE               at INTCON : 5
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xC }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    pin_A3                    at PORTA : 3
alias               pin_CLC1IN0               is pin_A3
alias               pin_T1G_RA3               is pin_A3
alias               pin_SS_RA3                is pin_A3
--
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xE }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0x11 }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_SSP1IF               at PIR1 : 3
alias               PIR1_SSPIF                is PIR1_SSP1IF
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_TMR1GIF              at PIR1 : 7
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0x12 }
var volatile bit    PIR2_NCO1IF               at PIR2 : 2
var volatile bit    PIR2_BCL1IF               at PIR2 : 3
var volatile bit    PIR2_C1IF                 at PIR2 : 5
var volatile bit    PIR2_C2IF                 at PIR2 : 6
-- ------------------------------------------------
var volatile byte   PIR3                      at { 0x13 }
var volatile bit    PIR3_CLC1IF               at PIR3 : 0
var volatile bit    PIR3_CLC2IF               at PIR3 : 1
-- ------------------------------------------------
var volatile byte   TMR0                      at { 0x15 }
-- ------------------------------------------------
var volatile word   TMR1                      at { 0x16 }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0x16 }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0x17 }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0x18 }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit    T1CON_T1OSCEN             at T1CON : 3
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit*2  T1CON_TMR1CS              at T1CON : 6
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_TMR1CS0             at T1CON : 6
var volatile bit    T1CON_TMR1CS1             at T1CON : 7
-- ------------------------------------------------
var volatile byte   T1GCON                    at { 0x19 }
var volatile bit*2  T1GCON_T1GSS              at T1GCON : 0
var volatile bit    T1GCON_T1GVAL             at T1GCON : 2
var volatile bit    T1GCON_T1GGO_NDONE        at T1GCON : 3
var volatile bit    T1GCON_T1GSPM             at T1GCON : 4
var volatile bit    T1GCON_T1GTM              at T1GCON : 5
var volatile bit    T1GCON_T1GPOL             at T1GCON : 6
var volatile bit    T1GCON_TMR1GE             at T1GCON : 7
var volatile bit    T1GCON_T1GSS0             at T1GCON : 0
var volatile bit    T1GCON_T1GSS1             at T1GCON : 1
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0x1A }
-- ------------------------------------------------
var volatile byte   PR2                       at { 0x1B }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x1C }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_T2OUTPS0            at T2CON : 3
var volatile bit    T2CON_T2OUTPS1            at T2CON : 4
var volatile bit    T2CON_T2OUTPS2            at T2CON : 5
var volatile bit    T2CON_T2OUTPS3            at T2CON : 6
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x8C }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_AN0_direction         is pin_A0_direction
alias               pin_C1IN_POS_direction    is pin_A0_direction
alias               pin_DACOUT1_direction     is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_AN1_direction         is pin_A1_direction
alias               pin_VREF_POS_direction    is pin_A1_direction
alias               pin_C1IN0_NEG_direction   is pin_A1_direction
alias               pin_C2IN0_NEG_direction   is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_AN2_direction         is pin_A2_direction
alias               pin_C1OUT_direction       is pin_A2_direction
alias               pin_DACOUT2_direction     is pin_A2_direction
alias               pin_T0CKI_direction       is pin_A2_direction
alias               pin_PWM3_direction        is pin_A2_direction
alias               pin_CLC1_RA2_direction    is pin_A2_direction
alias               pin_CWG1FLT_direction     is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_CLC1IN0_direction     is pin_A3_direction
alias               pin_T1G_RA3_direction     is pin_A3_direction
alias               pin_SS_RA3_direction      is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_AN3_direction         is pin_A4_direction
alias               pin_NCO1_RA4_direction    is pin_A4_direction
alias               pin_SDO_RA4_direction     is pin_A4_direction
alias               pin_T1G_RA4_direction     is pin_A4_direction
alias               pin_CLKOUT_direction      is pin_A4_direction
alias               pin_OSC2_direction        is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_CLKIN_direction       is pin_A5_direction
alias               pin_OSC1_direction        is pin_A5_direction
alias               pin_T1CKI_direction       is pin_A5_direction
alias               pin_NCO1CLK_direction     is pin_A5_direction
alias               pin_CLC1IN1_direction     is pin_A5_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0x8E }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_AN4_direction         is pin_C0_direction
alias               pin_C2IN_POS_direction    is pin_C0_direction
alias               pin_CLC2_direction        is pin_C0_direction
alias               pin_SCL_direction         is pin_C0_direction
alias               pin_SCK_direction         is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_AN5_direction         is pin_C1_direction
alias               pin_C1IN1_NEG_direction   is pin_C1_direction
alias               pin_C2IN1_NEG_direction   is pin_C1_direction
alias               pin_NCO1_RC1_direction    is pin_C1_direction
alias               pin_SDA_direction         is pin_C1_direction
alias               pin_SDI_direction         is pin_C1_direction
alias               pin_PWM4_direction        is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_AN6_direction         is pin_C2_direction
alias               pin_C1IN2_NEG_direction   is pin_C2_direction
alias               pin_C2IN2_NEG_direction   is pin_C2_direction
alias               pin_SDO_RC2_direction     is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_AN7_direction         is pin_C3_direction
alias               pin_C1IN3_NEG_direction   is pin_C3_direction
alias               pin_C2IN3_NEG_direction   is pin_C3_direction
alias               pin_SS_RC3_direction      is pin_C3_direction
alias               pin_PWM2_direction        is pin_C3_direction
alias               pin_CLC2IN0_direction     is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_C2OUT_direction       is pin_C4_direction
alias               pin_CLC2IN1_direction     is pin_C4_direction
alias               pin_CWG1B_direction       is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_PWM1_direction        is pin_C5_direction
alias               pin_CLC1_RC5_direction    is pin_C5_direction
alias               pin_CWG1A_direction       is pin_C5_direction
--
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0x91 }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_SSP1IE               at PIE1 : 3
alias               PIE1_SSPIE                is PIE1_SSP1IE
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_TMR1GIE              at PIE1 : 7
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0x92 }
var volatile bit    PIE2_NCO1IE               at PIE2 : 2
var volatile bit    PIE2_BCL1IE               at PIE2 : 3
var volatile bit    PIE2_C1IE                 at PIE2 : 5
var volatile bit    PIE2_C2IE                 at PIE2 : 6
-- ------------------------------------------------
var volatile byte   PIE3                      at { 0x93 }
var volatile bit    PIE3_CLC1IE               at PIE3 : 0
var volatile bit    PIE3_CLC2IE               at PIE3 : 1
-- ------------------------------------------------
var volatile byte   OPTION_REG                at { 0x95 }
var volatile bit*3  OPTION_REG_PS             at OPTION_REG : 0
var volatile bit    OPTION_REG_PSA            at OPTION_REG : 3
alias               T0CON_PSA                 is OPTION_REG_PSA
var volatile bit    OPTION_REG_TMR0SE         at OPTION_REG : 4
var volatile bit    OPTION_REG_TMR0CS         at OPTION_REG : 5
var volatile bit    OPTION_REG_INTEDG         at OPTION_REG : 6
var volatile bit    OPTION_REG_WPUEN          at OPTION_REG : 7
var volatile bit    OPTION_REG_PS0            at OPTION_REG : 0
var volatile bit    OPTION_REG_PS1            at OPTION_REG : 1
var volatile bit    OPTION_REG_PS2            at OPTION_REG : 2
alias               T0CON_T0PS                is OPTION_REG_PS
var volatile bit    OPTION_REG_T0SE           at OPTION_REG : 4
alias               T0CON_T0SE                is OPTION_REG_T0SE
var volatile bit    OPTION_REG_T0CS           at OPTION_REG : 5
alias               T0CON_T0CS                is OPTION_REG_T0CS
-- ------------------------------------------------
var volatile byte   PCON                      at { 0x96 }
var volatile bit    PCON_NBOR                 at PCON : 0
var volatile bit    PCON_NPOR                 at PCON : 1
var volatile bit    PCON_NRI                  at PCON : 2
var volatile bit    PCON_NRMCLR               at PCON : 3
var volatile bit    PCON_NRWDT                at PCON : 4
var volatile bit    PCON_STKUNF               at PCON : 6
var volatile bit    PCON_STKOVF               at PCON : 7
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0x97 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit*5  WDTCON_WDTPS              at WDTCON : 1
var volatile bit    WDTCON_WDTPS0             at WDTCON : 1
var volatile bit    WDTCON_WDTPS1             at WDTCON : 2
var volatile bit    WDTCON_WDTPS2             at WDTCON : 3
var volatile bit    WDTCON_WDTPS3             at WDTCON : 4
var volatile bit    WDTCON_WDTPS4             at WDTCON : 5
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0x99 }
var volatile bit*2  OSCCON_SCS                at OSCCON : 0
var volatile bit*4  OSCCON_IRCF               at OSCCON : 3
var volatile bit    OSCCON_SCS0               at OSCCON : 0
var volatile bit    OSCCON_SCS1               at OSCCON : 1
var volatile bit    OSCCON_IRCF0              at OSCCON : 3
var volatile bit    OSCCON_IRCF1              at OSCCON : 4
var volatile bit    OSCCON_IRCF2              at OSCCON : 5
var volatile bit    OSCCON_IRCF3              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   OSCSTAT                   at { 0x9A }
var volatile bit    OSCSTAT_HFIOFS            at OSCSTAT : 0
var volatile bit    OSCSTAT_LFIOFR            at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFR            at OSCSTAT : 4
-- ------------------------------------------------
var volatile word   ADRES                     at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0x9C }
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0x9D }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*5  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_ADGO               at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_CHS3               at ADCON0 : 5
var volatile bit    ADCON0_CHS4               at ADCON0 : 6
var volatile bit    ADCON0_GO                 at ADCON0 : 1
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0x9E }
var volatile bit*2  ADCON1_ADPREF             at ADCON1 : 0
var volatile bit*3  ADCON1_ADCS               at ADCON1 : 4
var volatile bit    ADCON1_ADFM               at ADCON1 : 7
var volatile bit    ADCON1_ADPREF0            at ADCON1 : 0
var volatile bit    ADCON1_ADPREF1            at ADCON1 : 1
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0x9F }
var volatile bit*4  ADCON2_TRIGSEL            at ADCON2 : 4
var volatile bit    ADCON2_TRIGSEL0           at ADCON2 : 4
var volatile bit    ADCON2_TRIGSEL1           at ADCON2 : 5
var volatile bit    ADCON2_TRIGSEL2           at ADCON2 : 6
var volatile bit    ADCON2_TRIGSEL3           at ADCON2 : 7
-- ------------------------------------------------
var volatile byte   LATA                      at { 0x10C }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_AN0                   is pin_A0
alias               pin_C1IN_POS              is pin_A0
alias               pin_DACOUT1               is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_AN1                   is pin_A1
alias               pin_VREF_POS              is pin_A1
alias               pin_C1IN0_NEG             is pin_A1
alias               pin_C2IN0_NEG             is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_AN2                   is pin_A2
alias               pin_C1OUT                 is pin_A2
alias               pin_DACOUT2               is pin_A2
alias               pin_T0CKI                 is pin_A2
alias               pin_PWM3                  is pin_A2
alias               pin_CLC1_RA2              is pin_A2
alias               pin_CWG1FLT               is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_AN3                   is pin_A4
alias               pin_NCO1_RA4              is pin_A4
alias               pin_SDO_RA4               is pin_A4
alias               pin_T1G_RA4               is pin_A4
alias               pin_CLKOUT                is pin_A4
alias               pin_OSC2                  is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_CLKIN                 is pin_A5
alias               pin_OSC1                  is pin_A5
alias               pin_T1CKI                 is pin_A5
alias               pin_NCO1CLK               is pin_A5
alias               pin_CLC1IN1               is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                      at { 0x10E }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_AN4                   is pin_C0
alias               pin_C2IN_POS              is pin_C0
alias               pin_CLC2                  is pin_C0
alias               pin_SCL                   is pin_C0
alias               pin_SCK                   is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_AN5                   is pin_C1
alias               pin_C1IN1_NEG             is pin_C1
alias               pin_C2IN1_NEG             is pin_C1
alias               pin_NCO1_RC1              is pin_C1
alias               pin_SDA                   is pin_C1
alias               pin_SDI                   is pin_C1
alias               pin_PWM4                  is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_AN6                   is pin_C2
alias               pin_C1IN2_NEG             is pin_C2
alias               pin_C2IN2_NEG             is pin_C2
alias               pin_SDO_RC2               is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_AN7                   is pin_C3
alias               pin_C1IN3_NEG             is pin_C3
alias               pin_C2IN3_NEG             is pin_C3
alias               pin_SS_RC3                is pin_C3
alias               pin_PWM2                  is pin_C3
alias               pin_CLC2IN0               is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_C2OUT                 is pin_C4
alias               pin_CLC2IN1               is pin_C4
alias               pin_CWG1B                 is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_PWM1                  is pin_C5
alias               pin_CLC1_RC5              is pin_C5
alias               pin_CWG1A                 is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   CM1CON0                   at { 0x111 }
var volatile bit    CM1CON0_C1SYNC            at CM1CON0 : 0
var volatile bit    CM1CON0_C1HYS             at CM1CON0 : 1
var volatile bit    CM1CON0_C1SP              at CM1CON0 : 2
var volatile bit    CM1CON0_C1POL             at CM1CON0 : 4
var volatile bit    CM1CON0_C1OE              at CM1CON0 : 5
var volatile bit    CM1CON0_C1OUT             at CM1CON0 : 6
var volatile bit    CM1CON0_C1ON              at CM1CON0 : 7
-- ------------------------------------------------
var volatile byte   CM1CON1                   at { 0x112 }
var volatile bit*3  CM1CON1_C1NCH             at CM1CON1 : 0
var volatile bit*2  CM1CON1_C1PCH             at CM1CON1 : 4
var volatile bit    CM1CON1_C1INTN            at CM1CON1 : 6
var volatile bit    CM1CON1_C1INTP            at CM1CON1 : 7
var volatile bit    CM1CON1_C1NCH0            at CM1CON1 : 0
var volatile bit    CM1CON1_C1NCH1            at CM1CON1 : 1
var volatile bit    CM1CON1_C1NCH2            at CM1CON1 : 2
var volatile bit    CM1CON1_C1PCH0            at CM1CON1 : 4
var volatile bit    CM1CON1_C1PCH1            at CM1CON1 : 5
-- ------------------------------------------------
var volatile byte   CM2CON0                   at { 0x113 }
var volatile bit    CM2CON0_C2SYNC            at CM2CON0 : 0
var volatile bit    CM2CON0_C2HYS             at CM2CON0 : 1
var volatile bit    CM2CON0_C2SP              at CM2CON0 : 2
var volatile bit    CM2CON0_C2POL             at CM2CON0 : 4
var volatile bit    CM2CON0_C2OE              at CM2CON0 : 5
var volatile bit    CM2CON0_C2OUT             at CM2CON0 : 6
var volatile bit    CM2CON0_C2ON              at CM2CON0 : 7
-- ------------------------------------------------
var volatile byte   CM2CON1                   at { 0x114 }
var volatile bit*3  CM2CON1_C2NCH             at CM2CON1 : 0
var volatile bit*2  CM2CON1_C2PCH             at CM2CON1 : 4
var volatile bit    CM2CON1_C2INTN            at CM2CON1 : 6
var volatile bit    CM2CON1_C2INTP            at CM2CON1 : 7
var volatile bit    CM2CON1_C2NCH0            at CM2CON1 : 0
var volatile bit    CM2CON1_C2NCH1            at CM2CON1 : 1
var volatile bit    CM2CON1_C2NCH2            at CM2CON1 : 2
var volatile bit    CM2CON1_C2PCH0            at CM2CON1 : 4
var volatile bit    CM2CON1_C2PCH1            at CM2CON1 : 5
-- ------------------------------------------------
var volatile byte   CMOUT                     at { 0x115 }
var volatile bit    CMOUT_MC1OUT              at CMOUT : 0
var volatile bit    CMOUT_MC2OUT              at CMOUT : 1
-- ------------------------------------------------
var volatile byte   BORCON                    at { 0x116 }
var volatile bit    BORCON_BORRDY             at BORCON : 0
var volatile bit    BORCON_BORFS              at BORCON : 6
var volatile bit    BORCON_SBOREN             at BORCON : 7
-- ------------------------------------------------
var volatile byte   FVRCON                    at { 0x117 }
var volatile bit*2  FVRCON_ADFVR              at FVRCON : 0
var volatile bit*2  FVRCON_CDAFVR             at FVRCON : 2
var volatile bit    FVRCON_TSRNG              at FVRCON : 4
var volatile bit    FVRCON_TSEN               at FVRCON : 5
var volatile bit    FVRCON_FVRRDY             at FVRCON : 6
var volatile bit    FVRCON_FVREN              at FVRCON : 7
var volatile bit    FVRCON_ADFVR0             at FVRCON : 0
var volatile bit    FVRCON_ADFVR1             at FVRCON : 1
var volatile bit    FVRCON_CDAFVR0            at FVRCON : 2
var volatile bit    FVRCON_CDAFVR1            at FVRCON : 3
-- ------------------------------------------------
var volatile byte   DACCON0                   at { 0x118 }
var volatile bit    DACCON0_DACPSS            at DACCON0 : 2
var volatile bit    DACCON0_DACOE2            at DACCON0 : 4
var volatile bit    DACCON0_DACOE1            at DACCON0 : 5
var volatile bit    DACCON0_DACEN             at DACCON0 : 7
-- ------------------------------------------------
var volatile byte   DACCON1                   at { 0x119 }
var volatile bit*5  DACCON1_DACR              at DACCON1 : 0
var volatile bit    DACCON1_DACR0             at DACCON1 : 0
var volatile bit    DACCON1_DACR1             at DACCON1 : 1
var volatile bit    DACCON1_DACR2             at DACCON1 : 2
var volatile bit    DACCON1_DACR3             at DACCON1 : 3
var volatile bit    DACCON1_DACR4             at DACCON1 : 4
-- ------------------------------------------------
var volatile byte   APFCON                    at { 0x11D }
var volatile bit    APFCON_NCO1SEL            at APFCON : 0
var volatile bit    APFCON_CLC1SEL            at APFCON : 1
var volatile bit    APFCON_T1GSEL             at APFCON : 3
var volatile bit    APFCON_SSSEL              at APFCON : 4
var volatile bit    APFCON_SDOSEL             at APFCON : 5
-- ------------------------------------------------
var volatile byte   ANSELA                    at { 0x18C }
var volatile bit    ANSELA_ANSA0              at ANSELA : 0
var volatile bit    ANSELA_ANSA1              at ANSELA : 1
var volatile bit    ANSELA_ANSA2              at ANSELA : 2
var volatile bit    ANSELA_ANSA4              at ANSELA : 4
var volatile bit*6  ANSELA_ANSELA             at ANSELA : 0
-- ------------------------------------------------
var volatile byte   ANSELC                    at { 0x18E }
var volatile bit    ANSELC_ANSC0              at ANSELC : 0
var volatile bit    ANSELC_ANSC1              at ANSELC : 1
var volatile bit    ANSELC_ANSC2              at ANSELC : 2
var volatile bit    ANSELC_ANSC3              at ANSELC : 3
-- ------------------------------------------------
var volatile word   PMADR                     at { 0x191 }
-- ------------------------------------------------
var volatile byte   PMADRL                    at { 0x191 }
-- ------------------------------------------------
var volatile byte   PMADRH                    at { 0x192 }
var volatile bit*7  PMADRH_PMADRH             at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                     at { 0x193 }
-- ------------------------------------------------
var volatile byte   PMDATL                    at { 0x193 }
-- ------------------------------------------------
var volatile byte   PMDATH                    at { 0x194 }
var volatile bit*6  PMDATH_PMDATH             at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                    at { 0x195 }
var volatile bit    PMCON1_RD                 at PMCON1 : 0
var volatile bit    PMCON1_WR                 at PMCON1 : 1
var volatile bit    PMCON1_WREN               at PMCON1 : 2
var volatile bit    PMCON1_WRERR              at PMCON1 : 3
var volatile bit    PMCON1_FREE               at PMCON1 : 4
var volatile bit    PMCON1_LWLO               at PMCON1 : 5
var volatile bit    PMCON1_CFGS               at PMCON1 : 6
-- ------------------------------------------------
var volatile byte   PMCON2                    at { 0x196 }
-- ------------------------------------------------
var volatile byte   WPUA                      at { 0x20C }
var volatile bit    WPUA_WPUA0                at WPUA : 0
var volatile bit    WPUA_WPUA1                at WPUA : 1
var volatile bit    WPUA_WPUA2                at WPUA : 2
var volatile bit    WPUA_WPUA3                at WPUA : 3
var volatile bit    WPUA_WPUA4                at WPUA : 4
var volatile bit    WPUA_WPUA5                at WPUA : 5
var volatile bit*6  WPUA_WPUA                 at WPUA : 0
-- ------------------------------------------------
var volatile byte   SSP1BUF                   at { 0x211 }
--
alias               SSPBUF                    is SSP1BUF
-- ------------------------------------------------
var volatile byte   SSP1ADD                   at { 0x212 }
--
alias               SSPADD                    is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1MSK                   at { 0x213 }
--
alias               SSPMSK                    is SSP1MSK
-- ------------------------------------------------
var volatile byte   SSP1STAT                  at { 0x214 }
var volatile bit    SSP1STAT_BF               at SSP1STAT : 0
var volatile bit    SSP1STAT_UA               at SSP1STAT : 1
var volatile bit    SSP1STAT_R_NW             at SSP1STAT : 2
var volatile bit    SSP1STAT_S                at SSP1STAT : 3
var volatile bit    SSP1STAT_P                at SSP1STAT : 4
var volatile bit    SSP1STAT_D_NA             at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE              at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP              at SSP1STAT : 7
--
alias               SSPSTAT                   is SSP1STAT
alias               SSPSTAT_BF                is SSP1STAT_BF
alias               SSPSTAT_UA                is SSP1STAT_UA
alias               SSPSTAT_R_NW              is SSP1STAT_R_NW
alias               SSPSTAT_S                 is SSP1STAT_S
alias               SSPSTAT_P                 is SSP1STAT_P
alias               SSPSTAT_D_NA              is SSP1STAT_D_NA
alias               SSPSTAT_CKE               is SSP1STAT_CKE
alias               SSPSTAT_SMP               is SSP1STAT_SMP
-- ------------------------------------------------
var volatile byte   SSP1CON1                  at { 0x215 }
var volatile bit    SSP1CON1_SSPM0            at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM1            at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM2            at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM3            at SSP1CON1 : 3
var volatile bit    SSP1CON1_CKP              at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN            at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV            at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL             at SSP1CON1 : 7
var volatile bit*4  SSP1CON1_SSPM             at SSP1CON1 : 0
--
alias               SSPCON1                   is SSP1CON1
alias               SSPCON1_SSPM0             is SSP1CON1_SSPM0
alias               SSPCON1_SSPM1             is SSP1CON1_SSPM1
alias               SSPCON1_SSPM2             is SSP1CON1_SSPM2
alias               SSPCON1_SSPM3             is SSP1CON1_SSPM3
alias               SSPCON1_CKP               is SSP1CON1_CKP
alias               SSPCON1_SSPEN             is SSP1CON1_SSPEN
alias               SSPCON1_SSPOV             is SSP1CON1_SSPOV
alias               SSPCON1_WCOL              is SSP1CON1_WCOL
alias               SSPCON1_SSPM              is SSP1CON1_SSPM
-- ------------------------------------------------
var volatile byte   SSP1CON2                  at { 0x216 }
var volatile bit    SSP1CON2_SEN              at SSP1CON2 : 0
var volatile bit    SSP1CON2_RSEN             at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN              at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN             at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN            at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT            at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT          at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN             at SSP1CON2 : 7
--
alias               SSPCON2                   is SSP1CON2
alias               SSPCON2_SEN               is SSP1CON2_SEN
alias               SSPCON2_RSEN              is SSP1CON2_RSEN
alias               SSPCON2_PEN               is SSP1CON2_PEN
alias               SSPCON2_RCEN              is SSP1CON2_RCEN
alias               SSPCON2_ACKEN             is SSP1CON2_ACKEN
alias               SSPCON2_ACKDT             is SSP1CON2_ACKDT
alias               SSPCON2_ACKSTAT           is SSP1CON2_ACKSTAT
alias               SSPCON2_GCEN              is SSP1CON2_GCEN
-- ------------------------------------------------
var volatile byte   SSP1CON3                  at { 0x217 }
var volatile bit    SSP1CON3_DHEN             at SSP1CON3 : 0
var volatile bit    SSP1CON3_AHEN             at SSP1CON3 : 1
var volatile bit    SSP1CON3_SBCDE            at SSP1CON3 : 2
var volatile bit    SSP1CON3_SDAHT            at SSP1CON3 : 3
var volatile bit    SSP1CON3_BOEN             at SSP1CON3 : 4
var volatile bit    SSP1CON3_SCIE             at SSP1CON3 : 5
var volatile bit    SSP1CON3_PCIE             at SSP1CON3 : 6
var volatile bit    SSP1CON3_ACKTIM           at SSP1CON3 : 7
--
alias               SSPCON3                   is SSP1CON3
alias               SSPCON3_DHEN              is SSP1CON3_DHEN
alias               SSPCON3_AHEN              is SSP1CON3_AHEN
alias               SSPCON3_SBCDE             is SSP1CON3_SBCDE
alias               SSPCON3_SDAHT             is SSP1CON3_SDAHT
alias               SSPCON3_BOEN              is SSP1CON3_BOEN
alias               SSPCON3_SCIE              is SSP1CON3_SCIE
alias               SSPCON3_PCIE              is SSP1CON3_PCIE
alias               SSPCON3_ACKTIM            is SSP1CON3_ACKTIM
-- ------------------------------------------------
var volatile byte   IOCAP                     at { 0x391 }
var volatile bit    IOCAP_IOCAP0              at IOCAP : 0
var volatile bit    IOCAP_IOCAP1              at IOCAP : 1
var volatile bit    IOCAP_IOCAP2              at IOCAP : 2
var volatile bit    IOCAP_IOCAP3              at IOCAP : 3
var volatile bit    IOCAP_IOCAP4              at IOCAP : 4
var volatile bit    IOCAP_IOCAP5              at IOCAP : 5
var volatile bit*6  IOCAP_IOCAP               at IOCAP : 0
-- ------------------------------------------------
var volatile byte   IOCAN                     at { 0x392 }
var volatile bit    IOCAN_IOCAN0              at IOCAN : 0
var volatile bit    IOCAN_IOCAN1              at IOCAN : 1
var volatile bit    IOCAN_IOCAN2              at IOCAN : 2
var volatile bit    IOCAN_IOCAN3              at IOCAN : 3
var volatile bit    IOCAN_IOCAN4              at IOCAN : 4
var volatile bit    IOCAN_IOCAN5              at IOCAN : 5
var volatile bit*6  IOCAN_IOCAN               at IOCAN : 0
-- ------------------------------------------------
var volatile byte   IOCAF                     at { 0x393 }
var volatile bit    IOCAF_IOCAF0              at IOCAF : 0
var volatile bit    IOCAF_IOCAF1              at IOCAF : 1
var volatile bit    IOCAF_IOCAF2              at IOCAF : 2
var volatile bit    IOCAF_IOCAF3              at IOCAF : 3
var volatile bit    IOCAF_IOCAF4              at IOCAF : 4
var volatile bit    IOCAF_IOCAF5              at IOCAF : 5
var volatile bit*6  IOCAF_IOCAF               at IOCAF : 0
-- ------------------------------------------------
var volatile byte*3 NCO1ACC                   at { 0x498 }
-- ------------------------------------------------
var volatile byte   NCO1ACCL                  at { 0x498 }
var volatile bit    NCO1ACCL_NCO1ACC0         at NCO1ACCL : 0
var volatile bit    NCO1ACCL_NCO1ACC1         at NCO1ACCL : 1
var volatile bit    NCO1ACCL_NCO1ACC2         at NCO1ACCL : 2
var volatile bit    NCO1ACCL_NCO1ACC3         at NCO1ACCL : 3
var volatile bit    NCO1ACCL_NCO1ACC4         at NCO1ACCL : 4
var volatile bit    NCO1ACCL_NCO1ACC5         at NCO1ACCL : 5
var volatile bit    NCO1ACCL_NCO1ACC6         at NCO1ACCL : 6
var volatile bit    NCO1ACCL_NCO1ACC7         at NCO1ACCL : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCH                  at { 0x499 }
var volatile bit    NCO1ACCH_NCO1ACC8         at NCO1ACCH : 0
var volatile bit    NCO1ACCH_NCO1ACC9         at NCO1ACCH : 1
var volatile bit    NCO1ACCH_NCO1ACC10        at NCO1ACCH : 2
var volatile bit    NCO1ACCH_NCO1ACC11        at NCO1ACCH : 3
var volatile bit    NCO1ACCH_NCO1ACC12        at NCO1ACCH : 4
var volatile bit    NCO1ACCH_NCO1ACC13        at NCO1ACCH : 5
var volatile bit    NCO1ACCH_NCO1ACC14        at NCO1ACCH : 6
var volatile bit    NCO1ACCH_NCO1ACC15        at NCO1ACCH : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCU                  at { 0x49A }
var volatile bit    NCO1ACCU_NCO1ACC16        at NCO1ACCU : 0
var volatile bit    NCO1ACCU_NCO1ACC17        at NCO1ACCU : 1
var volatile bit    NCO1ACCU_NCO1ACC18        at NCO1ACCU : 2
var volatile bit    NCO1ACCU_NCO1ACC19        at NCO1ACCU : 3
-- ------------------------------------------------
var volatile byte*3 NCO1INC                   at { 0x49B }
-- ------------------------------------------------
var volatile byte   NCO1INCL                  at { 0x49B }
var volatile bit    NCO1INCL_NCO1INC0         at NCO1INCL : 0
var volatile bit    NCO1INCL_NCO1INC1         at NCO1INCL : 1
var volatile bit    NCO1INCL_NCO1INC2         at NCO1INCL : 2
var volatile bit    NCO1INCL_NCO1INC3         at NCO1INCL : 3
var volatile bit    NCO1INCL_NCO1INC4         at NCO1INCL : 4
var volatile bit    NCO1INCL_NCO1INC5         at NCO1INCL : 5
var volatile bit    NCO1INCL_NCO1INC6         at NCO1INCL : 6
var volatile bit    NCO1INCL_NCO1INC7         at NCO1INCL : 7
-- ------------------------------------------------
var volatile byte   NCO1INCH                  at { 0x49C }
var volatile bit    NCO1INCH_NCO1INC8         at NCO1INCH : 0
var volatile bit    NCO1INCH_NCO1INC9         at NCO1INCH : 1
var volatile bit    NCO1INCH_NCO1INC10        at NCO1INCH : 2
var volatile bit    NCO1INCH_NCO1INC11        at NCO1INCH : 3
var volatile bit    NCO1INCH_NCO1INC12        at NCO1INCH : 4
var volatile bit    NCO1INCH_NCO1INC13        at NCO1INCH : 5
var volatile bit    NCO1INCH_NCO1INC14        at NCO1INCH : 6
var volatile bit    NCO1INCH_NCO1INC15        at NCO1INCH : 7
-- ------------------------------------------------
var volatile byte   NCO1INCU                  at { 0x49D }
-- ------------------------------------------------
var volatile byte   NCO1CON                   at { 0x49E }
var volatile bit    NCO1CON_N1PFM             at NCO1CON : 0
var volatile bit    NCO1CON_N1POL             at NCO1CON : 4
var volatile bit    NCO1CON_N1OUT             at NCO1CON : 5
var volatile bit    NCO1CON_N1OE              at NCO1CON : 6
var volatile bit    NCO1CON_N1EN              at NCO1CON : 7
-- ------------------------------------------------
var volatile byte   NCO1CLK                   at { 0x49F }
var volatile bit*4  NCO1CLK_N1CKS             at NCO1CLK : 0
var volatile bit*3  NCO1CLK_N1PWS             at NCO1CLK : 5
var volatile bit    NCO1CLK_N1CKS0            at NCO1CLK : 0
var volatile bit    NCO1CLK_N1CKS1            at NCO1CLK : 1
var volatile bit    NCO1CLK_N1PWS0            at NCO1CLK : 5
var volatile bit    NCO1CLK_N1PWS1            at NCO1CLK : 6
var volatile bit    NCO1CLK_N1PWS2            at NCO1CLK : 7
-- ------------------------------------------------
var volatile byte   PWM1DCL                   at { 0x611 }
var volatile bit*2  PWM1DCL_PWM1DCL           at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL0          at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL1          at PWM1DCL : 7
-- ------------------------------------------------
var volatile byte   PWM1DCH                   at { 0x612 }
var volatile bit    PWM1DCH_PWM1DCH0          at PWM1DCH : 0
var volatile bit    PWM1DCH_PWM1DCH1          at PWM1DCH : 1
var volatile bit    PWM1DCH_PWM1DCH2          at PWM1DCH : 2
var volatile bit    PWM1DCH_PWM1DCH3          at PWM1DCH : 3
var volatile bit    PWM1DCH_PWM1DCH4          at PWM1DCH : 4
var volatile bit    PWM1DCH_PWM1DCH5          at PWM1DCH : 5
var volatile bit    PWM1DCH_PWM1DCH6          at PWM1DCH : 6
var volatile bit    PWM1DCH_PWM1DCH7          at PWM1DCH : 7
-- ------------------------------------------------
var volatile byte   PWM1CON                   at { 0x613 }
var volatile bit    PWM1CON_PWM1POL           at PWM1CON : 4
var volatile bit    PWM1CON_PWM1OUT           at PWM1CON : 5
var volatile bit    PWM1CON_PWM1OE            at PWM1CON : 6
var volatile bit    PWM1CON_PWM1EN            at PWM1CON : 7
-- ------------------------------------------------
var volatile byte   PWM2DCL                   at { 0x614 }
var volatile bit*2  PWM2DCL_PWM2DCL           at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL0          at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL1          at PWM2DCL : 7
-- ------------------------------------------------
var volatile byte   PWM2DCH                   at { 0x615 }
var volatile bit    PWM2DCH_PWM2DCH0          at PWM2DCH : 0
var volatile bit    PWM2DCH_PWM2DCH1          at PWM2DCH : 1
var volatile bit    PWM2DCH_PWM2DCH2          at PWM2DCH : 2
var volatile bit    PWM2DCH_PWM2DCH3          at PWM2DCH : 3
var volatile bit    PWM2DCH_PWM2DCH4          at PWM2DCH : 4
var volatile bit    PWM2DCH_PWM2DCH5          at PWM2DCH : 5
var volatile bit    PWM2DCH_PWM2DCH6          at PWM2DCH : 6
var volatile bit    PWM2DCH_PWM2DCH7          at PWM2DCH : 7
-- ------------------------------------------------
var volatile byte   PWM2CON                   at { 0x616 }
var volatile bit    PWM2CON_PWM2POL           at PWM2CON : 4
var volatile bit    PWM2CON_PWM2OUT           at PWM2CON : 5
var volatile bit    PWM2CON_PWM2OE            at PWM2CON : 6
var volatile bit    PWM2CON_PWM2EN            at PWM2CON : 7
-- ------------------------------------------------
var volatile byte   PWM3DCL                   at { 0x617 }
var volatile bit*2  PWM3DCL_PWM3DCL           at PWM3DCL : 6
var volatile bit    PWM3DCL_PWM3DCL0          at PWM3DCL : 6
var volatile bit    PWM3DCL_PWM3DCL1          at PWM3DCL : 7
-- ------------------------------------------------
var volatile byte   PWM3DCH                   at { 0x618 }
var volatile bit    PWM3DCH_PWM3DCH0          at PWM3DCH : 0
var volatile bit    PWM3DCH_PWM3DCH1          at PWM3DCH : 1
var volatile bit    PWM3DCH_PWM3DCH2          at PWM3DCH : 2
var volatile bit    PWM3DCH_PWM3DCH3          at PWM3DCH : 3
var volatile bit    PWM3DCH_PWM3DCH4          at PWM3DCH : 4
var volatile bit    PWM3DCH_PWM3DCH5          at PWM3DCH : 5
var volatile bit    PWM3DCH_PWM3DCH6          at PWM3DCH : 6
var volatile bit    PWM3DCH_PWM3DCH7          at PWM3DCH : 7
-- ------------------------------------------------
var volatile byte   PWM3CON                   at { 0x619 }
var volatile bit    PWM3CON_PWM3POL           at PWM3CON : 4
var volatile bit    PWM3CON_PWM3OUT           at PWM3CON : 5
var volatile bit    PWM3CON_PWM3OE            at PWM3CON : 6
var volatile bit    PWM3CON_PWM3EN            at PWM3CON : 7
-- ------------------------------------------------
var volatile byte   PWM4DCL                   at { 0x61A }
var volatile bit*2  PWM4DCL_PWM4DCL           at PWM4DCL : 6
var volatile bit    PWM4DCL_PWM4DCL0          at PWM4DCL : 6
var volatile bit    PWM4DCL_PWM4DCL1          at PWM4DCL : 7
-- ------------------------------------------------
var volatile byte   PWM4DCH                   at { 0x61B }
var volatile bit    PWM4DCH_PWM4DCH0          at PWM4DCH : 0
var volatile bit    PWM4DCH_PWM4DCH1          at PWM4DCH : 1
var volatile bit    PWM4DCH_PWM4DCH2          at PWM4DCH : 2
var volatile bit    PWM4DCH_PWM4DCH3          at PWM4DCH : 3
var volatile bit    PWM4DCH_PWM4DCH4          at PWM4DCH : 4
var volatile bit    PWM4DCH_PWM4DCH5          at PWM4DCH : 5
var volatile bit    PWM4DCH_PWM4DCH6          at PWM4DCH : 6
var volatile bit    PWM4DCH_PWM4DCH7          at PWM4DCH : 7
-- ------------------------------------------------
var volatile byte   PWM4CON                   at { 0x61C }
var volatile bit    PWM4CON_PWM4POL           at PWM4CON : 4
var volatile bit    PWM4CON_PWM4OUT           at PWM4CON : 5
var volatile bit    PWM4CON_PWM4OE            at PWM4CON : 6
var volatile bit    PWM4CON_PWM4EN            at PWM4CON : 7
-- ------------------------------------------------
var volatile byte   CWG1DBR                   at { 0x691 }
var volatile bit*6  CWG1DBR_CWG1DBR           at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR0          at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR1          at CWG1DBR : 1
var volatile bit    CWG1DBR_CWG1DBR2          at CWG1DBR : 2
var volatile bit    CWG1DBR_CWG1DBR3          at CWG1DBR : 3
var volatile bit    CWG1DBR_CWG1DBR4          at CWG1DBR : 4
var volatile bit    CWG1DBR_CWG1DBR5          at CWG1DBR : 5
-- ------------------------------------------------
var volatile byte   CWG1DBF                   at { 0x692 }
var volatile bit*6  CWG1DBF_CWG1DBF           at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF0          at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF1          at CWG1DBF : 1
var volatile bit    CWG1DBF_CWG1DBF2          at CWG1DBF : 2
var volatile bit    CWG1DBF_CWG1DBF3          at CWG1DBF : 3
var volatile bit    CWG1DBF_CWG1DBF4          at CWG1DBF : 4
var volatile bit    CWG1DBF_CWG1DBF5          at CWG1DBF : 5
-- ------------------------------------------------
var volatile byte   CWG1CON0                  at { 0x693 }
var volatile bit    CWG1CON0_G1CS0            at CWG1CON0 : 0
var volatile bit    CWG1CON0_G1POLA           at CWG1CON0 : 3
var volatile bit    CWG1CON0_G1POLB           at CWG1CON0 : 4
var volatile bit    CWG1CON0_G1OEA            at CWG1CON0 : 5
var volatile bit    CWG1CON0_G1OEB            at CWG1CON0 : 6
var volatile bit    CWG1CON0_G1EN             at CWG1CON0 : 7
var volatile bit*2  CWG1CON0_G1CS             at CWG1CON0 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON1                  at { 0x694 }
var volatile bit    CWG1CON1_G1IS0            at CWG1CON1 : 0
var volatile bit    CWG1CON1_G1IS1            at CWG1CON1 : 1
var volatile bit    CWG1CON1_G1IS2            at CWG1CON1 : 2
var volatile bit*2  CWG1CON1_G1ASDLA          at CWG1CON1 : 4
var volatile bit*2  CWG1CON1_G1ASDLB          at CWG1CON1 : 6
var volatile bit*4  CWG1CON1_G1IS             at CWG1CON1 : 0
var volatile bit    CWG1CON1_G1ASDLA0         at CWG1CON1 : 4
var volatile bit    CWG1CON1_G1ASDLA1         at CWG1CON1 : 5
var volatile bit    CWG1CON1_G1ASDLB0         at CWG1CON1 : 6
var volatile bit    CWG1CON1_G1ASDLB1         at CWG1CON1 : 7
-- ------------------------------------------------
var volatile byte   CWG1CON2                  at { 0x695 }
var volatile bit    CWG1CON2_G1ASDSCLC2       at CWG1CON2 : 0
var volatile bit    CWG1CON2_G1ASDSFLT        at CWG1CON2 : 1
var volatile bit    CWG1CON2_G1ASDSC1         at CWG1CON2 : 2
var volatile bit    CWG1CON2_G1ASDSC2         at CWG1CON2 : 3
var volatile bit    CWG1CON2_G1ARSEN          at CWG1CON2 : 6
var volatile bit    CWG1CON2_G1ASE            at CWG1CON2 : 7
-- ------------------------------------------------
var volatile byte   CLCDATA                   at { 0xF0F }
var volatile bit    CLCDATA_MCLC1OUT          at CLCDATA : 0
var volatile bit    CLCDATA_MCLC2OUT          at CLCDATA : 1
-- ------------------------------------------------
var volatile byte   CLC1CON                   at { 0xF10 }
var volatile bit    CLC1CON_LC1MODE0          at CLC1CON : 0
var volatile bit    CLC1CON_LC1MODE1          at CLC1CON : 1
var volatile bit    CLC1CON_LC1MODE2          at CLC1CON : 2
var volatile bit    CLC1CON_LC1INTN           at CLC1CON : 3
var volatile bit    CLC1CON_LC1INTP           at CLC1CON : 4
var volatile bit    CLC1CON_LC1OUT            at CLC1CON : 5
var volatile bit    CLC1CON_LC1OE             at CLC1CON : 6
var volatile bit    CLC1CON_LC1EN             at CLC1CON : 7
var volatile bit    CLC1CON_LCMODE0           at CLC1CON : 0
var volatile bit    CLC1CON_LCMODE1           at CLC1CON : 1
var volatile bit    CLC1CON_LCMODE2           at CLC1CON : 2
var volatile bit    CLC1CON_LCINTN            at CLC1CON : 3
var volatile bit    CLC1CON_LCINTP            at CLC1CON : 4
var volatile bit    CLC1CON_LCOUT             at CLC1CON : 5
var volatile bit    CLC1CON_LCOE              at CLC1CON : 6
var volatile bit    CLC1CON_LCEN              at CLC1CON : 7
var volatile bit*3  CLC1CON_LC1MODE           at CLC1CON : 0
-- ------------------------------------------------
var volatile byte   CLC1POL                   at { 0xF11 }
var volatile bit    CLC1POL_LC1G1POL          at CLC1POL : 0
var volatile bit    CLC1POL_LC1G2POL          at CLC1POL : 1
var volatile bit    CLC1POL_LC1G3POL          at CLC1POL : 2
var volatile bit    CLC1POL_LC1G4POL          at CLC1POL : 3
var volatile bit    CLC1POL_LC1POL            at CLC1POL : 7
var volatile bit    CLC1POL_G1POL             at CLC1POL : 0
var volatile bit    CLC1POL_G2POL             at CLC1POL : 1
var volatile bit    CLC1POL_G3POL             at CLC1POL : 2
var volatile bit    CLC1POL_G4POL             at CLC1POL : 3
var volatile bit    CLC1POL_POL               at CLC1POL : 7
-- ------------------------------------------------
var volatile byte   CLC1SEL0                  at { 0xF12 }
var volatile bit    CLC1SEL0_LC1D1S0          at CLC1SEL0 : 0
var volatile bit    CLC1SEL0_LC1D1S1          at CLC1SEL0 : 1
var volatile bit    CLC1SEL0_LC1D1S2          at CLC1SEL0 : 2
var volatile bit    CLC1SEL0_LC1D2S0          at CLC1SEL0 : 4
var volatile bit    CLC1SEL0_LC1D2S1          at CLC1SEL0 : 5
var volatile bit    CLC1SEL0_LC1D2S2          at CLC1SEL0 : 6
var volatile bit    CLC1SEL0_D1S0             at CLC1SEL0 : 0
var volatile bit    CLC1SEL0_D1S1             at CLC1SEL0 : 1
var volatile bit    CLC1SEL0_D1S2             at CLC1SEL0 : 2
var volatile bit    CLC1SEL0_D2S0             at CLC1SEL0 : 4
var volatile bit    CLC1SEL0_D2S1             at CLC1SEL0 : 5
var volatile bit    CLC1SEL0_D2S2             at CLC1SEL0 : 6
var volatile bit*3  CLC1SEL0_LC1D1S           at CLC1SEL0 : 0
var volatile bit*3  CLC1SEL0_LC1D2S           at CLC1SEL0 : 4
-- ------------------------------------------------
var volatile byte   CLC1SEL1                  at { 0xF13 }
var volatile bit    CLC1SEL1_LC1D3S0          at CLC1SEL1 : 0
var volatile bit    CLC1SEL1_LC1D3S1          at CLC1SEL1 : 1
var volatile bit    CLC1SEL1_LC1D3S2          at CLC1SEL1 : 2
var volatile bit    CLC1SEL1_LC1D4S0          at CLC1SEL1 : 4
var volatile bit    CLC1SEL1_LC1D4S1          at CLC1SEL1 : 5
var volatile bit    CLC1SEL1_LC1D4S2          at CLC1SEL1 : 6
var volatile bit    CLC1SEL1_D3S0             at CLC1SEL1 : 0
var volatile bit    CLC1SEL1_D3S1             at CLC1SEL1 : 1
var volatile bit    CLC1SEL1_D3S2             at CLC1SEL1 : 2
var volatile bit    CLC1SEL1_D4S0             at CLC1SEL1 : 4
var volatile bit    CLC1SEL1_D4S1             at CLC1SEL1 : 5
var volatile bit    CLC1SEL1_D4S2             at CLC1SEL1 : 6
var volatile bit*3  CLC1SEL1_LC1D3S           at CLC1SEL1 : 0
var volatile bit*3  CLC1SEL1_LC1D4S           at CLC1SEL1 : 4
-- ------------------------------------------------
var volatile byte   CLC1GLS0                  at { 0xF14 }
var volatile bit    CLC1GLS0_LC1G1D1N         at CLC1GLS0 : 0
var volatile bit    CLC1GLS0_LC1G1D1T         at CLC1GLS0 : 1
var volatile bit    CLC1GLS0_LC1G1D2N         at CLC1GLS0 : 2
var volatile bit    CLC1GLS0_LC1G1D2T         at CLC1GLS0 : 3
var volatile bit    CLC1GLS0_LC1G1D3N         at CLC1GLS0 : 4
var volatile bit    CLC1GLS0_LC1G1D3T         at CLC1GLS0 : 5
var volatile bit    CLC1GLS0_LC1G1D4N         at CLC1GLS0 : 6
var volatile bit    CLC1GLS0_LC1G1D4T         at CLC1GLS0 : 7
var volatile bit    CLC1GLS0_D1N              at CLC1GLS0 : 0
var volatile bit    CLC1GLS0_D1T              at CLC1GLS0 : 1
var volatile bit    CLC1GLS0_D2N              at CLC1GLS0 : 2
var volatile bit    CLC1GLS0_D2T              at CLC1GLS0 : 3
var volatile bit    CLC1GLS0_D3N              at CLC1GLS0 : 4
var volatile bit    CLC1GLS0_D3T              at CLC1GLS0 : 5
var volatile bit    CLC1GLS0_D4N              at CLC1GLS0 : 6
var volatile bit    CLC1GLS0_D4T              at CLC1GLS0 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS1                  at { 0xF15 }
var volatile bit    CLC1GLS1_LC1G2D1N         at CLC1GLS1 : 0
var volatile bit    CLC1GLS1_LC1G2D1T         at CLC1GLS1 : 1
var volatile bit    CLC1GLS1_LC1G2D2N         at CLC1GLS1 : 2
var volatile bit    CLC1GLS1_LC1G2D2T         at CLC1GLS1 : 3
var volatile bit    CLC1GLS1_LC1G2D3N         at CLC1GLS1 : 4
var volatile bit    CLC1GLS1_LC1G2D3T         at CLC1GLS1 : 5
var volatile bit    CLC1GLS1_LC1G2D4N         at CLC1GLS1 : 6
var volatile bit    CLC1GLS1_LC1G2D4T         at CLC1GLS1 : 7
var volatile bit    CLC1GLS1_D1N              at CLC1GLS1 : 0
var volatile bit    CLC1GLS1_D1T              at CLC1GLS1 : 1
var volatile bit    CLC1GLS1_D2N              at CLC1GLS1 : 2
var volatile bit    CLC1GLS1_D2T              at CLC1GLS1 : 3
var volatile bit    CLC1GLS1_D3N              at CLC1GLS1 : 4
var volatile bit    CLC1GLS1_D3T              at CLC1GLS1 : 5
var volatile bit    CLC1GLS1_D4N              at CLC1GLS1 : 6
var volatile bit    CLC1GLS1_D4T              at CLC1GLS1 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS2                  at { 0xF16 }
var volatile bit    CLC1GLS2_LC1G3D1N         at CLC1GLS2 : 0
var volatile bit    CLC1GLS2_LC1G3D1T         at CLC1GLS2 : 1
var volatile bit    CLC1GLS2_LC1G3D2N         at CLC1GLS2 : 2
var volatile bit    CLC1GLS2_LC1G3D2T         at CLC1GLS2 : 3
var volatile bit    CLC1GLS2_LC1G3D3N         at CLC1GLS2 : 4
var volatile bit    CLC1GLS2_LC1G3D3T         at CLC1GLS2 : 5
var volatile bit    CLC1GLS2_LC1G3D4N         at CLC1GLS2 : 6
var volatile bit    CLC1GLS2_LC1G3D4T         at CLC1GLS2 : 7
var volatile bit    CLC1GLS2_D1N              at CLC1GLS2 : 0
var volatile bit    CLC1GLS2_D1T              at CLC1GLS2 : 1
var volatile bit    CLC1GLS2_D2N              at CLC1GLS2 : 2
var volatile bit    CLC1GLS2_D2T              at CLC1GLS2 : 3
var volatile bit    CLC1GLS2_D3N              at CLC1GLS2 : 4
var volatile bit    CLC1GLS2_D3T              at CLC1GLS2 : 5
var volatile bit    CLC1GLS2_D4N              at CLC1GLS2 : 6
var volatile bit    CLC1GLS2_D4T              at CLC1GLS2 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS3                  at { 0xF17 }
var volatile bit    CLC1GLS3_LC1G4D1N         at CLC1GLS3 : 0
var volatile bit    CLC1GLS3_LC1G4D1T         at CLC1GLS3 : 1
var volatile bit    CLC1GLS3_LC1G4D2N         at CLC1GLS3 : 2
var volatile bit    CLC1GLS3_LC1G4D2T         at CLC1GLS3 : 3
var volatile bit    CLC1GLS3_LC1G4D3N         at CLC1GLS3 : 4
var volatile bit    CLC1GLS3_LC1G4D3T         at CLC1GLS3 : 5
var volatile bit    CLC1GLS3_LC1G4D4N         at CLC1GLS3 : 6
var volatile bit    CLC1GLS3_LC1G4D4T         at CLC1GLS3 : 7
var volatile bit    CLC1GLS3_G4D1N            at CLC1GLS3 : 0
var volatile bit    CLC1GLS3_G4D1T            at CLC1GLS3 : 1
var volatile bit    CLC1GLS3_G4D2N            at CLC1GLS3 : 2
var volatile bit    CLC1GLS3_G4D2T            at CLC1GLS3 : 3
var volatile bit    CLC1GLS3_G4D3N            at CLC1GLS3 : 4
var volatile bit    CLC1GLS3_G4D3T            at CLC1GLS3 : 5
var volatile bit    CLC1GLS3_G4D4N            at CLC1GLS3 : 6
var volatile bit    CLC1GLS3_G4D4T            at CLC1GLS3 : 7
-- ------------------------------------------------
var volatile byte   CLC2CON                   at { 0xF18 }
var volatile bit    CLC2CON_LC2MODE0          at CLC2CON : 0
var volatile bit    CLC2CON_LC2MODE1          at CLC2CON : 1
var volatile bit    CLC2CON_LC2MODE2          at CLC2CON : 2
var volatile bit    CLC2CON_LC2INTN           at CLC2CON : 3
var volatile bit    CLC2CON_LC2INTP           at CLC2CON : 4
var volatile bit    CLC2CON_LC2OUT            at CLC2CON : 5
var volatile bit    CLC2CON_LC2OE             at CLC2CON : 6
var volatile bit    CLC2CON_LC2EN             at CLC2CON : 7
var volatile bit    CLC2CON_LCMODE0           at CLC2CON : 0
var volatile bit    CLC2CON_LCMODE1           at CLC2CON : 1
var volatile bit    CLC2CON_LCMODE2           at CLC2CON : 2
var volatile bit    CLC2CON_LCINTN            at CLC2CON : 3
var volatile bit    CLC2CON_LCINTP            at CLC2CON : 4
var volatile bit    CLC2CON_LCOUT             at CLC2CON : 5
var volatile bit    CLC2CON_LCOE              at CLC2CON : 6
var volatile bit    CLC2CON_LCEN              at CLC2CON : 7
var volatile bit*3  CLC2CON_LC2MODE           at CLC2CON : 0
-- ------------------------------------------------
var volatile byte   CLC2POL                   at { 0xF19 }
var volatile bit    CLC2POL_LC2G1POL          at CLC2POL : 0
var volatile bit    CLC2POL_LC2G2POL          at CLC2POL : 1
var volatile bit    CLC2POL_LC2G3POL          at CLC2POL : 2
var volatile bit    CLC2POL_LC2G4POL          at CLC2POL : 3
var volatile bit    CLC2POL_LC2POL            at CLC2POL : 7
var volatile bit    CLC2POL_G1POL             at CLC2POL : 0
var volatile bit    CLC2POL_G2POL             at CLC2POL : 1
var volatile bit    CLC2POL_G3POL             at CLC2POL : 2
var volatile bit    CLC2POL_G4POL             at CLC2POL : 3
var volatile bit    CLC2POL_POL               at CLC2POL : 7
-- ------------------------------------------------
var volatile byte   CLC2SEL0                  at { 0xF1A }
var volatile bit    CLC2SEL0_LC2D1S0          at CLC2SEL0 : 0
var volatile bit    CLC2SEL0_LC2D1S1          at CLC2SEL0 : 1
var volatile bit    CLC2SEL0_LC2D1S2          at CLC2SEL0 : 2
var volatile bit    CLC2SEL0_LC2D2S0          at CLC2SEL0 : 4
var volatile bit    CLC2SEL0_LC2D2S1          at CLC2SEL0 : 5
var volatile bit    CLC2SEL0_LC2D2S2          at CLC2SEL0 : 6
var volatile bit    CLC2SEL0_D1S0             at CLC2SEL0 : 0
var volatile bit    CLC2SEL0_D1S1             at CLC2SEL0 : 1
var volatile bit    CLC2SEL0_D1S2             at CLC2SEL0 : 2
var volatile bit    CLC2SEL0_D2S0             at CLC2SEL0 : 4
var volatile bit    CLC2SEL0_D2S1             at CLC2SEL0 : 5
var volatile bit    CLC2SEL0_D2S2             at CLC2SEL0 : 6
var volatile bit*3  CLC2SEL0_LC2D1S           at CLC2SEL0 : 0
var volatile bit*3  CLC2SEL0_LC2D2S           at CLC2SEL0 : 4
-- ------------------------------------------------
var volatile byte   CLC2SEL1                  at { 0xF1B }
var volatile bit    CLC2SEL1_LC2D3S0          at CLC2SEL1 : 0
var volatile bit    CLC2SEL1_LC2D3S1          at CLC2SEL1 : 1
var volatile bit    CLC2SEL1_LC2D3S2          at CLC2SEL1 : 2
var volatile bit    CLC2SEL1_LC2D4S0          at CLC2SEL1 : 4
var volatile bit    CLC2SEL1_LC2D4S1          at CLC2SEL1 : 5
var volatile bit    CLC2SEL1_LC2D4S2          at CLC2SEL1 : 6
var volatile bit    CLC2SEL1_D3S0             at CLC2SEL1 : 0
var volatile bit    CLC2SEL1_D3S1             at CLC2SEL1 : 1
var volatile bit    CLC2SEL1_D3S2             at CLC2SEL1 : 2
var volatile bit    CLC2SEL1_D4S0             at CLC2SEL1 : 4
var volatile bit    CLC2SEL1_D4S1             at CLC2SEL1 : 5
var volatile bit    CLC2SEL1_D4S2             at CLC2SEL1 : 6
var volatile bit*3  CLC2SEL1_LC2D3S           at CLC2SEL1 : 0
var volatile bit*3  CLC2SEL1_LC2D4S           at CLC2SEL1 : 4
-- ------------------------------------------------
var volatile byte   CLC2GLS0                  at { 0xF1C }
var volatile bit    CLC2GLS0_LC2G1D1N         at CLC2GLS0 : 0
var volatile bit    CLC2GLS0_LC2G1D1T         at CLC2GLS0 : 1
var volatile bit    CLC2GLS0_LC2G1D2N         at CLC2GLS0 : 2
var volatile bit    CLC2GLS0_LC2G1D2T         at CLC2GLS0 : 3
var volatile bit    CLC2GLS0_LC2G1D3N         at CLC2GLS0 : 4
var volatile bit    CLC2GLS0_LC2G1D3T         at CLC2GLS0 : 5
var volatile bit    CLC2GLS0_LC2G1D4N         at CLC2GLS0 : 6
var volatile bit    CLC2GLS0_LC2G1D4T         at CLC2GLS0 : 7
var volatile bit    CLC2GLS0_D1N              at CLC2GLS0 : 0
var volatile bit    CLC2GLS0_D1T              at CLC2GLS0 : 1
var volatile bit    CLC2GLS0_D2N              at CLC2GLS0 : 2
var volatile bit    CLC2GLS0_D2T              at CLC2GLS0 : 3
var volatile bit    CLC2GLS0_D3N              at CLC2GLS0 : 4
var volatile bit    CLC2GLS0_D3T              at CLC2GLS0 : 5
var volatile bit    CLC2GLS0_D4N              at CLC2GLS0 : 6
var volatile bit    CLC2GLS0_D4T              at CLC2GLS0 : 7
-- ------------------------------------------------
var volatile byte   CLC2GLS1                  at { 0xF1D }
var volatile bit    CLC2GLS1_LC2G2D1N         at CLC2GLS1 : 0
var volatile bit    CLC2GLS1_LC2G2D1T         at CLC2GLS1 : 1
var volatile bit    CLC2GLS1_LC2G2D2N         at CLC2GLS1 : 2
var volatile bit    CLC2GLS1_LC2G2D2T         at CLC2GLS1 : 3
var volatile bit    CLC2GLS1_LC2G2D3N         at CLC2GLS1 : 4
var volatile bit    CLC2GLS1_LC2G2D3T         at CLC2GLS1 : 5
var volatile bit    CLC2GLS1_LC2G2D4N         at CLC2GLS1 : 6
var volatile bit    CLC2GLS1_LC2G2D4T         at CLC2GLS1 : 7
var volatile bit    CLC2GLS1_D1N              at CLC2GLS1 : 0
var volatile bit    CLC2GLS1_D1T              at CLC2GLS1 : 1
var volatile bit    CLC2GLS1_D2N              at CLC2GLS1 : 2
var volatile bit    CLC2GLS1_D2T              at CLC2GLS1 : 3
var volatile bit    CLC2GLS1_D3N              at CLC2GLS1 : 4
var volatile bit    CLC2GLS1_D3T              at CLC2GLS1 : 5
var volatile bit    CLC2GLS1_D4N              at CLC2GLS1 : 6
var volatile bit    CLC2GLS1_D4T              at CLC2GLS1 : 7
-- ------------------------------------------------
var volatile byte   CLC2GLS2                  at { 0xF1E }
var volatile bit    CLC2GLS2_LC2G3D1N         at CLC2GLS2 : 0
var volatile bit    CLC2GLS2_LC2G3D1T         at CLC2GLS2 : 1
var volatile bit    CLC2GLS2_LC2G3D2N         at CLC2GLS2 : 2
var volatile bit    CLC2GLS2_LC2G3D2T         at CLC2GLS2 : 3
var volatile bit    CLC2GLS2_LC2G3D3N         at CLC2GLS2 : 4
var volatile bit    CLC2GLS2_LC2G3D3T         at CLC2GLS2 : 5
var volatile bit    CLC2GLS2_LC2G3D4N         at CLC2GLS2 : 6
var volatile bit    CLC2GLS2_LC2G3D4T         at CLC2GLS2 : 7
var volatile bit    CLC2GLS2_D1N              at CLC2GLS2 : 0
var volatile bit    CLC2GLS2_D1T              at CLC2GLS2 : 1
var volatile bit    CLC2GLS2_D2N              at CLC2GLS2 : 2
var volatile bit    CLC2GLS2_D2T              at CLC2GLS2 : 3
var volatile bit    CLC2GLS2_D3N              at CLC2GLS2 : 4
var volatile bit    CLC2GLS2_D3T              at CLC2GLS2 : 5
var volatile bit    CLC2GLS2_D4N              at CLC2GLS2 : 6
var volatile bit    CLC2GLS2_D4T              at CLC2GLS2 : 7
-- ------------------------------------------------
var volatile byte   CLC2GLS3                  at { 0xF1F }
var volatile bit    CLC2GLS3_LC2G4D1N         at CLC2GLS3 : 0
var volatile bit    CLC2GLS3_LC2G4D1T         at CLC2GLS3 : 1
var volatile bit    CLC2GLS3_LC2G4D2N         at CLC2GLS3 : 2
var volatile bit    CLC2GLS3_LC2G4D2T         at CLC2GLS3 : 3
var volatile bit    CLC2GLS3_LC2G4D3N         at CLC2GLS3 : 4
var volatile bit    CLC2GLS3_LC2G4D3T         at CLC2GLS3 : 5
var volatile bit    CLC2GLS3_LC2G4D4N         at CLC2GLS3 : 6
var volatile bit    CLC2GLS3_LC2G4D4T         at CLC2GLS3 : 7
var volatile bit    CLC2GLS3_G4D1N            at CLC2GLS3 : 0
var volatile bit    CLC2GLS3_G4D1T            at CLC2GLS3 : 1
var volatile bit    CLC2GLS3_G4D2N            at CLC2GLS3 : 2
var volatile bit    CLC2GLS3_G4D2T            at CLC2GLS3 : 3
var volatile bit    CLC2GLS3_G4D3N            at CLC2GLS3 : 4
var volatile bit    CLC2GLS3_G4D3T            at CLC2GLS3 : 5
var volatile bit    CLC2GLS3_G4D4N            at CLC2GLS3 : 6
var volatile bit    CLC2GLS3_G4D4T            at CLC2GLS3 : 7
-- ------------------------------------------------
var volatile byte   BSR_ICDSHAD               at { 0xFE3 }
var volatile bit*5  BSR_ICDSHAD_BSR_ICDSHAD   at BSR_ICDSHAD : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD               at { 0xFE4 }
var volatile bit    STATUS_SHAD_C             at STATUS_SHAD : 0
var volatile bit    STATUS_SHAD_DC            at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_Z             at STATUS_SHAD : 2
-- ------------------------------------------------
var volatile byte   WREG_SHAD                 at { 0xFE5 }
-- ------------------------------------------------
var volatile byte   BSR_SHAD                  at { 0xFE6 }
var volatile bit*5  BSR_SHAD_BSR              at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD               at { 0xFE7 }
var volatile bit*7  PCLATH_SHAD_PCLATH        at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                at { 0xFE8 }
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                at { 0xFEA }
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                at { 0xFEB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0xFED }
var volatile bit*5  STKPTR_STKPTR             at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0xFEE }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0xFEF }
var volatile bit*7  TOSH_TOSH                 at TOSH : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000
   ANSELC = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CM1CON0 = 0b0000_0100
   CM1CON1 = 0b0000_0000
   CM2CON0 = 0b0000_0100
   CM2CON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x70-0x7E
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0  0x3 {             -- Oscillator Selection Bits
       ECH_NOCLKOUT = 0x3                -- ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to CLKIN pin
       ECM_NOCLKOUT = 0x2                -- ECM, External Clock, Medium Power Mode (0.5-4 MHz): device clock supplied to CLKIN pin
       ECL_NOCLKOUT = 0x1                -- ECL, External Clock, Low Power Mode (0-0.5 MHz): device clock supplied to CLKIN pin
       INTOSC_NOCLKOUT = 0x0             -- INTOSC oscillator: I/O function on CLKIN pin
       }
pragma fuse_def WDT:0  0x18 {            -- Watchdog Timer Enable
       ENABLED = 0x18                    -- WDT enabled
       RUNONLY = 0x10                    -- WDT enabled while running and disabled in Sleep
       CONTROL = 0x8                     -- WDT controlled by the SWDTEN bit in the WDTCON register
       DISABLED = 0x0                    -- WDT disabled
       }
pragma fuse_def PWRTE:0  0x20 {          -- Power-up Timer Enable
       DISABLED = 0x20                   -- PWRT disabled
       ENABLED = 0x0                     -- PWRT enabled
       }
pragma fuse_def MCLR:0  0x40 {           -- MCLR Pin Function Select
       EXTERNAL = 0x40                   -- MCLR/VPP pin function is MCLR
       INTERNAL = 0x0                    -- MCLR/VPP pin function is digital input
       }
pragma fuse_def CP:0  0x80 {             -- Flash Program Memory Code Protection
       DISABLED = 0x80                   -- Program memory code protection is disabled
       ENABLED = 0x0                     -- Program memory code protection is enabled
       }
pragma fuse_def BROWNOUT:0  0x600 {      -- Brown-out Reset Enable
       ENABLED = 0x600                   -- Brown-out Reset enabled
       RUNONLY = 0x400                   -- Brown-out Reset enabled while running and disabled in Sleep
       CONTROL = 0x200                   -- Brown-out Reset controlled by the SBOREN bit in the BORCON register
       DISABLED = 0x0                    -- Brown-out Reset disabled
       }
pragma fuse_def CLKOUTEN:0  0x800 {      -- Clock Out Enable
       DISABLED = 0x800                  -- CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin
       ENABLED = 0x0                     -- CLKOUT function is enabled on the CLKOUT pin
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1  0x3 {             -- Flash Memory Self-Write Protection
       DISABLED = 0x3                    -- Write protection off
       BOOT_BLOCK = 0x2                  -- 000h to 1FFh write protected, 200h to 1FFFh may be modified by EECON control
       HALF = 0x1                        -- 000h to FFFh write protected, 1000h to 1FFFh may be modified by EECON control
       ENABLED = 0x0                     -- 000h to 1FFFh write protected, no addresses may be modified by EECON control
       }
pragma fuse_def STVR:1  0x200 {          -- Stack Overflow/Underflow Reset Enable
       ENABLED = 0x200                   -- Stack Overflow or Underflow will cause a Reset
       DISABLED = 0x0                    -- Stack Overflow or Underflow will not cause a Reset
       }
pragma fuse_def VOLTAGE:1  0x400 {       -- Brown-out Reset Voltage Selection
       MINIMUM = 0x400                   -- Brown-out Reset Voltage (Vbor), low trip point selected.
       MAXIMUM = 0x0                     -- Brown-out Reset Voltage (Vbor), high trip point selected.
       }
pragma fuse_def LPBOR:1  0x800 {         -- Low-Power Brown Out Reset
       DISABLED = 0x800                  -- Low-Power BOR is disabled
       ENABLED = 0x0                     -- Low-Power BOR is enabled
       }
pragma fuse_def LVP:1  0x2000 {          -- Low-Voltage Programming Enable
       ENABLED = 0x2000                  -- Low-voltage programming enabled
       DISABLED = 0x0                    -- High-voltage on MCLR/VPP must be used for programming
       }
--
