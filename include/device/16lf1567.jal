-- ------------------------------------------------
-- Title: JalV2 device include file for 16lf1567
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16lf1567, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC16LF1567.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Fri Mar  7 10:07:14 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x3047            -- ID for PIC programmer
const  word  CHIP_ID     = 0xA567            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "16LF1567"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_14H       -- (banks=32)
pragma  target  chip     16LF1567
pragma  target  bank     0x0080
pragma  target  page     0x0800
pragma  stack            16
pragma  code             8192
pragma  ID               0x8000,4
pragma  data             0x20-0x7F,0xA0-0xEF,0x120-0x16F,0x1A0-0x1EF,0x220-0x26F
pragma  data             0x2A0-0x2EF,0x320-0x36F,0x3A0-0x3EF,0x420-0x46F,0x4A0-0x4EF
pragma  data             0x520-0x56F,0x5A0-0x5EF,0x620-0x64F
pragma  shared           0x00-0x0B,0x70-0x7F
--
var volatile byte _pic_accum at 0x7F      -- (compiler)
--
const word   _FUSES_CT             = 2
const word   _FUSE_BASE[_FUSES_CT] = {
                                       0x8007,
                                       0x8008 
                                     }
const word   _FUSES[_FUSES_CT]     = {
                                       0x3FFF,     -- CONFIG1
                                       0x3FFF      -- CONFIG2
                                     }
--
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0x0 }
var volatile byte   _ind                      at { 0x0 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0x1 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x2 }
var volatile byte   _pcl                      at { 0x2 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x3 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_NPD                at STATUS : 3
var volatile bit    STATUS_NTO                at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile byte   _status                   at { 0x3 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _not_pd                   =  3
const        byte   _not_to                   =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
-- ------------------------------------------------
var volatile word   FSR0                      at { 0x4 }
var volatile word   _fsr0                     at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0x4 }
var volatile byte   _fsr0l                    at { 0x4 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0x5 }
var volatile byte   _fsr0h                    at { 0x5 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0x6 }
var volatile word   _fsr1                     at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0x6 }
var volatile byte   _fsr1l                    at { 0x6 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0x7 }
var volatile byte   _fsr1h                    at { 0x7 }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0x8 }
var volatile bit*5  BSR_BSR                   at BSR : 0
var volatile bit    BSR_BSR0                  at BSR : 0
var volatile bit    BSR_BSR1                  at BSR : 1
var volatile bit    BSR_BSR2                  at BSR : 2
var volatile bit    BSR_BSR3                  at BSR : 3
var volatile bit    BSR_BSR4                  at BSR : 4
var volatile byte   _bsr                      at { 0x8 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0x9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xA }
var volatile bit*7  PCLATH_PCLATH             at PCLATH : 0
var volatile byte   _pclath                   at { 0xA }
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xB }
var volatile bit    INTCON_IOCIF              at INTCON : 0
var volatile bit    INTCON_INTF               at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_IOCIE              at INTCON : 3
var volatile bit    INTCON_INTE               at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_T0IE               at INTCON : 5
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xC }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    PORTA_RA6                 at PORTA : 6
var volatile bit    PORTA_RA7                 at PORTA : 7
-- ------------------------------------------------
var volatile byte   PORTB                     at { 0xD }
var volatile bit    PORTB_RB0                 at PORTB : 0
var volatile bit    PORTB_RB1                 at PORTB : 1
var volatile bit    PORTB_RB2                 at PORTB : 2
var volatile bit    PORTB_RB3                 at PORTB : 3
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    PORTB_RB7                 at PORTB : 7
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xE }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    PORTC_RC7                 at PORTC : 7
-- ------------------------------------------------
var volatile byte   PORTD                     at { 0xF }
var volatile bit    PORTD_RD0                 at PORTD : 0
var volatile bit    PORTD_RD1                 at PORTD : 1
var volatile bit    PORTD_RD2                 at PORTD : 2
var volatile bit    PORTD_RD3                 at PORTD : 3
var volatile bit    PORTD_RD4                 at PORTD : 4
var volatile bit    PORTD_RD5                 at PORTD : 5
var volatile bit    PORTD_RD6                 at PORTD : 6
var volatile bit    PORTD_RD7                 at PORTD : 7
-- ------------------------------------------------
var volatile byte   PORTE                     at { 0x10 }
var volatile bit    PORTE_RE0                 at PORTE : 0
var volatile bit    PORTE_RE1                 at PORTE : 1
var volatile bit    PORTE_RE2                 at PORTE : 2
var volatile bit    PORTE_RE3                 at PORTE : 3
var volatile bit    pin_E3                    at PORTE : 3
--
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0x11 }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_SSP2IF               at PIR1 : 2
var volatile bit    PIR1_SSP1IF               at PIR1 : 3
alias               PIR1_SSPIF                is PIR1_SSP1IF
var volatile bit    PIR1_TXIF                 at PIR1 : 4
var volatile bit    PIR1_RCIF                 at PIR1 : 5
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_TMR1GIF              at PIR1 : 7
var volatile bit    PIR1_AD1IF                at PIR1 : 6
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0x12 }
var volatile bit    PIR2_TMR4IF               at PIR2 : 1
var volatile bit    PIR2_BCL2IF               at PIR2 : 2
var volatile bit    PIR2_BCL1IF               at PIR2 : 3
var volatile bit    PIR2_AD2IF                at PIR2 : 6
-- ------------------------------------------------
var volatile byte   TMR0                      at { 0x15 }
-- ------------------------------------------------
var volatile word   TMR1                      at { 0x16 }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0x16 }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0x17 }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0x18 }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit*2  T1CON_TMR1CS              at T1CON : 6
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_TMR1CS0             at T1CON : 6
var volatile bit    T1CON_TMR1CS1             at T1CON : 7
-- ------------------------------------------------
var volatile byte   T1GCON                    at { 0x19 }
var volatile bit    T1GCON_T1GSS              at T1GCON : 0
var volatile bit    T1GCON_T1GVAL             at T1GCON : 2
var volatile bit    T1GCON_T1GGO_NDONE        at T1GCON : 3
var volatile bit    T1GCON_T1GSPM             at T1GCON : 4
var volatile bit    T1GCON_T1GTM              at T1GCON : 5
var volatile bit    T1GCON_T1GPOL             at T1GCON : 6
var volatile bit    T1GCON_TMR1GE             at T1GCON : 7
var volatile bit    T1GCON_T1GSS0             at T1GCON : 0
var volatile bit    T1GCON_GO                 at T1GCON : 3
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0x1A }
-- ------------------------------------------------
var volatile byte   PR2                       at { 0x1B }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x1C }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_T2OUTPS0            at T2CON : 3
var volatile bit    T2CON_T2OUTPS1            at T2CON : 4
var volatile bit    T2CON_T2OUTPS2            at T2CON : 5
var volatile bit    T2CON_T2OUTPS3            at T2CON : 6
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x8C }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_ADTX20_direction      is pin_A0_direction
alias               pin_PWM10_direction       is pin_A0_direction
alias               pin_SS1_RA0_direction     is pin_A0_direction
alias               pin_AN20_direction        is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_ADTX10_direction      is pin_A1_direction
alias               pin_PWM11_direction       is pin_A1_direction
alias               pin_SS2_direction         is pin_A1_direction
alias               pin_AN10_direction        is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_ADTX0_direction       is pin_A2_direction
alias               pin_PWM12_direction       is pin_A2_direction
alias               pin_AN0_direction         is pin_A2_direction
alias               pin_VREFMINUS_direction   is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_ADTX1_direction       is pin_A3_direction
alias               pin_PWM13_direction       is pin_A3_direction
alias               pin_AN1_direction         is pin_A3_direction
alias               pin_VREFPLUS_direction    is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_ADTX2_direction       is pin_A4_direction
alias               pin_T0CKI_direction       is pin_A4_direction
alias               pin_AN2_direction         is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_ADTX21_direction      is pin_A5_direction
alias               pin_SS1_RA5_direction     is pin_A5_direction
alias               pin_AN21_direction        is pin_A5_direction
--
var volatile bit    TRISA_TRISA6              at TRISA : 6
var volatile bit    pin_A6_direction          at TRISA : 6
alias               pin_ADTX22_direction      is pin_A6_direction
alias               pin_AN22_direction        is pin_A6_direction
alias               pin_CLKOUT_direction      is pin_A6_direction
--
var volatile bit    TRISA_TRISA7              at TRISA : 7
var volatile bit    pin_A7_direction          at TRISA : 7
alias               pin_ADTX11_direction      is pin_A7_direction
alias               pin_AN11_direction        is pin_A7_direction
alias               pin_CLKIN_direction       is pin_A7_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0x8D }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB0              at TRISB : 0
var volatile bit    pin_B0_direction          at TRISB : 0
alias               pin_ADTX16_direction      is pin_B0_direction
alias               pin_PWM20_direction       is pin_B0_direction
alias               pin_AN16_direction        is pin_B0_direction
--
var volatile bit    TRISB_TRISB1              at TRISB : 1
var volatile bit    pin_B1_direction          at TRISB : 1
alias               pin_ADTX27_direction      is pin_B1_direction
alias               pin_PWM21_direction       is pin_B1_direction
alias               pin_AN27_direction        is pin_B1_direction
--
var volatile bit    TRISB_TRISB2              at TRISB : 2
var volatile bit    pin_B2_direction          at TRISB : 2
alias               pin_ADTX17_direction      is pin_B2_direction
alias               pin_PWM22_direction       is pin_B2_direction
alias               pin_AN17_direction        is pin_B2_direction
--
var volatile bit    TRISB_TRISB3              at TRISB : 3
var volatile bit    pin_B3_direction          at TRISB : 3
alias               pin_ADTX28_direction      is pin_B3_direction
alias               pin_PWM23_direction       is pin_B3_direction
alias               pin_AN28_direction        is pin_B3_direction
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_ADTX18_direction      is pin_B4_direction
alias               pin_AD2GRDA_RB4_direction is pin_B4_direction
alias               pin_AD1GRDA_RB4_direction is pin_B4_direction
alias               pin_AN18_direction        is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_ADTX29_direction      is pin_B5_direction
alias               pin_T1G_direction         is pin_B5_direction
alias               pin_AD2GRDA_RB5_direction is pin_B5_direction
alias               pin_AD1GRDA_RB5_direction is pin_B5_direction
alias               pin_AN29_direction        is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_ADTX19_direction      is pin_B6_direction
alias               pin_AD2GRDB_RB6_direction is pin_B6_direction
alias               pin_AD1GRDB_RB6_direction is pin_B6_direction
alias               pin_AN19_direction        is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_ADTX40_direction      is pin_B7_direction
alias               pin_AD2GRDB_RB7_direction is pin_B7_direction
alias               pin_AD1GRDB_RB7_direction is pin_B7_direction
alias               pin_AN40_direction        is pin_B7_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0x8E }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_ADTX12_direction      is pin_C0_direction
alias               pin_SDO2_direction        is pin_C0_direction
alias               pin_T1CKI_direction       is pin_C0_direction
alias               pin_AN12_direction        is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_ADTX23_direction      is pin_C1_direction
alias               pin_PWM2_direction        is pin_C1_direction
alias               pin_SCK2_direction        is pin_C1_direction
alias               pin_SCL2_direction        is pin_C1_direction
alias               pin_AN23_direction        is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_ADTX13_direction      is pin_C2_direction
alias               pin_PWM1_direction        is pin_C2_direction
alias               pin_SDI2_direction        is pin_C2_direction
alias               pin_SDA2_direction        is pin_C2_direction
alias               pin_AN13_direction        is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_ADTX24_direction      is pin_C3_direction
alias               pin_SCK1_direction        is pin_C3_direction
alias               pin_SCK_direction         is pin_C3_direction
alias               pin_SCL1_direction        is pin_C3_direction
alias               pin_SCL_direction         is pin_C3_direction
alias               pin_AN24_direction        is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_ADTX14_direction      is pin_C4_direction
alias               pin_SDI1_direction        is pin_C4_direction
alias               pin_SDI_direction         is pin_C4_direction
alias               pin_SDA1_direction        is pin_C4_direction
alias               pin_SDA_direction         is pin_C4_direction
alias               pin_AN14_direction        is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_ADTX25_direction      is pin_C5_direction
alias               pin_SDO1_direction        is pin_C5_direction
alias               pin_SDO_direction         is pin_C5_direction
alias               pin_AN25_direction        is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_ADTX15_direction      is pin_C6_direction
alias               pin_TX_direction          is pin_C6_direction
alias               pin_CK_direction          is pin_C6_direction
alias               pin_AN15_direction        is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_ADTX26_direction      is pin_C7_direction
alias               pin_RX_direction          is pin_C7_direction
alias               pin_DT_direction          is pin_C7_direction
alias               pin_AN26_direction        is pin_C7_direction
--
-- ------------------------------------------------
var volatile byte   TRISD                     at { 0x8F }
alias               PORTD_direction           is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD0              at TRISD : 0
var volatile bit    pin_D0_direction          at TRISD : 0
alias               pin_ADTX42_direction      is pin_D0_direction
alias               pin_AN42_direction        is pin_D0_direction
--
var volatile bit    TRISD_TRISD1              at TRISD : 1
var volatile bit    pin_D1_direction          at TRISD : 1
alias               pin_ADTX32_direction      is pin_D1_direction
alias               pin_AN32_direction        is pin_D1_direction
--
var volatile bit    TRISD_TRISD2              at TRISD : 2
var volatile bit    pin_D2_direction          at TRISD : 2
alias               pin_ADTX43_direction      is pin_D2_direction
alias               pin_AN43_direction        is pin_D2_direction
--
var volatile bit    TRISD_TRISD3              at TRISD : 3
var volatile bit    pin_D3_direction          at TRISD : 3
alias               pin_ADTX33_direction      is pin_D3_direction
alias               pin_AN33_direction        is pin_D3_direction
--
var volatile bit    TRISD_TRISD4              at TRISD : 4
var volatile bit    pin_D4_direction          at TRISD : 4
alias               pin_ADTX34_direction      is pin_D4_direction
alias               pin_AN34_direction        is pin_D4_direction
--
var volatile bit    TRISD_TRISD5              at TRISD : 5
var volatile bit    pin_D5_direction          at TRISD : 5
alias               pin_ADTX44_direction      is pin_D5_direction
alias               pin_AN44_direction        is pin_D5_direction
--
var volatile bit    TRISD_TRISD6              at TRISD : 6
var volatile bit    pin_D6_direction          at TRISD : 6
alias               pin_ADTX35_direction      is pin_D6_direction
alias               pin_AN35_direction        is pin_D6_direction
--
var volatile bit    TRISD_TRISD7              at TRISD : 7
var volatile bit    pin_D7_direction          at TRISD : 7
alias               pin_ADTX45_direction      is pin_D7_direction
alias               pin_AN45_direction        is pin_D7_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     at { 0x90 }
alias               PORTE_direction           is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE0              at TRISE : 0
var volatile bit    pin_E0_direction          at TRISE : 0
alias               pin_ADTX30_direction      is pin_E0_direction
alias               pin_AN30_direction        is pin_E0_direction
--
var volatile bit    TRISE_TRISE1              at TRISE : 1
var volatile bit    pin_E1_direction          at TRISE : 1
alias               pin_ADTX41_direction      is pin_E1_direction
alias               pin_AN41_direction        is pin_E1_direction
--
var volatile bit    TRISE_TRISE2              at TRISE : 2
var volatile bit    pin_E2_direction          at TRISE : 2
alias               pin_ADTX31_direction      is pin_E2_direction
alias               pin_AN31_direction        is pin_E2_direction
--
var volatile bit    TRISE_TRISE3              at TRISE : 3
var volatile bit    pin_E3_direction          at TRISE : 3
--
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0x91 }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_SSP2IE               at PIE1 : 2
var volatile bit    PIE1_SSP1IE               at PIE1 : 3
alias               PIE1_SSPIE                is PIE1_SSP1IE
var volatile bit    PIE1_TXIE                 at PIE1 : 4
var volatile bit    PIE1_RCIE                 at PIE1 : 5
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_TMR1GIE              at PIE1 : 7
var volatile bit    PIE1_AD1IE                at PIE1 : 6
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0x92 }
var volatile bit    PIE2_TMR4IE               at PIE2 : 1
var volatile bit    PIE2_BCL2IE               at PIE2 : 2
var volatile bit    PIE2_BCL1IE               at PIE2 : 3
var volatile bit    PIE2_AD2IE                at PIE2 : 6
-- ------------------------------------------------
var volatile byte   OPTION_REG                at { 0x95 }
var volatile bit*3  OPTION_REG_PS             at OPTION_REG : 0
var volatile bit    OPTION_REG_PSA            at OPTION_REG : 3
alias               T0CON_PSA                 is OPTION_REG_PSA
var volatile bit    OPTION_REG_TMR0SE         at OPTION_REG : 4
var volatile bit    OPTION_REG_TMR0CS         at OPTION_REG : 5
var volatile bit    OPTION_REG_INTEDG         at OPTION_REG : 6
var volatile bit    OPTION_REG_WPUEN          at OPTION_REG : 7
var volatile bit    OPTION_REG_PS0            at OPTION_REG : 0
var volatile bit    OPTION_REG_PS1            at OPTION_REG : 1
var volatile bit    OPTION_REG_PS2            at OPTION_REG : 2
alias               T0CON_T0PS                is OPTION_REG_PS
var volatile bit    OPTION_REG_T0SE           at OPTION_REG : 4
alias               T0CON_T0SE                is OPTION_REG_T0SE
var volatile bit    OPTION_REG_T0CS           at OPTION_REG : 5
alias               T0CON_T0CS                is OPTION_REG_T0CS
-- ------------------------------------------------
var volatile byte   PCON                      at { 0x96 }
var volatile bit    PCON_NBOR                 at PCON : 0
var volatile bit    PCON_NPOR                 at PCON : 1
var volatile bit    PCON_NRI                  at PCON : 2
var volatile bit    PCON_NRMCLR               at PCON : 3
var volatile bit    PCON_NRWDT                at PCON : 4
var volatile bit    PCON_STKUNF               at PCON : 6
var volatile bit    PCON_STKOVF               at PCON : 7
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0x97 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit*5  WDTCON_WDTPS              at WDTCON : 1
var volatile bit    WDTCON_WDTPS0             at WDTCON : 1
var volatile bit    WDTCON_WDTPS1             at WDTCON : 2
var volatile bit    WDTCON_WDTPS2             at WDTCON : 3
var volatile bit    WDTCON_WDTPS3             at WDTCON : 4
var volatile bit    WDTCON_WDTPS4             at WDTCON : 5
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0x99 }
var volatile bit*2  OSCCON_SCS                at OSCCON : 0
var volatile bit*4  OSCCON_IRCF               at OSCCON : 3
var volatile bit    OSCCON_SPLLEN             at OSCCON : 7
var volatile bit    OSCCON_SCS0               at OSCCON : 0
var volatile bit    OSCCON_SCS1               at OSCCON : 1
var volatile bit    OSCCON_IRCF0              at OSCCON : 3
var volatile bit    OSCCON_IRCF1              at OSCCON : 4
var volatile bit    OSCCON_IRCF2              at OSCCON : 5
var volatile bit    OSCCON_IRCF3              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   OSCSTAT                   at { 0x9A }
var volatile bit    OSCSTAT_HFIOFS            at OSCSTAT : 0
var volatile bit    OSCSTAT_LFIOFR            at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFR            at OSCSTAT : 4
var volatile bit    OSCSTAT_PLLSR             at OSCSTAT : 6
-- ------------------------------------------------
var volatile word   ADRES                     at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0x9B }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0x9C }
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0x9D }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*6  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_AD1ON              at ADCON0 : 0
var volatile bit    ADCON0_ADGO               at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_CHS3               at ADCON0 : 5
var volatile bit    ADCON0_CHS4               at ADCON0 : 6
var volatile bit    ADCON0_CHS5               at ADCON0 : 7
var volatile bit    ADCON0_GO                 at ADCON0 : 1
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0x9E }
var volatile bit*2  ADCON1_ADPREF             at ADCON1 : 0
var volatile bit    ADCON1_GO_NDONE_ALL       at ADCON1 : 2
var volatile bit    ADCON1_ADNREF             at ADCON1 : 3
var volatile bit*3  ADCON1_ADCS               at ADCON1 : 4
var volatile bit    ADCON1_ADFM               at ADCON1 : 7
var volatile bit    ADCON1_ADPREF0            at ADCON1 : 0
var volatile bit    ADCON1_ADPREF1            at ADCON1 : 1
var volatile bit    ADCON1_GO_ALL             at ADCON1 : 2
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0x9F }
var volatile bit*3  ADCON2_TRIGSEL            at ADCON2 : 4
var volatile bit    ADCON2_TRIGSEL0           at ADCON2 : 4
var volatile bit    ADCON2_TRIGSEL1           at ADCON2 : 5
var volatile bit    ADCON2_TRIGSEL2           at ADCON2 : 6
-- ------------------------------------------------
var volatile byte   LATA                      at { 0x10C }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_ADTX20                is pin_A0
alias               pin_PWM10                 is pin_A0
alias               pin_SS1_RA0               is pin_A0
alias               pin_AN20                  is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_ADTX10                is pin_A1
alias               pin_PWM11                 is pin_A1
alias               pin_SS2                   is pin_A1
alias               pin_AN10                  is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_ADTX0                 is pin_A2
alias               pin_PWM12                 is pin_A2
alias               pin_AN0                   is pin_A2
alias               pin_VREFMINUS             is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                at LATA : 3
var volatile bit    pin_A3                    at PORTA : 3
alias               pin_ADTX1                 is pin_A3
alias               pin_PWM13                 is pin_A3
alias               pin_AN1                   is pin_A3
alias               pin_VREFPLUS              is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_ADTX2                 is pin_A4
alias               pin_T0CKI                 is pin_A4
alias               pin_AN2                   is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_ADTX21                is pin_A5
alias               pin_SS1_RA5               is pin_A5
alias               pin_AN21                  is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                at LATA : 6
var volatile bit    pin_A6                    at PORTA : 6
alias               pin_ADTX22                is pin_A6
alias               pin_AN22                  is pin_A6
alias               pin_CLKOUT                is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA7                at LATA : 7
var volatile bit    pin_A7                    at PORTA : 7
alias               pin_ADTX11                is pin_A7
alias               pin_AN11                  is pin_A7
alias               pin_CLKIN                 is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                      at { 0x10D }
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB0                at LATB : 0
var volatile bit    pin_B0                    at PORTB : 0
alias               pin_ADTX16                is pin_B0
alias               pin_PWM20                 is pin_B0
alias               pin_AN16                  is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                at LATB : 1
var volatile bit    pin_B1                    at PORTB : 1
alias               pin_ADTX27                is pin_B1
alias               pin_PWM21                 is pin_B1
alias               pin_AN27                  is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                at LATB : 2
var volatile bit    pin_B2                    at PORTB : 2
alias               pin_ADTX17                is pin_B2
alias               pin_PWM22                 is pin_B2
alias               pin_AN17                  is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                at LATB : 3
var volatile bit    pin_B3                    at PORTB : 3
alias               pin_ADTX28                is pin_B3
alias               pin_PWM23                 is pin_B3
alias               pin_AN28                  is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                at LATB : 4
var volatile bit    pin_B4                    at PORTB : 4
alias               pin_ADTX18                is pin_B4
alias               pin_AD2GRDA_RB4           is pin_B4
alias               pin_AD1GRDA_RB4           is pin_B4
alias               pin_AN18                  is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                at LATB : 5
var volatile bit    pin_B5                    at PORTB : 5
alias               pin_ADTX29                is pin_B5
alias               pin_T1G                   is pin_B5
alias               pin_AD2GRDA_RB5           is pin_B5
alias               pin_AD1GRDA_RB5           is pin_B5
alias               pin_AN29                  is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                at LATB : 6
var volatile bit    pin_B6                    at PORTB : 6
alias               pin_ADTX19                is pin_B6
alias               pin_AD2GRDB_RB6           is pin_B6
alias               pin_AD1GRDB_RB6           is pin_B6
alias               pin_AN19                  is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB7                at LATB : 7
var volatile bit    pin_B7                    at PORTB : 7
alias               pin_ADTX40                is pin_B7
alias               pin_AD2GRDB_RB7           is pin_B7
alias               pin_AD1GRDB_RB7           is pin_B7
alias               pin_AN40                  is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                      at { 0x10E }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_ADTX12                is pin_C0
alias               pin_SDO2                  is pin_C0
alias               pin_T1CKI                 is pin_C0
alias               pin_AN12                  is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_ADTX23                is pin_C1
alias               pin_PWM2                  is pin_C1
alias               pin_SCK2                  is pin_C1
alias               pin_SCL2                  is pin_C1
alias               pin_AN23                  is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_ADTX13                is pin_C2
alias               pin_PWM1                  is pin_C2
alias               pin_SDI2                  is pin_C2
alias               pin_SDA2                  is pin_C2
alias               pin_AN13                  is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_ADTX24                is pin_C3
alias               pin_SCK1                  is pin_C3
alias               pin_SCK                   is pin_C3
alias               pin_SCL1                  is pin_C3
alias               pin_SCL                   is pin_C3
alias               pin_AN24                  is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_ADTX14                is pin_C4
alias               pin_SDI1                  is pin_C4
alias               pin_SDI                   is pin_C4
alias               pin_SDA1                  is pin_C4
alias               pin_SDA                   is pin_C4
alias               pin_AN14                  is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_ADTX25                is pin_C5
alias               pin_SDO1                  is pin_C5
alias               pin_SDO                   is pin_C5
alias               pin_AN25                  is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                at LATC : 6
var volatile bit    pin_C6                    at PORTC : 6
alias               pin_ADTX15                is pin_C6
alias               pin_TX                    is pin_C6
alias               pin_CK                    is pin_C6
alias               pin_AN15                  is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC7                at LATC : 7
var volatile bit    pin_C7                    at PORTC : 7
alias               pin_ADTX26                is pin_C7
alias               pin_RX                    is pin_C7
alias               pin_DT                    is pin_C7
alias               pin_AN26                  is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                      at { 0x10F }
--
procedure PORTD'put(byte in x at LATD) is
   pragma inline
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (PORTD >> 4)
end function
--
var volatile bit    LATD_LATD0                at LATD : 0
var volatile bit    pin_D0                    at PORTD : 0
alias               pin_ADTX42                is pin_D0
alias               pin_AN42                  is pin_D0
--
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1                at LATD : 1
var volatile bit    pin_D1                    at PORTD : 1
alias               pin_ADTX32                is pin_D1
alias               pin_AN32                  is pin_D1
--
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2                at LATD : 2
var volatile bit    pin_D2                    at PORTD : 2
alias               pin_ADTX43                is pin_D2
alias               pin_AN43                  is pin_D2
--
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3                at LATD : 3
var volatile bit    pin_D3                    at PORTD : 3
alias               pin_ADTX33                is pin_D3
alias               pin_AN33                  is pin_D3
--
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4                at LATD : 4
var volatile bit    pin_D4                    at PORTD : 4
alias               pin_ADTX34                is pin_D4
alias               pin_AN34                  is pin_D4
--
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5                at LATD : 5
var volatile bit    pin_D5                    at PORTD : 5
alias               pin_ADTX44                is pin_D5
alias               pin_AN44                  is pin_D5
--
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6                at LATD : 6
var volatile bit    pin_D6                    at PORTD : 6
alias               pin_ADTX35                is pin_D6
alias               pin_AN35                  is pin_D6
--
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD7                at LATD : 7
var volatile bit    pin_D7                    at PORTD : 7
alias               pin_ADTX45                is pin_D7
alias               pin_AN45                  is pin_D7
--
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                      at { 0x110 }
--
procedure PORTE'put(byte in x at LATE) is
   pragma inline
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (PORTE >> 4)
end function
--
var volatile bit    LATE_LATE0                at LATE : 0
var volatile bit    pin_E0                    at PORTE : 0
alias               pin_ADTX30                is pin_E0
alias               pin_AN30                  is pin_E0
--
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1                at LATE : 1
var volatile bit    pin_E1                    at PORTE : 1
alias               pin_ADTX41                is pin_E1
alias               pin_AN41                  is pin_E1
--
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE2                at LATE : 2
var volatile bit    pin_E2                    at PORTE : 2
alias               pin_ADTX31                is pin_E2
alias               pin_AN31                  is pin_E2
--
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   BORCON                    at { 0x116 }
var volatile bit    BORCON_BORRDY             at BORCON : 0
var volatile bit    BORCON_BORFS              at BORCON : 6
var volatile bit    BORCON_SBOREN             at BORCON : 7
-- ------------------------------------------------
var volatile byte   FVRCON                    at { 0x117 }
var volatile bit*2  FVRCON_ADFVR              at FVRCON : 0
var volatile bit    FVRCON_TSRNG              at FVRCON : 4
var volatile bit    FVRCON_TSEN               at FVRCON : 5
var volatile bit    FVRCON_FVRRDY             at FVRCON : 6
var volatile bit    FVRCON_FVREN              at FVRCON : 7
var volatile bit    FVRCON_ADFVR0             at FVRCON : 0
var volatile bit    FVRCON_ADFVR1             at FVRCON : 1
-- ------------------------------------------------
var volatile byte   APFCON                    at { 0x11D }
var volatile bit    APFCON_GRDASEL            at APFCON : 0
var volatile bit    APFCON_GRDBSEL            at APFCON : 1
var volatile bit    APFCON_SSSEL              at APFCON : 5
-- ------------------------------------------------
var volatile byte   ANSELA                    at { 0x18C }
var volatile bit    ANSELA_ANSA0              at ANSELA : 0
var volatile bit    ANSELA_ANSA1              at ANSELA : 1
var volatile bit    ANSELA_ANSA2              at ANSELA : 2
var volatile bit    ANSELA_ANSA3              at ANSELA : 3
var volatile bit    ANSELA_ANSA4              at ANSELA : 4
var volatile bit    ANSELA_ANSA5              at ANSELA : 5
var volatile bit    ANSELA_ANSA6              at ANSELA : 6
var volatile bit    ANSELA_ANSA7              at ANSELA : 7
-- ------------------------------------------------
var volatile byte   ANSELB                    at { 0x18D }
var volatile bit    ANSELB_ANSB0              at ANSELB : 0
var volatile bit    ANSELB_ANSB1              at ANSELB : 1
var volatile bit    ANSELB_ANSB2              at ANSELB : 2
var volatile bit    ANSELB_ANSB3              at ANSELB : 3
var volatile bit    ANSELB_ANSB4              at ANSELB : 4
var volatile bit    ANSELB_ANSB5              at ANSELB : 5
var volatile bit    ANSELB_ANSB6              at ANSELB : 6
var volatile bit    ANSELB_ANSB7              at ANSELB : 7
-- ------------------------------------------------
var volatile byte   ANSELC                    at { 0x18E }
var volatile bit    ANSELC_ANSC0              at ANSELC : 0
var volatile bit    ANSELC_ANSC1              at ANSELC : 1
var volatile bit    ANSELC_ANSC2              at ANSELC : 2
var volatile bit    ANSELC_ANSC3              at ANSELC : 3
var volatile bit    ANSELC_ANSC4              at ANSELC : 4
var volatile bit    ANSELC_ANSC5              at ANSELC : 5
var volatile bit    ANSELC_ANSC6              at ANSELC : 6
var volatile bit    ANSELC_ANSC7              at ANSELC : 7
-- ------------------------------------------------
var volatile byte   ANSELD                    at { 0x18F }
var volatile bit    ANSELD_ANSD0              at ANSELD : 0
var volatile bit    ANSELD_ANSD1              at ANSELD : 1
var volatile bit    ANSELD_ANSD2              at ANSELD : 2
var volatile bit    ANSELD_ANSD3              at ANSELD : 3
var volatile bit    ANSELD_ANSD4              at ANSELD : 4
var volatile bit    ANSELD_ANSD5              at ANSELD : 5
var volatile bit    ANSELD_ANSD6              at ANSELD : 6
var volatile bit    ANSELD_ANSD7              at ANSELD : 7
-- ------------------------------------------------
var volatile byte   ANSELE                    at { 0x190 }
var volatile bit    ANSELE_ANSE0              at ANSELE : 0
var volatile bit    ANSELE_ANSE1              at ANSELE : 1
var volatile bit    ANSELE_ANSE2              at ANSELE : 2
-- ------------------------------------------------
var volatile word   PMADR                     at { 0x191 }
-- ------------------------------------------------
var volatile byte   PMADRL                    at { 0x191 }
-- ------------------------------------------------
var volatile byte   PMADRH                    at { 0x192 }
var volatile bit*7  PMADRH_PMADRH             at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                     at { 0x193 }
-- ------------------------------------------------
var volatile byte   PMDATL                    at { 0x193 }
-- ------------------------------------------------
var volatile byte   PMDATH                    at { 0x194 }
var volatile bit*6  PMDATH_PMDATH             at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                    at { 0x195 }
var volatile bit    PMCON1_RD                 at PMCON1 : 0
var volatile bit    PMCON1_WR                 at PMCON1 : 1
var volatile bit    PMCON1_WREN               at PMCON1 : 2
var volatile bit    PMCON1_WRERR              at PMCON1 : 3
var volatile bit    PMCON1_FREE               at PMCON1 : 4
var volatile bit    PMCON1_LWLO               at PMCON1 : 5
var volatile bit    PMCON1_CFGS               at PMCON1 : 6
-- ------------------------------------------------
var volatile byte   PMCON2                    at { 0x196 }
-- ------------------------------------------------
var volatile byte   RCREG                     at { 0x199 }
-- ------------------------------------------------
var volatile byte   TXREG                     at { 0x19A }
-- ------------------------------------------------
var volatile word   SPBRG                     at { 0x19B }
-- ------------------------------------------------
var volatile byte   SPBRGL                    at { 0x19B }
-- ------------------------------------------------
var volatile byte   SPBRGH                    at { 0x19C }
-- ------------------------------------------------
var volatile byte   RCSTA                     at { 0x19D }
var volatile bit    RCSTA_RX9D                at RCSTA : 0
var volatile bit    RCSTA_OERR                at RCSTA : 1
var volatile bit    RCSTA_FERR                at RCSTA : 2
var volatile bit    RCSTA_ADDEN               at RCSTA : 3
var volatile bit    RCSTA_CREN                at RCSTA : 4
var volatile bit    RCSTA_SREN                at RCSTA : 5
var volatile bit    RCSTA_RX9                 at RCSTA : 6
var volatile bit    RCSTA_SPEN                at RCSTA : 7
-- ------------------------------------------------
var volatile byte   TXSTA                     at { 0x19E }
var volatile bit    TXSTA_TX9D                at TXSTA : 0
var volatile bit    TXSTA_TRMT                at TXSTA : 1
var volatile bit    TXSTA_BRGH                at TXSTA : 2
var volatile bit    TXSTA_SENDB               at TXSTA : 3
var volatile bit    TXSTA_SYNC                at TXSTA : 4
var volatile bit    TXSTA_TXEN                at TXSTA : 5
var volatile bit    TXSTA_TX9                 at TXSTA : 6
var volatile bit    TXSTA_CSRC                at TXSTA : 7
-- ------------------------------------------------
var volatile byte   BAUDCON                   at { 0x19F }
var volatile bit    BAUDCON_ABDEN             at BAUDCON : 0
var volatile bit    BAUDCON_WUE               at BAUDCON : 1
var volatile bit    BAUDCON_BRG16             at BAUDCON : 3
var volatile bit    BAUDCON_SCKP              at BAUDCON : 4
var volatile bit    BAUDCON_RCIDL             at BAUDCON : 6
var volatile bit    BAUDCON_ABDOVF            at BAUDCON : 7
-- ------------------------------------------------
var volatile byte   WPUB                      at { 0x20D }
var volatile bit    WPUB_WPUB0                at WPUB : 0
var volatile bit    WPUB_WPUB1                at WPUB : 1
var volatile bit    WPUB_WPUB2                at WPUB : 2
var volatile bit    WPUB_WPUB3                at WPUB : 3
var volatile bit    WPUB_WPUB4                at WPUB : 4
var volatile bit    WPUB_WPUB5                at WPUB : 5
var volatile bit    WPUB_WPUB6                at WPUB : 6
var volatile bit    WPUB_WPUB7                at WPUB : 7
-- ------------------------------------------------
var volatile byte   WPUE                      at { 0x210 }
var volatile bit    WPUE_WPUE3                at WPUE : 3
-- ------------------------------------------------
var volatile byte   SSP1BUF                   at { 0x211 }
--
alias               SSPBUF                    is SSP1BUF
-- ------------------------------------------------
var volatile byte   SSP1ADD                   at { 0x212 }
--
alias               SSPADD                    is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1MSK                   at { 0x213 }
--
alias               SSPMSK                    is SSP1MSK
-- ------------------------------------------------
var volatile byte   SSP1STAT                  at { 0x214 }
var volatile bit    SSP1STAT_BF               at SSP1STAT : 0
var volatile bit    SSP1STAT_UA               at SSP1STAT : 1
var volatile bit    SSP1STAT_R_NW             at SSP1STAT : 2
var volatile bit    SSP1STAT_S                at SSP1STAT : 3
var volatile bit    SSP1STAT_P                at SSP1STAT : 4
var volatile bit    SSP1STAT_D_NA             at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE              at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP              at SSP1STAT : 7
--
alias               SSPSTAT                   is SSP1STAT
alias               SSPSTAT_BF                is SSP1STAT_BF
alias               SSPSTAT_UA                is SSP1STAT_UA
alias               SSPSTAT_R_NW              is SSP1STAT_R_NW
alias               SSPSTAT_S                 is SSP1STAT_S
alias               SSPSTAT_P                 is SSP1STAT_P
alias               SSPSTAT_D_NA              is SSP1STAT_D_NA
alias               SSPSTAT_CKE               is SSP1STAT_CKE
alias               SSPSTAT_SMP               is SSP1STAT_SMP
-- ------------------------------------------------
var volatile byte   SSP1CON1                  at { 0x215 }
var volatile bit*4  SSP1CON1_SSPM             at SSP1CON1 : 0
var volatile bit    SSP1CON1_CKP              at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN            at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV            at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL             at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPM0            at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM1            at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM2            at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM3            at SSP1CON1 : 3
--
alias               SSPCON1                   is SSP1CON1
alias               SSPCON1_SSPM              is SSP1CON1_SSPM
alias               SSPCON1_CKP               is SSP1CON1_CKP
alias               SSPCON1_SSPEN             is SSP1CON1_SSPEN
alias               SSPCON1_SSPOV             is SSP1CON1_SSPOV
alias               SSPCON1_WCOL              is SSP1CON1_WCOL
alias               SSPCON1_SSPM0             is SSP1CON1_SSPM0
alias               SSPCON1_SSPM1             is SSP1CON1_SSPM1
alias               SSPCON1_SSPM2             is SSP1CON1_SSPM2
alias               SSPCON1_SSPM3             is SSP1CON1_SSPM3
-- ------------------------------------------------
var volatile byte   SSP1CON2                  at { 0x216 }
var volatile bit    SSP1CON2_SEN              at SSP1CON2 : 0
var volatile bit    SSP1CON2_RSEN             at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN              at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN             at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN            at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT            at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT          at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN             at SSP1CON2 : 7
--
alias               SSPCON2                   is SSP1CON2
alias               SSPCON2_SEN               is SSP1CON2_SEN
alias               SSPCON2_RSEN              is SSP1CON2_RSEN
alias               SSPCON2_PEN               is SSP1CON2_PEN
alias               SSPCON2_RCEN              is SSP1CON2_RCEN
alias               SSPCON2_ACKEN             is SSP1CON2_ACKEN
alias               SSPCON2_ACKDT             is SSP1CON2_ACKDT
alias               SSPCON2_ACKSTAT           is SSP1CON2_ACKSTAT
alias               SSPCON2_GCEN              is SSP1CON2_GCEN
-- ------------------------------------------------
var volatile byte   SSP1CON3                  at { 0x217 }
var volatile bit    SSP1CON3_DHEN             at SSP1CON3 : 0
var volatile bit    SSP1CON3_AHEN             at SSP1CON3 : 1
var volatile bit    SSP1CON3_SBCDE            at SSP1CON3 : 2
var volatile bit    SSP1CON3_SDAHT            at SSP1CON3 : 3
var volatile bit    SSP1CON3_BOEN             at SSP1CON3 : 4
var volatile bit    SSP1CON3_SCIE             at SSP1CON3 : 5
var volatile bit    SSP1CON3_PCIE             at SSP1CON3 : 6
var volatile bit    SSP1CON3_ACKTIM           at SSP1CON3 : 7
--
alias               SSPCON3                   is SSP1CON3
alias               SSPCON3_DHEN              is SSP1CON3_DHEN
alias               SSPCON3_AHEN              is SSP1CON3_AHEN
alias               SSPCON3_SBCDE             is SSP1CON3_SBCDE
alias               SSPCON3_SDAHT             is SSP1CON3_SDAHT
alias               SSPCON3_BOEN              is SSP1CON3_BOEN
alias               SSPCON3_SCIE              is SSP1CON3_SCIE
alias               SSPCON3_PCIE              is SSP1CON3_PCIE
alias               SSPCON3_ACKTIM            is SSP1CON3_ACKTIM
-- ------------------------------------------------
var volatile byte   SSPLVL                    at { 0x218 }
var volatile bit    SSPLVL_S1ILS              at SSPLVL : 0
var volatile bit    SSPLVL_S2ILS              at SSPLVL : 4
-- ------------------------------------------------
var volatile byte   SSP2BUF                   at { 0x219 }
-- ------------------------------------------------
var volatile byte   SSP2ADD                   at { 0x21A }
-- ------------------------------------------------
var volatile byte   SSP2MSK                   at { 0x21B }
-- ------------------------------------------------
var volatile byte   SSP2STAT                  at { 0x21C }
var volatile bit    SSP2STAT_BF               at SSP2STAT : 0
var volatile bit    SSP2STAT_UA               at SSP2STAT : 1
var volatile bit    SSP2STAT_R_NW             at SSP2STAT : 2
var volatile bit    SSP2STAT_S                at SSP2STAT : 3
var volatile bit    SSP2STAT_P                at SSP2STAT : 4
var volatile bit    SSP2STAT_D_NA             at SSP2STAT : 5
var volatile bit    SSP2STAT_CKE              at SSP2STAT : 6
var volatile bit    SSP2STAT_SMP              at SSP2STAT : 7
-- ------------------------------------------------
var volatile byte   SSP2CON1                  at { 0x21D }
var volatile bit*4  SSP2CON1_SSPM             at SSP2CON1 : 0
var volatile bit    SSP2CON1_CKP              at SSP2CON1 : 4
var volatile bit    SSP2CON1_SSPEN            at SSP2CON1 : 5
var volatile bit    SSP2CON1_SSPOV            at SSP2CON1 : 6
var volatile bit    SSP2CON1_WCOL             at SSP2CON1 : 7
var volatile bit    SSP2CON1_SSPM0            at SSP2CON1 : 0
var volatile bit    SSP2CON1_SSPM1            at SSP2CON1 : 1
var volatile bit    SSP2CON1_SSPM2            at SSP2CON1 : 2
var volatile bit    SSP2CON1_SSPM3            at SSP2CON1 : 3
-- ------------------------------------------------
var volatile byte   SSP2CON2                  at { 0x21E }
var volatile bit    SSP2CON2_SEN              at SSP2CON2 : 0
var volatile bit    SSP2CON2_RSEN             at SSP2CON2 : 1
var volatile bit    SSP2CON2_PEN              at SSP2CON2 : 2
var volatile bit    SSP2CON2_RCEN             at SSP2CON2 : 3
var volatile bit    SSP2CON2_ACKEN            at SSP2CON2 : 4
var volatile bit    SSP2CON2_ACKDT            at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKSTAT          at SSP2CON2 : 6
var volatile bit    SSP2CON2_GCEN             at SSP2CON2 : 7
-- ------------------------------------------------
var volatile byte   SSP2CON3                  at { 0x21F }
var volatile bit    SSP2CON3_DHEN             at SSP2CON3 : 0
var volatile bit    SSP2CON3_AHEN             at SSP2CON3 : 1
var volatile bit    SSP2CON3_SBCDE            at SSP2CON3 : 2
var volatile bit    SSP2CON3_SDAHT            at SSP2CON3 : 3
var volatile bit    SSP2CON3_BOEN             at SSP2CON3 : 4
var volatile bit    SSP2CON3_SCIE             at SSP2CON3 : 5
var volatile bit    SSP2CON3_PCIE             at SSP2CON3 : 6
var volatile bit    SSP2CON3_ACKTIM           at SSP2CON3 : 7
-- ------------------------------------------------
var volatile byte   IOCBP                     at { 0x394 }
var volatile bit    IOCBP_IOCBP0              at IOCBP : 0
var volatile bit    IOCBP_IOCBP1              at IOCBP : 1
var volatile bit    IOCBP_IOCBP2              at IOCBP : 2
var volatile bit    IOCBP_IOCBP3              at IOCBP : 3
var volatile bit    IOCBP_IOCBP4              at IOCBP : 4
var volatile bit    IOCBP_IOCBP5              at IOCBP : 5
var volatile bit    IOCBP_IOCBP6              at IOCBP : 6
var volatile bit    IOCBP_IOCBP7              at IOCBP : 7
-- ------------------------------------------------
var volatile byte   IOCBN                     at { 0x395 }
var volatile bit    IOCBN_IOCBN0              at IOCBN : 0
var volatile bit    IOCBN_IOCBN1              at IOCBN : 1
var volatile bit    IOCBN_IOCBN2              at IOCBN : 2
var volatile bit    IOCBN_IOCBN3              at IOCBN : 3
var volatile bit    IOCBN_IOCBN4              at IOCBN : 4
var volatile bit    IOCBN_IOCBN5              at IOCBN : 5
var volatile bit    IOCBN_IOCBN6              at IOCBN : 6
var volatile bit    IOCBN_IOCBN7              at IOCBN : 7
-- ------------------------------------------------
var volatile byte   IOCBF                     at { 0x396 }
var volatile bit    IOCBF_IOCBF0              at IOCBF : 0
var volatile bit    IOCBF_IOCBF1              at IOCBF : 1
var volatile bit    IOCBF_IOCBF2              at IOCBF : 2
var volatile bit    IOCBF_IOCBF3              at IOCBF : 3
var volatile bit    IOCBF_IOCBF4              at IOCBF : 4
var volatile bit    IOCBF_IOCBF5              at IOCBF : 5
var volatile bit    IOCBF_IOCBF6              at IOCBF : 6
var volatile bit    IOCBF_IOCBF7              at IOCBF : 7
-- ------------------------------------------------
var volatile byte   TMR4                      at { 0x415 }
-- ------------------------------------------------
var volatile byte   PR4                       at { 0x416 }
-- ------------------------------------------------
var volatile byte   T4CON                     at { 0x417 }
var volatile bit*2  T4CON_T4CKPS              at T4CON : 0
var volatile bit    T4CON_TMR4ON              at T4CON : 2
var volatile bit*4  T4CON_T4OUTPS             at T4CON : 3
var volatile bit    T4CON_T4CKPS0             at T4CON : 0
var volatile bit    T4CON_T4CKPS1             at T4CON : 1
var volatile bit    T4CON_T4OUTPS0            at T4CON : 3
var volatile bit    T4CON_T4OUTPS1            at T4CON : 4
var volatile bit    T4CON_T4OUTPS2            at T4CON : 5
var volatile bit    T4CON_T4OUTPS3            at T4CON : 6
-- ------------------------------------------------
var volatile byte   PWM1DCL                   at { 0x611 }
var volatile bit*2  PWM1DCL_PWM1DCL           at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL0          at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL1          at PWM1DCL : 7
-- ------------------------------------------------
var volatile byte   PWM1DCH                   at { 0x612 }
var volatile bit    PWM1DCH_PWM1DCH0          at PWM1DCH : 0
var volatile bit    PWM1DCH_PWM1DCH1          at PWM1DCH : 1
var volatile bit    PWM1DCH_PWM1DCH2          at PWM1DCH : 2
var volatile bit    PWM1DCH_PWM1DCH3          at PWM1DCH : 3
var volatile bit    PWM1DCH_PWM1DCH4          at PWM1DCH : 4
var volatile bit    PWM1DCH_PWM1DCH5          at PWM1DCH : 5
var volatile bit    PWM1DCH_PWM1DCH6          at PWM1DCH : 6
var volatile bit    PWM1DCH_PWM1DCH7          at PWM1DCH : 7
-- ------------------------------------------------
var volatile byte   PWM1CON                   at { 0x613 }
var volatile bit    PWM1CON_PWM1POL           at PWM1CON : 4
var volatile bit    PWM1CON_PWM1OUT           at PWM1CON : 5
var volatile bit    PWM1CON_PWM1OE            at PWM1CON : 6
var volatile bit    PWM1CON_PWM1EN            at PWM1CON : 7
-- ------------------------------------------------
var volatile byte   PWM2DCL                   at { 0x614 }
var volatile bit*2  PWM2DCL_PWM2DCL           at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL0          at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL1          at PWM2DCL : 7
-- ------------------------------------------------
var volatile byte   PWM2DCH                   at { 0x615 }
var volatile bit    PWM2DCH_PWM2DCH0          at PWM2DCH : 0
var volatile bit    PWM2DCH_PWM2DCH1          at PWM2DCH : 1
var volatile bit    PWM2DCH_PWM2DCH2          at PWM2DCH : 2
var volatile bit    PWM2DCH_PWM2DCH3          at PWM2DCH : 3
var volatile bit    PWM2DCH_PWM2DCH4          at PWM2DCH : 4
var volatile bit    PWM2DCH_PWM2DCH5          at PWM2DCH : 5
var volatile bit    PWM2DCH_PWM2DCH6          at PWM2DCH : 6
var volatile bit    PWM2DCH_PWM2DCH7          at PWM2DCH : 7
-- ------------------------------------------------
var volatile byte   PWM2CON                   at { 0x616 }
var volatile bit    PWM2CON_PWM2POL           at PWM2CON : 4
var volatile bit    PWM2CON_PWM2OUT           at PWM2CON : 5
var volatile bit    PWM2CON_PWM2OE            at PWM2CON : 6
var volatile bit    PWM2CON_PWM2EN            at PWM2CON : 7
-- ------------------------------------------------
var volatile byte   PWMTMRS                   at { 0x61D }
var volatile bit    PWMTMRS_P1TSEL            at PWMTMRS : 0
var volatile bit    PWMTMRS_P2TSEL            at PWMTMRS : 2
-- ------------------------------------------------
var volatile byte   PWM1AOE                   at { 0x61E }
var volatile bit*4  PWM1AOE_PWM1OE            at PWM1AOE : 0
var volatile bit    PWM1AOE_PWM1OE0           at PWM1AOE : 0
var volatile bit    PWM1AOE_PWM1OE1           at PWM1AOE : 1
var volatile bit    PWM1AOE_PWM1OE2           at PWM1AOE : 2
var volatile bit    PWM1AOE_PWM1OE3           at PWM1AOE : 3
-- ------------------------------------------------
var volatile byte   PWM2AOE                   at { 0x61F }
var volatile bit*4  PWM2AOE_PWM2OE            at PWM2AOE : 0
var volatile bit    PWM2AOE_PWM2OE0           at PWM2AOE : 0
var volatile bit    PWM2AOE_PWM2OE1           at PWM2AOE : 1
var volatile bit    PWM2AOE_PWM2OE2           at PWM2AOE : 2
var volatile bit    PWM2AOE_PWM2OE3           at PWM2AOE : 3
-- ------------------------------------------------
var volatile byte   ADCTX                     at { 0x691 }
var volatile bit    ADCTX_A1TX0               at ADCTX : 0
var volatile bit    ADCTX_A1TX1               at ADCTX : 1
var volatile bit    ADCTX_A1TX2               at ADCTX : 2
var volatile bit    ADCTX_A2TX0               at ADCTX : 4
var volatile bit    ADCTX_A2TX1               at ADCTX : 5
var volatile bit    ADCTX_A2TX2               at ADCTX : 6
-- ------------------------------------------------
var volatile word   AD1TX                     at { 0x692 }
-- ------------------------------------------------
var volatile byte   AD1TX0                    at { 0x692 }
var volatile bit    AD1TX0_TX10               at AD1TX0 : 0
var volatile bit    AD1TX0_TX11               at AD1TX0 : 1
var volatile bit    AD1TX0_TX12               at AD1TX0 : 2
var volatile bit    AD1TX0_TX13               at AD1TX0 : 3
var volatile bit    AD1TX0_TX14               at AD1TX0 : 4
var volatile bit    AD1TX0_TX15               at AD1TX0 : 5
var volatile bit    AD1TX0_TX16               at AD1TX0 : 6
var volatile bit    AD1TX0_TX17               at AD1TX0 : 7
-- ------------------------------------------------
var volatile byte   AD1TX1                    at { 0x693 }
var volatile bit    AD1TX1_TX18               at AD1TX1 : 0
var volatile bit    AD1TX1_TX19               at AD1TX1 : 1
var volatile bit    AD1TX1_TX30               at AD1TX1 : 2
var volatile bit    AD1TX1_TX31               at AD1TX1 : 3
var volatile bit    AD1TX1_TX32               at AD1TX1 : 4
var volatile bit    AD1TX1_TX33               at AD1TX1 : 5
var volatile bit    AD1TX1_TX34               at AD1TX1 : 6
var volatile bit    AD1TX1_TX35               at AD1TX1 : 7
-- ------------------------------------------------
var volatile word   AD2TX                     at { 0x694 }
-- ------------------------------------------------
var volatile byte   AD2TX0                    at { 0x694 }
var volatile bit    AD2TX0_TX20               at AD2TX0 : 0
var volatile bit    AD2TX0_TX21               at AD2TX0 : 1
var volatile bit    AD2TX0_TX22               at AD2TX0 : 2
var volatile bit    AD2TX0_TX23               at AD2TX0 : 3
var volatile bit    AD2TX0_TX24               at AD2TX0 : 4
var volatile bit    AD2TX0_TX25               at AD2TX0 : 5
var volatile bit    AD2TX0_TX26               at AD2TX0 : 6
var volatile bit    AD2TX0_TX27               at AD2TX0 : 7
-- ------------------------------------------------
var volatile byte   AD2TX1                    at { 0x695 }
var volatile bit    AD2TX1_TX28               at AD2TX1 : 0
var volatile bit    AD2TX1_TX29               at AD2TX1 : 1
var volatile bit    AD2TX1_TX40               at AD2TX1 : 2
var volatile bit    AD2TX1_TX41               at AD2TX1 : 3
var volatile bit    AD2TX1_TX42               at AD2TX1 : 4
var volatile bit    AD2TX1_TX43               at AD2TX1 : 5
var volatile bit    AD2TX1_TX44               at AD2TX1 : 6
var volatile bit    AD2TX1_TX45               at AD2TX1 : 7
-- ------------------------------------------------
var volatile byte   AD1CON0                   at { 0x711 }
var volatile bit    AD1CON0_ADON              at AD1CON0 : 0
var volatile bit    AD1CON0_GO                at AD1CON0 : 1
var volatile bit*6  AD1CON0_CHS               at AD1CON0 : 2
var volatile bit    AD1CON0_AD1ON             at AD1CON0 : 0
var volatile bit    AD1CON0_GO_NDONE          at AD1CON0 : 1
var volatile bit    AD1CON0_CHS0              at AD1CON0 : 2
var volatile bit    AD1CON0_CHS1              at AD1CON0 : 3
var volatile bit    AD1CON0_CHS2              at AD1CON0 : 4
var volatile bit    AD1CON0_CHS3              at AD1CON0 : 5
var volatile bit    AD1CON0_CHS4              at AD1CON0 : 6
var volatile bit    AD1CON0_CHS5              at AD1CON0 : 7
var volatile bit    AD1CON0_GO_NDONE1         at AD1CON0 : 1
-- ------------------------------------------------
var volatile byte   ADCOMCON                  at { 0x712 }
var volatile bit*2  ADCOMCON_ADPREF           at ADCOMCON : 0
var volatile bit    ADCOMCON_GO_NDONE_ALL     at ADCOMCON : 2
var volatile bit    ADCOMCON_ADNREF           at ADCOMCON : 3
var volatile bit*3  ADCOMCON_ADCS             at ADCOMCON : 4
var volatile bit    ADCOMCON_ADFM             at ADCOMCON : 7
var volatile bit    ADCOMCON_ADPREF0          at ADCOMCON : 0
var volatile bit    ADCOMCON_ADPREF1          at ADCOMCON : 1
var volatile bit    ADCOMCON_GO_ALL           at ADCOMCON : 2
var volatile bit    ADCOMCON_ADCS0            at ADCOMCON : 4
var volatile bit    ADCOMCON_ADCS1            at ADCOMCON : 5
var volatile bit    ADCOMCON_ADCS2            at ADCOMCON : 6
-- ------------------------------------------------
var volatile byte   AD1CON2                   at { 0x713 }
var volatile bit*3  AD1CON2_TRIGSEL           at AD1CON2 : 4
var volatile bit    AD1CON2_TRIGSEL0          at AD1CON2 : 4
var volatile bit    AD1CON2_TRIGSEL1          at AD1CON2 : 5
var volatile bit    AD1CON2_TRIGSEL2          at AD1CON2 : 6
-- ------------------------------------------------
var volatile byte   AD1CON3                   at { 0x714 }
var volatile bit    AD1CON3_AD1DSEN           at AD1CON3 : 0
var volatile bit    AD1CON3_AD1IPEN           at AD1CON3 : 1
var volatile bit    AD1CON3_AD1IPPOL          at AD1CON3 : 6
var volatile bit    AD1CON3_AD1EPPOL          at AD1CON3 : 7
var volatile bit    AD1CON3_ADDSEN            at AD1CON3 : 0
var volatile bit    AD1CON3_ADIPEN            at AD1CON3 : 1
var volatile bit    AD1CON3_ADIPPOL           at AD1CON3 : 6
var volatile bit    AD1CON3_ADEPPOL           at AD1CON3 : 7
-- ------------------------------------------------
var volatile byte   ADSTAT                    at { 0x715 }
var volatile bit*2  ADSTAT_AD1STG             at ADSTAT : 0
var volatile bit    ADSTAT_AD1CONV            at ADSTAT : 2
var volatile bit*2  ADSTAT_AD2STG             at ADSTAT : 4
var volatile bit    ADSTAT_AD2CONV            at ADSTAT : 6
var volatile bit*2  ADSTAT_ADSTG              at ADSTAT : 0
var volatile bit    ADSTAT_ADCONV             at ADSTAT : 2
var volatile bit    ADSTAT_AD1STG0            at ADSTAT : 0
var volatile bit    ADSTAT_AD1STG1            at ADSTAT : 1
var volatile bit    ADSTAT_AD2STG0            at ADSTAT : 4
var volatile bit    ADSTAT_AD2STG1            at ADSTAT : 5
-- ------------------------------------------------
var volatile byte   AD1PRECON                 at { 0x716 }
var volatile bit*7  AD1PRECON_ADPRE           at AD1PRECON : 0
var volatile bit    AD1PRECON_ADPRE0          at AD1PRECON : 0
var volatile bit    AD1PRECON_ADPRE1          at AD1PRECON : 1
var volatile bit    AD1PRECON_ADPRE2          at AD1PRECON : 2
var volatile bit    AD1PRECON_ADPRE3          at AD1PRECON : 3
var volatile bit    AD1PRECON_ADPRE4          at AD1PRECON : 4
var volatile bit    AD1PRECON_ADPRE5          at AD1PRECON : 5
var volatile bit    AD1PRECON_ADPRE6          at AD1PRECON : 6
-- ------------------------------------------------
var volatile byte   AD1ACQCON                 at { 0x717 }
var volatile bit*7  AD1ACQCON_ADACQ           at AD1ACQCON : 0
var volatile bit    AD1ACQCON_ADACQ0          at AD1ACQCON : 0
var volatile bit    AD1ACQCON_ADACQ1          at AD1ACQCON : 1
var volatile bit    AD1ACQCON_ADACQ2          at AD1ACQCON : 2
var volatile bit    AD1ACQCON_ADACQ3          at AD1ACQCON : 3
var volatile bit    AD1ACQCON_ADACQ4          at AD1ACQCON : 4
var volatile bit    AD1ACQCON_ADACQ5          at AD1ACQCON : 5
var volatile bit    AD1ACQCON_ADACQ6          at AD1ACQCON : 6
-- ------------------------------------------------
var volatile byte   AD1GRD                    at { 0x718 }
var volatile bit    AD1GRD_TX1POL             at AD1GRD : 0
var volatile bit    AD1GRD_GRD1POL            at AD1GRD : 5
var volatile bit    AD1GRD_GRD1AOE            at AD1GRD : 6
var volatile bit    AD1GRD_GRD1BOE            at AD1GRD : 7
var volatile bit    AD1GRD_TXPOL              at AD1GRD : 0
var volatile bit    AD1GRD_GRDPOL             at AD1GRD : 5
var volatile bit    AD1GRD_GRDAOE             at AD1GRD : 6
var volatile bit    AD1GRD_GRDBOE             at AD1GRD : 7
-- ------------------------------------------------
var volatile byte   AD1CAPCON                 at { 0x719 }
var volatile bit*4  AD1CAPCON_ADDCAP          at AD1CAPCON : 0
var volatile bit*4  AD1CAPCON_ADCAP           at AD1CAPCON : 0
var volatile bit    AD1CAPCON_ADDCAP0         at AD1CAPCON : 0
var volatile bit    AD1CAPCON_ADDCAP1         at AD1CAPCON : 1
var volatile bit    AD1CAPCON_ADDCAP2         at AD1CAPCON : 2
var volatile bit    AD1CAPCON_ADDCAP3         at AD1CAPCON : 3
var volatile bit*4  AD1CAPCON_ADD1CAP         at AD1CAPCON : 0
-- ------------------------------------------------
var volatile word   AAD1RES0                  at { 0x71A }
-- ------------------------------------------------
var volatile byte   AAD1RES0L                 at { 0x71A }
-- ------------------------------------------------
var volatile byte   AAD1RES0H                 at { 0x71B }
-- ------------------------------------------------
var volatile word   AAD1RES1                  at { 0x71C }
-- ------------------------------------------------
var volatile byte   AAD1RES1L                 at { 0x71C }
-- ------------------------------------------------
var volatile byte   AAD1RES1H                 at { 0x71D }
-- ------------------------------------------------
var volatile word   AD1CH                     at { 0x71E }
-- ------------------------------------------------
var volatile byte   AD1CH0                    at { 0x71E }
var volatile bit    AD1CH0_CH10               at AD1CH0 : 0
var volatile bit    AD1CH0_CH11               at AD1CH0 : 1
var volatile bit    AD1CH0_CH12               at AD1CH0 : 2
var volatile bit    AD1CH0_CH13               at AD1CH0 : 3
var volatile bit    AD1CH0_CH14               at AD1CH0 : 4
var volatile bit    AD1CH0_CH15               at AD1CH0 : 5
var volatile bit    AD1CH0_CH16               at AD1CH0 : 6
var volatile bit    AD1CH0_CHS17              at AD1CH0 : 7
var volatile bit    AD1CH0_CH17               at AD1CH0 : 7
-- ------------------------------------------------
var volatile byte   AD1CH1                    at { 0x71F }
var volatile bit    AD1CH1_CH18               at AD1CH1 : 0
var volatile bit    AD1CH1_CH19               at AD1CH1 : 1
var volatile bit    AD1CH1_CH30               at AD1CH1 : 2
var volatile bit    AD1CH1_CH31               at AD1CH1 : 3
var volatile bit    AD1CH1_CH32               at AD1CH1 : 4
var volatile bit    AD1CH1_CH33               at AD1CH1 : 5
var volatile bit    AD1CH1_CH34               at AD1CH1 : 6
var volatile bit    AD1CH1_CH35               at AD1CH1 : 7
-- ------------------------------------------------
var volatile byte   AD2CON0                   at { 0x791 }
var volatile bit    AD2CON0_ADON              at AD2CON0 : 0
var volatile bit    AD2CON0_GO                at AD2CON0 : 1
var volatile bit*6  AD2CON0_CHS               at AD2CON0 : 2
var volatile bit    AD2CON0_AD2ON             at AD2CON0 : 0
var volatile bit    AD2CON0_GO_NDONE          at AD2CON0 : 1
var volatile bit    AD2CON0_CHS0              at AD2CON0 : 2
var volatile bit    AD2CON0_CHS1              at AD2CON0 : 3
var volatile bit    AD2CON0_CHS2              at AD2CON0 : 4
var volatile bit    AD2CON0_CHS3              at AD2CON0 : 5
var volatile bit    AD2CON0_CHS4              at AD2CON0 : 6
var volatile bit    AD2CON0_CHS5              at AD2CON0 : 7
var volatile bit    AD2CON0_GO_NDONE2         at AD2CON0 : 1
-- ------------------------------------------------
var volatile byte   AD2CON2                   at { 0x793 }
var volatile bit*3  AD2CON2_TRIGSEL           at AD2CON2 : 4
var volatile bit    AD2CON2_TRIGSEL0          at AD2CON2 : 4
var volatile bit    AD2CON2_TRIGSEL1          at AD2CON2 : 5
var volatile bit    AD2CON2_TRIGSEL2          at AD2CON2 : 6
-- ------------------------------------------------
var volatile byte   AD2CON3                   at { 0x794 }
var volatile bit    AD2CON3_AD2DSEN           at AD2CON3 : 0
var volatile bit    AD2CON3_AD2IPEN           at AD2CON3 : 1
var volatile bit    AD2CON3_AD2IPPOL          at AD2CON3 : 6
var volatile bit    AD2CON3_AD2EPPOL          at AD2CON3 : 7
var volatile bit    AD2CON3_ADDSEN            at AD2CON3 : 0
var volatile bit    AD2CON3_ADIPEN            at AD2CON3 : 1
var volatile bit    AD2CON3_ADIPPOL           at AD2CON3 : 6
var volatile bit    AD2CON3_ADEPPOL           at AD2CON3 : 7
-- ------------------------------------------------
var volatile byte   AD2PRECON                 at { 0x796 }
var volatile bit*7  AD2PRECON_ADPRE           at AD2PRECON : 0
var volatile bit    AD2PRECON_ADPRE0          at AD2PRECON : 0
var volatile bit    AD2PRECON_ADPRE1          at AD2PRECON : 1
var volatile bit    AD2PRECON_ADPRE2          at AD2PRECON : 2
var volatile bit    AD2PRECON_ADPRE3          at AD2PRECON : 3
var volatile bit    AD2PRECON_ADPRE4          at AD2PRECON : 4
var volatile bit    AD2PRECON_ADPRE5          at AD2PRECON : 5
var volatile bit    AD2PRECON_ADPRE6          at AD2PRECON : 6
-- ------------------------------------------------
var volatile byte   AD2ACQCON                 at { 0x797 }
var volatile bit*7  AD2ACQCON_ADACQ           at AD2ACQCON : 0
var volatile bit    AD2ACQCON_ADACQ0          at AD2ACQCON : 0
var volatile bit    AD2ACQCON_ADACQ1          at AD2ACQCON : 1
var volatile bit    AD2ACQCON_ADACQ2          at AD2ACQCON : 2
var volatile bit    AD2ACQCON_ADACQ3          at AD2ACQCON : 3
var volatile bit    AD2ACQCON_ADACQ4          at AD2ACQCON : 4
var volatile bit    AD2ACQCON_ADACQ5          at AD2ACQCON : 5
var volatile bit    AD2ACQCON_ADACQ6          at AD2ACQCON : 6
-- ------------------------------------------------
var volatile byte   AD2GRD                    at { 0x798 }
var volatile bit    AD2GRD_TX2POL             at AD2GRD : 0
var volatile bit    AD2GRD_GRD2POL            at AD2GRD : 5
var volatile bit    AD2GRD_GRD2AOE            at AD2GRD : 6
var volatile bit    AD2GRD_GRD2BOE            at AD2GRD : 7
var volatile bit    AD2GRD_TXPOL              at AD2GRD : 0
var volatile bit    AD2GRD_GRDPOL             at AD2GRD : 5
var volatile bit    AD2GRD_GRDAOE             at AD2GRD : 6
var volatile bit    AD2GRD_GRDBOE             at AD2GRD : 7
-- ------------------------------------------------
var volatile byte   AD2CAPCON                 at { 0x799 }
var volatile bit*4  AD2CAPCON_ADDCAP          at AD2CAPCON : 0
var volatile bit*4  AD2CAPCON_ADCAP           at AD2CAPCON : 0
var volatile bit    AD2CAPCON_ADDCAP0         at AD2CAPCON : 0
var volatile bit    AD2CAPCON_ADDCAP1         at AD2CAPCON : 1
var volatile bit    AD2CAPCON_ADDCAP2         at AD2CAPCON : 2
var volatile bit    AD2CAPCON_ADDCAP3         at AD2CAPCON : 3
var volatile bit*4  AD2CAPCON_ADD2CAP         at AD2CAPCON : 0
-- ------------------------------------------------
var volatile word   AAD2RES0                  at { 0x79A }
-- ------------------------------------------------
var volatile byte   AAD2RES0L                 at { 0x79A }
-- ------------------------------------------------
var volatile byte   AAD2RES0H                 at { 0x79B }
-- ------------------------------------------------
var volatile word   AAD2RES1                  at { 0x79C }
-- ------------------------------------------------
var volatile byte   AAD2RES1L                 at { 0x79C }
-- ------------------------------------------------
var volatile byte   AAD2RES1H                 at { 0x79D }
-- ------------------------------------------------
var volatile word   AD2CH                     at { 0x79E }
-- ------------------------------------------------
var volatile byte   AD2CH0                    at { 0x79E }
var volatile bit    AD2CH0_CH20               at AD2CH0 : 0
var volatile bit    AD2CH0_CH21               at AD2CH0 : 1
var volatile bit    AD2CH0_CH22               at AD2CH0 : 2
var volatile bit    AD2CH0_CH23               at AD2CH0 : 3
var volatile bit    AD2CH0_CH24               at AD2CH0 : 4
var volatile bit    AD2CH0_CH25               at AD2CH0 : 5
var volatile bit    AD2CH0_CH26               at AD2CH0 : 6
var volatile bit    AD2CH0_CH27               at AD2CH0 : 7
-- ------------------------------------------------
var volatile byte   AD2CH1                    at { 0x79F }
var volatile bit    AD2CH1_CH28               at AD2CH1 : 0
var volatile bit    AD2CH1_CH29               at AD2CH1 : 1
var volatile bit    AD2CH1_CH40               at AD2CH1 : 2
var volatile bit    AD2CH1_CH41               at AD2CH1 : 3
var volatile bit    AD2CH1_CH42               at AD2CH1 : 4
var volatile bit    AD2CH1_CH43               at AD2CH1 : 5
var volatile bit    AD2CH1_CH44               at AD2CH1 : 6
var volatile bit    AD2CH1_CH45               at AD2CH1 : 7
-- ------------------------------------------------
var volatile byte   ICDIO                     at { 0xF8C }
var volatile bit    ICDIO_TRIS_ICDCLK         at ICDIO : 2
var volatile bit    ICDIO_TRIS_ICDDAT         at ICDIO : 3
var volatile bit    ICDIO_LAT_ICDCLK          at ICDIO : 4
var volatile bit    ICDIO_LAT_ICDDAT          at ICDIO : 5
var volatile bit    ICDIO_PORT_ICDCLK         at ICDIO : 6
var volatile bit    ICDIO_PORT_ICDDAT         at ICDIO : 7
-- ------------------------------------------------
var volatile byte   ICDCON0                   at { 0xF8D }
var volatile bit    ICDCON0_RSTVEC            at ICDCON0 : 0
var volatile bit    ICDCON0_DBGINEX           at ICDCON0 : 3
var volatile bit    ICDCON0_SSTEP             at ICDCON0 : 5
var volatile bit    ICDCON0_FREEZ             at ICDCON0 : 6
var volatile bit    ICDCON0_INBUG             at ICDCON0 : 7
-- ------------------------------------------------
var volatile byte   ICDSTAT                   at { 0xF91 }
var volatile bit    ICDSTAT_USRHLTF           at ICDSTAT : 1
var volatile bit    ICDSTAT_TRP0HLTF          at ICDSTAT : 6
var volatile bit    ICDSTAT_TRP1HLTF          at ICDSTAT : 7
-- ------------------------------------------------
var volatile byte   ICDINSTL                  at { 0xF96 }
var volatile bit    ICDINSTL_DBGIN0           at ICDINSTL : 0
var volatile bit    ICDINSTL_DBGIN1           at ICDINSTL : 1
var volatile bit    ICDINSTL_DBGIN2           at ICDINSTL : 2
var volatile bit    ICDINSTL_DBGIN3           at ICDINSTL : 3
var volatile bit    ICDINSTL_DBGIN4           at ICDINSTL : 4
var volatile bit    ICDINSTL_DBGIN5           at ICDINSTL : 5
var volatile bit    ICDINSTL_DBGIN6           at ICDINSTL : 6
var volatile bit    ICDINSTL_DBGIN7           at ICDINSTL : 7
-- ------------------------------------------------
var volatile byte   ICDINSTH                  at { 0xF97 }
var volatile bit    ICDINSTH_DBGIN8           at ICDINSTH : 0
var volatile bit    ICDINSTH_DBGIN9           at ICDINSTH : 1
var volatile bit    ICDINSTH_DBGIN10          at ICDINSTH : 2
var volatile bit    ICDINSTH_DBGIN11          at ICDINSTH : 3
var volatile bit    ICDINSTH_DBGIN12          at ICDINSTH : 4
var volatile bit    ICDINSTH_DBGIN13          at ICDINSTH : 5
-- ------------------------------------------------
var volatile byte   ICDBK0CON                 at { 0xF9C }
var volatile bit    ICDBK0CON_BKHLT           at ICDBK0CON : 0
var volatile bit    ICDBK0CON_BKEN            at ICDBK0CON : 7
-- ------------------------------------------------
var volatile byte   ICDBK0L                   at { 0xF9D }
var volatile bit    ICDBK0L_BKA0              at ICDBK0L : 0
var volatile bit    ICDBK0L_BKA1              at ICDBK0L : 1
var volatile bit    ICDBK0L_BKA2              at ICDBK0L : 2
var volatile bit    ICDBK0L_BKA3              at ICDBK0L : 3
var volatile bit    ICDBK0L_BKA4              at ICDBK0L : 4
var volatile bit    ICDBK0L_BKA5              at ICDBK0L : 5
var volatile bit    ICDBK0L_BKA6              at ICDBK0L : 6
var volatile bit    ICDBK0L_BKA7              at ICDBK0L : 7
-- ------------------------------------------------
var volatile byte   ICDBK0H                   at { 0xF9E }
var volatile bit    ICDBK0H_BKA8              at ICDBK0H : 0
var volatile bit    ICDBK0H_BKA9              at ICDBK0H : 1
var volatile bit    ICDBK0H_BKA10             at ICDBK0H : 2
var volatile bit    ICDBK0H_BKA11             at ICDBK0H : 3
var volatile bit    ICDBK0H_BKA12             at ICDBK0H : 4
var volatile bit    ICDBK0H_BKA13             at ICDBK0H : 5
var volatile bit    ICDBK0H_BKA14             at ICDBK0H : 6
-- ------------------------------------------------
var volatile byte   BSRICDSHAD                at { 0xFE3 }
var volatile bit*5  BSRICDSHAD_BSR_ICDSHAD    at BSRICDSHAD : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD               at { 0xFE4 }
var volatile bit    STATUS_SHAD_C             at STATUS_SHAD : 0
var volatile bit    STATUS_SHAD_DC            at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_Z             at STATUS_SHAD : 2
-- ------------------------------------------------
var volatile byte   WREG_SHAD                 at { 0xFE5 }
-- ------------------------------------------------
var volatile byte   BSR_SHAD                  at { 0xFE6 }
var volatile bit*5  BSR_SHAD_BSR              at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD               at { 0xFE7 }
var volatile bit*7  PCLATH_SHAD_PCLATH        at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                at { 0xFE8 }
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                at { 0xFEA }
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                at { 0xFEB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0xFED }
var volatile bit*5  STKPTR_STKPTR             at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0xFEE }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0xFEF }
var volatile bit*7  TOSH_TOSH                 at TOSH : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000
   ANSELB = 0b0000_0000
   ANSELC = 0b0000_0000
   ANSELD = 0b0000_0000
   ANSELE = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x70-0x7E
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0  0x3 {             -- Oscillator Selection Bits
       ECH_NOCLKOUT = 0x3                -- ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to CLKIN pins
       ECM_NOCLKOUT = 0x2                -- ECM, External Clock, Medium Power Mode (0.5-4 MHz): device clock supplied to CLKIN pins
       ECL_NOCLKOUT = 0x1                -- ECL, External Clock, Low Power Mode (0-0.5 MHz): device clock supplied to CLKIN pins
       INTOSC_NOCLKOUT = 0x0             -- INTOSC oscillator: I/O function on CLKIN pin
       }
pragma fuse_def WDT:0  0x18 {            -- Watchdog Timer Enable
       ENABLED = 0x18                    -- WDT enabled. SWDTEN bit is ignored.
       RUNONLY = 0x10                    -- WDT enabled while running and disabled in Sleep. SWDTEN bit is ignored.
       CONTROL = 0x8                     -- WDT controlled by the SWDTEN bit in the WDTCON register
       DISABLED = 0x0                    -- WDT disabled. SWDTEN bit is ignored.
       }
pragma fuse_def PWRTE:0  0x20 {          -- Power-up Timer Enable
       DISABLED = 0x20                   -- PWRT disabled
       ENABLED = 0x0                     -- PWRT enabled
       }
pragma fuse_def MCLR:0  0x40 {           -- MCLR Pin Function Select
       EXTERNAL = 0x40                   -- MCLR/VPP pin function is MCLR
       INTERNAL = 0x0                    -- MCLR/VPP pin function is digital input
       }
pragma fuse_def CP:0  0x80 {             -- Flash Program Memory Code Protection
       DISABLED = 0x80                   -- Program memory code protection is disabled
       ENABLED = 0x0                     -- Program memory code protection is enabled
       }
pragma fuse_def BROWNOUT:0  0x600 {      -- Brown-out Reset Enable
       ENABLED = 0x600                   -- Brown-out Reset enabled
       RUNONLY = 0x400                   -- Brown-out Reset enabled while running and disabled in Sleep. SBOREN bit is ignored.
       CONTROL = 0x200                   -- Brown-out Reset controlled by the SBOREN bit in the BORCON register
       DISABLED = 0x0                    -- Brown-out Reset disabled. SBOREN bit is ignored.
       }
pragma fuse_def CLKOUTEN:0  0x800 {      -- Clock Out Enable
       DISABLED = 0x800                  -- CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin
       ENABLED = 0x0                     -- CLKOUT function is enabled on the CLKOUT pin
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1  0x3 {             -- Flash Memory Self-Write Protection
       DISABLED = 0x3                    -- Write protection off
       BOOT_BLOCK = 0x2                  -- 000h to 1FFh write protected, 200h to FFFh may be modified by PMCON control
       HALF = 0x1                        -- 000h to 7FFh write protected, 800h to FFFh may be modified by PMCON control
       ENABLED = 0x0                     -- 000h to FFFh write protected, no addresses may be modified by PMCON control
       }
pragma fuse_def STVR:1  0x200 {          -- Stack Overflow/Underflow Reset Enable
       ENABLED = 0x200                   -- Stack Overflow or Underflow will cause a Reset
       DISABLED = 0x0                    -- Stack Overflow or Underflow will not cause a Reset
       }
pragma fuse_def VOLTAGE:1  0x400 {       -- Brown-out Reset Voltage Selection
       V19 = 0x400                       -- Brown-out Reset Voltage (Vbor), 1.9V trip point selected.
       V27 = 0x0                         -- Brown-out Reset Voltage (Vbor), 2.7V trip point selected.
       }
pragma fuse_def LPBOR:1  0x800 {         -- Low-Power Brown Out Reset
       DISABLED = 0x800                  -- Low-Power BOR is disabled
       ENABLED = 0x0                     -- Low-Power BOR is enabled
       }
pragma fuse_def LVP:1  0x2000 {          -- Low-Voltage Programming Enable
       ENABLED = 0x2000                  -- Low-voltage programming enabled
       DISABLED = 0x0                    -- High-voltage on MCLR/VPP must be used for programming
       }
--
