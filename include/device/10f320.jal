-- ------------------------------------------------
-- Title: JalV2 device include file for 10f320
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic10f320, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC10F320.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Sat Mar 22 19:15:14 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x29A0            -- ID for PIC programmer
const  word  CHIP_ID     = 0xF320            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "10F320"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_14       -- (banks=1)
pragma  target  chip     10F320
pragma  target  bank     0x0080
pragma  target  page     0x0800
pragma  stack            8
pragma  code             256
pragma  ID               0x2000,4
pragma  data             0x40-0x7F
pragma  shared           0x40-0x7F
--
var volatile byte _pic_accum at 0x7F      -- (compiler)
var volatile byte _pic_isr_w at 0x7E      -- (compiler)
--
const word   _FUSES_CT             = 1
const word   _FUSE_BASE            = 0x2007
const word   _FUSES                = 0x3FFF
--
-- ------------------------------------------------
var volatile byte   INDF                      at { 0x0 }
var volatile byte   _ind                      at { 0x0 }
-- ------------------------------------------------
var volatile byte   TMR0                      at { 0x1 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0x2 }
var volatile byte   _pcl                      at { 0x2 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0x3 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_NPD                at STATUS : 3
var volatile bit    STATUS_NTO                at STATUS : 4
var volatile bit    STATUS_RP0                at STATUS : 5
var volatile bit    STATUS_RP1                at STATUS : 6
var volatile bit    STATUS_IRP                at STATUS : 7
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile byte   _status                   at { 0x3 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _not_pd                   =  3
const        byte   _not_to                   =  4
const        byte   _rp0                      =  5
const        byte   _rp1                      =  6
const        byte   _irp                      =  7
const        byte   _carry                    =  0
const        byte   _zero                     =  2
-- ------------------------------------------------
var volatile byte   FSR                       at { 0x4 }
var volatile byte   _fsr                      at { 0x4 }
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0x5 }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    pin_A3                    at PORTA : 3
--
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0x6 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_PWM1_direction        is pin_A0_direction
alias               pin_CLC1IN1_direction     is pin_A0_direction
alias               pin_CWG1A_direction       is pin_A0_direction
alias               pin_AN0_direction         is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_PWM2_direction        is pin_A1_direction
alias               pin_CLC1_direction        is pin_A1_direction
alias               pin_CWG1B_direction       is pin_A1_direction
alias               pin_AN1_direction         is pin_A1_direction
alias               pin_CLKIN_direction       is pin_A1_direction
alias               pin_NCO1CLK_direction     is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_T0CKI_direction       is pin_A2_direction
alias               pin_NCO1_direction        is pin_A2_direction
alias               pin_CLC1IN2_direction     is pin_A2_direction
alias               pin_CLKR_direction        is pin_A2_direction
alias               pin_AN2_direction         is pin_A2_direction
alias               pin_CWG1FLT_direction     is pin_A2_direction
--
-- ------------------------------------------------
var volatile byte   LATA                      at { 0x7 }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_PWM1                  is pin_A0
alias               pin_CLC1IN1               is pin_A0
alias               pin_CWG1A                 is pin_A0
alias               pin_AN0                   is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_PWM2                  is pin_A1
alias               pin_CLC1                  is pin_A1
alias               pin_CWG1B                 is pin_A1
alias               pin_AN1                   is pin_A1
alias               pin_CLKIN                 is pin_A1
alias               pin_NCO1CLK               is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_T0CKI                 is pin_A2
alias               pin_NCO1                  is pin_A2
alias               pin_CLC1IN2               is pin_A2
alias               pin_CLKR                  is pin_A2
alias               pin_AN2                   is pin_A2
alias               pin_CWG1FLT               is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   ANSELA                    at { 0x8 }
var volatile bit    ANSELA_ANSA0              at ANSELA : 0
var volatile bit    ANSELA_ANSA1              at ANSELA : 1
var volatile bit    ANSELA_ANSA2              at ANSELA : 2
-- ------------------------------------------------
var volatile byte   WPUA                      at { 0x9 }
var volatile bit    WPUA_WPUA0                at WPUA : 0
var volatile bit    WPUA_WPUA1                at WPUA : 1
var volatile bit    WPUA_WPUA2                at WPUA : 2
var volatile bit    WPUA_WPUA3                at WPUA : 3
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xA }
var volatile bit    PCLATH_PCLH0              at PCLATH : 0
var volatile byte   _pclath                   at { 0xA }
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xB }
var volatile bit    INTCON_IOCIF              at INTCON : 0
var volatile bit    INTCON_INTF               at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_IOCIE              at INTCON : 3
var volatile bit    INTCON_INTE               at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0xC }
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_CLC1IF               at PIR1 : 3
var volatile bit    PIR1_NCO1IF               at PIR1 : 4
var volatile bit    PIR1_ADIF                 at PIR1 : 6
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0xD }
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_CLC1IE               at PIE1 : 3
var volatile bit    PIE1_NCO1IE               at PIE1 : 4
var volatile bit    PIE1_ADIE                 at PIE1 : 6
-- ------------------------------------------------
var volatile byte   OPTION_REG                at { 0xE }
var volatile bit*3  OPTION_REG_PS             at OPTION_REG : 0
var volatile bit    OPTION_REG_PSA            at OPTION_REG : 3
alias               T0CON_PSA                 is OPTION_REG_PSA
var volatile bit    OPTION_REG_T0SE           at OPTION_REG : 4
alias               T0CON_T0SE                is OPTION_REG_T0SE
var volatile bit    OPTION_REG_T0CS           at OPTION_REG : 5
alias               T0CON_T0CS                is OPTION_REG_T0CS
var volatile bit    OPTION_REG_INTEDG         at OPTION_REG : 6
var volatile bit    OPTION_REG_WPUEN          at OPTION_REG : 7
var volatile bit    OPTION_REG_PS0            at OPTION_REG : 0
var volatile bit    OPTION_REG_PS1            at OPTION_REG : 1
var volatile bit    OPTION_REG_PS2            at OPTION_REG : 2
alias               T0CON_T0PS                is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   PCON                      at { 0xF }
var volatile bit    PCON_NBOR                 at PCON : 0
var volatile bit    PCON_NPOR                 at PCON : 1
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0x10 }
var volatile bit    OSCCON_HFIOFS             at OSCCON : 0
var volatile bit    OSCCON_LFIOFR             at OSCCON : 1
var volatile bit    OSCCON_HFIOFR             at OSCCON : 3
var volatile bit*3  OSCCON_IRCF               at OSCCON : 4
var volatile bit    OSCCON_IRCF0              at OSCCON : 4
var volatile bit    OSCCON_IRCF1              at OSCCON : 5
var volatile bit    OSCCON_IRCF2              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0x11 }
-- ------------------------------------------------
var volatile byte   PR2                       at { 0x12 }
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0x13 }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_TOUTPS              at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_TOUTPS0             at T2CON : 3
var volatile bit    T2CON_TOUTPS1             at T2CON : 4
var volatile bit    T2CON_TOUTPS2             at T2CON : 5
var volatile bit    T2CON_TOUTPS3             at T2CON : 6
-- ------------------------------------------------
var volatile byte   PWM1DCL                   at { 0x14 }
var volatile bit*2  PWM1DCL_PWM1DCL           at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL0          at PWM1DCL : 6
var volatile bit    PWM1DCL_PWM1DCL1          at PWM1DCL : 7
-- ------------------------------------------------
var volatile byte   PWM1DCH                   at { 0x15 }
var volatile bit    PWM1DCH_PWM1DCH0          at PWM1DCH : 0
var volatile bit    PWM1DCH_PWM1DCH1          at PWM1DCH : 1
var volatile bit    PWM1DCH_PWM1DCH2          at PWM1DCH : 2
var volatile bit    PWM1DCH_PWM1DCH3          at PWM1DCH : 3
var volatile bit    PWM1DCH_PWM1DCH4          at PWM1DCH : 4
var volatile bit    PWM1DCH_PWM1DCH5          at PWM1DCH : 5
var volatile bit    PWM1DCH_PWM1DCH6          at PWM1DCH : 6
var volatile bit    PWM1DCH_PWM1DCH7          at PWM1DCH : 7
-- ------------------------------------------------
var volatile byte   PWM1CON                   at { 0x16 }
var volatile bit    PWM1CON_PWM1POL           at PWM1CON : 4
var volatile bit    PWM1CON_PWM1OUT           at PWM1CON : 5
var volatile bit    PWM1CON_PWM1OE            at PWM1CON : 6
var volatile bit    PWM1CON_PWM1EN            at PWM1CON : 7
-- ------------------------------------------------
var volatile byte   PWM2DCL                   at { 0x17 }
var volatile bit*2  PWM2DCL_PWM2DCL           at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL0          at PWM2DCL : 6
var volatile bit    PWM2DCL_PWM2DCL1          at PWM2DCL : 7
-- ------------------------------------------------
var volatile byte   PWM2DCH                   at { 0x18 }
var volatile bit    PWM2DCH_PWM2DCH0          at PWM2DCH : 0
var volatile bit    PWM2DCH_PWM2DCH1          at PWM2DCH : 1
var volatile bit    PWM2DCH_PWM2DCH2          at PWM2DCH : 2
var volatile bit    PWM2DCH_PWM2DCH3          at PWM2DCH : 3
var volatile bit    PWM2DCH_PWM2DCH4          at PWM2DCH : 4
var volatile bit    PWM2DCH_PWM2DCH5          at PWM2DCH : 5
var volatile bit    PWM2DCH_PWM2DCH6          at PWM2DCH : 6
var volatile bit    PWM2DCH_PWM2DCH7          at PWM2DCH : 7
-- ------------------------------------------------
var volatile byte   PWM2CON                   at { 0x19 }
var volatile bit    PWM2CON_PWM2POL           at PWM2CON : 4
var volatile bit    PWM2CON_PWM2OUT           at PWM2CON : 5
var volatile bit    PWM2CON_PWM2OE            at PWM2CON : 6
var volatile bit    PWM2CON_PWM2EN            at PWM2CON : 7
-- ------------------------------------------------
var volatile byte   IOCAP                     at { 0x1A }
var volatile bit    IOCAP_IOCAP0              at IOCAP : 0
var volatile bit    IOCAP_IOCAP1              at IOCAP : 1
var volatile bit    IOCAP_IOCAP2              at IOCAP : 2
var volatile bit    IOCAP_IOCAP3              at IOCAP : 3
-- ------------------------------------------------
var volatile byte   IOCAN                     at { 0x1B }
var volatile bit    IOCAN_IOCAN0              at IOCAN : 0
var volatile bit    IOCAN_IOCAN1              at IOCAN : 1
var volatile bit    IOCAN_IOCAN2              at IOCAN : 2
var volatile bit    IOCAN_IOCAN3              at IOCAN : 3
-- ------------------------------------------------
var volatile byte   IOCAF                     at { 0x1C }
var volatile bit    IOCAF_IOCAF0              at IOCAF : 0
var volatile bit    IOCAF_IOCAF1              at IOCAF : 1
var volatile bit    IOCAF_IOCAF2              at IOCAF : 2
var volatile bit    IOCAF_IOCAF3              at IOCAF : 3
-- ------------------------------------------------
var volatile byte   FVRCON                    at { 0x1D }
var volatile bit*2  FVRCON_ADFVR              at FVRCON : 0
var volatile bit    FVRCON_TSRNG              at FVRCON : 4
var volatile bit    FVRCON_TSEN               at FVRCON : 5
var volatile bit    FVRCON_FVRRDY             at FVRCON : 6
var volatile bit    FVRCON_FVREN              at FVRCON : 7
var volatile bit    FVRCON_ADFVR0             at FVRCON : 0
var volatile bit    FVRCON_ADFVR1             at FVRCON : 1
-- ------------------------------------------------
var volatile byte   ADRES                     at { 0x1E }
-- ------------------------------------------------
var volatile byte   ADCON                     at { 0x1F }
var volatile bit    ADCON_ADON                at ADCON : 0
var volatile bit    ADCON_GO_NDONE            at ADCON : 1
var volatile bit*3  ADCON_CHS                 at ADCON : 2
var volatile bit*3  ADCON_ADCS                at ADCON : 5
var volatile bit    ADCON_CHS0                at ADCON : 2
var volatile bit    ADCON_CHS1                at ADCON : 3
var volatile bit    ADCON_CHS2                at ADCON : 4
var volatile bit    ADCON_ADCS0               at ADCON : 5
var volatile bit    ADCON_ADCS1               at ADCON : 6
var volatile bit    ADCON_ADCS2               at ADCON : 7
-- ------------------------------------------------
var volatile word   PMADR                     at { 0x20 }
-- ------------------------------------------------
var volatile byte   PMADRL                    at { 0x20 }
-- ------------------------------------------------
var volatile byte   PMADRH                    at { 0x21 }
var volatile bit    PMADRH_PMADR8             at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                     at { 0x22 }
-- ------------------------------------------------
var volatile byte   PMDATL                    at { 0x22 }
-- ------------------------------------------------
var volatile byte   PMDATH                    at { 0x23 }
var volatile bit*6  PMDATH_PMDATH             at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                    at { 0x24 }
var volatile bit    PMCON1_RD                 at PMCON1 : 0
var volatile bit    PMCON1_WR                 at PMCON1 : 1
var volatile bit    PMCON1_WREN               at PMCON1 : 2
var volatile bit    PMCON1_WRERR              at PMCON1 : 3
var volatile bit    PMCON1_FREE               at PMCON1 : 4
var volatile bit    PMCON1_LWLO               at PMCON1 : 5
var volatile bit    PMCON1_CFGS               at PMCON1 : 6
-- ------------------------------------------------
var volatile byte   PMCON2                    at { 0x25 }
-- ------------------------------------------------
var volatile byte   CLKRCON                   at { 0x26 }
var volatile bit    CLKRCON_CLKROE            at CLKRCON : 6
-- ------------------------------------------------
var volatile byte*3 NCO1ACC                   at { 0x27 }
-- ------------------------------------------------
var volatile byte   NCO1ACCL                  at { 0x27 }
var volatile bit    NCO1ACCL_NCO1ACC0         at NCO1ACCL : 0
var volatile bit    NCO1ACCL_NCO1ACC1         at NCO1ACCL : 1
var volatile bit    NCO1ACCL_NCO1ACC2         at NCO1ACCL : 2
var volatile bit    NCO1ACCL_NCO1ACC3         at NCO1ACCL : 3
var volatile bit    NCO1ACCL_NCO1ACC4         at NCO1ACCL : 4
var volatile bit    NCO1ACCL_NCO1ACC5         at NCO1ACCL : 5
var volatile bit    NCO1ACCL_NCO1ACC6         at NCO1ACCL : 6
var volatile bit    NCO1ACCL_NCO1ACC7         at NCO1ACCL : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCH                  at { 0x28 }
var volatile bit    NCO1ACCH_NCO1ACC8         at NCO1ACCH : 0
var volatile bit    NCO1ACCH_NCO1ACC9         at NCO1ACCH : 1
var volatile bit    NCO1ACCH_NCO1ACC10        at NCO1ACCH : 2
var volatile bit    NCO1ACCH_NCO1ACC11        at NCO1ACCH : 3
var volatile bit    NCO1ACCH_NCO1ACC12        at NCO1ACCH : 4
var volatile bit    NCO1ACCH_NCO1ACC13        at NCO1ACCH : 5
var volatile bit    NCO1ACCH_NCO1ACC14        at NCO1ACCH : 6
var volatile bit    NCO1ACCH_NCO1ACC15        at NCO1ACCH : 7
-- ------------------------------------------------
var volatile byte   NCO1ACCU                  at { 0x29 }
var volatile bit    NCO1ACCU_NCO1ACC16        at NCO1ACCU : 0
var volatile bit    NCO1ACCU_NCO1ACC17        at NCO1ACCU : 1
var volatile bit    NCO1ACCU_NCO1ACC18        at NCO1ACCU : 2
var volatile bit    NCO1ACCU_NCO1ACC19        at NCO1ACCU : 3
-- ------------------------------------------------
var volatile byte*3 NCO1INC                   at { 0x2A }
-- ------------------------------------------------
var volatile byte   NCO1INCL                  at { 0x2A }
var volatile bit    NCO1INCL_NCO1INC0         at NCO1INCL : 0
var volatile bit    NCO1INCL_NCO1INC1         at NCO1INCL : 1
var volatile bit    NCO1INCL_NCO1INC2         at NCO1INCL : 2
var volatile bit    NCO1INCL_NCO1INC3         at NCO1INCL : 3
var volatile bit    NCO1INCL_NCO1INC4         at NCO1INCL : 4
var volatile bit    NCO1INCL_NCO1INC5         at NCO1INCL : 5
var volatile bit    NCO1INCL_NCO1INC6         at NCO1INCL : 6
var volatile bit    NCO1INCL_NCO1INC7         at NCO1INCL : 7
-- ------------------------------------------------
var volatile byte   NCO1INCH                  at { 0x2B }
var volatile bit    NCO1INCH_NCO1INC8         at NCO1INCH : 0
var volatile bit    NCO1INCH_NCO1INC9         at NCO1INCH : 1
var volatile bit    NCO1INCH_NCO1INC10        at NCO1INCH : 2
var volatile bit    NCO1INCH_NCO1INC11        at NCO1INCH : 3
var volatile bit    NCO1INCH_NCO1INC12        at NCO1INCH : 4
var volatile bit    NCO1INCH_NCO1INC13        at NCO1INCH : 5
var volatile bit    NCO1INCH_NCO1INC14        at NCO1INCH : 6
var volatile bit    NCO1INCH_NCO1INC15        at NCO1INCH : 7
-- ------------------------------------------------
var volatile byte   NCO1INCU                  at { 0x2C }
-- ------------------------------------------------
var volatile byte   NCO1CON                   at { 0x2D }
var volatile bit    NCO1CON_N1PFM             at NCO1CON : 0
var volatile bit    NCO1CON_N1POL             at NCO1CON : 4
var volatile bit    NCO1CON_N1OUT             at NCO1CON : 5
var volatile bit    NCO1CON_N1OE              at NCO1CON : 6
var volatile bit    NCO1CON_N1EN              at NCO1CON : 7
-- ------------------------------------------------
var volatile byte   NCO1CLK                   at { 0x2E }
var volatile bit*4  NCO1CLK_N1CKS             at NCO1CLK : 0
var volatile bit*3  NCO1CLK_N1PWS             at NCO1CLK : 5
var volatile bit    NCO1CLK_N1CKS0            at NCO1CLK : 0
var volatile bit    NCO1CLK_N1CKS1            at NCO1CLK : 1
var volatile bit    NCO1CLK_N1PWS0            at NCO1CLK : 5
var volatile bit    NCO1CLK_N1PWS1            at NCO1CLK : 6
var volatile bit    NCO1CLK_N1PWS2            at NCO1CLK : 7
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0x30 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit*5  WDTCON_WDTPS              at WDTCON : 1
var volatile bit    WDTCON_WDTPS0             at WDTCON : 1
var volatile bit    WDTCON_WDTPS1             at WDTCON : 2
var volatile bit    WDTCON_WDTPS2             at WDTCON : 3
var volatile bit    WDTCON_WDTPS3             at WDTCON : 4
var volatile bit    WDTCON_WDTPS4             at WDTCON : 5
-- ------------------------------------------------
var volatile byte   CLC1CON                   at { 0x31 }
var volatile bit    CLC1CON_LC1MODE0          at CLC1CON : 0
var volatile bit    CLC1CON_LC1MODE1          at CLC1CON : 1
var volatile bit    CLC1CON_LC1MODE2          at CLC1CON : 2
var volatile bit    CLC1CON_LC1INTN           at CLC1CON : 3
var volatile bit    CLC1CON_LC1INTP           at CLC1CON : 4
var volatile bit    CLC1CON_LC1OUT            at CLC1CON : 5
var volatile bit    CLC1CON_LC1OE             at CLC1CON : 6
var volatile bit    CLC1CON_LC1EN             at CLC1CON : 7
var volatile bit    CLC1CON_LCMODE0           at CLC1CON : 0
var volatile bit    CLC1CON_LCMODE1           at CLC1CON : 1
var volatile bit    CLC1CON_LCMODE2           at CLC1CON : 2
var volatile bit    CLC1CON_LCINTN            at CLC1CON : 3
var volatile bit    CLC1CON_LCINTP            at CLC1CON : 4
var volatile bit    CLC1CON_LCOUT             at CLC1CON : 5
var volatile bit    CLC1CON_LCOE              at CLC1CON : 6
var volatile bit    CLC1CON_LCEN              at CLC1CON : 7
var volatile bit*3  CLC1CON_LC1MODE           at CLC1CON : 0
-- ------------------------------------------------
var volatile byte   CLC1SEL0                  at { 0x32 }
var volatile bit    CLC1SEL0_LC1D1S0          at CLC1SEL0 : 0
var volatile bit    CLC1SEL0_LC1D1S1          at CLC1SEL0 : 1
var volatile bit    CLC1SEL0_LC1D1S2          at CLC1SEL0 : 2
var volatile bit    CLC1SEL0_LC1D2S0          at CLC1SEL0 : 4
var volatile bit    CLC1SEL0_LC1D2S1          at CLC1SEL0 : 5
var volatile bit    CLC1SEL0_LC1D2S2          at CLC1SEL0 : 6
var volatile bit    CLC1SEL0_D1S0             at CLC1SEL0 : 0
var volatile bit    CLC1SEL0_D1S1             at CLC1SEL0 : 1
var volatile bit    CLC1SEL0_D1S2             at CLC1SEL0 : 2
var volatile bit    CLC1SEL0_D2S0             at CLC1SEL0 : 4
var volatile bit    CLC1SEL0_D2S1             at CLC1SEL0 : 5
var volatile bit    CLC1SEL0_D2S2             at CLC1SEL0 : 6
var volatile bit*3  CLC1SEL0_LC1D1S           at CLC1SEL0 : 0
var volatile bit*3  CLC1SEL0_LC1D2S           at CLC1SEL0 : 4
-- ------------------------------------------------
var volatile byte   CLC1SEL1                  at { 0x33 }
var volatile bit    CLC1SEL1_LC1D3S0          at CLC1SEL1 : 0
var volatile bit    CLC1SEL1_LC1D3S1          at CLC1SEL1 : 1
var volatile bit    CLC1SEL1_LC1D3S2          at CLC1SEL1 : 2
var volatile bit    CLC1SEL1_LC1D4S0          at CLC1SEL1 : 4
var volatile bit    CLC1SEL1_LC1D4S1          at CLC1SEL1 : 5
var volatile bit    CLC1SEL1_LC1D4S2          at CLC1SEL1 : 6
var volatile bit    CLC1SEL1_D3S0             at CLC1SEL1 : 0
var volatile bit    CLC1SEL1_D3S1             at CLC1SEL1 : 1
var volatile bit    CLC1SEL1_D3S2             at CLC1SEL1 : 2
var volatile bit    CLC1SEL1_D4S0             at CLC1SEL1 : 4
var volatile bit    CLC1SEL1_D4S1             at CLC1SEL1 : 5
var volatile bit    CLC1SEL1_D4S2             at CLC1SEL1 : 6
var volatile bit*3  CLC1SEL1_LC1D3S           at CLC1SEL1 : 0
var volatile bit*3  CLC1SEL1_LC1D4S           at CLC1SEL1 : 4
-- ------------------------------------------------
var volatile byte   CLC1POL                   at { 0x34 }
var volatile bit    CLC1POL_LC1G1POL          at CLC1POL : 0
var volatile bit    CLC1POL_LC1G2POL          at CLC1POL : 1
var volatile bit    CLC1POL_LC1G3POL          at CLC1POL : 2
var volatile bit    CLC1POL_LC1G4POL          at CLC1POL : 3
var volatile bit    CLC1POL_LC1POL            at CLC1POL : 7
var volatile bit    CLC1POL_G1POL             at CLC1POL : 0
var volatile bit    CLC1POL_G2POL             at CLC1POL : 1
var volatile bit    CLC1POL_G3POL             at CLC1POL : 2
var volatile bit    CLC1POL_G4POL             at CLC1POL : 3
var volatile bit    CLC1POL_POL               at CLC1POL : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS0                  at { 0x35 }
var volatile bit    CLC1GLS0_LC1G1D1N         at CLC1GLS0 : 0
var volatile bit    CLC1GLS0_LC1G1D1T         at CLC1GLS0 : 1
var volatile bit    CLC1GLS0_LC1G1D2N         at CLC1GLS0 : 2
var volatile bit    CLC1GLS0_LC1G1D2T         at CLC1GLS0 : 3
var volatile bit    CLC1GLS0_LC1G1D3N         at CLC1GLS0 : 4
var volatile bit    CLC1GLS0_LC1G1D3T         at CLC1GLS0 : 5
var volatile bit    CLC1GLS0_LC1G1D4N         at CLC1GLS0 : 6
var volatile bit    CLC1GLS0_LC1G1D4T         at CLC1GLS0 : 7
var volatile bit    CLC1GLS0_D1N              at CLC1GLS0 : 0
var volatile bit    CLC1GLS0_D1T              at CLC1GLS0 : 1
var volatile bit    CLC1GLS0_D2N              at CLC1GLS0 : 2
var volatile bit    CLC1GLS0_D2T              at CLC1GLS0 : 3
var volatile bit    CLC1GLS0_D3N              at CLC1GLS0 : 4
var volatile bit    CLC1GLS0_D3T              at CLC1GLS0 : 5
var volatile bit    CLC1GLS0_D4N              at CLC1GLS0 : 6
var volatile bit    CLC1GLS0_D4T              at CLC1GLS0 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS1                  at { 0x36 }
var volatile bit    CLC1GLS1_LC1G2D1N         at CLC1GLS1 : 0
var volatile bit    CLC1GLS1_LC1G2D1T         at CLC1GLS1 : 1
var volatile bit    CLC1GLS1_LC1G2D2N         at CLC1GLS1 : 2
var volatile bit    CLC1GLS1_LC1G2D2T         at CLC1GLS1 : 3
var volatile bit    CLC1GLS1_LC1G2D3N         at CLC1GLS1 : 4
var volatile bit    CLC1GLS1_LC1G2D3T         at CLC1GLS1 : 5
var volatile bit    CLC1GLS1_LC1G2D4N         at CLC1GLS1 : 6
var volatile bit    CLC1GLS1_LC1G2D4T         at CLC1GLS1 : 7
var volatile bit    CLC1GLS1_D1N              at CLC1GLS1 : 0
var volatile bit    CLC1GLS1_D1T              at CLC1GLS1 : 1
var volatile bit    CLC1GLS1_D2N              at CLC1GLS1 : 2
var volatile bit    CLC1GLS1_D2T              at CLC1GLS1 : 3
var volatile bit    CLC1GLS1_D3N              at CLC1GLS1 : 4
var volatile bit    CLC1GLS1_D3T              at CLC1GLS1 : 5
var volatile bit    CLC1GLS1_D4N              at CLC1GLS1 : 6
var volatile bit    CLC1GLS1_D4T              at CLC1GLS1 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS2                  at { 0x37 }
var volatile bit    CLC1GLS2_LC1G3D1N         at CLC1GLS2 : 0
var volatile bit    CLC1GLS2_LC1G3D1T         at CLC1GLS2 : 1
var volatile bit    CLC1GLS2_LC1G3D2N         at CLC1GLS2 : 2
var volatile bit    CLC1GLS2_LC1G3D2T         at CLC1GLS2 : 3
var volatile bit    CLC1GLS2_LC1G3D3N         at CLC1GLS2 : 4
var volatile bit    CLC1GLS2_LC1G3D3T         at CLC1GLS2 : 5
var volatile bit    CLC1GLS2_LC1G3D4N         at CLC1GLS2 : 6
var volatile bit    CLC1GLS2_LC1G3D4T         at CLC1GLS2 : 7
var volatile bit    CLC1GLS2_D1N              at CLC1GLS2 : 0
var volatile bit    CLC1GLS2_D1T              at CLC1GLS2 : 1
var volatile bit    CLC1GLS2_D2N              at CLC1GLS2 : 2
var volatile bit    CLC1GLS2_D2T              at CLC1GLS2 : 3
var volatile bit    CLC1GLS2_D3N              at CLC1GLS2 : 4
var volatile bit    CLC1GLS2_D3T              at CLC1GLS2 : 5
var volatile bit    CLC1GLS2_D4N              at CLC1GLS2 : 6
var volatile bit    CLC1GLS2_D4T              at CLC1GLS2 : 7
-- ------------------------------------------------
var volatile byte   CLC1GLS3                  at { 0x38 }
var volatile bit    CLC1GLS3_LC1G4D1N         at CLC1GLS3 : 0
var volatile bit    CLC1GLS3_LC1G4D1T         at CLC1GLS3 : 1
var volatile bit    CLC1GLS3_LC1G4D2N         at CLC1GLS3 : 2
var volatile bit    CLC1GLS3_LC1G4D2T         at CLC1GLS3 : 3
var volatile bit    CLC1GLS3_LC1G4D3N         at CLC1GLS3 : 4
var volatile bit    CLC1GLS3_LC1G4D3T         at CLC1GLS3 : 5
var volatile bit    CLC1GLS3_LC1G4D4N         at CLC1GLS3 : 6
var volatile bit    CLC1GLS3_LC1G4D4T         at CLC1GLS3 : 7
var volatile bit    CLC1GLS3_G4D1N            at CLC1GLS3 : 0
var volatile bit    CLC1GLS3_G4D1T            at CLC1GLS3 : 1
var volatile bit    CLC1GLS3_G4D2N            at CLC1GLS3 : 2
var volatile bit    CLC1GLS3_G4D2T            at CLC1GLS3 : 3
var volatile bit    CLC1GLS3_G4D3N            at CLC1GLS3 : 4
var volatile bit    CLC1GLS3_G4D3T            at CLC1GLS3 : 5
var volatile bit    CLC1GLS3_G4D4N            at CLC1GLS3 : 6
var volatile bit    CLC1GLS3_G4D4T            at CLC1GLS3 : 7
-- ------------------------------------------------
var volatile byte   CWG1CON0                  at { 0x39 }
var volatile bit    CWG1CON0_G1CS0            at CWG1CON0 : 0
var volatile bit    CWG1CON0_G1POLA           at CWG1CON0 : 3
var volatile bit    CWG1CON0_G1POLB           at CWG1CON0 : 4
var volatile bit    CWG1CON0_G1OEA            at CWG1CON0 : 5
var volatile bit    CWG1CON0_G1OEB            at CWG1CON0 : 6
var volatile bit    CWG1CON0_G1EN             at CWG1CON0 : 7
var volatile bit*2  CWG1CON0_G1CS             at CWG1CON0 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON1                  at { 0x3A }
var volatile bit    CWG1CON1_G1IS0            at CWG1CON1 : 0
var volatile bit    CWG1CON1_G1IS1            at CWG1CON1 : 1
var volatile bit*2  CWG1CON1_G1ASDLA          at CWG1CON1 : 4
var volatile bit*2  CWG1CON1_G1ASDLB          at CWG1CON1 : 6
var volatile bit*4  CWG1CON1_G1IS             at CWG1CON1 : 0
var volatile bit    CWG1CON1_G1ASDLA0         at CWG1CON1 : 4
var volatile bit    CWG1CON1_G1ASDLA1         at CWG1CON1 : 5
var volatile bit    CWG1CON1_G1ASDLB0         at CWG1CON1 : 6
var volatile bit    CWG1CON1_G1ASDLB1         at CWG1CON1 : 7
-- ------------------------------------------------
var volatile byte   CWG1CON2                  at { 0x3B }
var volatile bit    CWG1CON2_G1ASDFLT         at CWG1CON2 : 0
var volatile bit    CWG1CON2_G1ASDCLC1        at CWG1CON2 : 1
var volatile bit    CWG1CON2_G1ARSEN          at CWG1CON2 : 6
var volatile bit    CWG1CON2_G1ASE            at CWG1CON2 : 7
var volatile bit    CWG1CON2_G1ASDSFLT        at CWG1CON2 : 0
var volatile bit    CWG1CON2_G1ASDSCLC1       at CWG1CON2 : 1
-- ------------------------------------------------
var volatile byte   CWG1DBR                   at { 0x3C }
var volatile bit*6  CWG1DBR_CWG1DBR           at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR0          at CWG1DBR : 0
var volatile bit    CWG1DBR_CWG1DBR1          at CWG1DBR : 1
var volatile bit    CWG1DBR_CWG1DBR2          at CWG1DBR : 2
var volatile bit    CWG1DBR_CWG1DBR3          at CWG1DBR : 3
var volatile bit    CWG1DBR_CWG1DBR4          at CWG1DBR : 4
var volatile bit    CWG1DBR_CWG1DBR5          at CWG1DBR : 5
-- ------------------------------------------------
var volatile byte   CWG1DBF                   at { 0x3D }
var volatile bit*6  CWG1DBF_CWG1DBF           at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF0          at CWG1DBF : 0
var volatile bit    CWG1DBF_CWG1DBF1          at CWG1DBF : 1
var volatile bit    CWG1DBF_CWG1DBF2          at CWG1DBF : 2
var volatile bit    CWG1DBF_CWG1DBF3          at CWG1DBF : 3
var volatile bit    CWG1DBF_CWG1DBF4          at CWG1DBF : 4
var volatile bit    CWG1DBF_CWG1DBF5          at CWG1DBF : 5
-- ------------------------------------------------
var volatile byte   VREGCON                   at { 0x3E }
var volatile bit*2  VREGCON_VREGPM            at VREGCON : 0
var volatile bit    VREGCON_VREGPM0           at VREGCON : 0
var volatile bit    VREGCON_VREGPM1           at VREGCON : 1
-- ------------------------------------------------
var volatile byte   BORCON                    at { 0x3F }
var volatile bit    BORCON_BORRDY             at BORCON : 0
var volatile bit    BORCON_BORFS              at BORCON : 6
var volatile bit    BORCON_SBOREN             at BORCON : 7
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON  = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x40-0x7D
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG (0x2007)
--
pragma fuse_def OSC 0x1 {                -- Oscillator Selection bits
       INTOSC_NOCLKOUT = 0x0             -- INTOSC oscillator: CLKIN function disabled
       EC_NOCLKOUT = 0x1                 -- EC: CLKIN function enabled
       }
pragma fuse_def BROWNOUT 0x6 {           -- Brown-out Reset Enable
       ENABLED = 0x6                     -- Brown-out Reset enabled
       RUNONLY = 0x4                     -- Brown-out Reset enabled while running and disabled in Sleep
       CONTROL = 0x2                     -- Brown-out Reset controlled by the SBOREN bit in the BORCON register
       DISABLED = 0x0                    -- Brown-out Reset disabled
       }
pragma fuse_def WDT 0x18 {               -- Watchdog Timer Enable
       ENABLED = 0x18                    -- WDT enabled
       RUNONLY = 0x10                    -- WDT enabled while running and disabled in Sleep
       CONTROL = 0x8                     -- WDT controlled by the SWDTEN bit in the WDTCON register
       DISABLED = 0x0                    -- WDT disabled
       }
pragma fuse_def PWRTE 0x20 {             -- Power-up Timer Enable bit
       DISABLED = 0x20                   -- PWRT disabled
       ENABLED = 0x0                     -- PWRT enabled
       }
pragma fuse_def MCLR 0x40 {              -- MCLR Pin Function Select bit
       EXTERNAL = 0x40                   -- MCLR pin function is MCLR
       INTERNAL = 0x0                    -- MCLR pin function is digital input, MCLR internally tied to VDD
       }
pragma fuse_def CP 0x80 {                -- Code Protection bit
       DISABLED = 0x80                   -- Program memory code protection is disabled
       ENABLED = 0x0                     -- Program memory code protection is enabled
       }
pragma fuse_def LVP 0x100 {              -- Low-Voltage Programming Enable
       ENABLED = 0x100                   -- Low-voltage programming enabled
       DISABLED = 0x0                    -- High-voltage on MCLR/VPP must be used for programming
       }
pragma fuse_def LPBOR 0x200 {            -- Brown-out Reset Selection bits
       ENABLED = 0x200                   -- BOR enabled
       DISABLED = 0x0                    -- BOR disabled
       }
pragma fuse_def VOLTAGE 0x400 {          -- Brown-out Reset Voltage Selection
       MINIMUM = 0x400                   -- Brown-out Reset Voltage (Vbor), low trip point selected.
       MAXIMUM = 0x0                     -- Brown-out Reset Voltage (Vbor), high trip point selected.
       }
pragma fuse_def WRT 0x1800 {             -- Flash Memory Self-Write Protection
       DISABLED = 0x1800                 -- Write protection off
       BOOT_BLOCK = 0x1000               -- 000h to 03Fh write protected, 040h to 0FFh may be modified by PMCON control
       HALF = 0x800                      -- 000h to 07Fh write protected, 080h to 0FFh may be modified by PMCON control
       ENABLED = 0x0                     -- 000h to 0FFh write protected, no addresses may be modified by PMCON control
       }
--
