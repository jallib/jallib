-- ------------------------------------------------
-- Title: JalV2 device include file for 18f65j10
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f65j10, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC18F65J10.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Fri Mar  7 10:07:20 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x1520            -- ID for PIC programmer
const  word  CHIP_ID     = 0xB510            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "18F65J10"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_16       -- (banks=16)
pragma  target  chip     18F65J10
pragma  target  bank     0x0100
pragma  stack            31
pragma  code             32760
pragma  data             0x0-0x7FF
pragma  shared           0x0-0x5F,0xF60-0xFFF
--
var volatile byte _pic_accum at 0x0      -- (compiler)
--
const word   _FUSES_CT             = 6
const byte*3 _FUSE_BASE[_FUSES_CT] = {
                                       0x7FF8,
                                       0x7FF9,
                                       0x7FFA,
                                       0x7FFB,
                                       0x7FFC,
                                       0x7FFD 
                                     }
const byte   _FUSES[_FUSES_CT]     = {
                                       0xE1,     -- CONFIG1L
                                       0xF4,     -- CONFIG1H
                                       0xC7,     -- CONFIG2L
                                       0xFF,     -- CONFIG2H
                                       0xF8,     -- CONFIG3L
                                       0xF3      -- CONFIG3H
                                     }
--
-- ------------------------------------------------
var volatile byte   SSP2CON2                  at { 0xF62 }
var volatile bit    SSP2CON2_SEN              at SSP2CON2 : 0
var volatile bit    SSP2CON2_RSEN             at SSP2CON2 : 1
var volatile bit    SSP2CON2_PEN              at SSP2CON2 : 2
var volatile bit    SSP2CON2_RCEN             at SSP2CON2 : 3
var volatile bit    SSP2CON2_ACKEN            at SSP2CON2 : 4
var volatile bit    SSP2CON2_ACKDT            at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKSTAT          at SSP2CON2 : 6
var volatile bit    SSP2CON2_GCEN             at SSP2CON2 : 7
var volatile bit    SSP2CON2_ADMSK1           at SSP2CON2 : 1
var volatile bit    SSP2CON2_ADMSK2           at SSP2CON2 : 2
var volatile bit    SSP2CON2_ADMSK3           at SSP2CON2 : 3
var volatile bit    SSP2CON2_ADMSK4           at SSP2CON2 : 4
var volatile bit    SSP2CON2_ADMSK5           at SSP2CON2 : 5
var volatile bit    SSP2CON2_SEN2             at SSP2CON2 : 0
var volatile bit    SSP2CON2_ADMSK12          at SSP2CON2 : 1
var volatile bit    SSP2CON2_ADMSK22          at SSP2CON2 : 2
var volatile bit    SSP2CON2_ADMSK32          at SSP2CON2 : 3
var volatile bit    SSP2CON2_ACKEN2           at SSP2CON2 : 4
var volatile bit    SSP2CON2_ACKDT2           at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKSTAT2         at SSP2CON2 : 6
var volatile bit    SSP2CON2_GCEN2            at SSP2CON2 : 7
var volatile bit    SSP2CON2_RSEN2            at SSP2CON2 : 1
var volatile bit    SSP2CON2_PEN2             at SSP2CON2 : 2
var volatile bit    SSP2CON2_RCEN2            at SSP2CON2 : 3
var volatile bit    SSP2CON2_ADMSK42          at SSP2CON2 : 4
var volatile bit    SSP2CON2_ADMSK52          at SSP2CON2 : 5
-- ------------------------------------------------
var volatile byte   SSP2CON1                  at { 0xF63 }
var volatile bit*4  SSP2CON1_SSPM             at SSP2CON1 : 0
var volatile bit    SSP2CON1_CKP              at SSP2CON1 : 4
var volatile bit    SSP2CON1_SSPEN            at SSP2CON1 : 5
var volatile bit    SSP2CON1_SSPOV            at SSP2CON1 : 6
var volatile bit    SSP2CON1_WCOL             at SSP2CON1 : 7
var volatile bit    SSP2CON1_SSPM0            at SSP2CON1 : 0
var volatile bit    SSP2CON1_SSPM1            at SSP2CON1 : 1
var volatile bit    SSP2CON1_SSPM2            at SSP2CON1 : 2
var volatile bit    SSP2CON1_SSPM3            at SSP2CON1 : 3
var volatile bit    SSP2CON1_SSPM02           at SSP2CON1 : 0
var volatile bit    SSP2CON1_SSPM12           at SSP2CON1 : 1
var volatile bit    SSP2CON1_SSPM22           at SSP2CON1 : 2
var volatile bit    SSP2CON1_SSPM32           at SSP2CON1 : 3
var volatile bit    SSP2CON1_CKP2             at SSP2CON1 : 4
var volatile bit    SSP2CON1_SSPEN2           at SSP2CON1 : 5
var volatile bit    SSP2CON1_SSPOV2           at SSP2CON1 : 6
var volatile bit    SSP2CON1_WCOL2            at SSP2CON1 : 7
-- ------------------------------------------------
var volatile byte   SSP2STAT                  at { 0xF64 }
var volatile bit    SSP2STAT_BF               at SSP2STAT : 0
var volatile bit    SSP2STAT_UA               at SSP2STAT : 1
var volatile bit    SSP2STAT_R_NW             at SSP2STAT : 2
var volatile bit    SSP2STAT_S                at SSP2STAT : 3
var volatile bit    SSP2STAT_P                at SSP2STAT : 4
var volatile bit    SSP2STAT_D_NA             at SSP2STAT : 5
var volatile bit    SSP2STAT_CKE              at SSP2STAT : 6
var volatile bit    SSP2STAT_SMP              at SSP2STAT : 7
var volatile bit    SSP2STAT_R_W              at SSP2STAT : 2
var volatile bit    SSP2STAT_D_A              at SSP2STAT : 5
var volatile bit    SSP2STAT_I2C_READ         at SSP2STAT : 2
var volatile bit    SSP2STAT_I2C_START        at SSP2STAT : 3
var volatile bit    SSP2STAT_I2C_STOP         at SSP2STAT : 4
var volatile bit    SSP2STAT_I2C_DAT          at SSP2STAT : 5
var volatile bit    SSP2STAT_NW               at SSP2STAT : 2
var volatile bit    SSP2STAT_NA               at SSP2STAT : 5
var volatile bit    SSP2STAT_NWRITE           at SSP2STAT : 2
var volatile bit    SSP2STAT_NADDRESS         at SSP2STAT : 5
var volatile bit    SSP2STAT_READ_WRITE       at SSP2STAT : 2
var volatile bit    SSP2STAT_DATA_ADDRESS     at SSP2STAT : 5
var volatile bit    SSP2STAT_R                at SSP2STAT : 2
var volatile bit    SSP2STAT_D                at SSP2STAT : 5
var volatile bit    SSP2STAT_BF2              at SSP2STAT : 0
var volatile bit    SSP2STAT_UA2              at SSP2STAT : 1
var volatile bit    SSP2STAT_I2C_READ2        at SSP2STAT : 2
var volatile bit    SSP2STAT_I2C_START2       at SSP2STAT : 3
var volatile bit    SSP2STAT_I2C_STOP2        at SSP2STAT : 4
var volatile bit    SSP2STAT_DA2              at SSP2STAT : 5
var volatile bit    SSP2STAT_CKE2             at SSP2STAT : 6
var volatile bit    SSP2STAT_SMP2             at SSP2STAT : 7
var volatile bit    SSP2STAT_READ_WRITE2      at SSP2STAT : 2
var volatile bit    SSP2STAT_S2               at SSP2STAT : 3
var volatile bit    SSP2STAT_P2               at SSP2STAT : 4
var volatile bit    SSP2STAT_DATA_ADDRESS2    at SSP2STAT : 5
var volatile bit    SSP2STAT_RW2              at SSP2STAT : 2
var volatile bit    SSP2STAT_START2           at SSP2STAT : 3
var volatile bit    SSP2STAT_STOP2            at SSP2STAT : 4
var volatile bit    SSP2STAT_D_A2             at SSP2STAT : 5
var volatile bit    SSP2STAT_R_W2             at SSP2STAT : 2
var volatile bit    SSP2STAT_D_NA2            at SSP2STAT : 5
var volatile bit    SSP2STAT_R_NW2            at SSP2STAT : 2
var volatile bit    SSP2STAT_I2C_DAT2         at SSP2STAT : 5
var volatile bit    SSP2STAT_NW2              at SSP2STAT : 2
var volatile bit    SSP2STAT_NA2              at SSP2STAT : 5
var volatile bit    SSP2STAT_NWRITE2          at SSP2STAT : 2
var volatile bit    SSP2STAT_NADDRESS2        at SSP2STAT : 5
-- ------------------------------------------------
var volatile byte   SSP2ADD                   at { 0xF65 }
-- ------------------------------------------------
var volatile byte   SSP2BUF                   at { 0xF66 }
-- ------------------------------------------------
var volatile byte   ECCP2DEL                  at { 0xF67 }
var volatile bit*7  ECCP2DEL_PDC              at ECCP2DEL : 0
var volatile bit    ECCP2DEL_PRSEN            at ECCP2DEL : 7
var volatile bit    ECCP2DEL_PDC0             at ECCP2DEL : 0
var volatile bit    ECCP2DEL_PDC1             at ECCP2DEL : 1
var volatile bit    ECCP2DEL_PDC2             at ECCP2DEL : 2
var volatile bit    ECCP2DEL_PDC3             at ECCP2DEL : 3
var volatile bit    ECCP2DEL_PDC4             at ECCP2DEL : 4
var volatile bit    ECCP2DEL_PDC5             at ECCP2DEL : 5
var volatile bit    ECCP2DEL_PDC6             at ECCP2DEL : 6
var volatile bit    ECCP2DEL_P2DC0            at ECCP2DEL : 0
var volatile bit    ECCP2DEL_P2DC1            at ECCP2DEL : 1
var volatile bit    ECCP2DEL_P2DC2            at ECCP2DEL : 2
var volatile bit    ECCP2DEL_P2DC3            at ECCP2DEL : 3
var volatile bit    ECCP2DEL_P2DC4            at ECCP2DEL : 4
var volatile bit    ECCP2DEL_P2DC5            at ECCP2DEL : 5
var volatile bit    ECCP2DEL_P2DC6            at ECCP2DEL : 6
var volatile bit    ECCP2DEL_P2RSEN           at ECCP2DEL : 7
-- ------------------------------------------------
var volatile byte   ECCP2AS                   at { 0xF68 }
var volatile bit*2  ECCP2AS_PSSBD             at ECCP2AS : 0
var volatile bit*2  ECCP2AS_PSSAC             at ECCP2AS : 2
var volatile bit*3  ECCP2AS_ECCPAS            at ECCP2AS : 4
var volatile bit    ECCP2AS_ECCPASE           at ECCP2AS : 7
var volatile bit    ECCP2AS_PSSBD0            at ECCP2AS : 0
var volatile bit    ECCP2AS_PSSBD1            at ECCP2AS : 1
var volatile bit    ECCP2AS_PSSAC0            at ECCP2AS : 2
var volatile bit    ECCP2AS_PSSAC1            at ECCP2AS : 3
var volatile bit    ECCP2AS_ECCPAS0           at ECCP2AS : 4
var volatile bit    ECCP2AS_ECCPAS1           at ECCP2AS : 5
var volatile bit    ECCP2AS_ECCPAS2           at ECCP2AS : 6
var volatile bit    ECCP2AS_PSS2BD0           at ECCP2AS : 0
var volatile bit    ECCP2AS_PSS2BD1           at ECCP2AS : 1
var volatile bit    ECCP2AS_PSS2AC0           at ECCP2AS : 2
var volatile bit    ECCP2AS_PSS2AC1           at ECCP2AS : 3
var volatile bit    ECCP2AS_ECCP2AS0          at ECCP2AS : 4
var volatile bit    ECCP2AS_ECCP2AS1          at ECCP2AS : 5
var volatile bit    ECCP2AS_ECCP2AS2          at ECCP2AS : 6
var volatile bit    ECCP2AS_ECCP2ASE          at ECCP2AS : 7
-- ------------------------------------------------
var volatile byte   ECCP3DEL                  at { 0xF69 }
var volatile bit*7  ECCP3DEL_PDC              at ECCP3DEL : 0
var volatile bit    ECCP3DEL_PRSEN            at ECCP3DEL : 7
var volatile bit    ECCP3DEL_PDC0             at ECCP3DEL : 0
var volatile bit    ECCP3DEL_PDC1             at ECCP3DEL : 1
var volatile bit    ECCP3DEL_PDC2             at ECCP3DEL : 2
var volatile bit    ECCP3DEL_PDC3             at ECCP3DEL : 3
var volatile bit    ECCP3DEL_PDC4             at ECCP3DEL : 4
var volatile bit    ECCP3DEL_PDC5             at ECCP3DEL : 5
var volatile bit    ECCP3DEL_PDC6             at ECCP3DEL : 6
var volatile bit    ECCP3DEL_P3DC0            at ECCP3DEL : 0
var volatile bit    ECCP3DEL_P3DC1            at ECCP3DEL : 1
var volatile bit    ECCP3DEL_P3DC2            at ECCP3DEL : 2
var volatile bit    ECCP3DEL_P3DC3            at ECCP3DEL : 3
var volatile bit    ECCP3DEL_P3DC4            at ECCP3DEL : 4
var volatile bit    ECCP3DEL_P3DC5            at ECCP3DEL : 5
var volatile bit    ECCP3DEL_P3DC6            at ECCP3DEL : 6
var volatile bit    ECCP3DEL_P3RSEN           at ECCP3DEL : 7
-- ------------------------------------------------
var volatile byte   ECCP3AS                   at { 0xF6A }
var volatile bit*2  ECCP3AS_PSSBD             at ECCP3AS : 0
var volatile bit*2  ECCP3AS_PSSAC             at ECCP3AS : 2
var volatile bit*3  ECCP3AS_ECCPAS            at ECCP3AS : 4
var volatile bit    ECCP3AS_ECCPASE           at ECCP3AS : 7
var volatile bit    ECCP3AS_PSSBD0            at ECCP3AS : 0
var volatile bit    ECCP3AS_PSSBD1            at ECCP3AS : 1
var volatile bit    ECCP3AS_PSSAC0            at ECCP3AS : 2
var volatile bit    ECCP3AS_PSSAC1            at ECCP3AS : 3
var volatile bit    ECCP3AS_ECCPAS0           at ECCP3AS : 4
var volatile bit    ECCP3AS_ECCPAS1           at ECCP3AS : 5
var volatile bit    ECCP3AS_ECCPAS2           at ECCP3AS : 6
var volatile bit    ECCP3AS_PSS3BD0           at ECCP3AS : 0
var volatile bit    ECCP3AS_PSS3BD1           at ECCP3AS : 1
var volatile bit    ECCP3AS_PSS3AC0           at ECCP3AS : 2
var volatile bit    ECCP3AS_PSS3AC1           at ECCP3AS : 3
var volatile bit    ECCP3AS_ECCP3AS0          at ECCP3AS : 4
var volatile bit    ECCP3AS_ECCP3AS1          at ECCP3AS : 5
var volatile bit    ECCP3AS_ECCP3AS2          at ECCP3AS : 6
var volatile bit    ECCP3AS_ECCP3ASE          at ECCP3AS : 7
-- ------------------------------------------------
var volatile byte   RCSTA2                    at { 0xF6B }
var volatile bit    RCSTA2_RX9D               at RCSTA2 : 0
var volatile bit    RCSTA2_OERR               at RCSTA2 : 1
var volatile bit    RCSTA2_FERR               at RCSTA2 : 2
var volatile bit    RCSTA2_ADDEN              at RCSTA2 : 3
var volatile bit    RCSTA2_CREN               at RCSTA2 : 4
var volatile bit    RCSTA2_SREN               at RCSTA2 : 5
var volatile bit    RCSTA2_RX9                at RCSTA2 : 6
var volatile bit    RCSTA2_SPEN               at RCSTA2 : 7
var volatile bit    RCSTA2_RCD8               at RCSTA2 : 0
var volatile bit    RCSTA2_RC9                at RCSTA2 : 6
var volatile bit    RCSTA2_NRC8               at RCSTA2 : 6
var volatile bit    RCSTA2_RC8_9              at RCSTA2 : 6
var volatile bit    RCSTA2_RX9D2              at RCSTA2 : 0
var volatile bit    RCSTA2_OERR2              at RCSTA2 : 1
var volatile bit    RCSTA2_FERR2              at RCSTA2 : 2
var volatile bit    RCSTA2_ADDEN2             at RCSTA2 : 3
var volatile bit    RCSTA2_CREN2              at RCSTA2 : 4
var volatile bit    RCSTA2_SREN2              at RCSTA2 : 5
var volatile bit    RCSTA2_RX92               at RCSTA2 : 6
var volatile bit    RCSTA2_SPEN2              at RCSTA2 : 7
var volatile bit    RCSTA2_RCD82              at RCSTA2 : 0
var volatile bit    RCSTA2_RC8_92             at RCSTA2 : 6
var volatile bit    RCSTA2_RC92               at RCSTA2 : 6
-- ------------------------------------------------
var volatile byte   TXSTA2                    at { 0xF6C }
var volatile bit    TXSTA2_TX9D               at TXSTA2 : 0
var volatile bit    TXSTA2_TRMT               at TXSTA2 : 1
var volatile bit    TXSTA2_BRGH               at TXSTA2 : 2
var volatile bit    TXSTA2_SENDB              at TXSTA2 : 3
var volatile bit    TXSTA2_SYNC               at TXSTA2 : 4
var volatile bit    TXSTA2_TXEN               at TXSTA2 : 5
var volatile bit    TXSTA2_TX9                at TXSTA2 : 6
var volatile bit    TXSTA2_CSRC               at TXSTA2 : 7
var volatile bit    TXSTA2_TXD8               at TXSTA2 : 0
var volatile bit    TXSTA2_TX8_9              at TXSTA2 : 6
var volatile bit    TXSTA2_NTX8               at TXSTA2 : 6
var volatile bit    TXSTA2_TX9D2              at TXSTA2 : 0
var volatile bit    TXSTA2_TRMT2              at TXSTA2 : 1
var volatile bit    TXSTA2_BRGH2              at TXSTA2 : 2
var volatile bit    TXSTA2_SENDB2             at TXSTA2 : 3
var volatile bit    TXSTA2_SYNC2              at TXSTA2 : 4
var volatile bit    TXSTA2_TXEN2              at TXSTA2 : 5
var volatile bit    TXSTA2_TX92               at TXSTA2 : 6
var volatile bit    TXSTA2_CSRC2              at TXSTA2 : 7
var volatile bit    TXSTA2_TXD82              at TXSTA2 : 0
var volatile bit    TXSTA2_TX8_92             at TXSTA2 : 6
-- ------------------------------------------------
var volatile byte   TXREG2                    at { 0xF6D }
-- ------------------------------------------------
var volatile byte   RCREG2                    at { 0xF6E }
-- ------------------------------------------------
var volatile byte   SPBRG2                    at { 0xF6F }
alias               SPBRGL2                   is SPBRG2
-- ------------------------------------------------
var volatile byte   CCP5CON                   at { 0xF70 }
var volatile bit*4  CCP5CON_CCP5M             at CCP5CON : 0
alias               CCP5CON_MODE              is CCP5CON_CCP5M
var volatile bit*2  CCP5CON_DC5B              at CCP5CON : 4
var volatile bit    CCP5CON_CCP5M0            at CCP5CON : 0
var volatile bit    CCP5CON_CCP5M1            at CCP5CON : 1
var volatile bit    CCP5CON_CCP5M2            at CCP5CON : 2
var volatile bit    CCP5CON_CCP5M3            at CCP5CON : 3
var volatile bit    CCP5CON_DCCP5Y            at CCP5CON : 4
var volatile bit    CCP5CON_DCCP5X            at CCP5CON : 5
var volatile bit    CCP5CON_DC5B0             at CCP5CON : 4
var volatile bit    CCP5CON_DC5B1             at CCP5CON : 5
-- ------------------------------------------------
var volatile word   CCPR5                     at { 0xF71 }
-- ------------------------------------------------
var volatile byte   CCPR5L                    at { 0xF71 }
-- ------------------------------------------------
var volatile byte   CCPR5H                    at { 0xF72 }
-- ------------------------------------------------
var volatile byte   CCP4CON                   at { 0xF73 }
var volatile bit*4  CCP4CON_CCP4M             at CCP4CON : 0
alias               CCP4CON_MODE              is CCP4CON_CCP4M
var volatile bit*2  CCP4CON_DC4B              at CCP4CON : 4
var volatile bit    CCP4CON_CCP4M0            at CCP4CON : 0
var volatile bit    CCP4CON_CCP4M1            at CCP4CON : 1
var volatile bit    CCP4CON_CCP4M2            at CCP4CON : 2
var volatile bit    CCP4CON_CCP4M3            at CCP4CON : 3
var volatile bit    CCP4CON_DCCP4Y            at CCP4CON : 4
var volatile bit    CCP4CON_DCCP4X            at CCP4CON : 5
var volatile bit    CCP4CON_DC4B0             at CCP4CON : 4
var volatile bit    CCP4CON_DC4B1             at CCP4CON : 5
-- ------------------------------------------------
var volatile word   CCPR4                     at { 0xF74 }
-- ------------------------------------------------
var volatile byte   CCPR4L                    at { 0xF74 }
-- ------------------------------------------------
var volatile byte   CCPR4H                    at { 0xF75 }
-- ------------------------------------------------
var volatile byte   T4CON                     at { 0xF76 }
var volatile bit*2  T4CON_T4CKPS              at T4CON : 0
var volatile bit    T4CON_TMR4ON              at T4CON : 2
var volatile bit*4  T4CON_T4OUTPS             at T4CON : 3
var volatile bit    T4CON_T4CKPS0             at T4CON : 0
var volatile bit    T4CON_T4CKPS1             at T4CON : 1
var volatile bit    T4CON_T4OUTPS0            at T4CON : 3
var volatile bit    T4CON_T4OUTPS1            at T4CON : 4
var volatile bit    T4CON_T4OUTPS2            at T4CON : 5
var volatile bit    T4CON_T4OUTPS3            at T4CON : 6
-- ------------------------------------------------
var volatile byte   PR4                       at { 0xF77 }
-- ------------------------------------------------
var volatile byte   TMR4                      at { 0xF78 }
-- ------------------------------------------------
var volatile byte   ECCP1DEL                  at { 0xF79 }
var volatile bit*7  ECCP1DEL_PDC              at ECCP1DEL : 0
var volatile bit    ECCP1DEL_PRSEN            at ECCP1DEL : 7
var volatile bit    ECCP1DEL_PDC0             at ECCP1DEL : 0
var volatile bit    ECCP1DEL_PDC1             at ECCP1DEL : 1
var volatile bit    ECCP1DEL_PDC2             at ECCP1DEL : 2
var volatile bit    ECCP1DEL_PDC3             at ECCP1DEL : 3
var volatile bit    ECCP1DEL_PDC4             at ECCP1DEL : 4
var volatile bit    ECCP1DEL_PDC5             at ECCP1DEL : 5
var volatile bit    ECCP1DEL_PDC6             at ECCP1DEL : 6
var volatile bit    ECCP1DEL_P1DC0            at ECCP1DEL : 0
var volatile bit    ECCP1DEL_P1DC1            at ECCP1DEL : 1
var volatile bit    ECCP1DEL_P1DC2            at ECCP1DEL : 2
var volatile bit    ECCP1DEL_P1DC3            at ECCP1DEL : 3
var volatile bit    ECCP1DEL_P1DC4            at ECCP1DEL : 4
var volatile bit    ECCP1DEL_P1DC5            at ECCP1DEL : 5
var volatile bit    ECCP1DEL_P1DC6            at ECCP1DEL : 6
var volatile bit    ECCP1DEL_P1RSEN           at ECCP1DEL : 7
-- ------------------------------------------------
var volatile byte   BAUDCON2                  at { 0xF7C }
var volatile bit    BAUDCON2_ABDEN            at BAUDCON2 : 0
var volatile bit    BAUDCON2_WUE              at BAUDCON2 : 1
var volatile bit    BAUDCON2_BRG16            at BAUDCON2 : 3
var volatile bit    BAUDCON2_SCKP             at BAUDCON2 : 4
var volatile bit    BAUDCON2_RCMT             at BAUDCON2 : 6
var volatile bit    BAUDCON2_ABDOVF           at BAUDCON2 : 7
var volatile bit    BAUDCON2_RCIDL            at BAUDCON2 : 6
var volatile bit    BAUDCON2_ABDEN2           at BAUDCON2 : 0
var volatile bit    BAUDCON2_WUE2             at BAUDCON2 : 1
var volatile bit    BAUDCON2_BRG162           at BAUDCON2 : 3
var volatile bit    BAUDCON2_SCKP2            at BAUDCON2 : 4
var volatile bit    BAUDCON2_RCIDL2           at BAUDCON2 : 6
var volatile bit    BAUDCON2_ABDOVF2          at BAUDCON2 : 7
var volatile bit    BAUDCON2_TXCKP2           at BAUDCON2 : 4
var volatile bit    BAUDCON2_RCMT2            at BAUDCON2 : 6
-- ------------------------------------------------
var volatile byte   SPBRGH2                   at { 0xF7D }
-- ------------------------------------------------
var volatile byte   BAUDCON1                  at { 0xF7E }
var volatile bit    BAUDCON1_ABDEN            at BAUDCON1 : 0
var volatile bit    BAUDCON1_WUE              at BAUDCON1 : 1
var volatile bit    BAUDCON1_BRG16            at BAUDCON1 : 3
var volatile bit    BAUDCON1_SCKP             at BAUDCON1 : 4
var volatile bit    BAUDCON1_RCMT             at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDOVF           at BAUDCON1 : 7
var volatile bit    BAUDCON1_RCIDL            at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDEN1           at BAUDCON1 : 0
var volatile bit    BAUDCON1_WUE1             at BAUDCON1 : 1
var volatile bit    BAUDCON1_BRG161           at BAUDCON1 : 3
var volatile bit    BAUDCON1_CKTXP            at BAUDCON1 : 4
alias               BAUDCON1_TXCKP            is BAUDCON1_CKTXP
var volatile bit    BAUDCON1_RCIDL1           at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDOVF1          at BAUDCON1 : 7
var volatile bit    BAUDCON1_SCKP1            at BAUDCON1 : 4
var volatile bit    BAUDCON1_RCMT1            at BAUDCON1 : 6
var volatile bit    BAUDCON1_TXCKP1           at BAUDCON1 : 4
--
alias               BAUDCON                   is BAUDCON1
alias               BAUDCON_ABDEN             is BAUDCON1_ABDEN
alias               BAUDCON_WUE               is BAUDCON1_WUE
alias               BAUDCON_BRG16             is BAUDCON1_BRG16
alias               BAUDCON_SCKP              is BAUDCON1_SCKP
alias               BAUDCON_RCMT              is BAUDCON1_RCMT
alias               BAUDCON_ABDOVF            is BAUDCON1_ABDOVF
alias               BAUDCON_RCIDL             is BAUDCON1_RCIDL
alias               BAUDCON_ABDEN1            is BAUDCON1_ABDEN1
alias               BAUDCON_WUE1              is BAUDCON1_WUE1
alias               BAUDCON_BRG161            is BAUDCON1_BRG161
alias               BAUDCON_CKTXP             is BAUDCON1_CKTXP
alias               BAUDCON_TXCKP             is BAUDCON1_CKTXP
alias               BAUDCON_RCIDL1            is BAUDCON1_RCIDL1
alias               BAUDCON_ABDOVF1           is BAUDCON1_ABDOVF1
alias               BAUDCON_SCKP1             is BAUDCON1_SCKP1
alias               BAUDCON_RCMT1             is BAUDCON1_RCMT1
alias               BAUDCON_TXCKP1            is BAUDCON1_TXCKP1
-- ------------------------------------------------
var volatile byte   SPBRGH1                   at { 0xF7F }
--
alias               SPBRGH                    is SPBRGH1
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xF80 }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    PORTA_AN0                 at PORTA : 0
var volatile bit    PORTA_AN1                 at PORTA : 1
var volatile bit    PORTA_AN2                 at PORTA : 2
var volatile bit    PORTA_AN3                 at PORTA : 3
var volatile bit    PORTA_T0CKI               at PORTA : 4
var volatile bit    PORTA_AN4                 at PORTA : 5
var volatile bit    PORTA_OSC2                at PORTA : 6
var volatile bit    PORTA_VREFM               at PORTA : 2
var volatile bit    PORTA_VREFP               at PORTA : 3
var volatile bit    PORTA_CLKO                at PORTA : 6
var volatile bit    PORTA_ULPWUIN             at PORTA : 0
var volatile bit    PORTA_LVDIN               at PORTA : 5
-- ------------------------------------------------
var volatile byte   PORTB                     at { 0xF81 }
var volatile bit    PORTB_RB0                 at PORTB : 0
var volatile bit    PORTB_RB1                 at PORTB : 1
var volatile bit    PORTB_RB2                 at PORTB : 2
var volatile bit    PORTB_RB3                 at PORTB : 3
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    PORTB_RB7                 at PORTB : 7
var volatile bit    PORTB_INT0                at PORTB : 0
var volatile bit    PORTB_INT1                at PORTB : 1
var volatile bit    PORTB_INT2                at PORTB : 2
var volatile bit    PORTB_INT3                at PORTB : 3
var volatile bit    PORTB_KBI0                at PORTB : 4
var volatile bit    PORTB_KBI1                at PORTB : 5
var volatile bit    PORTB_KBI2                at PORTB : 6
var volatile bit    PORTB_KBI3                at PORTB : 7
var volatile bit    PORTB_PGC                 at PORTB : 6
var volatile bit    PORTB_PGD                 at PORTB : 7
var volatile bit    PORTB_CCP2_PA2            at PORTB : 3
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xF82 }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    PORTC_RC7                 at PORTC : 7
var volatile bit    PORTC_T1OSO               at PORTC : 0
var volatile bit    PORTC_T1OSI               at PORTC : 1
var volatile bit    PORTC_CCP1                at PORTC : 2
var volatile bit    PORTC_SCK                 at PORTC : 3
var volatile bit    PORTC_SDI                 at PORTC : 4
var volatile bit    PORTC_SDO                 at PORTC : 5
var volatile bit    PORTC_TX                  at PORTC : 6
var volatile bit    PORTC_RX                  at PORTC : 7
var volatile bit    PORTC_T13CKI              at PORTC : 0
var volatile bit    PORTC_CCP2                at PORTC : 1
var volatile bit    PORTC_SCL                 at PORTC : 3
var volatile bit    PORTC_SDA                 at PORTC : 4
var volatile bit    PORTC_CK                  at PORTC : 6
var volatile bit    PORTC_DT                  at PORTC : 7
var volatile bit    PORTC_PA2                 at PORTC : 1
var volatile bit    PORTC_PA1                 at PORTC : 2
-- ------------------------------------------------
var volatile byte   PORTD                     at { 0xF83 }
var volatile bit    PORTD_RD0                 at PORTD : 0
var volatile bit    PORTD_RD1                 at PORTD : 1
var volatile bit    PORTD_RD2                 at PORTD : 2
var volatile bit    PORTD_RD3                 at PORTD : 3
var volatile bit    PORTD_RD4                 at PORTD : 4
var volatile bit    PORTD_RD5                 at PORTD : 5
var volatile bit    PORTD_RD6                 at PORTD : 6
var volatile bit    PORTD_RD7                 at PORTD : 7
var volatile bit    PORTD_PSP0                at PORTD : 0
var volatile bit    PORTD_PSP1                at PORTD : 1
var volatile bit    PORTD_PSP2                at PORTD : 2
var volatile bit    PORTD_PSP3                at PORTD : 3
var volatile bit    PORTD_PSP4                at PORTD : 4
var volatile bit    PORTD_PSP5                at PORTD : 5
var volatile bit    PORTD_PSP6                at PORTD : 6
var volatile bit    PORTD_PSP7                at PORTD : 7
var volatile bit    PORTD_SDA2                at PORTD : 5
var volatile bit    PORTD_SCL2                at PORTD : 6
var volatile bit    PORTD_SS2                 at PORTD : 7
var volatile bit    PORTD_SDO2                at PORTD : 4
var volatile bit    PORTD_SDI2                at PORTD : 5
var volatile bit    PORTD_SCK2                at PORTD : 6
-- ------------------------------------------------
var volatile byte   PORTE                     at { 0xF84 }
var volatile bit    PORTE_RE0                 at PORTE : 0
var volatile bit    PORTE_RE1                 at PORTE : 1
var volatile bit    PORTE_RE2                 at PORTE : 2
var volatile bit    PORTE_RE3                 at PORTE : 3
var volatile bit    PORTE_RE4                 at PORTE : 4
var volatile bit    PORTE_RE5                 at PORTE : 5
var volatile bit    PORTE_RE6                 at PORTE : 6
var volatile bit    PORTE_RE7                 at PORTE : 7
var volatile bit    PORTE_RD                  at PORTE : 0
var volatile bit    PORTE_WR                  at PORTE : 1
var volatile bit    PORTE_CS                  at PORTE : 2
var volatile bit    PORTE_PD2                 at PORTE : 0
var volatile bit    PORTE_PC2                 at PORTE : 1
var volatile bit    PORTE_CCP10               at PORTE : 2
var volatile bit    PORTE_CCP9E               at PORTE : 3
var volatile bit    PORTE_CCP8E               at PORTE : 4
var volatile bit    PORTE_CCP7E               at PORTE : 5
var volatile bit    PORTE_CCP6E               at PORTE : 6
var volatile bit    PORTE_CCP2E               at PORTE : 7
var volatile bit    PORTE_RDE                 at PORTE : 0
var volatile bit    PORTE_WRE                 at PORTE : 1
var volatile bit    PORTE_PB2                 at PORTE : 2
var volatile bit    PORTE_PC3E                at PORTE : 3
var volatile bit    PORTE_PB3E                at PORTE : 4
var volatile bit    PORTE_PC1E                at PORTE : 5
var volatile bit    PORTE_PB1E                at PORTE : 6
var volatile bit    PORTE_PA2E                at PORTE : 7
-- ------------------------------------------------
var volatile byte   PORTF                     at { 0xF85 }
var volatile bit    PORTF_RF1                 at PORTF : 1
var volatile bit    PORTF_RF2                 at PORTF : 2
var volatile bit    PORTF_RF3                 at PORTF : 3
var volatile bit    PORTF_RF4                 at PORTF : 4
var volatile bit    PORTF_RF5                 at PORTF : 5
var volatile bit    PORTF_RF6                 at PORTF : 6
var volatile bit    PORTF_RF7                 at PORTF : 7
var volatile bit    PORTF_AN6                 at PORTF : 1
var volatile bit    PORTF_AN7                 at PORTF : 2
var volatile bit    PORTF_AN8                 at PORTF : 3
var volatile bit    PORTF_AN9                 at PORTF : 4
var volatile bit    PORTF_AN10                at PORTF : 5
var volatile bit    PORTF_AN11                at PORTF : 6
var volatile bit    PORTF_SS                  at PORTF : 7
var volatile bit    PORTF_CVREF               at PORTF : 3
var volatile bit    PORTF_C2OUTF              at PORTF : 1
var volatile bit    PORTF_C1OUTF              at PORTF : 2
-- ------------------------------------------------
var volatile byte   PORTG                     at { 0xF86 }
var volatile bit    PORTG_RG0                 at PORTG : 0
var volatile bit    PORTG_RG1                 at PORTG : 1
var volatile bit    PORTG_RG2                 at PORTG : 2
var volatile bit    PORTG_RG3                 at PORTG : 3
var volatile bit    PORTG_RG4                 at PORTG : 4
var volatile bit    PORTG_REPU                at PORTG : 6
var volatile bit    PORTG_RDPU                at PORTG : 7
var volatile bit    PORTG_CCP3                at PORTG : 0
var volatile bit    PORTG_TX2                 at PORTG : 1
var volatile bit    PORTG_RX2                 at PORTG : 2
var volatile bit    PORTG_CCP4                at PORTG : 3
var volatile bit    PORTG_CCP5                at PORTG : 4
var volatile bit    PORTG_CK2                 at PORTG : 1
var volatile bit    PORTG_DT2                 at PORTG : 2
var volatile bit    PORTG_C3OUTG              at PORTG : 1
var volatile bit    PORTG_RG6                 at PORTG : 6
var volatile bit    PORTG_RG7                 at PORTG : 7
-- ------------------------------------------------
var volatile byte   LATA                      at { 0xF89 }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_AN0                   is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_AN1                   is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_AN2                   is pin_A2
alias               pin_VREF_NEG              is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                at LATA : 3
var volatile bit    pin_A3                    at PORTA : 3
alias               pin_AN3                   is pin_A3
alias               pin_VREF_POS              is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_T0CKI                 is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_AN4                   is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LA0                  at LATA : 0
var volatile bit    LATA_LA1                  at LATA : 1
var volatile bit    LATA_LA2                  at LATA : 2
var volatile bit    LATA_LA3                  at LATA : 3
var volatile bit    LATA_LA4                  at LATA : 4
var volatile bit    LATA_LA5                  at LATA : 5
-- ------------------------------------------------
var volatile byte   LATB                      at { 0xF8A }
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB0                at LATB : 0
var volatile bit    pin_B0                    at PORTB : 0
alias               pin_FLT0                  is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                at LATB : 1
var volatile bit    pin_B1                    at PORTB : 1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                at LATB : 2
var volatile bit    pin_B2                    at PORTB : 2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                at LATB : 3
var volatile bit    pin_B3                    at PORTB : 3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                at LATB : 4
var volatile bit    pin_B4                    at PORTB : 4
alias               pin_KBI0                  is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                at LATB : 5
var volatile bit    pin_B5                    at PORTB : 5
alias               pin_KBI1                  is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                at LATB : 6
var volatile bit    pin_B6                    at PORTB : 6
alias               pin_KBI2                  is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB7                at LATB : 7
var volatile bit    pin_B7                    at PORTB : 7
alias               pin_KBI3                  is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LB0                  at LATB : 0
var volatile bit    LATB_LB1                  at LATB : 1
var volatile bit    LATB_LB2                  at LATB : 2
var volatile bit    LATB_LB3                  at LATB : 3
var volatile bit    LATB_LB4                  at LATB : 4
var volatile bit    LATB_LB5                  at LATB : 5
var volatile bit    LATB_LB6                  at LATB : 6
var volatile bit    LATB_LB7                  at LATB : 7
-- ------------------------------------------------
var volatile byte   LATC                      at { 0xF8B }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_T1OSO                 is pin_C0
alias               pin_T13CKI                is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_T1OSI                 is pin_C1
alias               pin_ECCP2_RC1             is pin_C1
alias               pin_P2A_RC1               is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_ECCP1                 is pin_C2
alias               pin_P1A                   is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_SCK1                  is pin_C3
alias               pin_SCK                   is pin_C3
alias               pin_SCL1                  is pin_C3
alias               pin_SCL                   is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_SDI1                  is pin_C4
alias               pin_SDI                   is pin_C4
alias               pin_SDA1                  is pin_C4
alias               pin_SDA                   is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_SDO1                  is pin_C5
alias               pin_SDO                   is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                at LATC : 6
var volatile bit    pin_C6                    at PORTC : 6
alias               pin_TX1                   is pin_C6
alias               pin_TX                    is pin_C6
alias               pin_CK1                   is pin_C6
alias               pin_CK                    is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC7                at LATC : 7
var volatile bit    pin_C7                    at PORTC : 7
alias               pin_RX1                   is pin_C7
alias               pin_RX                    is pin_C7
alias               pin_DT1                   is pin_C7
alias               pin_DT                    is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LC0                  at LATC : 0
var volatile bit    LATC_LC1                  at LATC : 1
var volatile bit    LATC_LC2                  at LATC : 2
var volatile bit    LATC_LC3                  at LATC : 3
var volatile bit    LATC_LC4                  at LATC : 4
var volatile bit    LATC_LC5                  at LATC : 5
var volatile bit    LATC_LC6                  at LATC : 6
var volatile bit    LATC_LC7                  at LATC : 7
-- ------------------------------------------------
var volatile byte   LATD                      at { 0xF8C }
--
procedure PORTD'put(byte in x at LATD) is
   pragma inline
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (PORTD >> 4)
end function
--
var volatile bit    LATD_LATD0                at LATD : 0
var volatile bit    pin_D0                    at PORTD : 0
alias               pin_PSP0                  is pin_D0
--
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1                at LATD : 1
var volatile bit    pin_D1                    at PORTD : 1
alias               pin_PSP1                  is pin_D1
--
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2                at LATD : 2
var volatile bit    pin_D2                    at PORTD : 2
alias               pin_PSP2                  is pin_D2
--
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3                at LATD : 3
var volatile bit    pin_D3                    at PORTD : 3
alias               pin_PSP3                  is pin_D3
--
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4                at LATD : 4
var volatile bit    pin_D4                    at PORTD : 4
alias               pin_PSP4                  is pin_D4
alias               pin_SDO2                  is pin_D4
--
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5                at LATD : 5
var volatile bit    pin_D5                    at PORTD : 5
alias               pin_PSP5                  is pin_D5
alias               pin_SDI2                  is pin_D5
alias               pin_SDA2                  is pin_D5
--
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6                at LATD : 6
var volatile bit    pin_D6                    at PORTD : 6
alias               pin_PSP6                  is pin_D6
alias               pin_SCK2                  is pin_D6
alias               pin_SCL2                  is pin_D6
--
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD7                at LATD : 7
var volatile bit    pin_D7                    at PORTD : 7
alias               pin_PSP7                  is pin_D7
alias               pin_SS2                   is pin_D7
--
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LD0                  at LATD : 0
var volatile bit    LATD_LD1                  at LATD : 1
var volatile bit    LATD_LD2                  at LATD : 2
var volatile bit    LATD_LD3                  at LATD : 3
var volatile bit    LATD_LD4                  at LATD : 4
var volatile bit    LATD_LD5                  at LATD : 5
var volatile bit    LATD_LD6                  at LATD : 6
var volatile bit    LATD_LD7                  at LATD : 7
-- ------------------------------------------------
var volatile byte   LATE                      at { 0xF8D }
--
procedure PORTE'put(byte in x at LATE) is
   pragma inline
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (PORTE >> 4)
end function
--
var volatile bit    LATE_LATE0                at LATE : 0
var volatile bit    pin_E0                    at PORTE : 0
alias               pin_RD                    is pin_E0
alias               pin_P2D                   is pin_E0
--
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1                at LATE : 1
var volatile bit    pin_E1                    at PORTE : 1
alias               pin_WR                    is pin_E1
alias               pin_P2C                   is pin_E1
--
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE2                at LATE : 2
var volatile bit    pin_E2                    at PORTE : 2
alias               pin_CS                    is pin_E2
alias               pin_P2B                   is pin_E2
--
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE3                at LATE : 3
var volatile bit    pin_E3                    at PORTE : 3
alias               pin_P3C                   is pin_E3
--
procedure pin_E3'put(bit in x at LATE : 3) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE4                at LATE : 4
var volatile bit    pin_E4                    at PORTE : 4
alias               pin_P3B                   is pin_E4
--
procedure pin_E4'put(bit in x at LATE : 4) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE5                at LATE : 5
var volatile bit    pin_E5                    at PORTE : 5
alias               pin_P1C                   is pin_E5
--
procedure pin_E5'put(bit in x at LATE : 5) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE6                at LATE : 6
var volatile bit    pin_E6                    at PORTE : 6
alias               pin_P1B                   is pin_E6
--
procedure pin_E6'put(bit in x at LATE : 6) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE7                at LATE : 7
var volatile bit    pin_E7                    at PORTE : 7
alias               pin_ECCP2_RE7             is pin_E7
alias               pin_P2A_RE7               is pin_E7
--
procedure pin_E7'put(bit in x at LATE : 7) is
   pragma inline
end procedure
--
var volatile bit    LATE_LE0                  at LATE : 0
var volatile bit    LATE_LE1                  at LATE : 1
var volatile bit    LATE_LE2                  at LATE : 2
var volatile bit    LATE_LE3                  at LATE : 3
var volatile bit    LATE_LE4                  at LATE : 4
var volatile bit    LATE_LE5                  at LATE : 5
var volatile bit    LATE_LE6                  at LATE : 6
var volatile bit    LATE_LE7                  at LATE : 7
-- ------------------------------------------------
var volatile byte   LATF                      at { 0xF8E }
--
procedure PORTF'put(byte in x at LATF) is
   pragma inline
end procedure
--
procedure PORTF_low'put(byte in x) is
   LATF = (LATF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low'get() return byte is
   return (PORTF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   LATF = (LATF & 0x0F) | (x << 4)
end procedure
function PORTF_high'get() return byte is
   return (PORTF >> 4)
end function
--
var volatile bit    LATF_LATF1                at LATF : 1
var volatile bit    pin_F1                    at PORTF : 1
alias               pin_AN6                   is pin_F1
alias               pin_C2OUT                 is pin_F1
--
procedure pin_F1'put(bit in x at LATF : 1) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF2                at LATF : 2
var volatile bit    pin_F2                    at PORTF : 2
alias               pin_AN7                   is pin_F2
alias               pin_C1OUT                 is pin_F2
--
procedure pin_F2'put(bit in x at LATF : 2) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF3                at LATF : 3
var volatile bit    pin_F3                    at PORTF : 3
alias               pin_AN8                   is pin_F3
--
procedure pin_F3'put(bit in x at LATF : 3) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF4                at LATF : 4
var volatile bit    pin_F4                    at PORTF : 4
alias               pin_AN9                   is pin_F4
--
procedure pin_F4'put(bit in x at LATF : 4) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF5                at LATF : 5
var volatile bit    pin_F5                    at PORTF : 5
alias               pin_AN10                  is pin_F5
alias               pin_CVREF                 is pin_F5
--
procedure pin_F5'put(bit in x at LATF : 5) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF6                at LATF : 6
var volatile bit    pin_F6                    at PORTF : 6
alias               pin_AN11                  is pin_F6
--
procedure pin_F6'put(bit in x at LATF : 6) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF7                at LATF : 7
var volatile bit    pin_F7                    at PORTF : 7
alias               pin_SS1                   is pin_F7
alias               pin_SS                    is pin_F7
--
procedure pin_F7'put(bit in x at LATF : 7) is
   pragma inline
end procedure
--
var volatile bit    LATF_LF1                  at LATF : 1
var volatile bit    LATF_LF2                  at LATF : 2
var volatile bit    LATF_LF3                  at LATF : 3
var volatile bit    LATF_LF4                  at LATF : 4
var volatile bit    LATF_LF5                  at LATF : 5
var volatile bit    LATF_LF6                  at LATF : 6
var volatile bit    LATF_LF7                  at LATF : 7
-- ------------------------------------------------
var volatile byte   LATG                      at { 0xF8F }
--
procedure PORTG'put(byte in x at LATG) is
   pragma inline
end procedure
--
procedure PORTG_low'put(byte in x) is
   LATG = (LATG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low'get() return byte is
   return (PORTG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   LATG = (LATG & 0x0F) | (x << 4)
end procedure
function PORTG_high'get() return byte is
   return (PORTG >> 4)
end function
--
var volatile bit    LATG_LATG0                at LATG : 0
var volatile bit    pin_G0                    at PORTG : 0
alias               pin_ECCP3                 is pin_G0
alias               pin_P3A                   is pin_G0
--
procedure pin_G0'put(bit in x at LATG : 0) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG1                at LATG : 1
var volatile bit    pin_G1                    at PORTG : 1
alias               pin_TX2                   is pin_G1
alias               pin_CK2                   is pin_G1
--
procedure pin_G1'put(bit in x at LATG : 1) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG2                at LATG : 2
var volatile bit    pin_G2                    at PORTG : 2
alias               pin_RX2                   is pin_G2
alias               pin_DT2                   is pin_G2
--
procedure pin_G2'put(bit in x at LATG : 2) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG3                at LATG : 3
var volatile bit    pin_G3                    at PORTG : 3
alias               pin_CCP4                  is pin_G3
alias               pin_P3D                   is pin_G3
--
procedure pin_G3'put(bit in x at LATG : 3) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG4                at LATG : 4
var volatile bit    pin_G4                    at PORTG : 4
alias               pin_CCP5                  is pin_G4
alias               pin_P1D                   is pin_G4
--
procedure pin_G4'put(bit in x at LATG : 4) is
   pragma inline
end procedure
--
var volatile bit    LATG_LG0                  at LATG : 0
var volatile bit    LATG_LG1                  at LATG : 1
var volatile bit    LATG_LG2                  at LATG : 2
var volatile bit    LATG_LG3                  at LATG : 3
var volatile bit    LATG_LG4                  at LATG : 4
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0xF92 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_AN0_direction         is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_AN1_direction         is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_AN2_direction         is pin_A2_direction
alias               pin_VREF_NEG_direction    is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_AN3_direction         is pin_A3_direction
alias               pin_VREF_POS_direction    is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_T0CKI_direction       is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_AN4_direction         is pin_A5_direction
--
var volatile bit    TRISA_RA0                 at TRISA : 0
var volatile bit    TRISA_RA1                 at TRISA : 1
var volatile bit    TRISA_RA2                 at TRISA : 2
var volatile bit    TRISA_RA3                 at TRISA : 3
var volatile bit    TRISA_RA4                 at TRISA : 4
var volatile bit    TRISA_RA5                 at TRISA : 5
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0xF93 }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB0              at TRISB : 0
var volatile bit    pin_B0_direction          at TRISB : 0
alias               pin_FLT0_direction        is pin_B0_direction
--
var volatile bit    TRISB_TRISB1              at TRISB : 1
var volatile bit    pin_B1_direction          at TRISB : 1
--
var volatile bit    TRISB_TRISB2              at TRISB : 2
var volatile bit    pin_B2_direction          at TRISB : 2
--
var volatile bit    TRISB_TRISB3              at TRISB : 3
var volatile bit    pin_B3_direction          at TRISB : 3
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_KBI0_direction        is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_KBI1_direction        is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_KBI2_direction        is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_KBI3_direction        is pin_B7_direction
--
var volatile bit    TRISB_RB0                 at TRISB : 0
var volatile bit    TRISB_RB1                 at TRISB : 1
var volatile bit    TRISB_RB2                 at TRISB : 2
var volatile bit    TRISB_RB3                 at TRISB : 3
var volatile bit    TRISB_RB4                 at TRISB : 4
var volatile bit    TRISB_RB5                 at TRISB : 5
var volatile bit    TRISB_RB6                 at TRISB : 6
var volatile bit    TRISB_RB7                 at TRISB : 7
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0xF94 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_T1OSO_direction       is pin_C0_direction
alias               pin_T13CKI_direction      is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_T1OSI_direction       is pin_C1_direction
alias               pin_ECCP2_RC1_direction   is pin_C1_direction
alias               pin_P2A_RC1_direction     is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_ECCP1_direction       is pin_C2_direction
alias               pin_P1A_direction         is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_SCK1_direction        is pin_C3_direction
alias               pin_SCK_direction         is pin_C3_direction
alias               pin_SCL1_direction        is pin_C3_direction
alias               pin_SCL_direction         is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_SDI1_direction        is pin_C4_direction
alias               pin_SDI_direction         is pin_C4_direction
alias               pin_SDA1_direction        is pin_C4_direction
alias               pin_SDA_direction         is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_SDO1_direction        is pin_C5_direction
alias               pin_SDO_direction         is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_TX1_direction         is pin_C6_direction
alias               pin_TX_direction          is pin_C6_direction
alias               pin_CK1_direction         is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_RX1_direction         is pin_C7_direction
alias               pin_RX_direction          is pin_C7_direction
alias               pin_DT1_direction         is pin_C7_direction
--
var volatile bit    TRISC_RC0                 at TRISC : 0
var volatile bit    TRISC_RC1                 at TRISC : 1
var volatile bit    TRISC_RC2                 at TRISC : 2
var volatile bit    TRISC_RC3                 at TRISC : 3
var volatile bit    TRISC_RC4                 at TRISC : 4
var volatile bit    TRISC_RC5                 at TRISC : 5
var volatile bit    TRISC_RC6                 at TRISC : 6
var volatile bit    TRISC_RC7                 at TRISC : 7
-- ------------------------------------------------
var volatile byte   TRISD                     at { 0xF95 }
alias               PORTD_direction           is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD0              at TRISD : 0
var volatile bit    pin_D0_direction          at TRISD : 0
alias               pin_PSP0_direction        is pin_D0_direction
--
var volatile bit    TRISD_TRISD1              at TRISD : 1
var volatile bit    pin_D1_direction          at TRISD : 1
alias               pin_PSP1_direction        is pin_D1_direction
--
var volatile bit    TRISD_TRISD2              at TRISD : 2
var volatile bit    pin_D2_direction          at TRISD : 2
alias               pin_PSP2_direction        is pin_D2_direction
--
var volatile bit    TRISD_TRISD3              at TRISD : 3
var volatile bit    pin_D3_direction          at TRISD : 3
alias               pin_PSP3_direction        is pin_D3_direction
--
var volatile bit    TRISD_TRISD4              at TRISD : 4
var volatile bit    pin_D4_direction          at TRISD : 4
alias               pin_PSP4_direction        is pin_D4_direction
alias               pin_SDO2_direction        is pin_D4_direction
--
var volatile bit    TRISD_TRISD5              at TRISD : 5
var volatile bit    pin_D5_direction          at TRISD : 5
alias               pin_PSP5_direction        is pin_D5_direction
alias               pin_SDI2_direction        is pin_D5_direction
alias               pin_SDA2_direction        is pin_D5_direction
--
var volatile bit    TRISD_TRISD6              at TRISD : 6
var volatile bit    pin_D6_direction          at TRISD : 6
alias               pin_PSP6_direction        is pin_D6_direction
alias               pin_SCK2_direction        is pin_D6_direction
alias               pin_SCL2_direction        is pin_D6_direction
--
var volatile bit    TRISD_TRISD7              at TRISD : 7
var volatile bit    pin_D7_direction          at TRISD : 7
alias               pin_PSP7_direction        is pin_D7_direction
alias               pin_SS2_direction         is pin_D7_direction
--
var volatile bit    TRISD_RD0                 at TRISD : 0
var volatile bit    TRISD_RD1                 at TRISD : 1
var volatile bit    TRISD_RD2                 at TRISD : 2
var volatile bit    TRISD_RD3                 at TRISD : 3
var volatile bit    TRISD_RD4                 at TRISD : 4
var volatile bit    TRISD_RD5                 at TRISD : 5
var volatile bit    TRISD_RD6                 at TRISD : 6
var volatile bit    TRISD_RD7                 at TRISD : 7
-- ------------------------------------------------
var volatile byte   TRISE                     at { 0xF96 }
alias               PORTE_direction           is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE0              at TRISE : 0
var volatile bit    pin_E0_direction          at TRISE : 0
alias               pin_RD_direction          is pin_E0_direction
alias               pin_P2D_direction         is pin_E0_direction
--
var volatile bit    TRISE_TRISE1              at TRISE : 1
var volatile bit    pin_E1_direction          at TRISE : 1
alias               pin_WR_direction          is pin_E1_direction
alias               pin_P2C_direction         is pin_E1_direction
--
var volatile bit    TRISE_TRISE2              at TRISE : 2
var volatile bit    pin_E2_direction          at TRISE : 2
alias               pin_CS_direction          is pin_E2_direction
alias               pin_P2B_direction         is pin_E2_direction
--
var volatile bit    TRISE_TRISE3              at TRISE : 3
var volatile bit    pin_E3_direction          at TRISE : 3
alias               pin_P3C_direction         is pin_E3_direction
--
var volatile bit    TRISE_TRISE4              at TRISE : 4
var volatile bit    pin_E4_direction          at TRISE : 4
alias               pin_P3B_direction         is pin_E4_direction
--
var volatile bit    TRISE_TRISE5              at TRISE : 5
var volatile bit    pin_E5_direction          at TRISE : 5
alias               pin_P1C_direction         is pin_E5_direction
--
var volatile bit    TRISE_TRISE6              at TRISE : 6
var volatile bit    pin_E6_direction          at TRISE : 6
alias               pin_P1B_direction         is pin_E6_direction
--
var volatile bit    TRISE_TRISE7              at TRISE : 7
var volatile bit    pin_E7_direction          at TRISE : 7
alias               pin_ECCP2_RE7_direction   is pin_E7_direction
alias               pin_P2A_RE7_direction     is pin_E7_direction
--
var volatile bit    TRISE_RE0                 at TRISE : 0
var volatile bit    TRISE_RE1                 at TRISE : 1
var volatile bit    TRISE_RE2                 at TRISE : 2
var volatile bit    TRISE_RE3                 at TRISE : 3
var volatile bit    TRISE_RE4                 at TRISE : 4
var volatile bit    TRISE_RE5                 at TRISE : 5
var volatile bit    TRISE_RE6                 at TRISE : 6
var volatile bit    TRISE_RE7                 at TRISE : 7
-- ------------------------------------------------
var volatile byte   TRISF                     at { 0xF97 }
alias               PORTF_direction           is TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF1              at TRISF : 1
var volatile bit    pin_F1_direction          at TRISF : 1
alias               pin_AN6_direction         is pin_F1_direction
alias               pin_C2OUT_direction       is pin_F1_direction
--
var volatile bit    TRISF_TRISF2              at TRISF : 2
var volatile bit    pin_F2_direction          at TRISF : 2
alias               pin_AN7_direction         is pin_F2_direction
alias               pin_C1OUT_direction       is pin_F2_direction
--
var volatile bit    TRISF_TRISF3              at TRISF : 3
var volatile bit    pin_F3_direction          at TRISF : 3
alias               pin_AN8_direction         is pin_F3_direction
--
var volatile bit    TRISF_TRISF4              at TRISF : 4
var volatile bit    pin_F4_direction          at TRISF : 4
alias               pin_AN9_direction         is pin_F4_direction
--
var volatile bit    TRISF_TRISF5              at TRISF : 5
var volatile bit    pin_F5_direction          at TRISF : 5
alias               pin_AN10_direction        is pin_F5_direction
alias               pin_CVREF_direction       is pin_F5_direction
--
var volatile bit    TRISF_TRISF6              at TRISF : 6
var volatile bit    pin_F6_direction          at TRISF : 6
alias               pin_AN11_direction        is pin_F6_direction
--
var volatile bit    TRISF_TRISF7              at TRISF : 7
var volatile bit    pin_F7_direction          at TRISF : 7
alias               pin_SS1_direction         is pin_F7_direction
alias               pin_SS_direction          is pin_F7_direction
--
var volatile bit    TRISF_RF1                 at TRISF : 1
var volatile bit    TRISF_RF2                 at TRISF : 2
var volatile bit    TRISF_RF3                 at TRISF : 3
var volatile bit    TRISF_RF4                 at TRISF : 4
var volatile bit    TRISF_RF5                 at TRISF : 5
var volatile bit    TRISF_RF6                 at TRISF : 6
var volatile bit    TRISF_RF7                 at TRISF : 7
-- ------------------------------------------------
var volatile byte   TRISG                     at { 0xF98 }
alias               PORTG_direction           is TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_TRISG0              at TRISG : 0
var volatile bit    pin_G0_direction          at TRISG : 0
alias               pin_ECCP3_direction       is pin_G0_direction
alias               pin_P3A_direction         is pin_G0_direction
--
var volatile bit    TRISG_TRISG1              at TRISG : 1
var volatile bit    pin_G1_direction          at TRISG : 1
alias               pin_TX2_direction         is pin_G1_direction
alias               pin_CK2_direction         is pin_G1_direction
--
var volatile bit    TRISG_TRISG2              at TRISG : 2
var volatile bit    pin_G2_direction          at TRISG : 2
alias               pin_RX2_direction         is pin_G2_direction
alias               pin_DT2_direction         is pin_G2_direction
--
var volatile bit    TRISG_TRISG3              at TRISG : 3
var volatile bit    pin_G3_direction          at TRISG : 3
alias               pin_CCP4_direction        is pin_G3_direction
alias               pin_P3D_direction         is pin_G3_direction
--
var volatile bit    TRISG_TRISG4              at TRISG : 4
var volatile bit    pin_G4_direction          at TRISG : 4
alias               pin_CCP5_direction        is pin_G4_direction
alias               pin_P1D_direction         is pin_G4_direction
--
var volatile bit    TRISG_RG0                 at TRISG : 0
var volatile bit    TRISG_RG1                 at TRISG : 1
var volatile bit    TRISG_RG2                 at TRISG : 2
var volatile bit    TRISG_RG3                 at TRISG : 3
var volatile bit    TRISG_RG4                 at TRISG : 4
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0xF9B }
var volatile bit    OSCTUNE_PLLEN             at OSCTUNE : 6
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0xF9D }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_CCP1IE               at PIE1 : 2
alias               PIE1_CCPIE                is PIE1_CCP1IE
var volatile bit    PIE1_SSP1IE               at PIE1 : 3
alias               PIE1_SSPIE                is PIE1_SSP1IE
var volatile bit    PIE1_TX1IE                at PIE1 : 4
alias               PIE1_TXIE                 is PIE1_TX1IE
var volatile bit    PIE1_RC1IE                at PIE1 : 5
alias               PIE1_RCIE                 is PIE1_RC1IE
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_PSPIE                at PIE1 : 7
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0xF9E }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_CCP1IF               at PIR1 : 2
alias               PIR1_CCPIF                is PIR1_CCP1IF
var volatile bit    PIR1_SSP1IF               at PIR1 : 3
alias               PIR1_SSPIF                is PIR1_SSP1IF
var volatile bit    PIR1_TX1IF                at PIR1 : 4
alias               PIR1_TXIF                 is PIR1_TX1IF
var volatile bit    PIR1_RC1IF                at PIR1 : 5
alias               PIR1_RCIF                 is PIR1_RC1IF
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_PSPIF                at PIR1 : 7
-- ------------------------------------------------
var volatile byte   IPR1                      at { 0xF9F }
var volatile bit    IPR1_TMR1IP               at IPR1 : 0
var volatile bit    IPR1_TMR2IP               at IPR1 : 1
var volatile bit    IPR1_CCP1IP               at IPR1 : 2
alias               IPR1_CCPIP                is IPR1_CCP1IP
var volatile bit    IPR1_SSP1IP               at IPR1 : 3
alias               IPR1_SSPIP                is IPR1_SSP1IP
var volatile bit    IPR1_TX1IP                at IPR1 : 4
alias               IPR1_TXIP                 is IPR1_TX1IP
var volatile bit    IPR1_RC1IP                at IPR1 : 5
alias               IPR1_RCIP                 is IPR1_RC1IP
var volatile bit    IPR1_ADIP                 at IPR1 : 6
var volatile bit    IPR1_PSPIP                at IPR1 : 7
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0xFA0 }
var volatile bit    PIE2_CCP2IE               at PIE2 : 0
var volatile bit    PIE2_TMR3IE               at PIE2 : 1
var volatile bit    PIE2_BCL1IE               at PIE2 : 3
var volatile bit    PIE2_CMIE                 at PIE2 : 6
var volatile bit    PIE2_OSCFIE               at PIE2 : 7
var volatile bit    PIE2_BCLIE                at PIE2 : 3
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0xFA1 }
var volatile bit    PIR2_CCP2IF               at PIR2 : 0
var volatile bit    PIR2_TMR3IF               at PIR2 : 1
var volatile bit    PIR2_BCL1IF               at PIR2 : 3
var volatile bit    PIR2_CMIF                 at PIR2 : 6
var volatile bit    PIR2_OSCFIF               at PIR2 : 7
var volatile bit    PIR2_BCLIF                at PIR2 : 3
-- ------------------------------------------------
var volatile byte   IPR2                      at { 0xFA2 }
var volatile bit    IPR2_CCP2IP               at IPR2 : 0
var volatile bit    IPR2_TMR3IP               at IPR2 : 1
var volatile bit    IPR2_BCL1IP               at IPR2 : 3
var volatile bit    IPR2_CMIP                 at IPR2 : 6
var volatile bit    IPR2_OSCFIP               at IPR2 : 7
var volatile bit    IPR2_BCLIP                at IPR2 : 3
-- ------------------------------------------------
var volatile byte   PIE3                      at { 0xFA3 }
var volatile bit    PIE3_CCP3IE               at PIE3 : 0
var volatile bit    PIE3_CCP4IE               at PIE3 : 1
var volatile bit    PIE3_CCP5IE               at PIE3 : 2
var volatile bit    PIE3_TMR4IE               at PIE3 : 3
var volatile bit    PIE3_TX2IE                at PIE3 : 4
alias               PIE3_TXIE2                is PIE3_TX2IE
var volatile bit    PIE3_RC2IE                at PIE3 : 5
alias               PIE3_RCIE2                is PIE3_RC2IE
var volatile bit    PIE3_BCL2IE               at PIE3 : 6
var volatile bit    PIE3_SSP2IE               at PIE3 : 7
var volatile bit    PIE3_RXB0IE               at PIE3 : 0
var volatile bit    PIE3_RXB1IE               at PIE3 : 1
var volatile bit    PIE3_TXB0IE               at PIE3 : 2
var volatile bit    PIE3_TXB1IE               at PIE3 : 3
var volatile bit    PIE3_TXB2IE               at PIE3 : 4
var volatile bit    PIE3_RXBNIE               at PIE3 : 1
var volatile bit    PIE3_TXBNIE               at PIE3 : 4
-- ------------------------------------------------
var volatile byte   PIR3                      at { 0xFA4 }
var volatile bit    PIR3_CCP3IF               at PIR3 : 0
var volatile bit    PIR3_CCP4IF               at PIR3 : 1
var volatile bit    PIR3_CCP5IF               at PIR3 : 2
var volatile bit    PIR3_TMR4IF               at PIR3 : 3
var volatile bit    PIR3_TX2IF                at PIR3 : 4
alias               PIR3_TXIF2                is PIR3_TX2IF
var volatile bit    PIR3_RC2IF                at PIR3 : 5
alias               PIR3_RCIF2                is PIR3_RC2IF
var volatile bit    PIR3_BCL2IF               at PIR3 : 6
var volatile bit    PIR3_SSP2IF               at PIR3 : 7
var volatile bit    PIR3_RXBNIF               at PIR3 : 1
var volatile bit    PIR3_TXBNIF               at PIR3 : 4
-- ------------------------------------------------
var volatile byte   IPR3                      at { 0xFA5 }
var volatile bit    IPR3_CCP3IP               at IPR3 : 0
var volatile bit    IPR3_CCP4IP               at IPR3 : 1
var volatile bit    IPR3_CCP5IP               at IPR3 : 2
var volatile bit    IPR3_TMR4IP               at IPR3 : 3
var volatile bit    IPR3_TX2IP                at IPR3 : 4
alias               IPR3_TXIP2                is IPR3_TX2IP
var volatile bit    IPR3_RC2IP                at IPR3 : 5
alias               IPR3_RCIP2                is IPR3_RC2IP
var volatile bit    IPR3_BCL2IP               at IPR3 : 6
var volatile bit    IPR3_SSP2IP               at IPR3 : 7
var volatile bit    IPR3_RXBNIP               at IPR3 : 1
var volatile bit    IPR3_TXBNIP               at IPR3 : 4
-- ------------------------------------------------
var volatile byte   EECON1                    at { 0xFA6 }
var volatile bit    EECON1_WR                 at EECON1 : 1
var volatile bit    EECON1_WREN               at EECON1 : 2
var volatile bit    EECON1_WRERR              at EECON1 : 3
var volatile bit    EECON1_FREE               at EECON1 : 4
-- ------------------------------------------------
var volatile byte   EECON2                    at { 0xFA7 }
-- ------------------------------------------------
var volatile byte   RCSTA1                    at { 0xFAB }
var volatile bit    RCSTA1_RX9D               at RCSTA1 : 0
var volatile bit    RCSTA1_OERR               at RCSTA1 : 1
var volatile bit    RCSTA1_FERR               at RCSTA1 : 2
var volatile bit    RCSTA1_ADDEN              at RCSTA1 : 3
var volatile bit    RCSTA1_CREN               at RCSTA1 : 4
var volatile bit    RCSTA1_SREN               at RCSTA1 : 5
var volatile bit    RCSTA1_RX9                at RCSTA1 : 6
var volatile bit    RCSTA1_SPEN               at RCSTA1 : 7
var volatile bit    RCSTA1_RCD8               at RCSTA1 : 0
var volatile bit    RCSTA1_RC9                at RCSTA1 : 6
var volatile bit    RCSTA1_NRC8               at RCSTA1 : 6
var volatile bit    RCSTA1_RC8_9              at RCSTA1 : 6
var volatile bit    RCSTA1_RX9D1              at RCSTA1 : 0
var volatile bit    RCSTA1_OERR1              at RCSTA1 : 1
var volatile bit    RCSTA1_FERR1              at RCSTA1 : 2
var volatile bit    RCSTA1_ADDEN1             at RCSTA1 : 3
var volatile bit    RCSTA1_CREN1              at RCSTA1 : 4
var volatile bit    RCSTA1_SREN1              at RCSTA1 : 5
var volatile bit    RCSTA1_RX91               at RCSTA1 : 6
var volatile bit    RCSTA1_SPEN1              at RCSTA1 : 7
--
alias               RCSTA                     is RCSTA1
alias               RCSTA_RX9D                is RCSTA1_RX9D
alias               RCSTA_OERR                is RCSTA1_OERR
alias               RCSTA_FERR                is RCSTA1_FERR
alias               RCSTA_ADDEN               is RCSTA1_ADDEN
alias               RCSTA_CREN                is RCSTA1_CREN
alias               RCSTA_SREN                is RCSTA1_SREN
alias               RCSTA_RX9                 is RCSTA1_RX9
alias               RCSTA_SPEN                is RCSTA1_SPEN
alias               RCSTA_RCD8                is RCSTA1_RCD8
alias               RCSTA_RC9                 is RCSTA1_RC9
alias               RCSTA_NRC8                is RCSTA1_NRC8
alias               RCSTA_RC8_9               is RCSTA1_RC8_9
alias               RCSTA_RX9D1               is RCSTA1_RX9D1
alias               RCSTA_OERR1               is RCSTA1_OERR1
alias               RCSTA_FERR1               is RCSTA1_FERR1
alias               RCSTA_ADDEN1              is RCSTA1_ADDEN1
alias               RCSTA_CREN1               is RCSTA1_CREN1
alias               RCSTA_SREN1               is RCSTA1_SREN1
alias               RCSTA_RX91                is RCSTA1_RX91
alias               RCSTA_SPEN1               is RCSTA1_SPEN1
-- ------------------------------------------------
var volatile byte   TXSTA1                    at { 0xFAC }
var volatile bit    TXSTA1_TX9D               at TXSTA1 : 0
var volatile bit    TXSTA1_TRMT               at TXSTA1 : 1
var volatile bit    TXSTA1_BRGH               at TXSTA1 : 2
var volatile bit    TXSTA1_SENDB              at TXSTA1 : 3
var volatile bit    TXSTA1_SYNC               at TXSTA1 : 4
var volatile bit    TXSTA1_TXEN               at TXSTA1 : 5
var volatile bit    TXSTA1_TX9                at TXSTA1 : 6
var volatile bit    TXSTA1_CSRC               at TXSTA1 : 7
var volatile bit    TXSTA1_TXD8               at TXSTA1 : 0
var volatile bit    TXSTA1_TX8_9              at TXSTA1 : 6
var volatile bit    TXSTA1_NTX8               at TXSTA1 : 6
var volatile bit    TXSTA1_TX9D1              at TXSTA1 : 0
var volatile bit    TXSTA1_TRMT1              at TXSTA1 : 1
var volatile bit    TXSTA1_BRGH1              at TXSTA1 : 2
var volatile bit    TXSTA1_SENDB1             at TXSTA1 : 3
var volatile bit    TXSTA1_SYNC1              at TXSTA1 : 4
var volatile bit    TXSTA1_TXEN1              at TXSTA1 : 5
var volatile bit    TXSTA1_TX91               at TXSTA1 : 6
var volatile bit    TXSTA1_CSRC1              at TXSTA1 : 7
--
alias               TXSTA                     is TXSTA1
alias               TXSTA_TX9D                is TXSTA1_TX9D
alias               TXSTA_TRMT                is TXSTA1_TRMT
alias               TXSTA_BRGH                is TXSTA1_BRGH
alias               TXSTA_SENDB               is TXSTA1_SENDB
alias               TXSTA_SYNC                is TXSTA1_SYNC
alias               TXSTA_TXEN                is TXSTA1_TXEN
alias               TXSTA_TX9                 is TXSTA1_TX9
alias               TXSTA_CSRC                is TXSTA1_CSRC
alias               TXSTA_TXD8                is TXSTA1_TXD8
alias               TXSTA_TX8_9               is TXSTA1_TX8_9
alias               TXSTA_NTX8                is TXSTA1_NTX8
alias               TXSTA_TX9D1               is TXSTA1_TX9D1
alias               TXSTA_TRMT1               is TXSTA1_TRMT1
alias               TXSTA_BRGH1               is TXSTA1_BRGH1
alias               TXSTA_SENDB1              is TXSTA1_SENDB1
alias               TXSTA_SYNC1               is TXSTA1_SYNC1
alias               TXSTA_TXEN1               is TXSTA1_TXEN1
alias               TXSTA_TX91                is TXSTA1_TX91
alias               TXSTA_CSRC1               is TXSTA1_CSRC1
-- ------------------------------------------------
var volatile byte   TXREG1                    at { 0xFAD }
--
alias               TXREG                     is TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1                    at { 0xFAE }
--
alias               RCREG                     is RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1                    at { 0xFAF }
alias               SPBRGL                    is SPBRG1
--
alias               SPBRG                     is SPBRG1
-- ------------------------------------------------
var volatile byte   PSPCON                    at { 0xFB0 }
var volatile bit    PSPCON_PSPMODE            at PSPCON : 4
var volatile bit    PSPCON_IBOV               at PSPCON : 5
var volatile bit    PSPCON_OBF                at PSPCON : 6
var volatile bit    PSPCON_IBF                at PSPCON : 7
-- ------------------------------------------------
var volatile byte   T3CON                     at { 0xFB1 }
var volatile bit    T3CON_TMR3ON              at T3CON : 0
var volatile bit    T3CON_TMR3CS              at T3CON : 1
var volatile bit    T3CON_NT3SYNC             at T3CON : 2
alias               T3CON_T3SYNC              is T3CON_NT3SYNC
var volatile bit    T3CON_T3CCP1              at T3CON : 3
var volatile bit*2  T3CON_T3CKPS              at T3CON : 4
var volatile bit    T3CON_T3CCP2              at T3CON : 6
var volatile bit    T3CON_RD16                at T3CON : 7
var volatile bit    T3CON_T3CKPS0             at T3CON : 4
var volatile bit    T3CON_T3CKPS1             at T3CON : 5
var volatile bit    T3CON_T3INSYNC            at T3CON : 2
var volatile bit    T3CON_SOSCEN3             at T3CON : 3
var volatile bit    T3CON_RD163               at T3CON : 7
var volatile bit    T3CON_T3RD16              at T3CON : 7
-- ------------------------------------------------
var volatile word   TMR3                      at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3L                     at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3H                     at { 0xFB3 }
-- ------------------------------------------------
var volatile byte   CMCON                     at { 0xFB4 }
var volatile bit*3  CMCON_CM                  at CMCON : 0
var volatile bit    CMCON_CIS                 at CMCON : 3
var volatile bit    CMCON_C1INV               at CMCON : 4
var volatile bit    CMCON_C2INV               at CMCON : 5
var volatile bit    CMCON_C1OUT               at CMCON : 6
var volatile bit    CMCON_C2OUT               at CMCON : 7
var volatile bit    CMCON_CM0                 at CMCON : 0
var volatile bit    CMCON_CM1                 at CMCON : 1
var volatile bit    CMCON_CM2                 at CMCON : 2
var volatile bit    CMCON_CMEN0               at CMCON : 0
var volatile bit    CMCON_CMEN1               at CMCON : 1
var volatile bit    CMCON_CMEN2               at CMCON : 2
-- ------------------------------------------------
var volatile byte   CVRCON                    at { 0xFB5 }
var volatile bit*4  CVRCON_CVR                at CVRCON : 0
var volatile bit    CVRCON_CVRSS              at CVRCON : 4
var volatile bit    CVRCON_CVRR               at CVRCON : 5
var volatile bit    CVRCON_CVROE              at CVRCON : 6
var volatile bit    CVRCON_CVREN              at CVRCON : 7
var volatile bit    CVRCON_CVR0               at CVRCON : 0
var volatile bit    CVRCON_CVR1               at CVRCON : 1
var volatile bit    CVRCON_CVR2               at CVRCON : 2
var volatile bit    CVRCON_CVR3               at CVRCON : 3
var volatile bit    CVRCON_CVROEN             at CVRCON : 6
-- ------------------------------------------------
var volatile byte   ECCP1AS                   at { 0xFB6 }
var volatile bit*2  ECCP1AS_PSSAC             at ECCP1AS : 2
var volatile bit*3  ECCP1AS_ECCPAS            at ECCP1AS : 4
var volatile bit    ECCP1AS_ECCPASE           at ECCP1AS : 7
var volatile bit    ECCP1AS_PSSAC0            at ECCP1AS : 2
var volatile bit    ECCP1AS_PSSAC1            at ECCP1AS : 3
var volatile bit    ECCP1AS_ECCPAS0           at ECCP1AS : 4
var volatile bit    ECCP1AS_ECCPAS1           at ECCP1AS : 5
var volatile bit    ECCP1AS_ECCPAS2           at ECCP1AS : 6
var volatile bit    ECCP1AS_PSS1AC0           at ECCP1AS : 2
var volatile bit    ECCP1AS_PSS1AC1           at ECCP1AS : 3
var volatile bit    ECCP1AS_ECCP1AS0          at ECCP1AS : 4
var volatile bit    ECCP1AS_ECCP1AS1          at ECCP1AS : 5
var volatile bit    ECCP1AS_ECCP1AS2          at ECCP1AS : 6
var volatile bit    ECCP1AS_ECCP1ASE          at ECCP1AS : 7
-- ------------------------------------------------
var volatile byte   ECCP3CON                  at { 0xFB7 }
var volatile bit*4  ECCP3CON_CCP3M            at ECCP3CON : 0
alias               ECCP3CON_MODE             is ECCP3CON_CCP3M
var volatile bit*2  ECCP3CON_DC3B             at ECCP3CON : 4
var volatile bit*2  ECCP3CON_P3M              at ECCP3CON : 6
var volatile bit    ECCP3CON_CCP3M0           at ECCP3CON : 0
var volatile bit    ECCP3CON_CCP3M1           at ECCP3CON : 1
var volatile bit    ECCP3CON_CCP3M2           at ECCP3CON : 2
var volatile bit    ECCP3CON_CCP3M3           at ECCP3CON : 3
var volatile bit    ECCP3CON_DC3B0            at ECCP3CON : 4
var volatile bit    ECCP3CON_DC3B1            at ECCP3CON : 5
var volatile bit    ECCP3CON_P3M0             at ECCP3CON : 6
var volatile bit    ECCP3CON_P3M1             at ECCP3CON : 7
var volatile bit    ECCP3CON_CCP3Y            at ECCP3CON : 4
var volatile bit    ECCP3CON_CCP3X            at ECCP3CON : 5
-- ------------------------------------------------
var volatile word   CCPR3                     at { 0xFB8 }
-- ------------------------------------------------
var volatile byte   CCPR3L                    at { 0xFB8 }
-- ------------------------------------------------
var volatile byte   CCPR3H                    at { 0xFB9 }
-- ------------------------------------------------
var volatile byte   ECCP2CON                  at { 0xFBA }
var volatile bit*4  ECCP2CON_CCP2M            at ECCP2CON : 0
alias               ECCP2CON_MODE             is ECCP2CON_CCP2M
var volatile bit*2  ECCP2CON_DC2B             at ECCP2CON : 4
var volatile bit*2  ECCP2CON_P2M              at ECCP2CON : 6
var volatile bit    ECCP2CON_CCP2M0           at ECCP2CON : 0
var volatile bit    ECCP2CON_CCP2M1           at ECCP2CON : 1
var volatile bit    ECCP2CON_CCP2M2           at ECCP2CON : 2
var volatile bit    ECCP2CON_CCP2M3           at ECCP2CON : 3
var volatile bit    ECCP2CON_DC2B0            at ECCP2CON : 4
var volatile bit    ECCP2CON_DC2B1            at ECCP2CON : 5
var volatile bit    ECCP2CON_P2M0             at ECCP2CON : 6
var volatile bit    ECCP2CON_P2M1             at ECCP2CON : 7
var volatile bit    ECCP2CON_CCP2Y            at ECCP2CON : 4
var volatile bit    ECCP2CON_CCP2X            at ECCP2CON : 5
-- ------------------------------------------------
var volatile word   CCPR2                     at { 0xFBB }
-- ------------------------------------------------
var volatile byte   CCPR2L                    at { 0xFBB }
-- ------------------------------------------------
var volatile byte   CCPR2H                    at { 0xFBC }
-- ------------------------------------------------
var volatile byte   ECCP1CON                  at { 0xFBD }
var volatile bit*4  ECCP1CON_CCP1M            at ECCP1CON : 0
alias               ECCP1CON_MODE             is ECCP1CON_CCP1M
var volatile bit*2  ECCP1CON_DC1B             at ECCP1CON : 4
var volatile bit*2  ECCP1CON_P1M              at ECCP1CON : 6
var volatile bit    ECCP1CON_CCP1M0           at ECCP1CON : 0
var volatile bit    ECCP1CON_CCP1M1           at ECCP1CON : 1
var volatile bit    ECCP1CON_CCP1M2           at ECCP1CON : 2
var volatile bit    ECCP1CON_CCP1M3           at ECCP1CON : 3
var volatile bit    ECCP1CON_DC1B0            at ECCP1CON : 4
var volatile bit    ECCP1CON_DC1B1            at ECCP1CON : 5
var volatile bit    ECCP1CON_P1M0             at ECCP1CON : 6
var volatile bit    ECCP1CON_P1M1             at ECCP1CON : 7
var volatile bit    ECCP1CON_CCP1Y            at ECCP1CON : 4
var volatile bit    ECCP1CON_CCP1X            at ECCP1CON : 5
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0xFBE }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0xFBE }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0xFBF }
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0xFC0 }
var volatile bit*3  ADCON2_ADCS               at ADCON2 : 0
var volatile bit*3  ADCON2_ACQT               at ADCON2 : 3
var volatile bit    ADCON2_ADFM               at ADCON2 : 7
var volatile bit    ADCON2_ADCS0              at ADCON2 : 0
var volatile bit    ADCON2_ADCS1              at ADCON2 : 1
var volatile bit    ADCON2_ADCS2              at ADCON2 : 2
var volatile bit    ADCON2_ACQT0              at ADCON2 : 3
var volatile bit    ADCON2_ACQT1              at ADCON2 : 4
var volatile bit    ADCON2_ACQT2              at ADCON2 : 5
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0xFC1 }
var volatile bit*4  ADCON1_PCFG               at ADCON1 : 0
var volatile bit*2  ADCON1_VCFG               at ADCON1 : 4
var volatile bit    ADCON1_PCFG0              at ADCON1 : 0
var volatile bit    ADCON1_PCFG1              at ADCON1 : 1
var volatile bit    ADCON1_PCFG2              at ADCON1 : 2
var volatile bit    ADCON1_PCFG3              at ADCON1 : 3
var volatile bit    ADCON1_VCFG0              at ADCON1 : 4
var volatile bit    ADCON1_VCFG1              at ADCON1 : 5
var volatile bit    ADCON1_CHSN3              at ADCON1 : 3
var volatile bit    ADCON1_VCFG01             at ADCON1 : 4
var volatile bit    ADCON1_VCFG11             at ADCON1 : 5
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0xFC2 }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*4  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_DONE               at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_CHS3               at ADCON0 : 5
var volatile bit    ADCON0_ADCAL              at ADCON0 : 7
var volatile bit    ADCON0_GO_DONE            at ADCON0 : 1
var volatile bit    ADCON0_GO                 at ADCON0 : 1
var volatile bit    ADCON0_NDONE              at ADCON0 : 1
var volatile bit    ADCON0_GODONE             at ADCON0 : 1
-- ------------------------------------------------
var volatile word   ADRES                     at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0xFC4 }
-- ------------------------------------------------
var volatile byte   SSP1CON2                  at { 0xFC5 }
var volatile bit    SSP1CON2_SEN              at SSP1CON2 : 0
var volatile bit    SSP1CON2_RSEN             at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN              at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN             at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN            at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT            at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT          at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN             at SSP1CON2 : 7
var volatile bit    SSP1CON2_ADMSK1           at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK2           at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK3           at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK4           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK5           at SSP1CON2 : 5
var volatile bit    SSP1CON2_SEN1             at SSP1CON2 : 0
var volatile bit    SSP1CON2_ADMSK11          at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK21          at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK31          at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN1           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT1           at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT1         at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN1            at SSP1CON2 : 7
var volatile bit    SSP1CON2_RSEN1            at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN1             at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN1            at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK41          at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK51          at SSP1CON2 : 5
--
alias               SSPCON2                   is SSP1CON2
alias               SSPCON2_SEN               is SSP1CON2_SEN
alias               SSPCON2_RSEN              is SSP1CON2_RSEN
alias               SSPCON2_PEN               is SSP1CON2_PEN
alias               SSPCON2_RCEN              is SSP1CON2_RCEN
alias               SSPCON2_ACKEN             is SSP1CON2_ACKEN
alias               SSPCON2_ACKDT             is SSP1CON2_ACKDT
alias               SSPCON2_ACKSTAT           is SSP1CON2_ACKSTAT
alias               SSPCON2_GCEN              is SSP1CON2_GCEN
alias               SSPCON2_ADMSK1            is SSP1CON2_ADMSK1
alias               SSPCON2_ADMSK2            is SSP1CON2_ADMSK2
alias               SSPCON2_ADMSK3            is SSP1CON2_ADMSK3
alias               SSPCON2_ADMSK4            is SSP1CON2_ADMSK4
alias               SSPCON2_ADMSK5            is SSP1CON2_ADMSK5
alias               SSPCON2_SEN1              is SSP1CON2_SEN1
alias               SSPCON2_ADMSK11           is SSP1CON2_ADMSK11
alias               SSPCON2_ADMSK21           is SSP1CON2_ADMSK21
alias               SSPCON2_ADMSK31           is SSP1CON2_ADMSK31
alias               SSPCON2_ACKEN1            is SSP1CON2_ACKEN1
alias               SSPCON2_ACKDT1            is SSP1CON2_ACKDT1
alias               SSPCON2_ACKSTAT1          is SSP1CON2_ACKSTAT1
alias               SSPCON2_GCEN1             is SSP1CON2_GCEN1
alias               SSPCON2_RSEN1             is SSP1CON2_RSEN1
alias               SSPCON2_PEN1              is SSP1CON2_PEN1
alias               SSPCON2_RCEN1             is SSP1CON2_RCEN1
alias               SSPCON2_ADMSK41           is SSP1CON2_ADMSK41
alias               SSPCON2_ADMSK51           is SSP1CON2_ADMSK51
-- ------------------------------------------------
var volatile byte   SSP1CON1                  at { 0xFC6 }
var volatile bit*4  SSP1CON1_SSPM             at SSP1CON1 : 0
var volatile bit    SSP1CON1_CKP              at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN            at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV            at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL             at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPM0            at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM1            at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM2            at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM3            at SSP1CON1 : 3
var volatile bit    SSP1CON1_SSPM01           at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM11           at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM21           at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM31           at SSP1CON1 : 3
var volatile bit    SSP1CON1_CKP1             at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN1           at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV1           at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL1            at SSP1CON1 : 7
--
alias               SSPCON1                   is SSP1CON1
alias               SSPCON1_SSPM              is SSP1CON1_SSPM
alias               SSPCON1_CKP               is SSP1CON1_CKP
alias               SSPCON1_SSPEN             is SSP1CON1_SSPEN
alias               SSPCON1_SSPOV             is SSP1CON1_SSPOV
alias               SSPCON1_WCOL              is SSP1CON1_WCOL
alias               SSPCON1_SSPM0             is SSP1CON1_SSPM0
alias               SSPCON1_SSPM1             is SSP1CON1_SSPM1
alias               SSPCON1_SSPM2             is SSP1CON1_SSPM2
alias               SSPCON1_SSPM3             is SSP1CON1_SSPM3
alias               SSPCON1_SSPM01            is SSP1CON1_SSPM01
alias               SSPCON1_SSPM11            is SSP1CON1_SSPM11
alias               SSPCON1_SSPM21            is SSP1CON1_SSPM21
alias               SSPCON1_SSPM31            is SSP1CON1_SSPM31
alias               SSPCON1_CKP1              is SSP1CON1_CKP1
alias               SSPCON1_SSPEN1            is SSP1CON1_SSPEN1
alias               SSPCON1_SSPOV1            is SSP1CON1_SSPOV1
alias               SSPCON1_WCOL1             is SSP1CON1_WCOL1
-- ------------------------------------------------
var volatile byte   SSP1STAT                  at { 0xFC7 }
var volatile bit    SSP1STAT_BF               at SSP1STAT : 0
var volatile bit    SSP1STAT_UA               at SSP1STAT : 1
var volatile bit    SSP1STAT_R_NW             at SSP1STAT : 2
var volatile bit    SSP1STAT_S                at SSP1STAT : 3
var volatile bit    SSP1STAT_P                at SSP1STAT : 4
var volatile bit    SSP1STAT_D_NA             at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE              at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP              at SSP1STAT : 7
var volatile bit    SSP1STAT_R_W              at SSP1STAT : 2
var volatile bit    SSP1STAT_D_A              at SSP1STAT : 5
var volatile bit    SSP1STAT_I2C_READ         at SSP1STAT : 2
var volatile bit    SSP1STAT_I2C_START        at SSP1STAT : 3
var volatile bit    SSP1STAT_I2C_STOP         at SSP1STAT : 4
var volatile bit    SSP1STAT_I2C_DAT          at SSP1STAT : 5
var volatile bit    SSP1STAT_NW               at SSP1STAT : 2
var volatile bit    SSP1STAT_NA               at SSP1STAT : 5
var volatile bit    SSP1STAT_NWRITE           at SSP1STAT : 2
var volatile bit    SSP1STAT_NADDRESS         at SSP1STAT : 5
var volatile bit    SSP1STAT_READ_WRITE       at SSP1STAT : 2
var volatile bit    SSP1STAT_DATA_ADDRESS     at SSP1STAT : 5
var volatile bit    SSP1STAT_R                at SSP1STAT : 2
var volatile bit    SSP1STAT_D                at SSP1STAT : 5
var volatile bit    SSP1STAT_BF1              at SSP1STAT : 0
var volatile bit    SSP1STAT_UA1              at SSP1STAT : 1
var volatile bit    SSP1STAT_RW               at SSP1STAT : 2
var volatile bit    SSP1STAT_START            at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP             at SSP1STAT : 4
var volatile bit    SSP1STAT_DA               at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE1             at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP1             at SSP1STAT : 7
var volatile bit    SSP1STAT_RW1              at SSP1STAT : 2
var volatile bit    SSP1STAT_START1           at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP1            at SSP1STAT : 4
var volatile bit    SSP1STAT_DA1              at SSP1STAT : 5
--
alias               SSPSTAT                   is SSP1STAT
alias               SSPSTAT_BF                is SSP1STAT_BF
alias               SSPSTAT_UA                is SSP1STAT_UA
alias               SSPSTAT_R_NW              is SSP1STAT_R_NW
alias               SSPSTAT_S                 is SSP1STAT_S
alias               SSPSTAT_P                 is SSP1STAT_P
alias               SSPSTAT_D_NA              is SSP1STAT_D_NA
alias               SSPSTAT_CKE               is SSP1STAT_CKE
alias               SSPSTAT_SMP               is SSP1STAT_SMP
alias               SSPSTAT_R_W               is SSP1STAT_R_W
alias               SSPSTAT_D_A               is SSP1STAT_D_A
alias               SSPSTAT_I2C_READ          is SSP1STAT_I2C_READ
alias               SSPSTAT_I2C_START         is SSP1STAT_I2C_START
alias               SSPSTAT_I2C_STOP          is SSP1STAT_I2C_STOP
alias               SSPSTAT_I2C_DAT           is SSP1STAT_I2C_DAT
alias               SSPSTAT_NW                is SSP1STAT_NW
alias               SSPSTAT_NA                is SSP1STAT_NA
alias               SSPSTAT_NWRITE            is SSP1STAT_NWRITE
alias               SSPSTAT_NADDRESS          is SSP1STAT_NADDRESS
alias               SSPSTAT_READ_WRITE        is SSP1STAT_READ_WRITE
alias               SSPSTAT_DATA_ADDRESS      is SSP1STAT_DATA_ADDRESS
alias               SSPSTAT_R                 is SSP1STAT_R
alias               SSPSTAT_D                 is SSP1STAT_D
alias               SSPSTAT_BF1               is SSP1STAT_BF1
alias               SSPSTAT_UA1               is SSP1STAT_UA1
alias               SSPSTAT_RW                is SSP1STAT_RW
alias               SSPSTAT_START             is SSP1STAT_START
alias               SSPSTAT_STOP              is SSP1STAT_STOP
alias               SSPSTAT_DA                is SSP1STAT_DA
alias               SSPSTAT_CKE1              is SSP1STAT_CKE1
alias               SSPSTAT_SMP1              is SSP1STAT_SMP1
alias               SSPSTAT_RW1               is SSP1STAT_RW1
alias               SSPSTAT_START1            is SSP1STAT_START1
alias               SSPSTAT_STOP1             is SSP1STAT_STOP1
alias               SSPSTAT_DA1               is SSP1STAT_DA1
-- ------------------------------------------------
var volatile byte   SSP1ADD                   at { 0xFC8 }
--
alias               SSPADD                    is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF                   at { 0xFC9 }
--
alias               SSPBUF                    is SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0xFCA }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_TOUTPS              at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_T2OUTPS0            at T2CON : 3
var volatile bit    T2CON_T2OUTPS1            at T2CON : 4
var volatile bit    T2CON_T2OUTPS2            at T2CON : 5
var volatile bit    T2CON_T2OUTPS3            at T2CON : 6
-- ------------------------------------------------
var volatile byte   PR2                       at { 0xFCB }
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0xFCC }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0xFCD }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_TMR1CS              at T1CON : 1
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit    T1CON_T1OSCEN             at T1CON : 3
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit    T1CON_T1RUN               at T1CON : 6
var volatile bit    T1CON_RD16                at T1CON : 7
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_T1INSYNC            at T1CON : 2
var volatile bit    T1CON_SOSCEN              at T1CON : 3
var volatile bit    T1CON_T1RD16              at T1CON : 7
-- ------------------------------------------------
var volatile word   TMR1                      at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0xFCF }
-- ------------------------------------------------
var volatile byte   RCON                      at { 0xFD0 }
var volatile bit    RCON_NBOR                 at RCON : 0
var volatile bit    RCON_NPOR                 at RCON : 1
var volatile bit    RCON_NPD                  at RCON : 2
var volatile bit    RCON_NTO                  at RCON : 3
var volatile bit    RCON_NRI                  at RCON : 4
var volatile bit    RCON_IPEN                 at RCON : 7
var volatile bit    RCON_BOR                  at RCON : 0
var volatile bit    RCON_POR                  at RCON : 1
var volatile bit    RCON_PD                   at RCON : 2
var volatile bit    RCON_TO                   at RCON : 3
var volatile bit    RCON_RI                   at RCON : 4
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0xFD1 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit    WDTCON_SWDTE              at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0xFD3 }
var volatile bit*2  OSCCON_SCS                at OSCCON : 0
var volatile bit    OSCCON_OSTS               at OSCCON : 3
var volatile bit    OSCCON_IDLEN              at OSCCON : 7
var volatile bit    OSCCON_SCS0               at OSCCON : 0
var volatile bit    OSCCON_SCS1               at OSCCON : 1
-- ------------------------------------------------
var volatile byte   T0CON                     at { 0xFD5 }
var volatile bit*3  T0CON_T0PS                at T0CON : 0
var volatile bit    T0CON_PSA                 at T0CON : 3
var volatile bit    T0CON_T0SE                at T0CON : 4
var volatile bit    T0CON_T0CS                at T0CON : 5
var volatile bit    T0CON_T08BIT              at T0CON : 6
var volatile bit    T0CON_TMR0ON              at T0CON : 7
var volatile bit    T0CON_T0PS0               at T0CON : 0
var volatile bit    T0CON_T0PS1               at T0CON : 1
var volatile bit    T0CON_T0PS2               at T0CON : 2
var volatile bit    T0CON_T0PS3               at T0CON : 3
-- ------------------------------------------------
var volatile word   TMR0                      at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0L                     at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0H                     at { 0xFD7 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0xFD8 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_OV                 at STATUS : 3
var volatile bit    STATUS_N                  at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile bit    STATUS_OVERFLOW           at STATUS : 3
var volatile bit    STATUS_NEGATIVE           at STATUS : 4
var volatile byte   _status                   at { 0xFD8 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _ov                       =  3
const        byte   _n                        =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
const        byte   _overflow                 =  3
const        byte   _negative                 =  4
const        byte   _banked                   =  1
const        byte   _access                   =  0
-- ------------------------------------------------
var volatile word   FSR2                      at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2L                     at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2H                     at { 0xFDA }
var volatile bit*4  FSR2H_FSR2H               at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    at { 0xFDB }
-- ------------------------------------------------
var volatile byte   PREINC2                   at { 0xFDC }
-- ------------------------------------------------
var volatile byte   POSTDEC2                  at { 0xFDD }
-- ------------------------------------------------
var volatile byte   POSTINC2                  at { 0xFDE }
-- ------------------------------------------------
var volatile byte   INDF2                     at { 0xFDF }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0xFE0 }
var volatile bit*4  BSR_BSR                   at BSR : 0
var volatile byte   _bsr                      at { 0xFE0 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0xFE1 }
var volatile word   _fsr1                     at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0xFE1 }
var volatile byte   _fsr1l                    at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0xFE2 }
var volatile bit*4  FSR1H_FSR1H               at FSR1H : 0
var volatile byte   _fsr1h                    at { 0xFE2 }
-- ------------------------------------------------
var volatile byte   PLUSW1                    at { 0xFE3 }
-- ------------------------------------------------
var volatile byte   PREINC1                   at { 0xFE4 }
-- ------------------------------------------------
var volatile byte   POSTDEC1                  at { 0xFE5 }
-- ------------------------------------------------
var volatile byte   POSTINC1                  at { 0xFE6 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0xFE7 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0xFE8 }
-- ------------------------------------------------
var volatile word   FSR0                      at { 0xFE9 }
var volatile word   _fsr0                     at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0xFE9 }
var volatile byte   _fsr0l                    at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0xFEA }
var volatile bit*4  FSR0H_FSR0H               at FSR0H : 0
var volatile byte   _fsr0h                    at { 0xFEA }
-- ------------------------------------------------
var volatile byte   PLUSW0                    at { 0xFEB }
-- ------------------------------------------------
var volatile byte   PREINC0                   at { 0xFEC }
-- ------------------------------------------------
var volatile byte   POSTDEC0                  at { 0xFED }
-- ------------------------------------------------
var volatile byte   POSTINC0                  at { 0xFEE }
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0xFEF }
var volatile byte   _ind                      at { 0xFEF }
-- ------------------------------------------------
var volatile byte   INTCON3                   at { 0xFF0 }
var volatile bit    INTCON3_INT1IF            at INTCON3 : 0
var volatile bit    INTCON3_INT2IF            at INTCON3 : 1
var volatile bit    INTCON3_INT3IF            at INTCON3 : 2
var volatile bit    INTCON3_INT1IE            at INTCON3 : 3
var volatile bit    INTCON3_INT2IE            at INTCON3 : 4
var volatile bit    INTCON3_INT3IE            at INTCON3 : 5
var volatile bit    INTCON3_INT1IP            at INTCON3 : 6
var volatile bit    INTCON3_INT2IP            at INTCON3 : 7
var volatile bit    INTCON3_INT1F             at INTCON3 : 0
var volatile bit    INTCON3_INT2F             at INTCON3 : 1
var volatile bit    INTCON3_INT3F             at INTCON3 : 2
var volatile bit    INTCON3_INT1E             at INTCON3 : 3
var volatile bit    INTCON3_INT2E             at INTCON3 : 4
var volatile bit    INTCON3_INT3E             at INTCON3 : 5
var volatile bit    INTCON3_INT1P             at INTCON3 : 6
var volatile bit    INTCON3_INT2P             at INTCON3 : 7
-- ------------------------------------------------
var volatile byte   INTCON2                   at { 0xFF1 }
var volatile bit    INTCON2_RBIP              at INTCON2 : 0
var volatile bit    INTCON2_INT3IP            at INTCON2 : 1
var volatile bit    INTCON2_TMR0IP            at INTCON2 : 2
var volatile bit    INTCON2_INTEDG3           at INTCON2 : 3
var volatile bit    INTCON2_INTEDG2           at INTCON2 : 4
var volatile bit    INTCON2_INTEDG1           at INTCON2 : 5
var volatile bit    INTCON2_INTEDG0           at INTCON2 : 6
var volatile bit    INTCON2_NRBPU             at INTCON2 : 7
var volatile bit    INTCON2_INT3P             at INTCON2 : 1
var volatile bit    INTCON2_T0IP              at INTCON2 : 2
var volatile bit    INTCON2_RBPU              at INTCON2 : 7
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xFF2 }
var volatile bit    INTCON_RBIF               at INTCON : 0
var volatile bit    INTCON_INT0IF             at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_RBIE               at INTCON : 3
var volatile bit    INTCON_INT0IE             at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE_GIEL          at INTCON : 6
var volatile bit    INTCON_GIE_GIEH           at INTCON : 7
var volatile bit    INTCON_INT0F              at INTCON : 1
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_INT0E              at INTCON : 4
var volatile bit    INTCON_T0IE               at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_GIEL               at INTCON : 6
var volatile bit    INTCON_GIEH               at INTCON : 7
-- ------------------------------------------------
var volatile word   PROD                      at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODL                     at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODH                     at { 0xFF4 }
-- ------------------------------------------------
var volatile byte   TABLAT                    at { 0xFF5 }
var volatile byte   _tablat                   at { 0xFF5 }
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    at { 0xFF6 }
var volatile byte*3 _tblptr                   at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRL                   at { 0xFF6 }
var volatile byte   _tblptrl                  at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRH                   at { 0xFF7 }
var volatile byte   _tblptrh                  at { 0xFF7 }
-- ------------------------------------------------
var volatile byte   TBLPTRU                   at { 0xFF8 }
var volatile bit*5  TBLPTRU_TBLPTRU           at TBLPTRU : 0
var volatile bit    TBLPTRU_ACSS              at TBLPTRU : 5
var volatile byte   _tblptru                  at { 0xFF8 }
-- ------------------------------------------------
var volatile byte*3 PCLAT                     at { 0xFF9 }
var volatile byte*3 _pclat                    at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0xFF9 }
var volatile byte   _pcl                      at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xFFA }
var volatile byte   _pclath                   at { 0xFFA }
-- ------------------------------------------------
var volatile byte   PCLATU                    at { 0xFFB }
var volatile bit*5  PCLATU_PCU                at PCLATU : 0
var volatile byte   _pclatu                   at { 0xFFB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0xFFC }
var volatile bit*5  STKPTR_STKPTR             at STKPTR : 0
var volatile bit    STKPTR_STKUNF             at STKPTR : 6
var volatile bit    STKPTR_STKFUL             at STKPTR : 7
var volatile bit    STKPTR_STKPTR0            at STKPTR : 0
var volatile bit    STKPTR_STKPTR1            at STKPTR : 1
var volatile bit    STKPTR_STKPTR2            at STKPTR : 2
var volatile bit    STKPTR_STKPTR3            at STKPTR : 3
var volatile bit    STKPTR_STKPTR4            at STKPTR : 4
var volatile bit    STKPTR_STKOVF             at STKPTR : 7
var volatile bit    STKPTR_SP0                at STKPTR : 0
var volatile bit    STKPTR_SP1                at STKPTR : 1
var volatile bit    STKPTR_SP2                at STKPTR : 2
var volatile bit    STKPTR_SP3                at STKPTR : 3
var volatile bit    STKPTR_SP4                at STKPTR : 4
-- ------------------------------------------------
var volatile byte*3 TOS                       at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0xFFE }
-- ------------------------------------------------
var volatile byte   TOSU                      at { 0xFFF }
var volatile bit*5  TOSU_TOSU                 at TOSU : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_1111
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x1-0x5F
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1L (0x7FF8)
--
pragma fuse_def WDT:0  0x1 {             -- Watchdog Timer Enable bit
       ENABLED = 0x1                     -- WDT enabled
       CONTROL = 0x0                     -- WDT disabled (control is placed on SWDTEN bit)
       }
pragma fuse_def STVR:0  0x20 {           -- Stack Overflow/Underflow Reset Enable bit
       ENABLED = 0x20                    -- Reset on stack overflow/underflow enabled
       DISABLED = 0x0                    -- Reset on stack overflow/underflow disabled
       }
pragma fuse_def XINST:0  0x40 {          -- Extended Instruction Set Enable bit
--     ENABLED = 0x40                    -- NOTE: not supported by JALV2
       DISABLED = 0x0                    -- Instruction set extension and Indexed Addressing mode disabled (Legacy mode)
       }
pragma fuse_def DEBUG:0  0x80 {          -- Background Debugger Enable bit
       DISABLED = 0x80                   -- Background debugger disabled; RB6 and RB7 configured as general purpose I/O pins
       ENABLED = 0x0                     -- Background debugger enabled; RB6 and RB7 are dedicated to In-Circuit Debug
       }
--
-- CONFIG1H (0x7FF9)
--
pragma fuse_def CP0:1  0x4 {             -- Code Protection bit
       DISABLED = 0x4                    -- Program memory is not code-protected
       ENABLED = 0x0                     -- Program memory is code-protected
       }
--
-- CONFIG2L (0x7FFA)
--
pragma fuse_def OSC:2  0x3 {             -- Oscillator Selection bits
       EC_CLKOUT_PLL = 0x3               -- EC oscillator, PLL enabled and under software control, CLK function on OSC2
       EC_CLKOUT = 0x2                   -- EC oscillator, CLKO function on OSC2
       HS_PLL = 0x1                      -- HS oscillator, PLL enabled and under software control
       HS = 0x0                          -- HS oscillator
       }
pragma fuse_def FOSC2:2  0x4 {           -- Default/Reset System Clock Select bit
       ON = 0x4                          -- Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> = 00
       OFF = 0x0                         -- INTRC enabled as system clock when OSCCON<1:0> = 00
       }
pragma fuse_def FCMEN:2  0x40 {          -- Fail-Safe Clock Monitor Enable
       DISABLED = 0x0                    -- Fail-Safe Clock Monitor disabled
       ENABLED = 0x40                    -- Fail-Safe Clock Monitor enabled
       }
pragma fuse_def IESO:2  0x80 {           -- Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
       DISABLED = 0x0                    -- Two-Speed Start-up disabled
       ENABLED = 0x80                    -- Two-Speed Start-up enabled
       }
--
-- CONFIG2H (0x7FFB)
--
pragma fuse_def WDTPS:3  0xF {           -- Watchdog Timer Postscaler Select bits
       P32K = 0xF                        -- 1:32768
       P16K = 0xE                        -- 1:16384
       P8K = 0xD                         -- 1:8192
       P4K = 0xC                         -- 1:4096
       P2K = 0xB                         -- 1:2048
       P1K = 0xA                         -- 1:1024
       P512  = 0x9                       -- 1:512
       P256  = 0x8                       -- 1:256
       P128  = 0x7                       -- 1:128
       P64  = 0x6                        -- 1:64
       P32  = 0x5                        -- 1:32
       P16  = 0x4                        -- 1:16
       P8  = 0x3                         -- 1:8
       P4  = 0x2                         -- 1:4
       P2  = 0x1                         -- 1:2
       P1  = 0x0                         -- 1:1
       }
--
-- CONFIG3L (0x7FFC)
--
--
-- CONFIG3H (0x7FFD)
--
pragma fuse_def CCP2MUX:5  0x1 {         -- ECCP2 MUX bit
       pin_C1 = 0x1                      -- ECCP2/P2A is multiplexed with RC1
       pin_RB3_RE7 = 0x0                 -- ECCP2/P2A is multiplexed with RE7 in Microcontroller mode or with RB3 in Extended Microcontroller mode
       }
--
