-- ------------------------------------------------
-- Title: JalV2 device include file for 18f87j93
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f87j93, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      for output when PORTx or pin_xy is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - {Microchip\MPLABX V6.25 \packs\Microchip}/.../...//PIC18F87J93.PIC
--
-- Notes:
--  - This file is generated by <pic2jal.py> script version 2.2
--  - File creation date/time: Sat Mar 22 19:15:24 2025
--
-- ------------------------------------------------
--
const  word  DEVICE_ID   = 0x50E0            -- ID for PIC programmer
const  word  CHIP_ID     = 0x8793            -- ID in chipdef_jallib
const  byte  PICTYPE[]   = "18F87J93"
--
include chipdef_jallib                -- common constants
--
pragma  target  cpu      PIC_16       -- (banks=16)
pragma  target  chip     18F87J93
pragma  target  bank     0x0100
pragma  stack            31
pragma  code             131064
pragma  data             0x0-0xF53
pragma  shared           0x0-0x5F,0xF60-0xFFF
--
var volatile byte _pic_accum at 0x0      -- (compiler)
--
const word   _FUSES_CT             = 6
const byte*3 _FUSE_BASE[_FUSES_CT] = {
                                       0x1FFF8,
                                       0x1FFF9,
                                       0x1FFFA,
                                       0x1FFFB,
                                       0x1FFFC,
                                       0x1FFFD 
                                     }
const byte   _FUSES[_FUSES_CT]     = {
                                       0xE1,     -- CONFIG1L
                                       0xF4,     -- CONFIG1H
                                       0xDF,     -- CONFIG2L
                                       0xFF,     -- CONFIG2H
                                       0xF2,     -- CONFIG3L
                                       0xF1      -- CONFIG3H
                                     }
--
-- ------------------------------------------------
var volatile byte   PADCFG1                   at { 0xF54 }
var volatile bit    PADCFG1_RTSECSEL0         at PADCFG1 : 1
var volatile bit*2  PADCFG1_RTSECSEL          at PADCFG1 : 1
var volatile bit    PADCFG1_RTSECSEL1         at PADCFG1 : 2
-- ------------------------------------------------
var volatile byte   CTMUICON                  at { 0xF55 }
var volatile bit*2  CTMUICON_IRNG             at CTMUICON : 0
var volatile bit*6  CTMUICON_ITRIM            at CTMUICON : 2
var volatile bit    CTMUICON_IRNG0            at CTMUICON : 0
var volatile bit    CTMUICON_IRNG1            at CTMUICON : 1
var volatile bit    CTMUICON_ITRIM0           at CTMUICON : 2
var volatile bit    CTMUICON_ITRIM1           at CTMUICON : 3
var volatile bit    CTMUICON_ITRIM2           at CTMUICON : 4
var volatile bit    CTMUICON_ITRIM3           at CTMUICON : 5
var volatile bit    CTMUICON_ITRIM4           at CTMUICON : 6
var volatile bit    CTMUICON_ITRIM5           at CTMUICON : 7
-- ------------------------------------------------
var volatile byte   CTMUCONL                  at { 0xF56 }
var volatile bit    CTMUCONL_EDG1STAT         at CTMUCONL : 0
var volatile bit    CTMUCONL_EDG2STAT         at CTMUCONL : 1
var volatile bit    CTMUCONL_EDG1SEL0         at CTMUCONL : 2
var volatile bit    CTMUCONL_EDG1SEL1         at CTMUCONL : 3
var volatile bit    CTMUCONL_EDG1POL          at CTMUCONL : 4
var volatile bit    CTMUCONL_EDG2SEL0         at CTMUCONL : 5
var volatile bit    CTMUCONL_EDG2SEL1         at CTMUCONL : 6
var volatile bit    CTMUCONL_EDG2POL          at CTMUCONL : 7
-- ------------------------------------------------
var volatile byte   CTMUCONH                  at { 0xF57 }
var volatile bit    CTMUCONH_CTTRIG           at CTMUCONH : 0
var volatile bit    CTMUCONH_IDISSEN          at CTMUCONH : 1
var volatile bit    CTMUCONH_EDGSEQEN         at CTMUCONH : 2
var volatile bit    CTMUCONH_EDGEN            at CTMUCONH : 3
var volatile bit    CTMUCONH_TGEN             at CTMUCONH : 4
var volatile bit    CTMUCONH_CTMUSIDL         at CTMUCONH : 5
var volatile bit    CTMUCONH_CTMUEN           at CTMUCONH : 7
-- ------------------------------------------------
var volatile byte   ALRMVALL                  at { 0xF58 }
-- ------------------------------------------------
var volatile byte   ALRMVALH                  at { 0xF59 }
-- ------------------------------------------------
var volatile byte   ALRMRPT                   at { 0xF5A }
var volatile bit    ALRMRPT_ARPT0             at ALRMRPT : 0
var volatile bit    ALRMRPT_ARPT1             at ALRMRPT : 1
var volatile bit    ALRMRPT_ARPT2             at ALRMRPT : 2
var volatile bit    ALRMRPT_ARPT3             at ALRMRPT : 3
var volatile bit    ALRMRPT_ARPT4             at ALRMRPT : 4
var volatile bit    ALRMRPT_ARPT5             at ALRMRPT : 5
var volatile bit    ALRMRPT_ARPT6             at ALRMRPT : 6
var volatile bit    ALRMRPT_ARPT7             at ALRMRPT : 7
-- ------------------------------------------------
var volatile byte   ALRMCFG                   at { 0xF5B }
var volatile bit*2  ALRMCFG_ALRMPTR           at ALRMCFG : 0
var volatile bit*4  ALRMCFG_AMASK             at ALRMCFG : 2
var volatile bit    ALRMCFG_CHIME             at ALRMCFG : 6
var volatile bit    ALRMCFG_ALRMEN            at ALRMCFG : 7
var volatile bit    ALRMCFG_ALRMPTR0          at ALRMCFG : 0
var volatile bit    ALRMCFG_ALRMPTR1          at ALRMCFG : 1
var volatile bit    ALRMCFG_AMASK0            at ALRMCFG : 2
var volatile bit    ALRMCFG_AMASK1            at ALRMCFG : 3
var volatile bit    ALRMCFG_AMASK2            at ALRMCFG : 4
var volatile bit    ALRMCFG_AMASK3            at ALRMCFG : 5
-- ------------------------------------------------
var volatile byte   RTCVALL                   at { 0xF5C }
-- ------------------------------------------------
var volatile byte   RTCVALH                   at { 0xF5D }
var volatile bit    RTCVALH_WAITE0            at RTCVALH : 0
var volatile bit    RTCVALH_WAITE1            at RTCVALH : 1
var volatile bit    RTCVALH_WAITM0            at RTCVALH : 2
var volatile bit    RTCVALH_WAITM1            at RTCVALH : 3
var volatile bit    RTCVALH_WAITM2            at RTCVALH : 4
var volatile bit    RTCVALH_WAITM3            at RTCVALH : 5
var volatile bit    RTCVALH_WAITB0            at RTCVALH : 6
var volatile bit    RTCVALH_WAITB1            at RTCVALH : 7
-- ------------------------------------------------
var volatile byte   RTCCAL                    at { 0xF5E }
var volatile bit    RTCCAL_CAL0               at RTCCAL : 0
var volatile bit    RTCCAL_CAL1               at RTCCAL : 1
var volatile bit    RTCCAL_CAL2               at RTCCAL : 2
var volatile bit    RTCCAL_CAL3               at RTCCAL : 3
var volatile bit    RTCCAL_CAL4               at RTCCAL : 4
var volatile bit    RTCCAL_CAL5               at RTCCAL : 5
var volatile bit    RTCCAL_CAL6               at RTCCAL : 6
var volatile bit    RTCCAL_CAL7               at RTCCAL : 7
-- ------------------------------------------------
var volatile byte   RTCCFG                    at { 0xF5F }
var volatile bit    RTCCFG_RTCPTR0            at RTCCFG : 0
var volatile bit    RTCCFG_RTCPTR1            at RTCCFG : 1
var volatile bit    RTCCFG_RTCOE              at RTCCFG : 2
var volatile bit    RTCCFG_HALFSEC            at RTCCFG : 3
var volatile bit    RTCCFG_RTCSYNC            at RTCCFG : 4
var volatile bit    RTCCFG_RTCWREN            at RTCCFG : 5
var volatile bit    RTCCFG_RTCEN              at RTCCFG : 7
-- ------------------------------------------------
var volatile byte   RCSTA2                    at { 0xF60 }
var volatile bit    RCSTA2_RX9D               at RCSTA2 : 0
var volatile bit    RCSTA2_OERR               at RCSTA2 : 1
var volatile bit    RCSTA2_FERR               at RCSTA2 : 2
var volatile bit    RCSTA2_ADDEN              at RCSTA2 : 3
var volatile bit    RCSTA2_CREN               at RCSTA2 : 4
var volatile bit    RCSTA2_SREN               at RCSTA2 : 5
var volatile bit    RCSTA2_RX9                at RCSTA2 : 6
var volatile bit    RCSTA2_SPEN               at RCSTA2 : 7
var volatile bit    RCSTA2_RCD8               at RCSTA2 : 0
var volatile bit    RCSTA2_RC9                at RCSTA2 : 6
var volatile bit    RCSTA2_NOT_RC8            at RCSTA2 : 6
var volatile bit    RCSTA2_RC8_9              at RCSTA2 : 6
var volatile bit    RCSTA2_RX9D2              at RCSTA2 : 0
var volatile bit    RCSTA2_OERR2              at RCSTA2 : 1
var volatile bit    RCSTA2_FERR2              at RCSTA2 : 2
var volatile bit    RCSTA2_ADDEN2             at RCSTA2 : 3
var volatile bit    RCSTA2_CREN2              at RCSTA2 : 4
var volatile bit    RCSTA2_SREN2              at RCSTA2 : 5
var volatile bit    RCSTA2_RX92               at RCSTA2 : 6
var volatile bit    RCSTA2_SPEN2              at RCSTA2 : 7
var volatile bit    RCSTA2_RCD82              at RCSTA2 : 0
var volatile bit    RCSTA2_RC92               at RCSTA2 : 6
var volatile bit    RCSTA2_RC8_92             at RCSTA2 : 6
-- ------------------------------------------------
var volatile byte   TXSTA2                    at { 0xF61 }
var volatile bit    TXSTA2_TX9D               at TXSTA2 : 0
var volatile bit    TXSTA2_TRMT               at TXSTA2 : 1
var volatile bit    TXSTA2_BRGH               at TXSTA2 : 2
var volatile bit    TXSTA2_SYNC               at TXSTA2 : 4
var volatile bit    TXSTA2_TXEN               at TXSTA2 : 5
var volatile bit    TXSTA2_TX9                at TXSTA2 : 6
var volatile bit    TXSTA2_CSRC               at TXSTA2 : 7
var volatile bit    TXSTA2_TXD8               at TXSTA2 : 0
var volatile bit    TXSTA2_TX8_9              at TXSTA2 : 6
var volatile bit    TXSTA2_NOT_TX8            at TXSTA2 : 6
var volatile bit    TXSTA2_TX9D2              at TXSTA2 : 0
var volatile bit    TXSTA2_TRMT2              at TXSTA2 : 1
var volatile bit    TXSTA2_BRGH2              at TXSTA2 : 2
var volatile bit    TXSTA2_SENDB2             at TXSTA2 : 3
var volatile bit    TXSTA2_SYNC2              at TXSTA2 : 4
var volatile bit    TXSTA2_TXEN2              at TXSTA2 : 5
var volatile bit    TXSTA2_TX92               at TXSTA2 : 6
var volatile bit    TXSTA2_CSRC2              at TXSTA2 : 7
var volatile bit    TXSTA2_TXD82              at TXSTA2 : 0
var volatile bit    TXSTA2_TX8_92             at TXSTA2 : 6
-- ------------------------------------------------
var volatile byte   TXREG2                    at { 0xF62 }
-- ------------------------------------------------
var volatile byte   RCREG2                    at { 0xF63 }
-- ------------------------------------------------
var volatile byte   SPBRG2                    at { 0xF64 }
alias               SPBRGL2                   is SPBRG2
-- ------------------------------------------------
var volatile byte   CCP2CON                   at { 0xF65 }
var volatile bit*4  CCP2CON_CCP2M             at CCP2CON : 0
alias               CCP2CON_MODE              is CCP2CON_CCP2M
var volatile bit*2  CCP2CON_DC2B              at CCP2CON : 4
var volatile bit    CCP2CON_CCP2M0            at CCP2CON : 0
var volatile bit    CCP2CON_CCP2M1            at CCP2CON : 1
var volatile bit    CCP2CON_CCP2M2            at CCP2CON : 2
var volatile bit    CCP2CON_CCP2M3            at CCP2CON : 3
var volatile bit    CCP2CON_DC2B0             at CCP2CON : 4
var volatile bit    CCP2CON_DC2B1             at CCP2CON : 5
var volatile bit    CCP2CON_DCCP2Y            at CCP2CON : 4
var volatile bit    CCP2CON_DCCP2X            at CCP2CON : 5
-- ------------------------------------------------
var volatile word   CCPR2                     at { 0xF66 }
-- ------------------------------------------------
var volatile byte   CCPR2L                    at { 0xF66 }
-- ------------------------------------------------
var volatile byte   CCPR2H                    at { 0xF67 }
-- ------------------------------------------------
var volatile byte   CCP1CON                   at { 0xF68 }
var volatile bit*4  CCP1CON_CCP1M             at CCP1CON : 0
alias               CCP1CON_MODE              is CCP1CON_CCP1M
var volatile bit*2  CCP1CON_DC1B              at CCP1CON : 4
var volatile bit    CCP1CON_CCP1M0            at CCP1CON : 0
var volatile bit    CCP1CON_CCP1M1            at CCP1CON : 1
var volatile bit    CCP1CON_CCP1M2            at CCP1CON : 2
var volatile bit    CCP1CON_CCP1M3            at CCP1CON : 3
var volatile bit    CCP1CON_DC1B0             at CCP1CON : 4
var volatile bit    CCP1CON_DC1B1             at CCP1CON : 5
var volatile bit    CCP1CON_DCCP1Y            at CCP1CON : 4
var volatile bit    CCP1CON_DCCP1X            at CCP1CON : 5
-- ------------------------------------------------
var volatile word   CCPR1                     at { 0xF69 }
-- ------------------------------------------------
var volatile byte   CCPR1L                    at { 0xF69 }
-- ------------------------------------------------
var volatile byte   CCPR1H                    at { 0xF6A }
-- ------------------------------------------------
var volatile byte   LCDDATA5                  at { 0xF6B }
var volatile bit    LCDDATA5_S40C0            at LCDDATA5 : 0
var volatile bit    LCDDATA5_S41C0            at LCDDATA5 : 1
var volatile bit    LCDDATA5_S42C0            at LCDDATA5 : 2
var volatile bit    LCDDATA5_S43C0            at LCDDATA5 : 3
var volatile bit    LCDDATA5_S44C0            at LCDDATA5 : 4
var volatile bit    LCDDATA5_S45C0            at LCDDATA5 : 5
var volatile bit    LCDDATA5_S46C0            at LCDDATA5 : 6
var volatile bit    LCDDATA5_S47C0            at LCDDATA5 : 7
var volatile bit    LCDDATA5_SEG40COM0        at LCDDATA5 : 0
var volatile bit    LCDDATA5_SEG41COM0        at LCDDATA5 : 1
var volatile bit    LCDDATA5_SEG42COM0        at LCDDATA5 : 2
var volatile bit    LCDDATA5_SEG43COM0        at LCDDATA5 : 3
var volatile bit    LCDDATA5_SEG44COM0        at LCDDATA5 : 4
var volatile bit    LCDDATA5_SEG45COM0        at LCDDATA5 : 5
var volatile bit    LCDDATA5_SEG46COM0        at LCDDATA5 : 6
var volatile bit    LCDDATA5_SEG47COM0        at LCDDATA5 : 7
var volatile bit    LCDDATA5_S40C15           at LCDDATA5 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA6                  at { 0xF6C }
var volatile bit    LCDDATA6_S00C1            at LCDDATA6 : 0
var volatile bit    LCDDATA6_S01C1            at LCDDATA6 : 1
var volatile bit    LCDDATA6_S02C1            at LCDDATA6 : 2
var volatile bit    LCDDATA6_S03C1            at LCDDATA6 : 3
var volatile bit    LCDDATA6_S04C1            at LCDDATA6 : 4
var volatile bit    LCDDATA6_S05C1            at LCDDATA6 : 5
var volatile bit    LCDDATA6_S06C1            at LCDDATA6 : 6
var volatile bit    LCDDATA6_S07C1            at LCDDATA6 : 7
var volatile bit    LCDDATA6_SEG0COM1         at LCDDATA6 : 0
var volatile bit    LCDDATA6_SEG1COM1         at LCDDATA6 : 1
var volatile bit    LCDDATA6_SEG2COM1         at LCDDATA6 : 2
var volatile bit    LCDDATA6_SEG3COM1         at LCDDATA6 : 3
var volatile bit    LCDDATA6_SEG4COM1         at LCDDATA6 : 4
var volatile bit    LCDDATA6_SEG5COM1         at LCDDATA6 : 5
var volatile bit    LCDDATA6_SEG6COM1         at LCDDATA6 : 6
var volatile bit    LCDDATA6_SEG7COM1         at LCDDATA6 : 7
var volatile bit    LCDDATA6_S0C1             at LCDDATA6 : 0
var volatile bit    LCDDATA6_S1C1             at LCDDATA6 : 1
var volatile bit    LCDDATA6_S2C1             at LCDDATA6 : 2
var volatile bit    LCDDATA6_S3C1             at LCDDATA6 : 3
var volatile bit    LCDDATA6_S4C1             at LCDDATA6 : 4
var volatile bit    LCDDATA6_S5C1             at LCDDATA6 : 5
var volatile bit    LCDDATA6_S6C1             at LCDDATA6 : 6
var volatile bit    LCDDATA6_S7C1             at LCDDATA6 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA7                  at { 0xF6D }
var volatile bit    LCDDATA7_S8C1             at LCDDATA7 : 0
var volatile bit    LCDDATA7_S9C1             at LCDDATA7 : 1
var volatile bit    LCDDATA7_S10C1            at LCDDATA7 : 2
var volatile bit    LCDDATA7_S11C1            at LCDDATA7 : 3
var volatile bit    LCDDATA7_S12C1            at LCDDATA7 : 4
var volatile bit    LCDDATA7_S13C1            at LCDDATA7 : 5
var volatile bit    LCDDATA7_S14C1            at LCDDATA7 : 6
var volatile bit    LCDDATA7_S15C1            at LCDDATA7 : 7
var volatile bit    LCDDATA7_SEG8COM1         at LCDDATA7 : 0
var volatile bit    LCDDATA7_SEG9COM1         at LCDDATA7 : 1
var volatile bit    LCDDATA7_SEG10COM1        at LCDDATA7 : 2
var volatile bit    LCDDATA7_SEG11COM1        at LCDDATA7 : 3
var volatile bit    LCDDATA7_SEG12COM1        at LCDDATA7 : 4
var volatile bit    LCDDATA7_SEG13COM1        at LCDDATA7 : 5
var volatile bit    LCDDATA7_SEG14COM1        at LCDDATA7 : 6
var volatile bit    LCDDATA7_SEG15COM1        at LCDDATA7 : 7
var volatile bit    LCDDATA7_S08C1            at LCDDATA7 : 0
var volatile bit    LCDDATA7_S09C1            at LCDDATA7 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA8                  at { 0xF6E }
var volatile bit    LCDDATA8_S16C1            at LCDDATA8 : 0
var volatile bit    LCDDATA8_S17C1            at LCDDATA8 : 1
var volatile bit    LCDDATA8_S18C1            at LCDDATA8 : 2
var volatile bit    LCDDATA8_S19C1            at LCDDATA8 : 3
var volatile bit    LCDDATA8_S20C1            at LCDDATA8 : 4
var volatile bit    LCDDATA8_S21C1            at LCDDATA8 : 5
var volatile bit    LCDDATA8_S22C1            at LCDDATA8 : 6
var volatile bit    LCDDATA8_S23C1            at LCDDATA8 : 7
var volatile bit    LCDDATA8_SEG16COM1        at LCDDATA8 : 0
var volatile bit    LCDDATA8_SEG17COM1        at LCDDATA8 : 1
var volatile bit    LCDDATA8_SEG18COM1        at LCDDATA8 : 2
var volatile bit    LCDDATA8_SEG19COM1        at LCDDATA8 : 3
var volatile bit    LCDDATA8_SEG20COM1        at LCDDATA8 : 4
var volatile bit    LCDDATA8_SEG21COM1        at LCDDATA8 : 5
var volatile bit    LCDDATA8_SEG22COM1        at LCDDATA8 : 6
var volatile bit    LCDDATA8_SEG23COM1        at LCDDATA8 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA9                  at { 0xF6F }
var volatile bit    LCDDATA9_S24C1            at LCDDATA9 : 0
var volatile bit    LCDDATA9_S25C1            at LCDDATA9 : 1
var volatile bit    LCDDATA9_S26C1            at LCDDATA9 : 2
var volatile bit    LCDDATA9_S27C1            at LCDDATA9 : 3
var volatile bit    LCDDATA9_S28C1            at LCDDATA9 : 4
var volatile bit    LCDDATA9_S29C1            at LCDDATA9 : 5
var volatile bit    LCDDATA9_S30C1            at LCDDATA9 : 6
var volatile bit    LCDDATA9_S31C1            at LCDDATA9 : 7
var volatile bit    LCDDATA9_SEG24COM1        at LCDDATA9 : 0
var volatile bit    LCDDATA9_SEG25COM1        at LCDDATA9 : 1
var volatile bit    LCDDATA9_SEG26COM1        at LCDDATA9 : 2
var volatile bit    LCDDATA9_SEG27COM1        at LCDDATA9 : 3
var volatile bit    LCDDATA9_SEG28COM1        at LCDDATA9 : 4
var volatile bit    LCDDATA9_SEG29COM1        at LCDDATA9 : 5
var volatile bit    LCDDATA9_SEG30COM1        at LCDDATA9 : 6
var volatile bit    LCDDATA9_SEG31COM1        at LCDDATA9 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA10                 at { 0xF70 }
var volatile bit    LCDDATA10_S32C1           at LCDDATA10 : 0
var volatile bit    LCDDATA10_S33C1           at LCDDATA10 : 1
var volatile bit    LCDDATA10_S34C1           at LCDDATA10 : 2
var volatile bit    LCDDATA10_S35C1           at LCDDATA10 : 3
var volatile bit    LCDDATA10_S36C1           at LCDDATA10 : 4
var volatile bit    LCDDATA10_S37C1           at LCDDATA10 : 5
var volatile bit    LCDDATA10_S38C1           at LCDDATA10 : 6
var volatile bit    LCDDATA10_S39C1           at LCDDATA10 : 7
var volatile bit    LCDDATA10_SEG32COM1       at LCDDATA10 : 0
var volatile bit    LCDDATA10_SEG33COM1       at LCDDATA10 : 1
var volatile bit    LCDDATA10_SEG34COM1       at LCDDATA10 : 2
var volatile bit    LCDDATA10_SEG35COM1       at LCDDATA10 : 3
var volatile bit    LCDDATA10_SEG36COM1       at LCDDATA10 : 4
var volatile bit    LCDDATA10_SEG37COM1       at LCDDATA10 : 5
var volatile bit    LCDDATA10_SEG38COM1       at LCDDATA10 : 6
var volatile bit    LCDDATA10_SEG39COM1       at LCDDATA10 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA11                 at { 0xF71 }
var volatile bit    LCDDATA11_S40C1           at LCDDATA11 : 0
var volatile bit    LCDDATA11_S41C1           at LCDDATA11 : 1
var volatile bit    LCDDATA11_S42C1           at LCDDATA11 : 2
var volatile bit    LCDDATA11_S43C1           at LCDDATA11 : 3
var volatile bit    LCDDATA11_S44C1           at LCDDATA11 : 4
var volatile bit    LCDDATA11_S45C1           at LCDDATA11 : 5
var volatile bit    LCDDATA11_S46C1           at LCDDATA11 : 6
var volatile bit    LCDDATA11_S47C1           at LCDDATA11 : 7
var volatile bit    LCDDATA11_SEG40COM1       at LCDDATA11 : 0
var volatile bit    LCDDATA11_SEG41COM1       at LCDDATA11 : 1
var volatile bit    LCDDATA11_SEG42COM1       at LCDDATA11 : 2
var volatile bit    LCDDATA11_SEG43COM1       at LCDDATA11 : 3
var volatile bit    LCDDATA11_SEG44COM1       at LCDDATA11 : 4
var volatile bit    LCDDATA11_SEG45COM1       at LCDDATA11 : 5
var volatile bit    LCDDATA11_SEG46COM1       at LCDDATA11 : 6
var volatile bit    LCDDATA11_SEG47COM1       at LCDDATA11 : 7
var volatile bit    LCDDATA11_ADMSK1          at LCDDATA11 : 1
var volatile bit    LCDDATA11_ADMSK2          at LCDDATA11 : 2
var volatile bit    LCDDATA11_ADMSK3          at LCDDATA11 : 3
var volatile bit    LCDDATA11_ADMSK4          at LCDDATA11 : 4
var volatile bit    LCDDATA11_ADMSK5          at LCDDATA11 : 5
-- ------------------------------------------------
var volatile byte   LCDDATA12                 at { 0xF72 }
var volatile bit    LCDDATA12_S00C2           at LCDDATA12 : 0
var volatile bit    LCDDATA12_S01C2           at LCDDATA12 : 1
var volatile bit    LCDDATA12_S02C2           at LCDDATA12 : 2
var volatile bit    LCDDATA12_S03C2           at LCDDATA12 : 3
var volatile bit    LCDDATA12_S04C2           at LCDDATA12 : 4
var volatile bit    LCDDATA12_S05C2           at LCDDATA12 : 5
var volatile bit    LCDDATA12_S06C2           at LCDDATA12 : 6
var volatile bit    LCDDATA12_S07C2           at LCDDATA12 : 7
var volatile bit    LCDDATA12_SEG0COM2        at LCDDATA12 : 0
var volatile bit    LCDDATA12_SEG1COM2        at LCDDATA12 : 1
var volatile bit    LCDDATA12_SEG2COM2        at LCDDATA12 : 2
var volatile bit    LCDDATA12_SEG3COM2        at LCDDATA12 : 3
var volatile bit    LCDDATA12_SEG4COM2        at LCDDATA12 : 4
var volatile bit    LCDDATA12_SEG5COM2        at LCDDATA12 : 5
var volatile bit    LCDDATA12_SEG6COM2        at LCDDATA12 : 6
var volatile bit    LCDDATA12_SEG7COM2        at LCDDATA12 : 7
var volatile bit    LCDDATA12_S0C2            at LCDDATA12 : 0
var volatile bit    LCDDATA12_S1C2            at LCDDATA12 : 1
var volatile bit    LCDDATA12_S2C2            at LCDDATA12 : 2
var volatile bit    LCDDATA12_S3C2            at LCDDATA12 : 3
var volatile bit    LCDDATA12_S4C2            at LCDDATA12 : 4
var volatile bit    LCDDATA12_S5C2            at LCDDATA12 : 5
var volatile bit    LCDDATA12_S6C2            at LCDDATA12 : 6
var volatile bit    LCDDATA12_S7C2            at LCDDATA12 : 7
var volatile bit    LCDDATA12_SSPM012         at LCDDATA12 : 0
var volatile bit    LCDDATA12_SSPM112         at LCDDATA12 : 1
var volatile bit    LCDDATA12_SSPM212         at LCDDATA12 : 2
var volatile bit    LCDDATA12_SSPM312         at LCDDATA12 : 3
-- ------------------------------------------------
var volatile byte   LCDDATA13                 at { 0xF73 }
var volatile bit    LCDDATA13_S8C2            at LCDDATA13 : 0
var volatile bit    LCDDATA13_S9C2            at LCDDATA13 : 1
var volatile bit    LCDDATA13_S10C2           at LCDDATA13 : 2
var volatile bit    LCDDATA13_S11C2           at LCDDATA13 : 3
var volatile bit    LCDDATA13_S12C2           at LCDDATA13 : 4
var volatile bit    LCDDATA13_S13C2           at LCDDATA13 : 5
var volatile bit    LCDDATA13_S14C2           at LCDDATA13 : 6
var volatile bit    LCDDATA13_S15C2           at LCDDATA13 : 7
var volatile bit    LCDDATA13_SEG8COM2        at LCDDATA13 : 0
var volatile bit    LCDDATA13_SEG9COM2        at LCDDATA13 : 1
var volatile bit    LCDDATA13_SEG10COM2       at LCDDATA13 : 2
var volatile bit    LCDDATA13_SEG11COM2       at LCDDATA13 : 3
var volatile bit    LCDDATA13_SEG12COM2       at LCDDATA13 : 4
var volatile bit    LCDDATA13_SEG13COM2       at LCDDATA13 : 5
var volatile bit    LCDDATA13_SEG14COM2       at LCDDATA13 : 6
var volatile bit    LCDDATA13_SEG15COM2       at LCDDATA13 : 7
var volatile bit    LCDDATA13_S08C2           at LCDDATA13 : 0
var volatile bit    LCDDATA13_S09C2           at LCDDATA13 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA14                 at { 0xF74 }
var volatile bit    LCDDATA14_S16C2           at LCDDATA14 : 0
var volatile bit    LCDDATA14_S17C2           at LCDDATA14 : 1
var volatile bit    LCDDATA14_S18C2           at LCDDATA14 : 2
var volatile bit    LCDDATA14_S19C2           at LCDDATA14 : 3
var volatile bit    LCDDATA14_S20C2           at LCDDATA14 : 4
var volatile bit    LCDDATA14_S21C2           at LCDDATA14 : 5
var volatile bit    LCDDATA14_S22C2           at LCDDATA14 : 6
var volatile bit    LCDDATA14_S23C2           at LCDDATA14 : 7
var volatile bit    LCDDATA14_SEG16COM2       at LCDDATA14 : 0
var volatile bit    LCDDATA14_SEG17COM2       at LCDDATA14 : 1
var volatile bit    LCDDATA14_SEG18COM2       at LCDDATA14 : 2
var volatile bit    LCDDATA14_SEG19COM2       at LCDDATA14 : 3
var volatile bit    LCDDATA14_SEG20COM2       at LCDDATA14 : 4
var volatile bit    LCDDATA14_SEG21COM2       at LCDDATA14 : 5
var volatile bit    LCDDATA14_SEG22COM2       at LCDDATA14 : 6
var volatile bit    LCDDATA14_SEG23COM2       at LCDDATA14 : 7
var volatile bit    LCDDATA14_MSK0            at LCDDATA14 : 0
var volatile bit    LCDDATA14_MSK1            at LCDDATA14 : 1
var volatile bit    LCDDATA14_MSK2            at LCDDATA14 : 2
var volatile bit    LCDDATA14_MSK3            at LCDDATA14 : 3
var volatile bit    LCDDATA14_MSK4            at LCDDATA14 : 4
var volatile bit    LCDDATA14_MSK5            at LCDDATA14 : 5
var volatile bit    LCDDATA14_MSK6            at LCDDATA14 : 6
var volatile bit    LCDDATA14_MSK7            at LCDDATA14 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA15                 at { 0xF75 }
var volatile bit    LCDDATA15_S24C2           at LCDDATA15 : 0
var volatile bit    LCDDATA15_S25C2           at LCDDATA15 : 1
var volatile bit    LCDDATA15_S26C2           at LCDDATA15 : 2
var volatile bit    LCDDATA15_S27C2           at LCDDATA15 : 3
var volatile bit    LCDDATA15_S28C2           at LCDDATA15 : 4
var volatile bit    LCDDATA15_S29C2           at LCDDATA15 : 5
var volatile bit    LCDDATA15_S30C2           at LCDDATA15 : 6
var volatile bit    LCDDATA15_S31C2           at LCDDATA15 : 7
var volatile bit    LCDDATA15_SEG24COM2       at LCDDATA15 : 0
var volatile bit    LCDDATA15_SEG25COM2       at LCDDATA15 : 1
var volatile bit    LCDDATA15_SEG26COM2       at LCDDATA15 : 2
var volatile bit    LCDDATA15_SEG27COM2       at LCDDATA15 : 3
var volatile bit    LCDDATA15_SEG28COM2       at LCDDATA15 : 4
var volatile bit    LCDDATA15_SEG29COM2       at LCDDATA15 : 5
var volatile bit    LCDDATA15_SEG30COM2       at LCDDATA15 : 6
var volatile bit    LCDDATA15_SEG31COM2       at LCDDATA15 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA16                 at { 0xF76 }
var volatile bit    LCDDATA16_S32C2           at LCDDATA16 : 0
var volatile bit    LCDDATA16_S33C2           at LCDDATA16 : 1
var volatile bit    LCDDATA16_S34C2           at LCDDATA16 : 2
var volatile bit    LCDDATA16_S35C2           at LCDDATA16 : 3
var volatile bit    LCDDATA16_S36C2           at LCDDATA16 : 4
var volatile bit    LCDDATA16_S37C2           at LCDDATA16 : 5
var volatile bit    LCDDATA16_S38C2           at LCDDATA16 : 6
var volatile bit    LCDDATA16_S39C2           at LCDDATA16 : 7
var volatile bit    LCDDATA16_SEG32COM2       at LCDDATA16 : 0
var volatile bit    LCDDATA16_SEG33COM2       at LCDDATA16 : 1
var volatile bit    LCDDATA16_SEG34COM2       at LCDDATA16 : 2
var volatile bit    LCDDATA16_SEG35COM2       at LCDDATA16 : 3
var volatile bit    LCDDATA16_SEG36COM2       at LCDDATA16 : 4
var volatile bit    LCDDATA16_SEG37COM2       at LCDDATA16 : 5
var volatile bit    LCDDATA16_SEG38COM2       at LCDDATA16 : 6
var volatile bit    LCDDATA16_SEG39COM2       at LCDDATA16 : 7
var volatile bit    LCDDATA16_T4CKPS016       at LCDDATA16 : 0
var volatile bit    LCDDATA16_T4CKPS116       at LCDDATA16 : 1
var volatile bit    LCDDATA16_T4OUTPS016      at LCDDATA16 : 3
var volatile bit    LCDDATA16_T4OUTPS116      at LCDDATA16 : 4
var volatile bit    LCDDATA16_T4OUTPS216      at LCDDATA16 : 5
var volatile bit    LCDDATA16_T4OUTPS316      at LCDDATA16 : 6
-- ------------------------------------------------
var volatile byte   LCDDATA17                 at { 0xF77 }
var volatile bit    LCDDATA17_S40C2           at LCDDATA17 : 0
var volatile bit    LCDDATA17_S41C2           at LCDDATA17 : 1
var volatile bit    LCDDATA17_S42C2           at LCDDATA17 : 2
var volatile bit    LCDDATA17_S43C2           at LCDDATA17 : 3
var volatile bit    LCDDATA17_S44C2           at LCDDATA17 : 4
var volatile bit    LCDDATA17_S45C2           at LCDDATA17 : 5
var volatile bit    LCDDATA17_S46C2           at LCDDATA17 : 6
var volatile bit    LCDDATA17_S47C2           at LCDDATA17 : 7
var volatile bit    LCDDATA17_SEG40COM2       at LCDDATA17 : 0
var volatile bit    LCDDATA17_SEG41COM2       at LCDDATA17 : 1
var volatile bit    LCDDATA17_SEG42COM2       at LCDDATA17 : 2
var volatile bit    LCDDATA17_SEG43COM2       at LCDDATA17 : 3
var volatile bit    LCDDATA17_SEG44COM2       at LCDDATA17 : 4
var volatile bit    LCDDATA17_SEG45COM2       at LCDDATA17 : 5
var volatile bit    LCDDATA17_SEG46COM2       at LCDDATA17 : 6
var volatile bit    LCDDATA17_SEG47COM2       at LCDDATA17 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA18                 at { 0xF78 }
var volatile bit    LCDDATA18_S00C3           at LCDDATA18 : 0
var volatile bit    LCDDATA18_S01C3           at LCDDATA18 : 1
var volatile bit    LCDDATA18_S02C3           at LCDDATA18 : 2
var volatile bit    LCDDATA18_S03C3           at LCDDATA18 : 3
var volatile bit    LCDDATA18_S04C3           at LCDDATA18 : 4
var volatile bit    LCDDATA18_S05C3           at LCDDATA18 : 5
var volatile bit    LCDDATA18_S06C3           at LCDDATA18 : 6
var volatile bit    LCDDATA18_S07C3           at LCDDATA18 : 7
var volatile bit    LCDDATA18_SEG00COM3       at LCDDATA18 : 0
var volatile bit    LCDDATA18_SEG01COM3       at LCDDATA18 : 1
var volatile bit    LCDDATA18_SEG02COM3       at LCDDATA18 : 2
var volatile bit    LCDDATA18_SEG03COM3       at LCDDATA18 : 3
var volatile bit    LCDDATA18_SEG04COM3       at LCDDATA18 : 4
var volatile bit    LCDDATA18_SEG05COM3       at LCDDATA18 : 5
var volatile bit    LCDDATA18_SEG06COM3       at LCDDATA18 : 6
var volatile bit    LCDDATA18_SEG07COM3       at LCDDATA18 : 7
var volatile bit    LCDDATA18_S0C3            at LCDDATA18 : 0
var volatile bit    LCDDATA18_S1C3            at LCDDATA18 : 1
var volatile bit    LCDDATA18_S2C3            at LCDDATA18 : 2
var volatile bit    LCDDATA18_S3C3            at LCDDATA18 : 3
var volatile bit    LCDDATA18_S4C3            at LCDDATA18 : 4
var volatile bit    LCDDATA18_S5C3            at LCDDATA18 : 5
var volatile bit    LCDDATA18_S6C3            at LCDDATA18 : 6
var volatile bit    LCDDATA18_S7C3            at LCDDATA18 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA19                 at { 0xF79 }
var volatile bit    LCDDATA19_S8C3            at LCDDATA19 : 0
var volatile bit    LCDDATA19_S9C3            at LCDDATA19 : 1
var volatile bit    LCDDATA19_S10C3           at LCDDATA19 : 2
var volatile bit    LCDDATA19_S11C3           at LCDDATA19 : 3
var volatile bit    LCDDATA19_S12C3           at LCDDATA19 : 4
var volatile bit    LCDDATA19_S13C3           at LCDDATA19 : 5
var volatile bit    LCDDATA19_S14C3           at LCDDATA19 : 6
var volatile bit    LCDDATA19_S15C3           at LCDDATA19 : 7
var volatile bit    LCDDATA19_SEG8COM3        at LCDDATA19 : 0
var volatile bit    LCDDATA19_SEG9COM3        at LCDDATA19 : 1
var volatile bit    LCDDATA19_SEG10COM3       at LCDDATA19 : 2
var volatile bit    LCDDATA19_SEG11COM3       at LCDDATA19 : 3
var volatile bit    LCDDATA19_SEG12COM3       at LCDDATA19 : 4
var volatile bit    LCDDATA19_SEG13COM3       at LCDDATA19 : 5
var volatile bit    LCDDATA19_SEG14COM3       at LCDDATA19 : 6
var volatile bit    LCDDATA19_SEG15COM3       at LCDDATA19 : 7
var volatile bit    LCDDATA19_S08C3           at LCDDATA19 : 0
var volatile bit    LCDDATA19_S09C3           at LCDDATA19 : 1
var volatile bit    LCDDATA19_T3CKPS019       at LCDDATA19 : 4
var volatile bit    LCDDATA19_T3CKPS119       at LCDDATA19 : 5
var volatile bit    LCDDATA19_TMR3CS019       at LCDDATA19 : 6
var volatile bit    LCDDATA19_TMR3CS119       at LCDDATA19 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA20                 at { 0xF7A }
var volatile bit    LCDDATA20_S16C3           at LCDDATA20 : 0
var volatile bit    LCDDATA20_S17C3           at LCDDATA20 : 1
var volatile bit    LCDDATA20_S18C3           at LCDDATA20 : 2
var volatile bit    LCDDATA20_S19C3           at LCDDATA20 : 3
var volatile bit    LCDDATA20_S20C3           at LCDDATA20 : 4
var volatile bit    LCDDATA20_S21C3           at LCDDATA20 : 5
var volatile bit    LCDDATA20_S22C3           at LCDDATA20 : 6
var volatile bit    LCDDATA20_S23C3           at LCDDATA20 : 7
var volatile bit    LCDDATA20_SEG16COM3       at LCDDATA20 : 0
var volatile bit    LCDDATA20_SEG17COM3       at LCDDATA20 : 1
var volatile bit    LCDDATA20_SEG18COM3       at LCDDATA20 : 2
var volatile bit    LCDDATA20_SEG19COM3       at LCDDATA20 : 3
var volatile bit    LCDDATA20_SEG20COM3       at LCDDATA20 : 4
var volatile bit    LCDDATA20_SEG21COM3       at LCDDATA20 : 5
var volatile bit    LCDDATA20_SEG22COM3       at LCDDATA20 : 6
var volatile bit    LCDDATA20_SEG23COM3       at LCDDATA20 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA21                 at { 0xF7B }
var volatile bit    LCDDATA21_S24C3           at LCDDATA21 : 0
var volatile bit    LCDDATA21_S25C3           at LCDDATA21 : 1
var volatile bit    LCDDATA21_S26C3           at LCDDATA21 : 2
var volatile bit    LCDDATA21_S27C3           at LCDDATA21 : 3
var volatile bit    LCDDATA21_S28C3           at LCDDATA21 : 4
var volatile bit    LCDDATA21_S29C3           at LCDDATA21 : 5
var volatile bit    LCDDATA21_S30C3           at LCDDATA21 : 6
var volatile bit    LCDDATA21_S31C3           at LCDDATA21 : 7
var volatile bit    LCDDATA21_SEG24COM3       at LCDDATA21 : 0
var volatile bit    LCDDATA21_SEG25COM3       at LCDDATA21 : 1
var volatile bit    LCDDATA21_SEG26COM3       at LCDDATA21 : 2
var volatile bit    LCDDATA21_SEG27COM3       at LCDDATA21 : 3
var volatile bit    LCDDATA21_SEG28COM3       at LCDDATA21 : 4
var volatile bit    LCDDATA21_SEG29COM3       at LCDDATA21 : 5
var volatile bit    LCDDATA21_SEG30COM3       at LCDDATA21 : 6
var volatile bit    LCDDATA21_SEG31COM3       at LCDDATA21 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA22                 at { 0xF7C }
var volatile bit    LCDDATA22_S32C3           at LCDDATA22 : 0
var volatile bit    LCDDATA22_S33C3           at LCDDATA22 : 1
var volatile bit    LCDDATA22_S34C3           at LCDDATA22 : 2
var volatile bit    LCDDATA22_S35C3           at LCDDATA22 : 3
var volatile bit    LCDDATA22_S36C3           at LCDDATA22 : 4
var volatile bit    LCDDATA22_S37C3           at LCDDATA22 : 5
var volatile bit    LCDDATA22_S38C3           at LCDDATA22 : 6
var volatile bit    LCDDATA22_S39C3           at LCDDATA22 : 7
var volatile bit    LCDDATA22_SEG32COM3       at LCDDATA22 : 0
var volatile bit    LCDDATA22_SEG33COM3       at LCDDATA22 : 1
var volatile bit    LCDDATA22_SEG34COM3       at LCDDATA22 : 2
var volatile bit    LCDDATA22_SEG35COM3       at LCDDATA22 : 3
var volatile bit    LCDDATA22_SEG36COM3       at LCDDATA22 : 4
var volatile bit    LCDDATA22_SEG37COM3       at LCDDATA22 : 5
var volatile bit    LCDDATA22_SEG38COM3       at LCDDATA22 : 6
var volatile bit    LCDDATA22_SEG39COM3       at LCDDATA22 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA23                 at { 0xF7D }
var volatile bit    LCDDATA23_S40C3           at LCDDATA23 : 0
var volatile bit    LCDDATA23_S41C3           at LCDDATA23 : 1
var volatile bit    LCDDATA23_S42C3           at LCDDATA23 : 2
var volatile bit    LCDDATA23_S43C3           at LCDDATA23 : 3
var volatile bit    LCDDATA23_S44C3           at LCDDATA23 : 4
var volatile bit    LCDDATA23_S45C3           at LCDDATA23 : 5
var volatile bit    LCDDATA23_S46C3           at LCDDATA23 : 6
var volatile bit    LCDDATA23_S47C3           at LCDDATA23 : 7
var volatile bit    LCDDATA23_SEG40COM3       at LCDDATA23 : 0
var volatile bit    LCDDATA23_SEG41COM3       at LCDDATA23 : 1
var volatile bit    LCDDATA23_SEG42COM3       at LCDDATA23 : 2
var volatile bit    LCDDATA23_SEG43COM3       at LCDDATA23 : 3
var volatile bit    LCDDATA23_SEG44COM3       at LCDDATA23 : 4
var volatile bit    LCDDATA23_SEG45COM3       at LCDDATA23 : 5
var volatile bit    LCDDATA23_SEG46COM3       at LCDDATA23 : 6
var volatile bit    LCDDATA23_SEG47COM3       at LCDDATA23 : 7
-- ------------------------------------------------
var volatile byte   BAUDCON1                  at { 0xF7E }
var volatile bit    BAUDCON1_ABDEN            at BAUDCON1 : 0
var volatile bit    BAUDCON1_WUE              at BAUDCON1 : 1
var volatile bit    BAUDCON1_BRG16            at BAUDCON1 : 3
var volatile bit    BAUDCON1_TXCKP            at BAUDCON1 : 4
var volatile bit    BAUDCON1_RXDTP            at BAUDCON1 : 5
var volatile bit    BAUDCON1_RCMT             at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDOVF           at BAUDCON1 : 7
var volatile bit    BAUDCON1_RCIDL            at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDEN1           at BAUDCON1 : 0
var volatile bit    BAUDCON1_WUE1             at BAUDCON1 : 1
var volatile bit    BAUDCON1_BRG161           at BAUDCON1 : 3
var volatile bit    BAUDCON1_CKTXP            at BAUDCON1 : 4
var volatile bit    BAUDCON1_DTRXP            at BAUDCON1 : 5
var volatile bit    BAUDCON1_RCIDL1           at BAUDCON1 : 6
var volatile bit    BAUDCON1_ABDOVF1          at BAUDCON1 : 7
var volatile bit    BAUDCON1_SCKP             at BAUDCON1 : 4
var volatile bit    BAUDCON1_DTRXP1           at BAUDCON1 : 5
var volatile bit    BAUDCON1_RCMT1            at BAUDCON1 : 6
var volatile bit    BAUDCON1_SCKP1            at BAUDCON1 : 4
var volatile bit    BAUDCON1_RXDTP1           at BAUDCON1 : 5
var volatile bit    BAUDCON1_TXCKP1           at BAUDCON1 : 4
--
alias               BAUDCON                   is BAUDCON1
alias               BAUDCON_ABDEN             is BAUDCON1_ABDEN
alias               BAUDCON_WUE               is BAUDCON1_WUE
alias               BAUDCON_BRG16             is BAUDCON1_BRG16
alias               BAUDCON_TXCKP             is BAUDCON1_TXCKP
alias               BAUDCON_RXDTP             is BAUDCON1_RXDTP
alias               BAUDCON_RCMT              is BAUDCON1_RCMT
alias               BAUDCON_ABDOVF            is BAUDCON1_ABDOVF
alias               BAUDCON_RCIDL             is BAUDCON1_RCIDL
alias               BAUDCON_ABDEN1            is BAUDCON1_ABDEN1
alias               BAUDCON_WUE1              is BAUDCON1_WUE1
alias               BAUDCON_BRG161            is BAUDCON1_BRG161
alias               BAUDCON_CKTXP             is BAUDCON1_CKTXP
alias               BAUDCON_DTRXP             is BAUDCON1_DTRXP
alias               BAUDCON_RCIDL1            is BAUDCON1_RCIDL1
alias               BAUDCON_ABDOVF1           is BAUDCON1_ABDOVF1
alias               BAUDCON_SCKP              is BAUDCON1_SCKP
alias               BAUDCON_DTRXP1            is BAUDCON1_DTRXP1
alias               BAUDCON_RCMT1             is BAUDCON1_RCMT1
alias               BAUDCON_SCKP1             is BAUDCON1_SCKP1
alias               BAUDCON_RXDTP1            is BAUDCON1_RXDTP1
alias               BAUDCON_TXCKP1            is BAUDCON1_TXCKP1
-- ------------------------------------------------
var volatile byte   SPBRGH1                   at { 0xF7F }
--
alias               SPBRGH                    is SPBRGH1
-- ------------------------------------------------
var volatile byte   PORTA                     at { 0xF80 }
var volatile bit    PORTA_RA0                 at PORTA : 0
var volatile bit    PORTA_RA1                 at PORTA : 1
var volatile bit    PORTA_RA2                 at PORTA : 2
var volatile bit    PORTA_RA3                 at PORTA : 3
var volatile bit    PORTA_RA4                 at PORTA : 4
var volatile bit    PORTA_RA5                 at PORTA : 5
var volatile bit    PORTA_RA6                 at PORTA : 6
var volatile bit    PORTA_RA7                 at PORTA : 7
var volatile bit    PORTA_AN0                 at PORTA : 0
var volatile bit    PORTA_AN1                 at PORTA : 1
var volatile bit    PORTA_AN2                 at PORTA : 2
var volatile bit    PORTA_AN3                 at PORTA : 3
var volatile bit    PORTA_TOCKI               at PORTA : 4
var volatile bit    PORTA_AN4                 at PORTA : 5
var volatile bit    PORTA_OSC2                at PORTA : 6
var volatile bit    PORTA_OSC1                at PORTA : 7
var volatile bit    PORTA_SEG18               at PORTA : 1
var volatile bit    PORTA_VREFM               at PORTA : 2
var volatile bit    PORTA_VREFP               at PORTA : 3
var volatile bit    PORTA_SEG14               at PORTA : 4
var volatile bit    PORTA_SEG15               at PORTA : 5
var volatile bit    PORTA_CLKO                at PORTA : 6
var volatile bit    PORTA_CLKI                at PORTA : 7
var volatile bit    PORTA_ULPWUIN             at PORTA : 0
var volatile bit    PORTA_LVDIN               at PORTA : 5
var volatile bit    PORTA_RJPU                at PORTA : 7
-- ------------------------------------------------
var volatile byte   PORTB                     at { 0xF81 }
var volatile bit    PORTB_RB0                 at PORTB : 0
var volatile bit    PORTB_RB1                 at PORTB : 1
var volatile bit    PORTB_RB2                 at PORTB : 2
var volatile bit    PORTB_RB3                 at PORTB : 3
var volatile bit    PORTB_RB4                 at PORTB : 4
var volatile bit    PORTB_RB5                 at PORTB : 5
var volatile bit    PORTB_RB6                 at PORTB : 6
var volatile bit    PORTB_RB7                 at PORTB : 7
var volatile bit    PORTB_INT0                at PORTB : 0
var volatile bit    PORTB_INT1                at PORTB : 1
var volatile bit    PORTB_INT2                at PORTB : 2
var volatile bit    PORTB_INT3                at PORTB : 3
var volatile bit    PORTB_KBI0                at PORTB : 4
var volatile bit    PORTB_KBI1                at PORTB : 5
var volatile bit    PORTB_KBI2                at PORTB : 6
var volatile bit    PORTB_KBI3                at PORTB : 7
var volatile bit    PORTB_SEG30               at PORTB : 0
var volatile bit    PORTB_SEG8                at PORTB : 1
var volatile bit    PORTB_SEG9                at PORTB : 2
var volatile bit    PORTB_SEG10               at PORTB : 3
var volatile bit    PORTB_SEG11               at PORTB : 4
var volatile bit    PORTB_SEG29               at PORTB : 5
var volatile bit    PORTB_PGC                 at PORTB : 6
var volatile bit    PORTB_PGD                 at PORTB : 7
var volatile bit    PORTB_CTED1               at PORTB : 2
var volatile bit    PORTB_CTED2               at PORTB : 3
var volatile bit    PORTB_CCP2_PA2            at PORTB : 3
-- ------------------------------------------------
var volatile byte   PORTC                     at { 0xF82 }
var volatile bit    PORTC_RC0                 at PORTC : 0
var volatile bit    PORTC_RC1                 at PORTC : 1
var volatile bit    PORTC_RC2                 at PORTC : 2
var volatile bit    PORTC_RC3                 at PORTC : 3
var volatile bit    PORTC_RC4                 at PORTC : 4
var volatile bit    PORTC_RC5                 at PORTC : 5
var volatile bit    PORTC_RC6                 at PORTC : 6
var volatile bit    PORTC_RC7                 at PORTC : 7
var volatile bit    PORTC_T1OSO               at PORTC : 0
var volatile bit    PORTC_T1OSI               at PORTC : 1
var volatile bit    PORTC_SCL                 at PORTC : 3
var volatile bit    PORTC_SDA                 at PORTC : 4
var volatile bit    PORTC_CK1                 at PORTC : 6
var volatile bit    PORTC_DT1                 at PORTC : 7
var volatile bit    PORTC_T13CKI              at PORTC : 0
var volatile bit    PORTC_CCP2                at PORTC : 1
var volatile bit    PORTC_CCP1                at PORTC : 2
var volatile bit    PORTC_SCK                 at PORTC : 3
var volatile bit    PORTC_SDI                 at PORTC : 4
var volatile bit    PORTC_SDO                 at PORTC : 5
var volatile bit    PORTC_TX1                 at PORTC : 6
var volatile bit    PORTC_RX1                 at PORTC : 7
var volatile bit    PORTC_SEG32               at PORTC : 1
var volatile bit    PORTC_SEG13               at PORTC : 2
var volatile bit    PORTC_SEG17               at PORTC : 3
var volatile bit    PORTC_SEG16               at PORTC : 4
var volatile bit    PORTC_SEG12               at PORTC : 5
var volatile bit    PORTC_SEG27               at PORTC : 6
var volatile bit    PORTC_SEG28               at PORTC : 7
var volatile bit    PORTC_PA2                 at PORTC : 1
var volatile bit    PORTC_PA1                 at PORTC : 2
-- ------------------------------------------------
var volatile byte   PORTD                     at { 0xF83 }
var volatile bit    PORTD_RD0                 at PORTD : 0
var volatile bit    PORTD_RD1                 at PORTD : 1
var volatile bit    PORTD_RD2                 at PORTD : 2
var volatile bit    PORTD_RD3                 at PORTD : 3
var volatile bit    PORTD_RD4                 at PORTD : 4
var volatile bit    PORTD_RD5                 at PORTD : 5
var volatile bit    PORTD_RD6                 at PORTD : 6
var volatile bit    PORTD_RD7                 at PORTD : 7
var volatile bit    PORTD_SEG0                at PORTD : 0
var volatile bit    PORTD_SEG1                at PORTD : 1
var volatile bit    PORTD_SEG2                at PORTD : 2
var volatile bit    PORTD_SEG3                at PORTD : 3
var volatile bit    PORTD_SEG4                at PORTD : 4
var volatile bit    PORTD_SEG5                at PORTD : 5
var volatile bit    PORTD_SEG6                at PORTD : 6
var volatile bit    PORTD_SEG7                at PORTD : 7
var volatile bit    PORTD_CTPLS               at PORTD : 0
var volatile bit    PORTD_SS2                 at PORTD : 7
-- ------------------------------------------------
var volatile byte   PORTE                     at { 0xF84 }
var volatile bit    PORTE_RE0                 at PORTE : 0
var volatile bit    PORTE_RE1                 at PORTE : 1
var volatile bit    PORTE_RE3                 at PORTE : 3
var volatile bit    PORTE_RE4                 at PORTE : 4
var volatile bit    PORTE_RE5                 at PORTE : 5
var volatile bit    PORTE_RE6                 at PORTE : 6
var volatile bit    PORTE_RE7                 at PORTE : 7
var volatile bit    PORTE_LCDBIAS1            at PORTE : 0
var volatile bit    PORTE_LCDBIAS2            at PORTE : 1
var volatile bit    PORTE_COM0                at PORTE : 3
var volatile bit    PORTE_COM1                at PORTE : 4
var volatile bit    PORTE_COM2                at PORTE : 5
var volatile bit    PORTE_COM3                at PORTE : 6
var volatile bit    PORTE_CCP2                at PORTE : 7
var volatile bit    PORTE_SEG31               at PORTE : 7
var volatile bit    PORTE_PD2                 at PORTE : 0
var volatile bit    PORTE_PC2                 at PORTE : 1
var volatile bit    PORTE_CCP9E               at PORTE : 3
var volatile bit    PORTE_CCP8E               at PORTE : 4
var volatile bit    PORTE_CCP7E               at PORTE : 5
var volatile bit    PORTE_CCP6E               at PORTE : 6
var volatile bit    PORTE_CCP2E               at PORTE : 7
var volatile bit    PORTE_RDE                 at PORTE : 0
var volatile bit    PORTE_WRE                 at PORTE : 1
var volatile bit    PORTE_PC3E                at PORTE : 3
var volatile bit    PORTE_PB3E                at PORTE : 4
var volatile bit    PORTE_PC1E                at PORTE : 5
var volatile bit    PORTE_PB1E                at PORTE : 6
var volatile bit    PORTE_PA2E                at PORTE : 7
-- ------------------------------------------------
var volatile byte   PORTF                     at { 0xF85 }
var volatile bit    PORTF_RF1                 at PORTF : 1
var volatile bit    PORTF_RF2                 at PORTF : 2
var volatile bit    PORTF_RF3                 at PORTF : 3
var volatile bit    PORTF_RF4                 at PORTF : 4
var volatile bit    PORTF_RF5                 at PORTF : 5
var volatile bit    PORTF_RF6                 at PORTF : 6
var volatile bit    PORTF_RF7                 at PORTF : 7
var volatile bit    PORTF_AN6                 at PORTF : 1
var volatile bit    PORTF_AN7                 at PORTF : 2
var volatile bit    PORTF_AN8                 at PORTF : 3
var volatile bit    PORTF_AN9                 at PORTF : 4
var volatile bit    PORTF_AN10                at PORTF : 5
var volatile bit    PORTF_AN11                at PORTF : 6
var volatile bit    PORTF_AN5                 at PORTF : 7
var volatile bit    PORTF_C2OUT               at PORTF : 1
var volatile bit    PORTF_C1OUT               at PORTF : 2
var volatile bit    PORTF_C2INB               at PORTF : 3
var volatile bit    PORTF_C2INA               at PORTF : 4
var volatile bit    PORTF_C1INB               at PORTF : 5
var volatile bit    PORTF_C1INA               at PORTF : 6
var volatile bit    PORTF_SS1                 at PORTF : 7
var volatile bit    PORTF_SEG19               at PORTF : 1
var volatile bit    PORTF_SEG20               at PORTF : 2
var volatile bit    PORTF_SEG21               at PORTF : 3
var volatile bit    PORTF_SEG22               at PORTF : 4
var volatile bit    PORTF_SEG23               at PORTF : 5
var volatile bit    PORTF_SEG24               at PORTF : 6
var volatile bit    PORTF_SEG25               at PORTF : 7
var volatile bit    PORTF_C1OUTF              at PORTF : 1
var volatile bit    PORTF_C2OUTF              at PORTF : 2
var volatile bit    PORTF_CVREF               at PORTF : 5
-- ------------------------------------------------
var volatile byte   PORTG                     at { 0xF86 }
var volatile bit    PORTG_RG0                 at PORTG : 0
var volatile bit    PORTG_RG1                 at PORTG : 1
var volatile bit    PORTG_RG2                 at PORTG : 2
var volatile bit    PORTG_RG3                 at PORTG : 3
var volatile bit    PORTG_RG4                 at PORTG : 4
var volatile bit    PORTG_RJPU                at PORTG : 5
var volatile bit    PORTG_REPU                at PORTG : 6
var volatile bit    PORTG_RDPU                at PORTG : 7
var volatile bit    PORTG_LCDBIAS0            at PORTG : 0
var volatile bit    PORTG_CK2                 at PORTG : 1
var volatile bit    PORTG_DT2                 at PORTG : 2
var volatile bit    PORTG_VLCAP2              at PORTG : 3
var volatile bit    PORTG_SEG26               at PORTG : 4
var volatile bit    PORTG_TX2                 at PORTG : 1
var volatile bit    PORTG_RX2                 at PORTG : 2
var volatile bit    PORTG_RTCC                at PORTG : 4
var volatile bit    PORTG_VLCAP1              at PORTG : 2
var volatile bit    PORTG_C3OUTG              at PORTG : 1
var volatile bit    PORTG_RG5                 at PORTG : 5
var volatile bit    PORTG_RG6                 at PORTG : 6
var volatile bit    PORTG_RG7                 at PORTG : 7
-- ------------------------------------------------
var volatile byte   PORTH                     at { 0xF87 }
var volatile bit    PORTH_RH0                 at PORTH : 0
var volatile bit    PORTH_RH1                 at PORTH : 1
var volatile bit    PORTH_RH2                 at PORTH : 2
var volatile bit    PORTH_RH3                 at PORTH : 3
var volatile bit    PORTH_RH4                 at PORTH : 4
var volatile bit    PORTH_RH5                 at PORTH : 5
var volatile bit    PORTH_RH6                 at PORTH : 6
var volatile bit    PORTH_RH7                 at PORTH : 7
var volatile bit    PORTH_SEG47               at PORTH : 0
var volatile bit    PORTH_SEG46               at PORTH : 1
var volatile bit    PORTH_SEG45               at PORTH : 2
var volatile bit    PORTH_SEG44               at PORTH : 3
var volatile bit    PORTH_SEG40               at PORTH : 4
var volatile bit    PORTH_SEG41               at PORTH : 5
var volatile bit    PORTH_SEG42               at PORTH : 6
var volatile bit    PORTH_SEG43               at PORTH : 7
var volatile bit    PORTH_CCP9                at PORTH : 4
var volatile bit    PORTH_CCP8                at PORTH : 5
var volatile bit    PORTH_CCP7                at PORTH : 6
var volatile bit    PORTH_CCP6                at PORTH : 7
var volatile bit    PORTH_PC3                 at PORTH : 4
var volatile bit    PORTH_PB3                 at PORTH : 5
var volatile bit    PORTH_PC1                 at PORTH : 6
var volatile bit    PORTH_PB1                 at PORTH : 7
-- ------------------------------------------------
var volatile byte   PORTJ                     at { 0xF88 }
var volatile bit    PORTJ_RJ0                 at PORTJ : 0
var volatile bit    PORTJ_RJ1                 at PORTJ : 1
var volatile bit    PORTJ_RJ2                 at PORTJ : 2
var volatile bit    PORTJ_RJ3                 at PORTJ : 3
var volatile bit    PORTJ_RJ4                 at PORTJ : 4
var volatile bit    PORTJ_RJ5                 at PORTJ : 5
var volatile bit    PORTJ_RJ6                 at PORTJ : 6
var volatile bit    PORTJ_RJ7                 at PORTJ : 7
var volatile bit    PORTJ_SEG33               at PORTJ : 1
var volatile bit    PORTJ_SEG34               at PORTJ : 2
var volatile bit    PORTJ_SEG35               at PORTJ : 3
var volatile bit    PORTJ_SEG39               at PORTJ : 4
var volatile bit    PORTJ_SEG38               at PORTJ : 5
var volatile bit    PORTJ_SEG37               at PORTJ : 6
var volatile bit    PORTJ_SEG36               at PORTJ : 7
-- ------------------------------------------------
var volatile byte   LATA                      at { 0xF89 }
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA0                at LATA : 0
var volatile bit    pin_A0                    at PORTA : 0
alias               pin_AN0                   is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                at LATA : 1
var volatile bit    pin_A1                    at PORTA : 1
alias               pin_AN1                   is pin_A1
alias               pin_SEG18                 is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                at LATA : 2
var volatile bit    pin_A2                    at PORTA : 2
alias               pin_AN2                   is pin_A2
alias               pin_VREF_NEG              is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                at LATA : 3
var volatile bit    pin_A3                    at PORTA : 3
alias               pin_AN3                   is pin_A3
alias               pin_VREF_POS              is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                at LATA : 4
var volatile bit    pin_A4                    at PORTA : 4
alias               pin_T0CKI                 is pin_A4
alias               pin_SEG14                 is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                at LATA : 5
var volatile bit    pin_A5                    at PORTA : 5
alias               pin_AN4                   is pin_A5
alias               pin_SEG15                 is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                at LATA : 6
var volatile bit    pin_A6                    at PORTA : 6
alias               pin_OSC2                  is pin_A6
alias               pin_CLKO                  is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA7                at LATA : 7
var volatile bit    pin_A7                    at PORTA : 7
alias               pin_OSC1                  is pin_A7
alias               pin_CLKI                  is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LA0                  at LATA : 0
var volatile bit    LATA_LA1                  at LATA : 1
var volatile bit    LATA_LA2                  at LATA : 2
var volatile bit    LATA_LA3                  at LATA : 3
var volatile bit    LATA_LA4                  at LATA : 4
var volatile bit    LATA_LA5                  at LATA : 5
var volatile bit    LATA_LA6                  at LATA : 6
var volatile bit    LATA_LA7                  at LATA : 7
-- ------------------------------------------------
var volatile byte   LATB                      at { 0xF8A }
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB0                at LATB : 0
var volatile bit    pin_B0                    at PORTB : 0
alias               pin_SEG30                 is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                at LATB : 1
var volatile bit    pin_B1                    at PORTB : 1
alias               pin_SEG8                  is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                at LATB : 2
var volatile bit    pin_B2                    at PORTB : 2
alias               pin_SEG9                  is pin_B2
alias               pin_CTED1                 is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                at LATB : 3
var volatile bit    pin_B3                    at PORTB : 3
alias               pin_SEG10                 is pin_B3
alias               pin_CTED2                 is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                at LATB : 4
var volatile bit    pin_B4                    at PORTB : 4
alias               pin_KBI0                  is pin_B4
alias               pin_SEG11                 is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                at LATB : 5
var volatile bit    pin_B5                    at PORTB : 5
alias               pin_KBI1                  is pin_B5
alias               pin_SEG29                 is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                at LATB : 6
var volatile bit    pin_B6                    at PORTB : 6
alias               pin_KBI2                  is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB7                at LATB : 7
var volatile bit    pin_B7                    at PORTB : 7
alias               pin_KBI3                  is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LB0                  at LATB : 0
var volatile bit    LATB_LB1                  at LATB : 1
var volatile bit    LATB_LB2                  at LATB : 2
var volatile bit    LATB_LB3                  at LATB : 3
var volatile bit    LATB_LB4                  at LATB : 4
var volatile bit    LATB_LB5                  at LATB : 5
var volatile bit    LATB_LB6                  at LATB : 6
var volatile bit    LATB_LB7                  at LATB : 7
-- ------------------------------------------------
var volatile byte   LATC                      at { 0xF8B }
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC0                at LATC : 0
var volatile bit    pin_C0                    at PORTC : 0
alias               pin_T1OSO                 is pin_C0
alias               pin_T13CKI                is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                at LATC : 1
var volatile bit    pin_C1                    at PORTC : 1
alias               pin_T1OSI                 is pin_C1
alias               pin_CCP2_RC1              is pin_C1
alias               pin_SEG32                 is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                at LATC : 2
var volatile bit    pin_C2                    at PORTC : 2
alias               pin_CCP1                  is pin_C2
alias               pin_SEG13                 is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                at LATC : 3
var volatile bit    pin_C3                    at PORTC : 3
alias               pin_SCK                   is pin_C3
alias               pin_SCL                   is pin_C3
alias               pin_SEG17                 is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                at LATC : 4
var volatile bit    pin_C4                    at PORTC : 4
alias               pin_SDI                   is pin_C4
alias               pin_SDA                   is pin_C4
alias               pin_SEG16                 is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                at LATC : 5
var volatile bit    pin_C5                    at PORTC : 5
alias               pin_SDO                   is pin_C5
alias               pin_SEG12                 is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                at LATC : 6
var volatile bit    pin_C6                    at PORTC : 6
alias               pin_TX1                   is pin_C6
alias               pin_TX                    is pin_C6
alias               pin_CK1                   is pin_C6
alias               pin_CK                    is pin_C6
alias               pin_SEG27                 is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC7                at LATC : 7
var volatile bit    pin_C7                    at PORTC : 7
alias               pin_RX1                   is pin_C7
alias               pin_RX                    is pin_C7
alias               pin_DT1                   is pin_C7
alias               pin_DT                    is pin_C7
alias               pin_SEG28                 is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LC0                  at LATC : 0
var volatile bit    LATC_LC1                  at LATC : 1
var volatile bit    LATC_LC2                  at LATC : 2
var volatile bit    LATC_LC3                  at LATC : 3
var volatile bit    LATC_LC4                  at LATC : 4
var volatile bit    LATC_LC5                  at LATC : 5
var volatile bit    LATC_LC6                  at LATC : 6
var volatile bit    LATC_LC7                  at LATC : 7
-- ------------------------------------------------
var volatile byte   LATD                      at { 0xF8C }
--
procedure PORTD'put(byte in x at LATD) is
   pragma inline
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (PORTD >> 4)
end function
--
var volatile bit    LATD_LATD0                at LATD : 0
var volatile bit    pin_D0                    at PORTD : 0
alias               pin_SEG0                  is pin_D0
alias               pin_CTPLS                 is pin_D0
--
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1                at LATD : 1
var volatile bit    pin_D1                    at PORTD : 1
alias               pin_SEG1                  is pin_D1
--
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2                at LATD : 2
var volatile bit    pin_D2                    at PORTD : 2
alias               pin_SEG2                  is pin_D2
--
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3                at LATD : 3
var volatile bit    pin_D3                    at PORTD : 3
alias               pin_SEG3                  is pin_D3
--
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4                at LATD : 4
var volatile bit    pin_D4                    at PORTD : 4
alias               pin_SEG4                  is pin_D4
--
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5                at LATD : 5
var volatile bit    pin_D5                    at PORTD : 5
alias               pin_SEG5                  is pin_D5
--
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6                at LATD : 6
var volatile bit    pin_D6                    at PORTD : 6
alias               pin_SEG6                  is pin_D6
--
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD7                at LATD : 7
var volatile bit    pin_D7                    at PORTD : 7
alias               pin_SEG7                  is pin_D7
--
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LD0                  at LATD : 0
var volatile bit    LATD_LD1                  at LATD : 1
var volatile bit    LATD_LD2                  at LATD : 2
var volatile bit    LATD_LD3                  at LATD : 3
var volatile bit    LATD_LD4                  at LATD : 4
var volatile bit    LATD_LD5                  at LATD : 5
var volatile bit    LATD_LD6                  at LATD : 6
var volatile bit    LATD_LD7                  at LATD : 7
-- ------------------------------------------------
var volatile byte   LATE                      at { 0xF8D }
--
procedure PORTE'put(byte in x at LATE) is
   pragma inline
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (PORTE >> 4)
end function
--
var volatile bit    LATE_LATE0                at LATE : 0
var volatile bit    pin_E0                    at PORTE : 0
alias               pin_LCDBIAS1              is pin_E0
--
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1                at LATE : 1
var volatile bit    pin_E1                    at PORTE : 1
alias               pin_LCDBIAS2              is pin_E1
--
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE3                at LATE : 3
var volatile bit    pin_E3                    at PORTE : 3
alias               pin_COM0                  is pin_E3
--
procedure pin_E3'put(bit in x at LATE : 3) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE4                at LATE : 4
var volatile bit    pin_E4                    at PORTE : 4
alias               pin_COM1                  is pin_E4
--
procedure pin_E4'put(bit in x at LATE : 4) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE5                at LATE : 5
var volatile bit    pin_E5                    at PORTE : 5
alias               pin_COM2                  is pin_E5
--
procedure pin_E5'put(bit in x at LATE : 5) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE6                at LATE : 6
var volatile bit    pin_E6                    at PORTE : 6
alias               pin_COM3                  is pin_E6
--
procedure pin_E6'put(bit in x at LATE : 6) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE7                at LATE : 7
var volatile bit    pin_E7                    at PORTE : 7
alias               pin_CCP2_RE7              is pin_E7
alias               pin_SEG31                 is pin_E7
--
procedure pin_E7'put(bit in x at LATE : 7) is
   pragma inline
end procedure
--
var volatile bit    LATE_LE0                  at LATE : 0
var volatile bit    LATE_LE1                  at LATE : 1
var volatile bit    LATE_LE3                  at LATE : 3
var volatile bit    LATE_LE4                  at LATE : 4
var volatile bit    LATE_LE5                  at LATE : 5
var volatile bit    LATE_LE6                  at LATE : 6
var volatile bit    LATE_LE7                  at LATE : 7
-- ------------------------------------------------
var volatile byte   LATF                      at { 0xF8E }
--
procedure PORTF'put(byte in x at LATF) is
   pragma inline
end procedure
--
procedure PORTF_low'put(byte in x) is
   LATF = (LATF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low'get() return byte is
   return (PORTF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   LATF = (LATF & 0x0F) | (x << 4)
end procedure
function PORTF_high'get() return byte is
   return (PORTF >> 4)
end function
--
var volatile bit    LATF_LATF1                at LATF : 1
var volatile bit    pin_F1                    at PORTF : 1
alias               pin_AN6                   is pin_F1
alias               pin_C2OUT                 is pin_F1
alias               pin_SEG19                 is pin_F1
--
procedure pin_F1'put(bit in x at LATF : 1) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF2                at LATF : 2
var volatile bit    pin_F2                    at PORTF : 2
alias               pin_AN7                   is pin_F2
alias               pin_C1OUT                 is pin_F2
alias               pin_SEG20                 is pin_F2
--
procedure pin_F2'put(bit in x at LATF : 2) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF3                at LATF : 3
var volatile bit    pin_F3                    at PORTF : 3
alias               pin_AN8                   is pin_F3
alias               pin_SEG21                 is pin_F3
alias               pin_C2INB                 is pin_F3
--
procedure pin_F3'put(bit in x at LATF : 3) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF4                at LATF : 4
var volatile bit    pin_F4                    at PORTF : 4
alias               pin_AN9                   is pin_F4
alias               pin_SEG22                 is pin_F4
alias               pin_C2INA                 is pin_F4
--
procedure pin_F4'put(bit in x at LATF : 4) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF5                at LATF : 5
var volatile bit    pin_F5                    at PORTF : 5
alias               pin_AN10                  is pin_F5
alias               pin_CVREF                 is pin_F5
alias               pin_SEG23                 is pin_F5
alias               pin_C1INB                 is pin_F5
--
procedure pin_F5'put(bit in x at LATF : 5) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF6                at LATF : 6
var volatile bit    pin_F6                    at PORTF : 6
alias               pin_AN11                  is pin_F6
alias               pin_SEG24                 is pin_F6
alias               pin_C1INA                 is pin_F6
--
procedure pin_F6'put(bit in x at LATF : 6) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF7                at LATF : 7
var volatile bit    pin_F7                    at PORTF : 7
alias               pin_AN5                   is pin_F7
alias               pin_SS                    is pin_F7
alias               pin_SEG25                 is pin_F7
--
procedure pin_F7'put(bit in x at LATF : 7) is
   pragma inline
end procedure
--
var volatile bit    LATF_LF1                  at LATF : 1
var volatile bit    LATF_LF2                  at LATF : 2
var volatile bit    LATF_LF3                  at LATF : 3
var volatile bit    LATF_LF4                  at LATF : 4
var volatile bit    LATF_LF5                  at LATF : 5
var volatile bit    LATF_LF6                  at LATF : 6
var volatile bit    LATF_LF7                  at LATF : 7
-- ------------------------------------------------
var volatile byte   LATG                      at { 0xF8F }
--
procedure PORTG'put(byte in x at LATG) is
   pragma inline
end procedure
--
procedure PORTG_low'put(byte in x) is
   LATG = (LATG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low'get() return byte is
   return (PORTG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   LATG = (LATG & 0x0F) | (x << 4)
end procedure
function PORTG_high'get() return byte is
   return (PORTG >> 4)
end function
--
var volatile bit    LATG_LATG0                at LATG : 0
var volatile bit    pin_G0                    at PORTG : 0
alias               pin_LCDBIAS0              is pin_G0
--
procedure pin_G0'put(bit in x at LATG : 0) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG1                at LATG : 1
var volatile bit    pin_G1                    at PORTG : 1
alias               pin_TX2                   is pin_G1
alias               pin_CK2                   is pin_G1
--
procedure pin_G1'put(bit in x at LATG : 1) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG2                at LATG : 2
var volatile bit    pin_G2                    at PORTG : 2
alias               pin_RX2                   is pin_G2
alias               pin_DT2                   is pin_G2
alias               pin_VLCAP1                is pin_G2
--
procedure pin_G2'put(bit in x at LATG : 2) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG3                at LATG : 3
var volatile bit    pin_G3                    at PORTG : 3
alias               pin_VLCAP2                is pin_G3
--
procedure pin_G3'put(bit in x at LATG : 3) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG4                at LATG : 4
var volatile bit    pin_G4                    at PORTG : 4
alias               pin_SEG26                 is pin_G4
alias               pin_RTCC                  is pin_G4
--
procedure pin_G4'put(bit in x at LATG : 4) is
   pragma inline
end procedure
--
var volatile bit    LATG_U1OD                 at LATG : 6
var volatile bit    LATG_U2OD                 at LATG : 7
var volatile bit    LATG_LG0                  at LATG : 0
var volatile bit    LATG_LG1                  at LATG : 1
var volatile bit    LATG_LG2                  at LATG : 2
var volatile bit    LATG_LG3                  at LATG : 3
var volatile bit    LATG_LG4                  at LATG : 4
-- ------------------------------------------------
var volatile byte   LATH                      at { 0xF90 }
--
procedure PORTH'put(byte in x at LATH) is
   pragma inline
end procedure
--
procedure PORTH_low'put(byte in x) is
   LATH = (LATH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low'get() return byte is
   return (PORTH & 0x0F)
end function
--
procedure PORTH_high'put(byte in x) is
   LATH = (LATH & 0x0F) | (x << 4)
end procedure
function PORTH_high'get() return byte is
   return (PORTH >> 4)
end function
--
var volatile bit    LATH_LATH0                at LATH : 0
var volatile bit    pin_H0                    at PORTH : 0
alias               pin_SEG47                 is pin_H0
--
procedure pin_H0'put(bit in x at LATH : 0) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH1                at LATH : 1
var volatile bit    pin_H1                    at PORTH : 1
alias               pin_SEG46                 is pin_H1
--
procedure pin_H1'put(bit in x at LATH : 1) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH2                at LATH : 2
var volatile bit    pin_H2                    at PORTH : 2
alias               pin_SEG45                 is pin_H2
--
procedure pin_H2'put(bit in x at LATH : 2) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH3                at LATH : 3
var volatile bit    pin_H3                    at PORTH : 3
alias               pin_SEG44                 is pin_H3
--
procedure pin_H3'put(bit in x at LATH : 3) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH4                at LATH : 4
var volatile bit    pin_H4                    at PORTH : 4
alias               pin_SEG40                 is pin_H4
--
procedure pin_H4'put(bit in x at LATH : 4) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH5                at LATH : 5
var volatile bit    pin_H5                    at PORTH : 5
alias               pin_SEG41                 is pin_H5
--
procedure pin_H5'put(bit in x at LATH : 5) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH6                at LATH : 6
var volatile bit    pin_H6                    at PORTH : 6
alias               pin_SEG42                 is pin_H6
--
procedure pin_H6'put(bit in x at LATH : 6) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH7                at LATH : 7
var volatile bit    pin_H7                    at PORTH : 7
alias               pin_SEG43                 is pin_H7
--
procedure pin_H7'put(bit in x at LATH : 7) is
   pragma inline
end procedure
--
var volatile bit    LATH_LH0                  at LATH : 0
var volatile bit    LATH_LH1                  at LATH : 1
var volatile bit    LATH_LH2                  at LATH : 2
var volatile bit    LATH_LH3                  at LATH : 3
var volatile bit    LATH_LH4                  at LATH : 4
var volatile bit    LATH_LH5                  at LATH : 5
var volatile bit    LATH_LH6                  at LATH : 6
var volatile bit    LATH_LH7                  at LATH : 7
-- ------------------------------------------------
var volatile byte   LATJ                      at { 0xF91 }
--
procedure PORTJ'put(byte in x at LATJ) is
   pragma inline
end procedure
--
procedure PORTJ_low'put(byte in x) is
   LATJ = (LATJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low'get() return byte is
   return (PORTJ & 0x0F)
end function
--
procedure PORTJ_high'put(byte in x) is
   LATJ = (LATJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high'get() return byte is
   return (PORTJ >> 4)
end function
--
var volatile bit    LATJ_LATJ0                at LATJ : 0
var volatile bit    pin_J0                    at PORTJ : 0
--
procedure pin_J0'put(bit in x at LATJ : 0) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ1                at LATJ : 1
var volatile bit    pin_J1                    at PORTJ : 1
alias               pin_SEG33                 is pin_J1
--
procedure pin_J1'put(bit in x at LATJ : 1) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ2                at LATJ : 2
var volatile bit    pin_J2                    at PORTJ : 2
alias               pin_SEG34                 is pin_J2
--
procedure pin_J2'put(bit in x at LATJ : 2) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ3                at LATJ : 3
var volatile bit    pin_J3                    at PORTJ : 3
alias               pin_SEG35                 is pin_J3
--
procedure pin_J3'put(bit in x at LATJ : 3) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ4                at LATJ : 4
var volatile bit    pin_J4                    at PORTJ : 4
alias               pin_SEG39                 is pin_J4
--
procedure pin_J4'put(bit in x at LATJ : 4) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ5                at LATJ : 5
var volatile bit    pin_J5                    at PORTJ : 5
alias               pin_SEG38                 is pin_J5
--
procedure pin_J5'put(bit in x at LATJ : 5) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ6                at LATJ : 6
var volatile bit    pin_J6                    at PORTJ : 6
alias               pin_SEG37                 is pin_J6
--
procedure pin_J6'put(bit in x at LATJ : 6) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ7                at LATJ : 7
var volatile bit    pin_J7                    at PORTJ : 7
alias               pin_SEG36                 is pin_J7
--
procedure pin_J7'put(bit in x at LATJ : 7) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LJ0                  at LATJ : 0
var volatile bit    LATJ_LJ1                  at LATJ : 1
var volatile bit    LATJ_LJ2                  at LATJ : 2
var volatile bit    LATJ_LJ3                  at LATJ : 3
var volatile bit    LATJ_LJ4                  at LATJ : 4
var volatile bit    LATJ_LJ5                  at LATJ : 5
var volatile bit    LATJ_LJ6                  at LATJ : 6
var volatile bit    LATJ_LJ7                  at LATJ : 7
-- ------------------------------------------------
var volatile byte   TRISA                     at { 0xF92 }
alias               PORTA_direction           is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA0              at TRISA : 0
var volatile bit    pin_A0_direction          at TRISA : 0
alias               pin_AN0_direction         is pin_A0_direction
--
var volatile bit    TRISA_TRISA1              at TRISA : 1
var volatile bit    pin_A1_direction          at TRISA : 1
alias               pin_AN1_direction         is pin_A1_direction
alias               pin_SEG18_direction       is pin_A1_direction
--
var volatile bit    TRISA_TRISA2              at TRISA : 2
var volatile bit    pin_A2_direction          at TRISA : 2
alias               pin_AN2_direction         is pin_A2_direction
alias               pin_VREF_NEG_direction    is pin_A2_direction
--
var volatile bit    TRISA_TRISA3              at TRISA : 3
var volatile bit    pin_A3_direction          at TRISA : 3
alias               pin_AN3_direction         is pin_A3_direction
alias               pin_VREF_POS_direction    is pin_A3_direction
--
var volatile bit    TRISA_TRISA4              at TRISA : 4
var volatile bit    pin_A4_direction          at TRISA : 4
alias               pin_T0CKI_direction       is pin_A4_direction
alias               pin_SEG14_direction       is pin_A4_direction
--
var volatile bit    TRISA_TRISA5              at TRISA : 5
var volatile bit    pin_A5_direction          at TRISA : 5
alias               pin_AN4_direction         is pin_A5_direction
alias               pin_SEG15_direction       is pin_A5_direction
--
var volatile bit    TRISA_TRISA6              at TRISA : 6
var volatile bit    pin_A6_direction          at TRISA : 6
alias               pin_OSC2_direction        is pin_A6_direction
alias               pin_CLKO_direction        is pin_A6_direction
--
var volatile bit    TRISA_TRISA7              at TRISA : 7
var volatile bit    pin_A7_direction          at TRISA : 7
alias               pin_OSC1_direction        is pin_A7_direction
alias               pin_CLKI_direction        is pin_A7_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     at { 0xF93 }
alias               PORTB_direction           is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB0              at TRISB : 0
var volatile bit    pin_B0_direction          at TRISB : 0
alias               pin_SEG30_direction       is pin_B0_direction
--
var volatile bit    TRISB_TRISB1              at TRISB : 1
var volatile bit    pin_B1_direction          at TRISB : 1
alias               pin_SEG8_direction        is pin_B1_direction
--
var volatile bit    TRISB_TRISB2              at TRISB : 2
var volatile bit    pin_B2_direction          at TRISB : 2
alias               pin_SEG9_direction        is pin_B2_direction
alias               pin_CTED1_direction       is pin_B2_direction
--
var volatile bit    TRISB_TRISB3              at TRISB : 3
var volatile bit    pin_B3_direction          at TRISB : 3
alias               pin_SEG10_direction       is pin_B3_direction
alias               pin_CTED2_direction       is pin_B3_direction
--
var volatile bit    TRISB_TRISB4              at TRISB : 4
var volatile bit    pin_B4_direction          at TRISB : 4
alias               pin_KBI0_direction        is pin_B4_direction
alias               pin_SEG11_direction       is pin_B4_direction
--
var volatile bit    TRISB_TRISB5              at TRISB : 5
var volatile bit    pin_B5_direction          at TRISB : 5
alias               pin_KBI1_direction        is pin_B5_direction
alias               pin_SEG29_direction       is pin_B5_direction
--
var volatile bit    TRISB_TRISB6              at TRISB : 6
var volatile bit    pin_B6_direction          at TRISB : 6
alias               pin_KBI2_direction        is pin_B6_direction
--
var volatile bit    TRISB_TRISB7              at TRISB : 7
var volatile bit    pin_B7_direction          at TRISB : 7
alias               pin_KBI3_direction        is pin_B7_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     at { 0xF94 }
alias               PORTC_direction           is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC0              at TRISC : 0
var volatile bit    pin_C0_direction          at TRISC : 0
alias               pin_T1OSO_direction       is pin_C0_direction
alias               pin_T13CKI_direction      is pin_C0_direction
--
var volatile bit    TRISC_TRISC1              at TRISC : 1
var volatile bit    pin_C1_direction          at TRISC : 1
alias               pin_T1OSI_direction       is pin_C1_direction
alias               pin_CCP2_RC1_direction    is pin_C1_direction
alias               pin_SEG32_direction       is pin_C1_direction
--
var volatile bit    TRISC_TRISC2              at TRISC : 2
var volatile bit    pin_C2_direction          at TRISC : 2
alias               pin_CCP1_direction        is pin_C2_direction
alias               pin_SEG13_direction       is pin_C2_direction
--
var volatile bit    TRISC_TRISC3              at TRISC : 3
var volatile bit    pin_C3_direction          at TRISC : 3
alias               pin_SCK_direction         is pin_C3_direction
alias               pin_SCL_direction         is pin_C3_direction
alias               pin_SEG17_direction       is pin_C3_direction
--
var volatile bit    TRISC_TRISC4              at TRISC : 4
var volatile bit    pin_C4_direction          at TRISC : 4
alias               pin_SDI_direction         is pin_C4_direction
alias               pin_SDA_direction         is pin_C4_direction
alias               pin_SEG16_direction       is pin_C4_direction
--
var volatile bit    TRISC_TRISC5              at TRISC : 5
var volatile bit    pin_C5_direction          at TRISC : 5
alias               pin_SDO_direction         is pin_C5_direction
alias               pin_SEG12_direction       is pin_C5_direction
--
var volatile bit    TRISC_TRISC6              at TRISC : 6
var volatile bit    pin_C6_direction          at TRISC : 6
alias               pin_TX1_direction         is pin_C6_direction
alias               pin_TX_direction          is pin_C6_direction
alias               pin_CK1_direction         is pin_C6_direction
alias               pin_SEG27_direction       is pin_C6_direction
--
var volatile bit    TRISC_TRISC7              at TRISC : 7
var volatile bit    pin_C7_direction          at TRISC : 7
alias               pin_RX1_direction         is pin_C7_direction
alias               pin_RX_direction          is pin_C7_direction
alias               pin_DT1_direction         is pin_C7_direction
alias               pin_SEG28_direction       is pin_C7_direction
--
-- ------------------------------------------------
var volatile byte   TRISD                     at { 0xF95 }
alias               PORTD_direction           is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD0              at TRISD : 0
var volatile bit    pin_D0_direction          at TRISD : 0
alias               pin_SEG0_direction        is pin_D0_direction
alias               pin_CTPLS_direction       is pin_D0_direction
--
var volatile bit    TRISD_TRISD1              at TRISD : 1
var volatile bit    pin_D1_direction          at TRISD : 1
alias               pin_SEG1_direction        is pin_D1_direction
--
var volatile bit    TRISD_TRISD2              at TRISD : 2
var volatile bit    pin_D2_direction          at TRISD : 2
alias               pin_SEG2_direction        is pin_D2_direction
--
var volatile bit    TRISD_TRISD3              at TRISD : 3
var volatile bit    pin_D3_direction          at TRISD : 3
alias               pin_SEG3_direction        is pin_D3_direction
--
var volatile bit    TRISD_TRISD4              at TRISD : 4
var volatile bit    pin_D4_direction          at TRISD : 4
alias               pin_SEG4_direction        is pin_D4_direction
--
var volatile bit    TRISD_TRISD5              at TRISD : 5
var volatile bit    pin_D5_direction          at TRISD : 5
alias               pin_SEG5_direction        is pin_D5_direction
--
var volatile bit    TRISD_TRISD6              at TRISD : 6
var volatile bit    pin_D6_direction          at TRISD : 6
alias               pin_SEG6_direction        is pin_D6_direction
--
var volatile bit    TRISD_TRISD7              at TRISD : 7
var volatile bit    pin_D7_direction          at TRISD : 7
alias               pin_SEG7_direction        is pin_D7_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     at { 0xF96 }
alias               PORTE_direction           is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE0              at TRISE : 0
var volatile bit    pin_E0_direction          at TRISE : 0
alias               pin_LCDBIAS1_direction    is pin_E0_direction
--
var volatile bit    TRISE_TRISE1              at TRISE : 1
var volatile bit    pin_E1_direction          at TRISE : 1
alias               pin_LCDBIAS2_direction    is pin_E1_direction
--
var volatile bit    TRISE_TRISE3              at TRISE : 3
var volatile bit    pin_E3_direction          at TRISE : 3
alias               pin_COM0_direction        is pin_E3_direction
--
var volatile bit    TRISE_TRISE4              at TRISE : 4
var volatile bit    pin_E4_direction          at TRISE : 4
alias               pin_COM1_direction        is pin_E4_direction
--
var volatile bit    TRISE_TRISE5              at TRISE : 5
var volatile bit    pin_E5_direction          at TRISE : 5
alias               pin_COM2_direction        is pin_E5_direction
--
var volatile bit    TRISE_TRISE6              at TRISE : 6
var volatile bit    pin_E6_direction          at TRISE : 6
alias               pin_COM3_direction        is pin_E6_direction
--
var volatile bit    TRISE_TRISE7              at TRISE : 7
var volatile bit    pin_E7_direction          at TRISE : 7
alias               pin_CCP2_RE7_direction    is pin_E7_direction
alias               pin_SEG31_direction       is pin_E7_direction
--
-- ------------------------------------------------
var volatile byte   TRISF                     at { 0xF97 }
alias               PORTF_direction           is TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF1              at TRISF : 1
var volatile bit    pin_F1_direction          at TRISF : 1
alias               pin_AN6_direction         is pin_F1_direction
alias               pin_C2OUT_direction       is pin_F1_direction
alias               pin_SEG19_direction       is pin_F1_direction
--
var volatile bit    TRISF_TRISF2              at TRISF : 2
var volatile bit    pin_F2_direction          at TRISF : 2
alias               pin_AN7_direction         is pin_F2_direction
alias               pin_C1OUT_direction       is pin_F2_direction
alias               pin_SEG20_direction       is pin_F2_direction
--
var volatile bit    TRISF_TRISF3              at TRISF : 3
var volatile bit    pin_F3_direction          at TRISF : 3
alias               pin_AN8_direction         is pin_F3_direction
alias               pin_SEG21_direction       is pin_F3_direction
alias               pin_C2INB_direction       is pin_F3_direction
--
var volatile bit    TRISF_TRISF4              at TRISF : 4
var volatile bit    pin_F4_direction          at TRISF : 4
alias               pin_AN9_direction         is pin_F4_direction
alias               pin_SEG22_direction       is pin_F4_direction
alias               pin_C2INA_direction       is pin_F4_direction
--
var volatile bit    TRISF_TRISF5              at TRISF : 5
var volatile bit    pin_F5_direction          at TRISF : 5
alias               pin_AN10_direction        is pin_F5_direction
alias               pin_CVREF_direction       is pin_F5_direction
alias               pin_SEG23_direction       is pin_F5_direction
alias               pin_C1INB_direction       is pin_F5_direction
--
var volatile bit    TRISF_TRISF6              at TRISF : 6
var volatile bit    pin_F6_direction          at TRISF : 6
alias               pin_AN11_direction        is pin_F6_direction
alias               pin_SEG24_direction       is pin_F6_direction
alias               pin_C1INA_direction       is pin_F6_direction
--
var volatile bit    TRISF_TRISF7              at TRISF : 7
var volatile bit    pin_F7_direction          at TRISF : 7
alias               pin_AN5_direction         is pin_F7_direction
alias               pin_SS_direction          is pin_F7_direction
alias               pin_SEG25_direction       is pin_F7_direction
--
-- ------------------------------------------------
var volatile byte   TRISG                     at { 0xF98 }
alias               PORTG_direction           is TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_TRISG0              at TRISG : 0
var volatile bit    pin_G0_direction          at TRISG : 0
alias               pin_LCDBIAS0_direction    is pin_G0_direction
--
var volatile bit    TRISG_TRISG1              at TRISG : 1
var volatile bit    pin_G1_direction          at TRISG : 1
alias               pin_TX2_direction         is pin_G1_direction
alias               pin_CK2_direction         is pin_G1_direction
--
var volatile bit    TRISG_TRISG2              at TRISG : 2
var volatile bit    pin_G2_direction          at TRISG : 2
alias               pin_RX2_direction         is pin_G2_direction
alias               pin_DT2_direction         is pin_G2_direction
alias               pin_VLCAP1_direction      is pin_G2_direction
--
var volatile bit    TRISG_TRISG3              at TRISG : 3
var volatile bit    pin_G3_direction          at TRISG : 3
alias               pin_VLCAP2_direction      is pin_G3_direction
--
var volatile bit    TRISG_TRISG4              at TRISG : 4
var volatile bit    pin_G4_direction          at TRISG : 4
alias               pin_SEG26_direction       is pin_G4_direction
alias               pin_RTCC_direction        is pin_G4_direction
--
var volatile bit    TRISG_CCP1OD              at TRISG : 5
var volatile bit    TRISG_CCP2OD              at TRISG : 6
var volatile bit    TRISG_SPIOD               at TRISG : 7
-- ------------------------------------------------
var volatile byte   TRISH                     at { 0xF99 }
alias               PORTH_direction           is TRISH
--
procedure PORTH_low_direction'put(byte in x) is
   TRISH = (TRISH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low_direction'get() return byte is
   return (TRISH & 0x0F)
end function
--
procedure PORTH_high_direction'put(byte in x) is
   TRISH = (TRISH & 0x0F) | (x << 4)
end procedure
function PORTH_high_direction'get() return byte is
   return (TRISH >> 4)
end function
--
var volatile bit    TRISH_TRISH0              at TRISH : 0
var volatile bit    pin_H0_direction          at TRISH : 0
alias               pin_SEG47_direction       is pin_H0_direction
--
var volatile bit    TRISH_TRISH1              at TRISH : 1
var volatile bit    pin_H1_direction          at TRISH : 1
alias               pin_SEG46_direction       is pin_H1_direction
--
var volatile bit    TRISH_TRISH2              at TRISH : 2
var volatile bit    pin_H2_direction          at TRISH : 2
alias               pin_SEG45_direction       is pin_H2_direction
--
var volatile bit    TRISH_TRISH3              at TRISH : 3
var volatile bit    pin_H3_direction          at TRISH : 3
alias               pin_SEG44_direction       is pin_H3_direction
--
var volatile bit    TRISH_TRISH4              at TRISH : 4
var volatile bit    pin_H4_direction          at TRISH : 4
alias               pin_SEG40_direction       is pin_H4_direction
--
var volatile bit    TRISH_TRISH5              at TRISH : 5
var volatile bit    pin_H5_direction          at TRISH : 5
alias               pin_SEG41_direction       is pin_H5_direction
--
var volatile bit    TRISH_TRISH6              at TRISH : 6
var volatile bit    pin_H6_direction          at TRISH : 6
alias               pin_SEG42_direction       is pin_H6_direction
--
var volatile bit    TRISH_TRISH7              at TRISH : 7
var volatile bit    pin_H7_direction          at TRISH : 7
alias               pin_SEG43_direction       is pin_H7_direction
--
-- ------------------------------------------------
var volatile byte   TRISJ                     at { 0xF9A }
alias               PORTJ_direction           is TRISJ
--
procedure PORTJ_low_direction'put(byte in x) is
   TRISJ = (TRISJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low_direction'get() return byte is
   return (TRISJ & 0x0F)
end function
--
procedure PORTJ_high_direction'put(byte in x) is
   TRISJ = (TRISJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high_direction'get() return byte is
   return (TRISJ >> 4)
end function
--
var volatile bit    TRISJ_TRISJ0              at TRISJ : 0
var volatile bit    pin_J0_direction          at TRISJ : 0
--
var volatile bit    TRISJ_TRISJ1              at TRISJ : 1
var volatile bit    pin_J1_direction          at TRISJ : 1
alias               pin_SEG33_direction       is pin_J1_direction
--
var volatile bit    TRISJ_TRISJ2              at TRISJ : 2
var volatile bit    pin_J2_direction          at TRISJ : 2
alias               pin_SEG34_direction       is pin_J2_direction
--
var volatile bit    TRISJ_TRISJ3              at TRISJ : 3
var volatile bit    pin_J3_direction          at TRISJ : 3
alias               pin_SEG35_direction       is pin_J3_direction
--
var volatile bit    TRISJ_TRISJ4              at TRISJ : 4
var volatile bit    pin_J4_direction          at TRISJ : 4
alias               pin_SEG39_direction       is pin_J4_direction
--
var volatile bit    TRISJ_TRISJ5              at TRISJ : 5
var volatile bit    pin_J5_direction          at TRISJ : 5
alias               pin_SEG38_direction       is pin_J5_direction
--
var volatile bit    TRISJ_TRISJ6              at TRISJ : 6
var volatile bit    pin_J6_direction          at TRISJ : 6
alias               pin_SEG37_direction       is pin_J6_direction
--
var volatile bit    TRISJ_TRISJ7              at TRISJ : 7
var volatile bit    pin_J7_direction          at TRISJ : 7
alias               pin_SEG36_direction       is pin_J7_direction
--
-- ------------------------------------------------
var volatile byte   OSCTUNE                   at { 0xF9B }
var volatile bit*6  OSCTUNE_TUN               at OSCTUNE : 0
var volatile bit    OSCTUNE_PLLEN             at OSCTUNE : 6
var volatile bit    OSCTUNE_INTSRC            at OSCTUNE : 7
var volatile bit    OSCTUNE_TUN0              at OSCTUNE : 0
var volatile bit    OSCTUNE_TUN1              at OSCTUNE : 1
var volatile bit    OSCTUNE_TUN2              at OSCTUNE : 2
var volatile bit    OSCTUNE_TUN3              at OSCTUNE : 3
var volatile bit    OSCTUNE_TUN4              at OSCTUNE : 4
var volatile bit    OSCTUNE_TUN5              at OSCTUNE : 5
-- ------------------------------------------------
var volatile byte   PIE1                      at { 0xF9D }
var volatile bit    PIE1_TMR1IE               at PIE1 : 0
var volatile bit    PIE1_TMR2IE               at PIE1 : 1
var volatile bit    PIE1_SSPIE                at PIE1 : 3
var volatile bit    PIE1_TX1IE                at PIE1 : 4
alias               PIE1_TXIE                 is PIE1_TX1IE
var volatile bit    PIE1_RC1IE                at PIE1 : 5
alias               PIE1_RCIE                 is PIE1_RC1IE
var volatile bit    PIE1_ADIE                 at PIE1 : 6
var volatile bit    PIE1_SSP1IE               at PIE1 : 3
-- ------------------------------------------------
var volatile byte   PIR1                      at { 0xF9E }
var volatile bit    PIR1_TMR1IF               at PIR1 : 0
var volatile bit    PIR1_TMR2IF               at PIR1 : 1
var volatile bit    PIR1_SSPIF                at PIR1 : 3
var volatile bit    PIR1_TX1IF                at PIR1 : 4
alias               PIR1_TXIF                 is PIR1_TX1IF
var volatile bit    PIR1_RC1IF                at PIR1 : 5
alias               PIR1_RCIF                 is PIR1_RC1IF
var volatile bit    PIR1_ADIF                 at PIR1 : 6
var volatile bit    PIR1_SSP1IF               at PIR1 : 3
-- ------------------------------------------------
var volatile byte   IPR1                      at { 0xF9F }
var volatile bit    IPR1_TMR1IP               at IPR1 : 0
var volatile bit    IPR1_TMR2IP               at IPR1 : 1
var volatile bit    IPR1_SSPIP                at IPR1 : 3
var volatile bit    IPR1_TX1IP                at IPR1 : 4
alias               IPR1_TXIP                 is IPR1_TX1IP
var volatile bit    IPR1_RC1IP                at IPR1 : 5
alias               IPR1_RCIP                 is IPR1_RC1IP
var volatile bit    IPR1_ADIP                 at IPR1 : 6
var volatile bit    IPR1_SSP1IP               at IPR1 : 3
-- ------------------------------------------------
var volatile byte   PIE2                      at { 0xFA0 }
var volatile bit    PIE2_TMR3IE               at PIE2 : 1
var volatile bit    PIE2_LVDIE                at PIE2 : 2
var volatile bit    PIE2_BCLIE                at PIE2 : 3
var volatile bit    PIE2_CMIE                 at PIE2 : 6
var volatile bit    PIE2_OSCFIE               at PIE2 : 7
var volatile bit    PIE2_BCL1IE               at PIE2 : 3
-- ------------------------------------------------
var volatile byte   PIR2                      at { 0xFA1 }
var volatile bit    PIR2_TMR3IF               at PIR2 : 1
var volatile bit    PIR2_LVDIF                at PIR2 : 2
var volatile bit    PIR2_BCLIF                at PIR2 : 3
var volatile bit    PIR2_CMIF                 at PIR2 : 6
var volatile bit    PIR2_OSCFIF               at PIR2 : 7
var volatile bit    PIR2_BCL1IF               at PIR2 : 3
-- ------------------------------------------------
var volatile byte   IPR2                      at { 0xFA2 }
var volatile bit    IPR2_TMR3IP               at IPR2 : 1
var volatile bit    IPR2_LVDIP                at IPR2 : 2
var volatile bit    IPR2_BCLIP                at IPR2 : 3
var volatile bit    IPR2_CMIP                 at IPR2 : 6
var volatile bit    IPR2_OSCFIP               at IPR2 : 7
var volatile bit    IPR2_BCL1IP               at IPR2 : 3
-- ------------------------------------------------
var volatile byte   PIE3                      at { 0xFA3 }
var volatile bit    PIE3_RTCCIE               at PIE3 : 0
var volatile bit    PIE3_CCP1IE               at PIE3 : 1
alias               PIE3_CCPIE                is PIE3_CCP1IE
var volatile bit    PIE3_CCP2IE               at PIE3 : 2
var volatile bit    PIE3_CTMUIE               at PIE3 : 3
var volatile bit    PIE3_TX2IE                at PIE3 : 4
alias               PIE3_TXIE2                is PIE3_TX2IE
var volatile bit    PIE3_RC2IE                at PIE3 : 5
alias               PIE3_RCIE2                is PIE3_RC2IE
var volatile bit    PIE3_LCDIE                at PIE3 : 6
var volatile bit    PIE3_RXB0IE               at PIE3 : 0
var volatile bit    PIE3_RXB1IE               at PIE3 : 1
var volatile bit    PIE3_TXB0IE               at PIE3 : 2
var volatile bit    PIE3_TXB1IE               at PIE3 : 3
var volatile bit    PIE3_TXB2IE               at PIE3 : 4
var volatile bit    PIE3_RXBNIE               at PIE3 : 1
var volatile bit    PIE3_TXBNIE               at PIE3 : 4
-- ------------------------------------------------
var volatile byte   PIR3                      at { 0xFA4 }
var volatile bit    PIR3_RTCCIF               at PIR3 : 0
var volatile bit    PIR3_CCP1IF               at PIR3 : 1
alias               PIR3_CCPIF                is PIR3_CCP1IF
var volatile bit    PIR3_CCP2IF               at PIR3 : 2
var volatile bit    PIR3_CTMUIF               at PIR3 : 3
var volatile bit    PIR3_TX2IF                at PIR3 : 4
alias               PIR3_TXIF2                is PIR3_TX2IF
var volatile bit    PIR3_RC2IF                at PIR3 : 5
alias               PIR3_RCIF2                is PIR3_RC2IF
var volatile bit    PIR3_LCDIF                at PIR3 : 6
var volatile bit    PIR3_RXBNIF               at PIR3 : 1
var volatile bit    PIR3_TXBNIF               at PIR3 : 4
-- ------------------------------------------------
var volatile byte   IPR3                      at { 0xFA5 }
var volatile bit    IPR3_RTCCIP               at IPR3 : 0
var volatile bit    IPR3_CCP1IP               at IPR3 : 1
alias               IPR3_CCPIP                is IPR3_CCP1IP
var volatile bit    IPR3_CCP2IP               at IPR3 : 2
var volatile bit    IPR3_CTMUIP               at IPR3 : 3
var volatile bit    IPR3_TX2IP                at IPR3 : 4
alias               IPR3_TXIP2                is IPR3_TX2IP
var volatile bit    IPR3_RC2IP                at IPR3 : 5
alias               IPR3_RCIP2                is IPR3_RC2IP
var volatile bit    IPR3_LCDIP                at IPR3 : 6
var volatile bit    IPR3_RXBNIP               at IPR3 : 1
var volatile bit    IPR3_TXBNIP               at IPR3 : 4
-- ------------------------------------------------
var volatile byte   EECON1                    at { 0xFA6 }
var volatile bit    EECON1_WR                 at EECON1 : 1
var volatile bit    EECON1_WREN               at EECON1 : 2
var volatile bit    EECON1_WRERR              at EECON1 : 3
var volatile bit    EECON1_FREE               at EECON1 : 4
var volatile bit    EECON1_WPROG              at EECON1 : 5
-- ------------------------------------------------
var volatile byte   EECON2                    at { 0xFA7 }
-- ------------------------------------------------
var volatile byte   LCDCON                    at { 0xFA8 }
var volatile bit    LCDCON_LMUX0              at LCDCON : 0
var volatile bit    LCDCON_LMUX1              at LCDCON : 1
var volatile bit    LCDCON_CS0                at LCDCON : 2
var volatile bit    LCDCON_CS1                at LCDCON : 3
var volatile bit    LCDCON_WERR               at LCDCON : 5
var volatile bit    LCDCON_SLPEN              at LCDCON : 6
var volatile bit    LCDCON_LCDEN              at LCDCON : 7
var volatile bit    LCDCON_LCDCS0             at LCDCON : 2
var volatile bit    LCDCON_LCDCS1             at LCDCON : 3
var volatile bit    LCDCON_LCDWERR            at LCDCON : 5
var volatile bit    LCDCON_LCDSLPEN           at LCDCON : 6
-- ------------------------------------------------
var volatile byte   LCDSE0                    at { 0xFA9 }
var volatile bit    LCDSE0_SE0                at LCDSE0 : 0
var volatile bit    LCDSE0_SE1                at LCDSE0 : 1
var volatile bit    LCDSE0_SE2                at LCDSE0 : 2
var volatile bit    LCDSE0_SE3                at LCDSE0 : 3
var volatile bit    LCDSE0_SE4                at LCDSE0 : 4
var volatile bit    LCDSE0_SE5                at LCDSE0 : 5
var volatile bit    LCDSE0_SE6                at LCDSE0 : 6
var volatile bit    LCDSE0_SE7                at LCDSE0 : 7
var volatile bit    LCDSE0_SEGEN0             at LCDSE0 : 0
var volatile bit    LCDSE0_SEGEN1             at LCDSE0 : 1
var volatile bit    LCDSE0_SEGEN2             at LCDSE0 : 2
var volatile bit    LCDSE0_SEGEN3             at LCDSE0 : 3
var volatile bit    LCDSE0_SEGEN4             at LCDSE0 : 4
var volatile bit    LCDSE0_SEGEN5             at LCDSE0 : 5
var volatile bit    LCDSE0_SEGEN6             at LCDSE0 : 6
var volatile bit    LCDSE0_SEGEN7             at LCDSE0 : 7
var volatile bit    LCDSE0_SE00               at LCDSE0 : 0
var volatile bit    LCDSE0_SE01               at LCDSE0 : 1
var volatile bit    LCDSE0_SE02               at LCDSE0 : 2
var volatile bit    LCDSE0_SE03               at LCDSE0 : 3
var volatile bit    LCDSE0_SE04               at LCDSE0 : 4
var volatile bit    LCDSE0_SE05               at LCDSE0 : 5
var volatile bit    LCDSE0_SE06               at LCDSE0 : 6
var volatile bit    LCDSE0_SE07               at LCDSE0 : 7
-- ------------------------------------------------
var volatile byte   LCDPS                     at { 0xFAA }
var volatile bit    LCDPS_LP0                 at LCDPS : 0
var volatile bit    LCDPS_LP1                 at LCDPS : 1
var volatile bit    LCDPS_LP2                 at LCDPS : 2
var volatile bit    LCDPS_LP3                 at LCDPS : 3
var volatile bit    LCDPS_WA                  at LCDPS : 4
var volatile bit    LCDPS_LCDA                at LCDPS : 5
var volatile bit    LCDPS_BIASMD              at LCDPS : 6
var volatile bit    LCDPS_WFT                 at LCDPS : 7
var volatile bit    LCDPS_LCDPS0              at LCDPS : 0
var volatile bit    LCDPS_LCDPS1              at LCDPS : 1
var volatile bit    LCDPS_LCDPS2              at LCDPS : 2
var volatile bit    LCDPS_LCDPS3              at LCDPS : 3
-- ------------------------------------------------
var volatile byte   RCSTA1                    at { 0xFAB }
var volatile bit    RCSTA1_RX9D               at RCSTA1 : 0
var volatile bit    RCSTA1_OERR               at RCSTA1 : 1
var volatile bit    RCSTA1_FERR               at RCSTA1 : 2
var volatile bit    RCSTA1_ADDEN              at RCSTA1 : 3
var volatile bit    RCSTA1_CREN               at RCSTA1 : 4
var volatile bit    RCSTA1_SREN               at RCSTA1 : 5
var volatile bit    RCSTA1_RX9                at RCSTA1 : 6
var volatile bit    RCSTA1_SPEN               at RCSTA1 : 7
var volatile bit    RCSTA1_RCD8               at RCSTA1 : 0
var volatile bit    RCSTA1_ADEN               at RCSTA1 : 3
var volatile bit    RCSTA1_RC9                at RCSTA1 : 6
var volatile bit    RCSTA1_NRC8               at RCSTA1 : 6
var volatile bit    RCSTA1_RC8_9              at RCSTA1 : 6
var volatile bit    RCSTA1_RX9D1              at RCSTA1 : 0
var volatile bit    RCSTA1_OERR1              at RCSTA1 : 1
var volatile bit    RCSTA1_FERR1              at RCSTA1 : 2
var volatile bit    RCSTA1_ADDEN1             at RCSTA1 : 3
var volatile bit    RCSTA1_CREN1              at RCSTA1 : 4
var volatile bit    RCSTA1_SREN1              at RCSTA1 : 5
var volatile bit    RCSTA1_RX91               at RCSTA1 : 6
var volatile bit    RCSTA1_SPEN1              at RCSTA1 : 7
--
alias               RCSTA                     is RCSTA1
alias               RCSTA_RX9D                is RCSTA1_RX9D
alias               RCSTA_OERR                is RCSTA1_OERR
alias               RCSTA_FERR                is RCSTA1_FERR
alias               RCSTA_ADDEN               is RCSTA1_ADDEN
alias               RCSTA_CREN                is RCSTA1_CREN
alias               RCSTA_SREN                is RCSTA1_SREN
alias               RCSTA_RX9                 is RCSTA1_RX9
alias               RCSTA_SPEN                is RCSTA1_SPEN
alias               RCSTA_RCD8                is RCSTA1_RCD8
alias               RCSTA_ADEN                is RCSTA1_ADEN
alias               RCSTA_RC9                 is RCSTA1_RC9
alias               RCSTA_NRC8                is RCSTA1_NRC8
alias               RCSTA_RC8_9               is RCSTA1_RC8_9
alias               RCSTA_RX9D1               is RCSTA1_RX9D1
alias               RCSTA_OERR1               is RCSTA1_OERR1
alias               RCSTA_FERR1               is RCSTA1_FERR1
alias               RCSTA_ADDEN1              is RCSTA1_ADDEN1
alias               RCSTA_CREN1               is RCSTA1_CREN1
alias               RCSTA_SREN1               is RCSTA1_SREN1
alias               RCSTA_RX91                is RCSTA1_RX91
alias               RCSTA_SPEN1               is RCSTA1_SPEN1
-- ------------------------------------------------
var volatile byte   TXSTA1                    at { 0xFAC }
var volatile bit    TXSTA1_TX9D               at TXSTA1 : 0
var volatile bit    TXSTA1_TRMT               at TXSTA1 : 1
var volatile bit    TXSTA1_BRGH               at TXSTA1 : 2
var volatile bit    TXSTA1_SENDB              at TXSTA1 : 3
var volatile bit    TXSTA1_SYNC               at TXSTA1 : 4
var volatile bit    TXSTA1_TXEN               at TXSTA1 : 5
var volatile bit    TXSTA1_TX9                at TXSTA1 : 6
var volatile bit    TXSTA1_CSRC               at TXSTA1 : 7
var volatile bit    TXSTA1_TXD8               at TXSTA1 : 0
var volatile bit    TXSTA1_TX8_9              at TXSTA1 : 6
var volatile bit    TXSTA1_NTX8               at TXSTA1 : 6
var volatile bit    TXSTA1_TX9D1              at TXSTA1 : 0
var volatile bit    TXSTA1_TRMT1              at TXSTA1 : 1
var volatile bit    TXSTA1_BRGH1              at TXSTA1 : 2
var volatile bit    TXSTA1_SENDB1             at TXSTA1 : 3
var volatile bit    TXSTA1_SYNC1              at TXSTA1 : 4
var volatile bit    TXSTA1_TXEN1              at TXSTA1 : 5
var volatile bit    TXSTA1_TX91               at TXSTA1 : 6
var volatile bit    TXSTA1_CSRC1              at TXSTA1 : 7
--
alias               TXSTA                     is TXSTA1
alias               TXSTA_TX9D                is TXSTA1_TX9D
alias               TXSTA_TRMT                is TXSTA1_TRMT
alias               TXSTA_BRGH                is TXSTA1_BRGH
alias               TXSTA_SENDB               is TXSTA1_SENDB
alias               TXSTA_SYNC                is TXSTA1_SYNC
alias               TXSTA_TXEN                is TXSTA1_TXEN
alias               TXSTA_TX9                 is TXSTA1_TX9
alias               TXSTA_CSRC                is TXSTA1_CSRC
alias               TXSTA_TXD8                is TXSTA1_TXD8
alias               TXSTA_TX8_9               is TXSTA1_TX8_9
alias               TXSTA_NTX8                is TXSTA1_NTX8
alias               TXSTA_TX9D1               is TXSTA1_TX9D1
alias               TXSTA_TRMT1               is TXSTA1_TRMT1
alias               TXSTA_BRGH1               is TXSTA1_BRGH1
alias               TXSTA_SENDB1              is TXSTA1_SENDB1
alias               TXSTA_SYNC1               is TXSTA1_SYNC1
alias               TXSTA_TXEN1               is TXSTA1_TXEN1
alias               TXSTA_TX91                is TXSTA1_TX91
alias               TXSTA_CSRC1               is TXSTA1_CSRC1
-- ------------------------------------------------
var volatile byte   TXREG1                    at { 0xFAD }
--
alias               TXREG                     is TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1                    at { 0xFAE }
--
alias               RCREG                     is RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1                    at { 0xFAF }
alias               SPBRGL                    is SPBRG1
--
alias               SPBRG                     is SPBRG1
-- ------------------------------------------------
var volatile byte   T3CON                     at { 0xFB1 }
var volatile bit    T3CON_TMR3ON              at T3CON : 0
var volatile bit    T3CON_TMR3CS              at T3CON : 1
var volatile bit    T3CON_NT3SYNC             at T3CON : 2
alias               T3CON_T3SYNC              is T3CON_NT3SYNC
var volatile bit    T3CON_T3CCP1              at T3CON : 3
var volatile bit*2  T3CON_T3CKPS              at T3CON : 4
var volatile bit    T3CON_T3CCP2              at T3CON : 6
var volatile bit    T3CON_RD16                at T3CON : 7
var volatile bit    T3CON_T3CKPS0             at T3CON : 4
var volatile bit    T3CON_T3CKPS1             at T3CON : 5
var volatile bit    T3CON_RD163               at T3CON : 7
var volatile bit    T3CON_T3INSYNC            at T3CON : 2
var volatile bit    T3CON_SOSCEN3             at T3CON : 3
var volatile bit    T3CON_T3RD16              at T3CON : 7
-- ------------------------------------------------
var volatile word   TMR3                      at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3L                     at { 0xFB2 }
-- ------------------------------------------------
var volatile byte   TMR3H                     at { 0xFB3 }
-- ------------------------------------------------
var volatile byte   CMCON                     at { 0xFB4 }
var volatile bit*3  CMCON_CM                  at CMCON : 0
var volatile bit    CMCON_CIS                 at CMCON : 3
var volatile bit    CMCON_C1INV               at CMCON : 4
var volatile bit    CMCON_C2INV               at CMCON : 5
var volatile bit    CMCON_C1OUT               at CMCON : 6
var volatile bit    CMCON_C2OUT               at CMCON : 7
var volatile bit    CMCON_CM0                 at CMCON : 0
var volatile bit    CMCON_CM1                 at CMCON : 1
var volatile bit    CMCON_CM2                 at CMCON : 2
var volatile bit    CMCON_CMEN0               at CMCON : 0
var volatile bit    CMCON_CMEN1               at CMCON : 1
var volatile bit    CMCON_CMEN2               at CMCON : 2
-- ------------------------------------------------
var volatile byte   CVRCON                    at { 0xFB5 }
var volatile bit*4  CVRCON_CVR                at CVRCON : 0
var volatile bit    CVRCON_CVRSS              at CVRCON : 4
var volatile bit    CVRCON_CVRR               at CVRCON : 5
var volatile bit    CVRCON_CVROE              at CVRCON : 6
var volatile bit    CVRCON_CVREN              at CVRCON : 7
var volatile bit    CVRCON_CVR0               at CVRCON : 0
var volatile bit    CVRCON_CVR1               at CVRCON : 1
var volatile bit    CVRCON_CVR2               at CVRCON : 2
var volatile bit    CVRCON_CVR3               at CVRCON : 3
var volatile bit    CVRCON_CVROEN             at CVRCON : 6
-- ------------------------------------------------
var volatile byte   LCDSE1                    at { 0xFB6 }
var volatile bit    LCDSE1_SE8                at LCDSE1 : 0
var volatile bit    LCDSE1_SE9                at LCDSE1 : 1
var volatile bit    LCDSE1_SE10               at LCDSE1 : 2
var volatile bit    LCDSE1_SE11               at LCDSE1 : 3
var volatile bit    LCDSE1_SE12               at LCDSE1 : 4
var volatile bit    LCDSE1_SE13               at LCDSE1 : 5
var volatile bit    LCDSE1_SE14               at LCDSE1 : 6
var volatile bit    LCDSE1_SE15               at LCDSE1 : 7
var volatile bit    LCDSE1_SEGEN8             at LCDSE1 : 0
var volatile bit    LCDSE1_SEGEN9             at LCDSE1 : 1
var volatile bit    LCDSE1_SEGEN10            at LCDSE1 : 2
var volatile bit    LCDSE1_SEGEN11            at LCDSE1 : 3
var volatile bit    LCDSE1_SEGEN12            at LCDSE1 : 4
var volatile bit    LCDSE1_SEGEN13            at LCDSE1 : 5
var volatile bit    LCDSE1_SEGEN14            at LCDSE1 : 6
var volatile bit    LCDSE1_SEGEN15            at LCDSE1 : 7
var volatile bit    LCDSE1_SE08               at LCDSE1 : 0
var volatile bit    LCDSE1_SE09               at LCDSE1 : 1
-- ------------------------------------------------
var volatile byte   LCDSE2                    at { 0xFB7 }
var volatile bit    LCDSE2_SE16               at LCDSE2 : 0
var volatile bit    LCDSE2_SE17               at LCDSE2 : 1
var volatile bit    LCDSE2_SE18               at LCDSE2 : 2
var volatile bit    LCDSE2_SE19               at LCDSE2 : 3
var volatile bit    LCDSE2_SE20               at LCDSE2 : 4
var volatile bit    LCDSE2_SE21               at LCDSE2 : 5
var volatile bit    LCDSE2_SE22               at LCDSE2 : 6
var volatile bit    LCDSE2_SE23               at LCDSE2 : 7
var volatile bit    LCDSE2_SEGEN16            at LCDSE2 : 0
var volatile bit    LCDSE2_SEGEN17            at LCDSE2 : 1
var volatile bit    LCDSE2_SEGEN18            at LCDSE2 : 2
var volatile bit    LCDSE2_SEGEN19            at LCDSE2 : 3
var volatile bit    LCDSE2_SEGEN20            at LCDSE2 : 4
var volatile bit    LCDSE2_SEGEN21            at LCDSE2 : 5
var volatile bit    LCDSE2_SEGEN22            at LCDSE2 : 6
var volatile bit    LCDSE2_SEGEN23            at LCDSE2 : 7
-- ------------------------------------------------
var volatile byte   LCDSE3                    at { 0xFB8 }
var volatile bit    LCDSE3_SE24               at LCDSE3 : 0
var volatile bit    LCDSE3_SE25               at LCDSE3 : 1
var volatile bit    LCDSE3_SE26               at LCDSE3 : 2
var volatile bit    LCDSE3_SE27               at LCDSE3 : 3
var volatile bit    LCDSE3_SE28               at LCDSE3 : 4
var volatile bit    LCDSE3_SE29               at LCDSE3 : 5
var volatile bit    LCDSE3_SE30               at LCDSE3 : 6
var volatile bit    LCDSE3_SE31               at LCDSE3 : 7
var volatile bit    LCDSE3_SEGEN24            at LCDSE3 : 0
var volatile bit    LCDSE3_SEGEN25            at LCDSE3 : 1
var volatile bit    LCDSE3_SEGEN26            at LCDSE3 : 2
var volatile bit    LCDSE3_SEGEN27            at LCDSE3 : 3
var volatile bit    LCDSE3_SEGEN28            at LCDSE3 : 4
var volatile bit    LCDSE3_SEGEN29            at LCDSE3 : 5
var volatile bit    LCDSE3_SEGEN30            at LCDSE3 : 6
var volatile bit    LCDSE3_SEGEN31            at LCDSE3 : 7
-- ------------------------------------------------
var volatile byte   LCDSE4                    at { 0xFB9 }
var volatile bit    LCDSE4_SE32               at LCDSE4 : 0
var volatile bit    LCDSE4_SE33               at LCDSE4 : 1
var volatile bit    LCDSE4_SE34               at LCDSE4 : 2
var volatile bit    LCDSE4_SE35               at LCDSE4 : 3
var volatile bit    LCDSE4_SE36               at LCDSE4 : 4
var volatile bit    LCDSE4_SE37               at LCDSE4 : 5
var volatile bit    LCDSE4_SE38               at LCDSE4 : 6
var volatile bit    LCDSE4_SE39               at LCDSE4 : 7
var volatile bit    LCDSE4_SEGEN32            at LCDSE4 : 0
var volatile bit    LCDSE4_SEGEN33            at LCDSE4 : 1
var volatile bit    LCDSE4_SEGEN34            at LCDSE4 : 2
var volatile bit    LCDSE4_SEGEN35            at LCDSE4 : 3
var volatile bit    LCDSE4_SEGEN36            at LCDSE4 : 4
var volatile bit    LCDSE4_SEGEN37            at LCDSE4 : 5
var volatile bit    LCDSE4_SEGEN38            at LCDSE4 : 6
var volatile bit    LCDSE4_SEGEN39            at LCDSE4 : 7
-- ------------------------------------------------
var volatile byte   LCDSE5                    at { 0xFBA }
var volatile bit    LCDSE5_SE40               at LCDSE5 : 0
var volatile bit    LCDSE5_SE41               at LCDSE5 : 1
var volatile bit    LCDSE5_SE42               at LCDSE5 : 2
var volatile bit    LCDSE5_SE43               at LCDSE5 : 3
var volatile bit    LCDSE5_SE44               at LCDSE5 : 4
var volatile bit    LCDSE5_SE45               at LCDSE5 : 5
var volatile bit    LCDSE5_SE46               at LCDSE5 : 6
var volatile bit    LCDSE5_SE47               at LCDSE5 : 7
var volatile bit    LCDSE5_SEGEN40            at LCDSE5 : 0
var volatile bit    LCDSE5_SEGEN41            at LCDSE5 : 1
var volatile bit    LCDSE5_SEGEN42            at LCDSE5 : 2
var volatile bit    LCDSE5_SEGEN43            at LCDSE5 : 3
var volatile bit    LCDSE5_SEGEN44            at LCDSE5 : 4
var volatile bit    LCDSE5_SEGEN45            at LCDSE5 : 5
var volatile bit    LCDSE5_SEGEN46            at LCDSE5 : 6
var volatile bit    LCDSE5_SEGEN47            at LCDSE5 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA0                  at { 0xFBB }
var volatile bit    LCDDATA0_S0C0             at LCDDATA0 : 0
var volatile bit    LCDDATA0_S1C0             at LCDDATA0 : 1
var volatile bit    LCDDATA0_S2C0             at LCDDATA0 : 2
var volatile bit    LCDDATA0_S3C0             at LCDDATA0 : 3
var volatile bit    LCDDATA0_S4C0             at LCDDATA0 : 4
var volatile bit    LCDDATA0_S5C0             at LCDDATA0 : 5
var volatile bit    LCDDATA0_S6C0             at LCDDATA0 : 6
var volatile bit    LCDDATA0_S7C0             at LCDDATA0 : 7
var volatile bit    LCDDATA0_SEG0COM0         at LCDDATA0 : 0
var volatile bit    LCDDATA0_SEG1COM0         at LCDDATA0 : 1
var volatile bit    LCDDATA0_SEG2COM0         at LCDDATA0 : 2
var volatile bit    LCDDATA0_SEG3COM0         at LCDDATA0 : 3
var volatile bit    LCDDATA0_SEG4COM0         at LCDDATA0 : 4
var volatile bit    LCDDATA0_SEG5COM0         at LCDDATA0 : 5
var volatile bit    LCDDATA0_SEG6COM0         at LCDDATA0 : 6
var volatile bit    LCDDATA0_SEG7COM0         at LCDDATA0 : 7
var volatile bit    LCDDATA0_S00C0            at LCDDATA0 : 0
var volatile bit    LCDDATA0_S01C0            at LCDDATA0 : 1
var volatile bit    LCDDATA0_S02C0            at LCDDATA0 : 2
var volatile bit    LCDDATA0_S03C0            at LCDDATA0 : 3
var volatile bit    LCDDATA0_S04C0            at LCDDATA0 : 4
var volatile bit    LCDDATA0_S05C0            at LCDDATA0 : 5
var volatile bit    LCDDATA0_S06C0            at LCDDATA0 : 6
var volatile bit    LCDDATA0_S07C0            at LCDDATA0 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA1                  at { 0xFBC }
var volatile bit    LCDDATA1_S8C0             at LCDDATA1 : 0
var volatile bit    LCDDATA1_S9C0             at LCDDATA1 : 1
var volatile bit    LCDDATA1_S10C0            at LCDDATA1 : 2
var volatile bit    LCDDATA1_S11C0            at LCDDATA1 : 3
var volatile bit    LCDDATA1_S12C0            at LCDDATA1 : 4
var volatile bit    LCDDATA1_S13C0            at LCDDATA1 : 5
var volatile bit    LCDDATA1_S14C0            at LCDDATA1 : 6
var volatile bit    LCDDATA1_S15C0            at LCDDATA1 : 7
var volatile bit    LCDDATA1_SEG8COM0         at LCDDATA1 : 0
var volatile bit    LCDDATA1_SEG9COM0         at LCDDATA1 : 1
var volatile bit    LCDDATA1_SEG10COM0        at LCDDATA1 : 2
var volatile bit    LCDDATA1_SEG11COM0        at LCDDATA1 : 3
var volatile bit    LCDDATA1_SEG12COM0        at LCDDATA1 : 4
var volatile bit    LCDDATA1_SEG13COM0        at LCDDATA1 : 5
var volatile bit    LCDDATA1_SEG14COM0        at LCDDATA1 : 6
var volatile bit    LCDDATA1_SEG15COM0        at LCDDATA1 : 7
var volatile bit    LCDDATA1_S08C0            at LCDDATA1 : 0
var volatile bit    LCDDATA1_S09C0            at LCDDATA1 : 1
-- ------------------------------------------------
var volatile byte   LCDDATA2                  at { 0xFBD }
var volatile bit    LCDDATA2_S16C0            at LCDDATA2 : 0
var volatile bit    LCDDATA2_S17C0            at LCDDATA2 : 1
var volatile bit    LCDDATA2_S18C0            at LCDDATA2 : 2
var volatile bit    LCDDATA2_S19C0            at LCDDATA2 : 3
var volatile bit    LCDDATA2_S20C0            at LCDDATA2 : 4
var volatile bit    LCDDATA2_S21C0            at LCDDATA2 : 5
var volatile bit    LCDDATA2_S22C0            at LCDDATA2 : 6
var volatile bit    LCDDATA2_S23C0            at LCDDATA2 : 7
var volatile bit    LCDDATA2_SEG16COM0        at LCDDATA2 : 0
var volatile bit    LCDDATA2_SEG17COM0        at LCDDATA2 : 1
var volatile bit    LCDDATA2_SEG18COM0        at LCDDATA2 : 2
var volatile bit    LCDDATA2_SEG19COM0        at LCDDATA2 : 3
var volatile bit    LCDDATA2_SEG20COM0        at LCDDATA2 : 4
var volatile bit    LCDDATA2_SEG21COM0        at LCDDATA2 : 5
var volatile bit    LCDDATA2_SEG22COM0        at LCDDATA2 : 6
var volatile bit    LCDDATA2_SEG23COM0        at LCDDATA2 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA3                  at { 0xFBE }
var volatile bit    LCDDATA3_S24C0            at LCDDATA3 : 0
var volatile bit    LCDDATA3_S25C0            at LCDDATA3 : 1
var volatile bit    LCDDATA3_S26C0            at LCDDATA3 : 2
var volatile bit    LCDDATA3_S27C0            at LCDDATA3 : 3
var volatile bit    LCDDATA3_S28C0            at LCDDATA3 : 4
var volatile bit    LCDDATA3_S29C0            at LCDDATA3 : 5
var volatile bit    LCDDATA3_S30C0            at LCDDATA3 : 6
var volatile bit    LCDDATA3_S31C0            at LCDDATA3 : 7
var volatile bit    LCDDATA3_SEG24COM0        at LCDDATA3 : 0
var volatile bit    LCDDATA3_SEG25COM0        at LCDDATA3 : 1
var volatile bit    LCDDATA3_SEG26COM0        at LCDDATA3 : 2
var volatile bit    LCDDATA3_SEG27COM0        at LCDDATA3 : 3
var volatile bit    LCDDATA3_SEG28COM0        at LCDDATA3 : 4
var volatile bit    LCDDATA3_SEG29COM0        at LCDDATA3 : 5
var volatile bit    LCDDATA3_SEG30COM0        at LCDDATA3 : 6
var volatile bit    LCDDATA3_SEG31COM0        at LCDDATA3 : 7
-- ------------------------------------------------
var volatile byte   LCDDATA4                  at { 0xFBF }
var volatile bit    LCDDATA4_S32C0            at LCDDATA4 : 0
var volatile bit    LCDDATA4_S33C0            at LCDDATA4 : 1
var volatile bit    LCDDATA4_S34C0            at LCDDATA4 : 2
var volatile bit    LCDDATA4_S35C0            at LCDDATA4 : 3
var volatile bit    LCDDATA4_S36C0            at LCDDATA4 : 4
var volatile bit    LCDDATA4_S37C0            at LCDDATA4 : 5
var volatile bit    LCDDATA4_S38C0            at LCDDATA4 : 6
var volatile bit    LCDDATA4_S39C0            at LCDDATA4 : 7
var volatile bit    LCDDATA4_SEG32COM0        at LCDDATA4 : 0
var volatile bit    LCDDATA4_SEG33COM0        at LCDDATA4 : 1
var volatile bit    LCDDATA4_SEG34COM0        at LCDDATA4 : 2
var volatile bit    LCDDATA4_SEG35COM0        at LCDDATA4 : 3
var volatile bit    LCDDATA4_SEG36COM0        at LCDDATA4 : 4
var volatile bit    LCDDATA4_SEG37COM0        at LCDDATA4 : 5
var volatile bit    LCDDATA4_SEG38COM0        at LCDDATA4 : 6
var volatile bit    LCDDATA4_SEG39COM0        at LCDDATA4 : 7
-- ------------------------------------------------
var volatile byte   ADCON2                    at { 0xFC0 }
var volatile bit*3  ADCON2_ADCS               at ADCON2 : 0
var volatile bit*3  ADCON2_ACQT               at ADCON2 : 3
var volatile bit    ADCON2_ADFM               at ADCON2 : 7
var volatile bit    ADCON2_ADCS0              at ADCON2 : 0
var volatile bit    ADCON2_ADCS1              at ADCON2 : 1
var volatile bit    ADCON2_ADCS2              at ADCON2 : 2
var volatile bit    ADCON2_ACQT0              at ADCON2 : 3
var volatile bit    ADCON2_ACQT1              at ADCON2 : 4
var volatile bit    ADCON2_ACQT2              at ADCON2 : 5
-- ------------------------------------------------
var volatile byte   ADCON1                    at { 0xFC1 }
var volatile bit*4  ADCON1_PCFG               at ADCON1 : 0
var volatile bit*2  ADCON1_VCFG               at ADCON1 : 4
var volatile bit    ADCON1_TRIGSEL            at ADCON1 : 7
var volatile bit    ADCON1_PCFG0              at ADCON1 : 0
var volatile bit    ADCON1_PCFG1              at ADCON1 : 1
var volatile bit    ADCON1_PCFG2              at ADCON1 : 2
var volatile bit    ADCON1_PCFG3              at ADCON1 : 3
var volatile bit    ADCON1_VCFG0              at ADCON1 : 4
var volatile bit    ADCON1_VCFG1              at ADCON1 : 5
var volatile bit    ADCON1_CHSN3              at ADCON1 : 3
var volatile bit    ADCON1_VCFG01             at ADCON1 : 4
var volatile bit    ADCON1_VCFG11             at ADCON1 : 5
-- ------------------------------------------------
var volatile byte   ADCON0                    at { 0xFC2 }
var volatile bit    ADCON0_ADON               at ADCON0 : 0
var volatile bit    ADCON0_GO_NDONE           at ADCON0 : 1
var volatile bit*4  ADCON0_CHS                at ADCON0 : 2
var volatile bit    ADCON0_ADCAL              at ADCON0 : 7
var volatile bit    ADCON0_GO_DONE            at ADCON0 : 1
var volatile bit    ADCON0_CHS0               at ADCON0 : 2
var volatile bit    ADCON0_CHS1               at ADCON0 : 3
var volatile bit    ADCON0_CHS2               at ADCON0 : 4
var volatile bit    ADCON0_CHS3               at ADCON0 : 5
var volatile bit    ADCON0_DONE               at ADCON0 : 1
var volatile bit    ADCON0_GO                 at ADCON0 : 1
var volatile bit    ADCON0_NDONE              at ADCON0 : 1
var volatile bit    ADCON0_GODONE             at ADCON0 : 1
-- ------------------------------------------------
var volatile word   ADRES                     at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESL                    at { 0xFC3 }
-- ------------------------------------------------
var volatile byte   ADRESH                    at { 0xFC4 }
-- ------------------------------------------------
var volatile byte   SSP1CON2                  at { 0xFC5 }
var volatile bit    SSP1CON2_SEN              at SSP1CON2 : 0
var volatile bit    SSP1CON2_RSEN             at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN              at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN             at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN            at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT            at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT          at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN             at SSP1CON2 : 7
var volatile bit    SSP1CON2_ADMSK1           at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK2           at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK3           at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK4           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK5           at SSP1CON2 : 5
var volatile bit    SSP1CON2_SEN1             at SSP1CON2 : 0
var volatile bit    SSP1CON2_ADMSK11          at SSP1CON2 : 1
var volatile bit    SSP1CON2_ADMSK21          at SSP1CON2 : 2
var volatile bit    SSP1CON2_ADMSK31          at SSP1CON2 : 3
var volatile bit    SSP1CON2_ACKEN1           at SSP1CON2 : 4
var volatile bit    SSP1CON2_ACKDT1           at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKSTAT1         at SSP1CON2 : 6
var volatile bit    SSP1CON2_GCEN1            at SSP1CON2 : 7
var volatile bit    SSP1CON2_RSEN1            at SSP1CON2 : 1
var volatile bit    SSP1CON2_PEN1             at SSP1CON2 : 2
var volatile bit    SSP1CON2_RCEN1            at SSP1CON2 : 3
var volatile bit    SSP1CON2_ADMSK41          at SSP1CON2 : 4
var volatile bit    SSP1CON2_ADMSK51          at SSP1CON2 : 5
--
alias               SSPCON2                   is SSP1CON2
alias               SSPCON2_SEN               is SSP1CON2_SEN
alias               SSPCON2_RSEN              is SSP1CON2_RSEN
alias               SSPCON2_PEN               is SSP1CON2_PEN
alias               SSPCON2_RCEN              is SSP1CON2_RCEN
alias               SSPCON2_ACKEN             is SSP1CON2_ACKEN
alias               SSPCON2_ACKDT             is SSP1CON2_ACKDT
alias               SSPCON2_ACKSTAT           is SSP1CON2_ACKSTAT
alias               SSPCON2_GCEN              is SSP1CON2_GCEN
alias               SSPCON2_ADMSK1            is SSP1CON2_ADMSK1
alias               SSPCON2_ADMSK2            is SSP1CON2_ADMSK2
alias               SSPCON2_ADMSK3            is SSP1CON2_ADMSK3
alias               SSPCON2_ADMSK4            is SSP1CON2_ADMSK4
alias               SSPCON2_ADMSK5            is SSP1CON2_ADMSK5
alias               SSPCON2_SEN1              is SSP1CON2_SEN1
alias               SSPCON2_ADMSK11           is SSP1CON2_ADMSK11
alias               SSPCON2_ADMSK21           is SSP1CON2_ADMSK21
alias               SSPCON2_ADMSK31           is SSP1CON2_ADMSK31
alias               SSPCON2_ACKEN1            is SSP1CON2_ACKEN1
alias               SSPCON2_ACKDT1            is SSP1CON2_ACKDT1
alias               SSPCON2_ACKSTAT1          is SSP1CON2_ACKSTAT1
alias               SSPCON2_GCEN1             is SSP1CON2_GCEN1
alias               SSPCON2_RSEN1             is SSP1CON2_RSEN1
alias               SSPCON2_PEN1              is SSP1CON2_PEN1
alias               SSPCON2_RCEN1             is SSP1CON2_RCEN1
alias               SSPCON2_ADMSK41           is SSP1CON2_ADMSK41
alias               SSPCON2_ADMSK51           is SSP1CON2_ADMSK51
-- ------------------------------------------------
var volatile byte   SSP1CON1                  at { 0xFC6 }
var volatile bit*4  SSP1CON1_SSPM             at SSP1CON1 : 0
var volatile bit    SSP1CON1_CKP              at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN            at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV            at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL             at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPM0            at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM1            at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM2            at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM3            at SSP1CON1 : 3
var volatile bit    SSP1CON1_SSPM01           at SSP1CON1 : 0
var volatile bit    SSP1CON1_SSPM11           at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSPM21           at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSPM31           at SSP1CON1 : 3
var volatile bit    SSP1CON1_CKP1             at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSPEN1           at SSP1CON1 : 5
var volatile bit    SSP1CON1_SSPOV1           at SSP1CON1 : 6
var volatile bit    SSP1CON1_WCOL1            at SSP1CON1 : 7
--
alias               SSPCON1                   is SSP1CON1
alias               SSPCON1_SSPM              is SSP1CON1_SSPM
alias               SSPCON1_CKP               is SSP1CON1_CKP
alias               SSPCON1_SSPEN             is SSP1CON1_SSPEN
alias               SSPCON1_SSPOV             is SSP1CON1_SSPOV
alias               SSPCON1_WCOL              is SSP1CON1_WCOL
alias               SSPCON1_SSPM0             is SSP1CON1_SSPM0
alias               SSPCON1_SSPM1             is SSP1CON1_SSPM1
alias               SSPCON1_SSPM2             is SSP1CON1_SSPM2
alias               SSPCON1_SSPM3             is SSP1CON1_SSPM3
alias               SSPCON1_SSPM01            is SSP1CON1_SSPM01
alias               SSPCON1_SSPM11            is SSP1CON1_SSPM11
alias               SSPCON1_SSPM21            is SSP1CON1_SSPM21
alias               SSPCON1_SSPM31            is SSP1CON1_SSPM31
alias               SSPCON1_CKP1              is SSP1CON1_CKP1
alias               SSPCON1_SSPEN1            is SSP1CON1_SSPEN1
alias               SSPCON1_SSPOV1            is SSP1CON1_SSPOV1
alias               SSPCON1_WCOL1             is SSP1CON1_WCOL1
-- ------------------------------------------------
var volatile byte   SSP1STAT                  at { 0xFC7 }
var volatile bit    SSP1STAT_BF               at SSP1STAT : 0
var volatile bit    SSP1STAT_UA               at SSP1STAT : 1
var volatile bit    SSP1STAT_R_NW             at SSP1STAT : 2
var volatile bit    SSP1STAT_S                at SSP1STAT : 3
var volatile bit    SSP1STAT_P                at SSP1STAT : 4
var volatile bit    SSP1STAT_D_NA             at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE              at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP              at SSP1STAT : 7
var volatile bit    SSP1STAT_R                at SSP1STAT : 2
var volatile bit    SSP1STAT_D                at SSP1STAT : 5
var volatile bit    SSP1STAT_R_W              at SSP1STAT : 2
var volatile bit    SSP1STAT_D_A              at SSP1STAT : 5
var volatile bit    SSP1STAT_NW               at SSP1STAT : 2
var volatile bit    SSP1STAT_NA               at SSP1STAT : 5
var volatile bit    SSP1STAT_NWRITE           at SSP1STAT : 2
var volatile bit    SSP1STAT_NADDRESS         at SSP1STAT : 5
var volatile bit    SSP1STAT_READ_WRITE       at SSP1STAT : 2
var volatile bit    SSP1STAT_DATA_ADDRESS     at SSP1STAT : 5
var volatile bit    SSP1STAT_I2C_READ         at SSP1STAT : 2
var volatile bit    SSP1STAT_I2C_START        at SSP1STAT : 3
var volatile bit    SSP1STAT_I2C_STOP         at SSP1STAT : 4
var volatile bit    SSP1STAT_I2C_DAT          at SSP1STAT : 5
var volatile bit    SSP1STAT_BF1              at SSP1STAT : 0
var volatile bit    SSP1STAT_UA1              at SSP1STAT : 1
var volatile bit    SSP1STAT_RW               at SSP1STAT : 2
var volatile bit    SSP1STAT_START            at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP             at SSP1STAT : 4
var volatile bit    SSP1STAT_DA               at SSP1STAT : 5
var volatile bit    SSP1STAT_CKE1             at SSP1STAT : 6
var volatile bit    SSP1STAT_SMP1             at SSP1STAT : 7
var volatile bit    SSP1STAT_RW1              at SSP1STAT : 2
var volatile bit    SSP1STAT_START1           at SSP1STAT : 3
var volatile bit    SSP1STAT_STOP1            at SSP1STAT : 4
var volatile bit    SSP1STAT_DA1              at SSP1STAT : 5
--
alias               SSPSTAT                   is SSP1STAT
alias               SSPSTAT_BF                is SSP1STAT_BF
alias               SSPSTAT_UA                is SSP1STAT_UA
alias               SSPSTAT_R_NW              is SSP1STAT_R_NW
alias               SSPSTAT_S                 is SSP1STAT_S
alias               SSPSTAT_P                 is SSP1STAT_P
alias               SSPSTAT_D_NA              is SSP1STAT_D_NA
alias               SSPSTAT_CKE               is SSP1STAT_CKE
alias               SSPSTAT_SMP               is SSP1STAT_SMP
alias               SSPSTAT_R                 is SSP1STAT_R
alias               SSPSTAT_D                 is SSP1STAT_D
alias               SSPSTAT_R_W               is SSP1STAT_R_W
alias               SSPSTAT_D_A               is SSP1STAT_D_A
alias               SSPSTAT_NW                is SSP1STAT_NW
alias               SSPSTAT_NA                is SSP1STAT_NA
alias               SSPSTAT_NWRITE            is SSP1STAT_NWRITE
alias               SSPSTAT_NADDRESS          is SSP1STAT_NADDRESS
alias               SSPSTAT_READ_WRITE        is SSP1STAT_READ_WRITE
alias               SSPSTAT_DATA_ADDRESS      is SSP1STAT_DATA_ADDRESS
alias               SSPSTAT_I2C_READ          is SSP1STAT_I2C_READ
alias               SSPSTAT_I2C_START         is SSP1STAT_I2C_START
alias               SSPSTAT_I2C_STOP          is SSP1STAT_I2C_STOP
alias               SSPSTAT_I2C_DAT           is SSP1STAT_I2C_DAT
alias               SSPSTAT_BF1               is SSP1STAT_BF1
alias               SSPSTAT_UA1               is SSP1STAT_UA1
alias               SSPSTAT_RW                is SSP1STAT_RW
alias               SSPSTAT_START             is SSP1STAT_START
alias               SSPSTAT_STOP              is SSP1STAT_STOP
alias               SSPSTAT_DA                is SSP1STAT_DA
alias               SSPSTAT_CKE1              is SSP1STAT_CKE1
alias               SSPSTAT_SMP1              is SSP1STAT_SMP1
alias               SSPSTAT_RW1               is SSP1STAT_RW1
alias               SSPSTAT_START1            is SSP1STAT_START1
alias               SSPSTAT_STOP1             is SSP1STAT_STOP1
alias               SSPSTAT_DA1               is SSP1STAT_DA1
-- ------------------------------------------------
var volatile byte   SSP1ADD                   at { 0xFC8 }
--
alias               SSPADD                    is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF                   at { 0xFC9 }
--
alias               SSPBUF                    is SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                     at { 0xFCA }
var volatile bit*2  T2CON_T2CKPS              at T2CON : 0
var volatile bit    T2CON_TMR2ON              at T2CON : 2
var volatile bit*4  T2CON_T2OUTPS             at T2CON : 3
var volatile bit    T2CON_T2CKPS0             at T2CON : 0
var volatile bit    T2CON_T2CKPS1             at T2CON : 1
var volatile bit    T2CON_T2OUTPS0            at T2CON : 3
var volatile bit    T2CON_T2OUTPS1            at T2CON : 4
var volatile bit    T2CON_T2OUTPS2            at T2CON : 5
var volatile bit    T2CON_T2OUTPS3            at T2CON : 6
-- ------------------------------------------------
var volatile byte   PR2                       at { 0xFCB }
-- ------------------------------------------------
var volatile byte   TMR2                      at { 0xFCC }
-- ------------------------------------------------
var volatile byte   T1CON                     at { 0xFCD }
var volatile bit    T1CON_TMR1ON              at T1CON : 0
var volatile bit    T1CON_TMR1CS              at T1CON : 1
var volatile bit    T1CON_NT1SYNC             at T1CON : 2
alias               T1CON_T1SYNC              is T1CON_NT1SYNC
var volatile bit    T1CON_T1OSCEN             at T1CON : 3
var volatile bit*2  T1CON_T1CKPS              at T1CON : 4
var volatile bit    T1CON_T1RUN               at T1CON : 6
var volatile bit    T1CON_RD16                at T1CON : 7
var volatile bit    T1CON_T1INSYNC            at T1CON : 2
var volatile bit    T1CON_T1CKPS0             at T1CON : 4
var volatile bit    T1CON_T1CKPS1             at T1CON : 5
var volatile bit    T1CON_SOSCEN              at T1CON : 3
var volatile bit    T1CON_T1RD16              at T1CON : 7
-- ------------------------------------------------
var volatile word   TMR1                      at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1L                     at { 0xFCE }
-- ------------------------------------------------
var volatile byte   TMR1H                     at { 0xFCF }
-- ------------------------------------------------
var volatile byte   RCON                      at { 0xFD0 }
var volatile bit    RCON_NBOR                 at RCON : 0
var volatile bit    RCON_NPOR                 at RCON : 1
var volatile bit    RCON_NPD                  at RCON : 2
var volatile bit    RCON_NTO                  at RCON : 3
var volatile bit    RCON_NRI                  at RCON : 4
var volatile bit    RCON_NCM                  at RCON : 5
var volatile bit    RCON_IPEN                 at RCON : 7
var volatile bit    RCON_BOR                  at RCON : 0
var volatile bit    RCON_POR                  at RCON : 1
var volatile bit    RCON_PD                   at RCON : 2
var volatile bit    RCON_TO                   at RCON : 3
var volatile bit    RCON_RI                   at RCON : 4
var volatile bit    RCON_CM                   at RCON : 5
-- ------------------------------------------------
var volatile byte   WDTCON                    at { 0xFD1 }
var volatile bit    WDTCON_SWDTEN             at WDTCON : 0
var volatile bit    WDTCON_REGSLP             at WDTCON : 7
var volatile bit    WDTCON_SWDTE              at WDTCON : 0
-- ------------------------------------------------
var volatile byte   LCDREG                    at { 0xFD2 }
var volatile bit*2  LCDREG_CKSEL              at LCDREG : 0
var volatile bit    LCDREG_MODE13             at LCDREG : 2
var volatile bit*3  LCDREG_BIAS               at LCDREG : 3
var volatile bit    LCDREG_CPEN               at LCDREG : 6
var volatile bit    LCDREG_CKSEL0             at LCDREG : 0
var volatile bit    LCDREG_CKSEL1             at LCDREG : 1
var volatile bit    LCDREG_BIAS0              at LCDREG : 3
var volatile bit    LCDREG_BIAS1              at LCDREG : 4
var volatile bit    LCDREG_BIAS2              at LCDREG : 5
-- ------------------------------------------------
var volatile byte   OSCCON                    at { 0xFD3 }
var volatile bit*2  OSCCON_SCS                at OSCCON : 0
var volatile bit    OSCCON_IOFS               at OSCCON : 2
var volatile bit    OSCCON_OSTS               at OSCCON : 3
var volatile bit*3  OSCCON_IRCF               at OSCCON : 4
var volatile bit    OSCCON_IDLEN              at OSCCON : 7
var volatile bit    OSCCON_SCS0               at OSCCON : 0
var volatile bit    OSCCON_SCS1               at OSCCON : 1
var volatile bit    OSCCON_IRCF0              at OSCCON : 4
var volatile bit    OSCCON_IRCF1              at OSCCON : 5
var volatile bit    OSCCON_IRCF2              at OSCCON : 6
-- ------------------------------------------------
var volatile byte   T0CON                     at { 0xFD5 }
var volatile bit*3  T0CON_T0PS                at T0CON : 0
var volatile bit    T0CON_PSA                 at T0CON : 3
var volatile bit    T0CON_T0SE                at T0CON : 4
var volatile bit    T0CON_T0CS                at T0CON : 5
var volatile bit    T0CON_T08BIT              at T0CON : 6
var volatile bit    T0CON_TMR0ON              at T0CON : 7
var volatile bit    T0CON_T0PS0               at T0CON : 0
var volatile bit    T0CON_T0PS1               at T0CON : 1
var volatile bit    T0CON_T0PS2               at T0CON : 2
-- ------------------------------------------------
var volatile word   TMR0                      at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0L                     at { 0xFD6 }
-- ------------------------------------------------
var volatile byte   TMR0H                     at { 0xFD7 }
-- ------------------------------------------------
var volatile byte   STATUS                    at { 0xFD8 }
var volatile bit    STATUS_C                  at STATUS : 0
var volatile bit    STATUS_DC                 at STATUS : 1
var volatile bit    STATUS_Z                  at STATUS : 2
var volatile bit    STATUS_OV                 at STATUS : 3
var volatile bit    STATUS_N                  at STATUS : 4
var volatile bit    STATUS_CARRY              at STATUS : 0
var volatile bit    STATUS_ZERO               at STATUS : 2
var volatile bit    STATUS_OVERFLOW           at STATUS : 3
var volatile bit    STATUS_NEGATIVE           at STATUS : 4
var volatile byte   _status                   at { 0xFD8 }
const        byte   _c                        =  0
const        byte   _dc                       =  1
const        byte   _z                        =  2
const        byte   _ov                       =  3
const        byte   _n                        =  4
const        byte   _carry                    =  0
const        byte   _zero                     =  2
const        byte   _overflow                 =  3
const        byte   _negative                 =  4
const        byte   _banked                   =  1
const        byte   _access                   =  0
-- ------------------------------------------------
var volatile word   FSR2                      at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2L                     at { 0xFD9 }
-- ------------------------------------------------
var volatile byte   FSR2H                     at { 0xFDA }
var volatile bit*4  FSR2H_FSR2H               at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    at { 0xFDB }
-- ------------------------------------------------
var volatile byte   PREINC2                   at { 0xFDC }
-- ------------------------------------------------
var volatile byte   POSTDEC2                  at { 0xFDD }
-- ------------------------------------------------
var volatile byte   POSTINC2                  at { 0xFDE }
-- ------------------------------------------------
var volatile byte   INDF2                     at { 0xFDF }
-- ------------------------------------------------
var volatile byte   BSR                       at { 0xFE0 }
var volatile bit*4  BSR_BSR                   at BSR : 0
var volatile byte   _bsr                      at { 0xFE0 }
-- ------------------------------------------------
var volatile word   FSR1                      at { 0xFE1 }
var volatile word   _fsr1                     at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1L                     at { 0xFE1 }
var volatile byte   _fsr1l                    at { 0xFE1 }
-- ------------------------------------------------
var volatile byte   FSR1H                     at { 0xFE2 }
var volatile bit*4  FSR1H_FSR1H               at FSR1H : 0
var volatile byte   _fsr1h                    at { 0xFE2 }
-- ------------------------------------------------
var volatile byte   PLUSW1                    at { 0xFE3 }
-- ------------------------------------------------
var volatile byte   PREINC1                   at { 0xFE4 }
-- ------------------------------------------------
var volatile byte   POSTDEC1                  at { 0xFE5 }
-- ------------------------------------------------
var volatile byte   POSTINC1                  at { 0xFE6 }
-- ------------------------------------------------
var volatile byte   INDF1                     at { 0xFE7 }
-- ------------------------------------------------
var volatile byte   WREG                      at { 0xFE8 }
-- ------------------------------------------------
var volatile word   FSR0                      at { 0xFE9 }
var volatile word   _fsr0                     at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0L                     at { 0xFE9 }
var volatile byte   _fsr0l                    at { 0xFE9 }
-- ------------------------------------------------
var volatile byte   FSR0H                     at { 0xFEA }
var volatile bit*4  FSR0H_FSR0H               at FSR0H : 0
var volatile byte   _fsr0h                    at { 0xFEA }
-- ------------------------------------------------
var volatile byte   PLUSW0                    at { 0xFEB }
-- ------------------------------------------------
var volatile byte   PREINC0                   at { 0xFEC }
-- ------------------------------------------------
var volatile byte   POSTDEC0                  at { 0xFED }
-- ------------------------------------------------
var volatile byte   POSTINC0                  at { 0xFEE }
-- ------------------------------------------------
var volatile byte   INDF0                     at { 0xFEF }
var volatile byte   _ind                      at { 0xFEF }
-- ------------------------------------------------
var volatile byte   INTCON3                   at { 0xFF0 }
var volatile bit    INTCON3_INT1IF            at INTCON3 : 0
var volatile bit    INTCON3_INT2IF            at INTCON3 : 1
var volatile bit    INTCON3_INT3IF            at INTCON3 : 2
var volatile bit    INTCON3_INT1IE            at INTCON3 : 3
var volatile bit    INTCON3_INT2IE            at INTCON3 : 4
var volatile bit    INTCON3_INT3IE            at INTCON3 : 5
var volatile bit    INTCON3_INT1IP            at INTCON3 : 6
var volatile bit    INTCON3_INT2IP            at INTCON3 : 7
var volatile bit    INTCON3_INT1F             at INTCON3 : 0
var volatile bit    INTCON3_INT2F             at INTCON3 : 1
var volatile bit    INTCON3_INT3F             at INTCON3 : 2
var volatile bit    INTCON3_INT1E             at INTCON3 : 3
var volatile bit    INTCON3_INT2E             at INTCON3 : 4
var volatile bit    INTCON3_INT3E             at INTCON3 : 5
var volatile bit    INTCON3_INT1P             at INTCON3 : 6
var volatile bit    INTCON3_INT2P             at INTCON3 : 7
-- ------------------------------------------------
var volatile byte   INTCON2                   at { 0xFF1 }
var volatile bit    INTCON2_RBIP              at INTCON2 : 0
var volatile bit    INTCON2_INT3IP            at INTCON2 : 1
var volatile bit    INTCON2_TMR0IP            at INTCON2 : 2
var volatile bit    INTCON2_INTEDG3           at INTCON2 : 3
var volatile bit    INTCON2_INTEDG2           at INTCON2 : 4
var volatile bit    INTCON2_INTEDG1           at INTCON2 : 5
var volatile bit    INTCON2_INTEDG0           at INTCON2 : 6
var volatile bit    INTCON2_NRBPU             at INTCON2 : 7
var volatile bit    INTCON2_INT3P             at INTCON2 : 1
var volatile bit    INTCON2_T0IP              at INTCON2 : 2
var volatile bit    INTCON2_RBPU              at INTCON2 : 7
-- ------------------------------------------------
var volatile byte   INTCON                    at { 0xFF2 }
var volatile bit    INTCON_RBIF               at INTCON : 0
var volatile bit    INTCON_INT0IF             at INTCON : 1
var volatile bit    INTCON_TMR0IF             at INTCON : 2
var volatile bit    INTCON_RBIE               at INTCON : 3
var volatile bit    INTCON_INT0IE             at INTCON : 4
var volatile bit    INTCON_TMR0IE             at INTCON : 5
var volatile bit    INTCON_PEIE_GIEL          at INTCON : 6
var volatile bit    INTCON_GIE_GIEH           at INTCON : 7
var volatile bit    INTCON_INT0F              at INTCON : 1
var volatile bit    INTCON_T0IF               at INTCON : 2
var volatile bit    INTCON_INT0E              at INTCON : 4
var volatile bit    INTCON_T0IE               at INTCON : 5
var volatile bit    INTCON_PEIE               at INTCON : 6
var volatile bit    INTCON_GIE                at INTCON : 7
var volatile bit    INTCON_GIEL               at INTCON : 6
var volatile bit    INTCON_GIEH               at INTCON : 7
-- ------------------------------------------------
var volatile word   PROD                      at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODL                     at { 0xFF3 }
-- ------------------------------------------------
var volatile byte   PRODH                     at { 0xFF4 }
-- ------------------------------------------------
var volatile byte   TABLAT                    at { 0xFF5 }
var volatile byte   _tablat                   at { 0xFF5 }
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    at { 0xFF6 }
var volatile byte*3 _tblptr                   at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRL                   at { 0xFF6 }
var volatile byte   _tblptrl                  at { 0xFF6 }
-- ------------------------------------------------
var volatile byte   TBLPTRH                   at { 0xFF7 }
var volatile byte   _tblptrh                  at { 0xFF7 }
-- ------------------------------------------------
var volatile byte   TBLPTRU                   at { 0xFF8 }
var volatile bit*5  TBLPTRU_TBLPTRU           at TBLPTRU : 0
var volatile bit    TBLPTRU_ACSS              at TBLPTRU : 5
var volatile byte   _tblptru                  at { 0xFF8 }
-- ------------------------------------------------
var volatile byte*3 PCLAT                     at { 0xFF9 }
var volatile byte*3 _pclat                    at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCL                       at { 0xFF9 }
var volatile byte   _pcl                      at { 0xFF9 }
-- ------------------------------------------------
var volatile byte   PCLATH                    at { 0xFFA }
var volatile byte   _pclath                   at { 0xFFA }
-- ------------------------------------------------
var volatile byte   PCLATU                    at { 0xFFB }
var volatile bit*5  PCLATU_PCU                at PCLATU : 0
var volatile byte   _pclatu                   at { 0xFFB }
-- ------------------------------------------------
var volatile byte   STKPTR                    at { 0xFFC }
var volatile bit*5  STKPTR_STKPTR             at STKPTR : 0
var volatile bit    STKPTR_STKUNF             at STKPTR : 6
var volatile bit    STKPTR_STKFUL             at STKPTR : 7
var volatile bit    STKPTR_SP0                at STKPTR : 0
var volatile bit    STKPTR_SP1                at STKPTR : 1
var volatile bit    STKPTR_SP2                at STKPTR : 2
var volatile bit    STKPTR_SP3                at STKPTR : 3
var volatile bit    STKPTR_SP4                at STKPTR : 4
var volatile bit    STKPTR_STKOVF             at STKPTR : 7
var volatile bit    STKPTR_STKPTR0            at STKPTR : 0
var volatile bit    STKPTR_STKPTR1            at STKPTR : 1
var volatile bit    STKPTR_STKPTR2            at STKPTR : 2
var volatile bit    STKPTR_STKPTR3            at STKPTR : 3
var volatile bit    STKPTR_STKPTR4            at STKPTR : 4
-- ------------------------------------------------
var volatile byte*3 TOS                       at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSL                      at { 0xFFD }
-- ------------------------------------------------
var volatile byte   TOSH                      at { 0xFFE }
-- ------------------------------------------------
var volatile byte   TOSU                      at { 0xFFF }
var volatile bit*5  TOSU_TOSU                 at TOSU : 0
--
-- ------------------------------------------------
-- Constants and procedures related to analog features
-- ------------------------------------------------


const byte ADC_ADCS_BITCOUNT  = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000
   ADCON1 = 0b0000_1111
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode when analog module(s) present.
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
-- ------------------------------------------------
--    Miscellaneous information
-- ------------------------------------------------
--
const PPS_GROUP             = PPS_0       -- no Peripheral Pin Selection
--
-- Free shared memory: 0x1-0x5F
--
-- ------------------------------------------------
--    Symbolic Fuse Definitions
-- ------------------------------------------------
--
-- CONFIG1L (0x1FFF8)
--
pragma fuse_def WDT:0  0x1 {             -- Watchdog Timer
       ENABLED = 0x1                     -- Enabled
       CONTROL = 0x0                     -- Disabled-Controlled by SWDTEN bit
       }
pragma fuse_def STVR:0  0x20 {           -- Stack Overflow Reset
       ENABLED = 0x20                    -- Enabled
       DISABLED = 0x0                    -- Disabled
       }
pragma fuse_def XINST:0  0x40 {          -- Extended Instruction Set Enable bit
--     ENABLED = 0x40                    -- NOTE: not supported by JALV2
       DISABLED = 0x0                    -- Disabled
       }
--
-- CONFIG1H (0x1FFF9)
--
pragma fuse_def CP0:1  0x4 {             -- Code Protect
       DISABLED = 0x4                    -- Disabled
       ENABLED = 0x0                     -- Enabled
       }
--
-- CONFIG2L (0x1FFFA)
--
pragma fuse_def OSC:2  0x7 {             -- Oscillator Selection bits
       EC_CLKOUT_PLL = 0x7               -- EC Oscillator with PLL
       EC_CLKOUT = 0x6                   -- EC Oscillator with clock out on RA6
       HS_PLL = 0x5                      -- HS oscillator, PLL enabled
       HS = 0x4                          -- HS oscillator
       INTOSC_CLKOUT_PLL = 0x3           -- INTOSC with PLL enabled, CLKOUT on RA6 and port function on RA7
       INTOSC_CLKOUT = 0x2               -- Internal oscillator, CLKOUT on RA6 and port function on RA7
       INTOSC_NOCLKOUT_PLL = 0x1         -- INTOSC with PLL enabled, port function on RA6 and RA7
       INTOSC_NOCLKOUT = 0x0             -- Internal oscillator, port function on RA6 and RA7 
       }
pragma fuse_def T1DIG:2  0x8 {           -- Secondary Clock Source T1OSCEN Enforcement
       ENABLED = 0x8                     -- Secondary Oscillator clock source may be selected
       DISABLED = 0x0                    -- Secondary Oscillator clock source may not be selected
       }
pragma fuse_def LPT1OSC:2  0x10 {        -- Low-Power Timer1 Oscillator Enable bit
       LOW_POWER = 0x0                   -- Timer1 oscillator configured for low-power operation
       HIGH_POWER = 0x10                 -- Timer1 oscillator configured for higher power operation
       }
pragma fuse_def FCMEN:2  0x40 {          -- Fail-Safe Clock Monitor Enable bit
       DISABLED = 0x0                    -- Fail-Safe Clock Monitor disabled
       ENABLED = 0x40                    -- Fail-Safe Clock Monitor enabled
       }
pragma fuse_def IESO:2  0x80 {           -- Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
       DISABLED = 0x0                    -- Two-Speed Start-up disabled
       ENABLED = 0x80                    -- Two-Speed Start-up enabled
       }
--
-- CONFIG2H (0x1FFFB)
--
pragma fuse_def WDTPS:3  0xF {           -- Watchdog Timer Postscaler Select bits
       P32K = 0xF                        -- 1:32768
       P16K = 0xE                        -- 1:16384
       P8K = 0xD                         -- 1:8192
       P4K = 0xC                         -- 1:4096
       P2K = 0xB                         -- 1:2048
       P1K = 0xA                         -- 1:1024
       P512  = 0x9                       -- 1:512
       P256  = 0x8                       -- 1:256
       P128  = 0x7                       -- 1:128
       P64  = 0x6                        -- 1:64
       P32  = 0x5                        -- 1:32
       P16  = 0x4                        -- 1:16
       P8  = 0x3                         -- 1:8
       P4  = 0x2                         -- 1:4
       P2  = 0x1                         -- 1:2
       P1  = 0x0                         -- 1:1
       }
--
-- CONFIG3L (0x1FFFC)
--
pragma fuse_def RTCOSC:4  0x2 {          -- RTCC Reference Clock Select bit
       T1OSC = 0x2                       -- RTCC uses T1OSC/T1CKI as reference clock
       INTOSC = 0x0                      -- RTCC uses INTOSC/INTRC as reference clock
       }
--
-- CONFIG3H (0x1FFFD)
--
pragma fuse_def CCP2MUX:5  0x1 {         -- CCP2 MUX
       pin_E7 = 0x0                      -- RE7
       pin_C1 = 0x1                      -- RC1
       }
--
