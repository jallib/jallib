/var/www/clients/client1/web2/web/3rdparty/dita-ot-3.7.2/

1. From the tools directory, run "python totrelease.py" to get a list of unreleased libraries and samples. Edit the script first to update the jallib path. Post the list on the Jallib Google group.

2. Clone the jallib repository from GitHub if you haven't already.  "git clone https://github.com/jallib/jallib.git"

3. Set environment variables
	A. export BASEDIR=/var/www/clients/client1/web2
	B. export JALLIB_DIR=$BASEDIR/web/jallib
	B. export DITA_HOME=/var/www/clients/client1/web2/web/3rdparty/dita-ot-3.7.2

4. Update CHANGELOG with the new version
	A. git -C $JALLIB_DIR pull
	B. git -C $JALLIB_DIR clean -f
	C. git -C $JALLIB_DIR restore $JALLIB_DIR
	D. pico CHANGELOG
	B. git add CHANGELOG
	C. git commit

5. Build packages
	A. cd $JALLIB_DIR/tools/
	B. make clean
	D. make release VERSION=<the_version>beta 2>&1 | tee <the_version>beta.log
		#eg. make release VERSION=2.0.0beta 2>&1 | tee 2.0.0beta.log

The Packages are then available under "tools/distrib" directory. The log file can be uploaded to justanotherlanguage.org with the beta. This log file has everything needed to check how the beta has been built, including the SVN revision used

6. Move the package to a download location
	cp $JALLIB_DIR/tools/distrib/*zip $BASEDIR/web/jal.test/prod/sites/default/files/ftp_server/builds/beta/
	rm  $BASEDIR/web/jal.test/prod/sites/default/files/ftp_server/builds/beta/jallib-all_devices-2.0.0beta.zip

7. Modify the jallib packages and create the installer. Edit the packages (ftp them and edit them locally) to
	a. update the version file to remove the word "beta", if not beta
	b. put the compiler into jallib-<the_version>beta.zip
	c. delete doc from jallib-<the_version>beta.zip
	d. create the jallib full win setup program jallib_full_win_setup-<the_version>beta.exe
		- add files to the files directory
			- jaledit0.9.0.9.zip
			- jallib-pack-jalv24q3-2.0.0beta.zip
		- edit /tools/JallibWinSetup/JallibWinSetup.au3, change the FileInstall lines to reflect the included zip file names
		- compile JallibWinSetup.au3
	e. create the jallib full jallib_full-1.1.1beta.zip with c:/jallibworkspace/*
		- install the jallib full setup program
		- don't zip the folder, only zip contents of c:/jallibworkspace/
8. Re-upload the files to jallib downloads

9. Announce mail to jallib, including <the_version>beta.log file !!!

10. Make a release on GitHub
	Go to GitHub and jallib
	Go to 'Releases'. 
	Press the button 'Create a new release'
	Give the release a tag version, I used 'Jallib_1.4.0'. The tag must not contain spaces.
	Give the release a title, e.g. 'Release of Jallib 1.4.0' or something else if you want that makes this release so special. 
	In the description I copied the information with the changes. I do not know why it sometimes makes the description bold while it is all plan text.
	Press the button 'Publish Release'. With a checkbox you can indicate that this is a pre-release but I did not do that just released it.



Example file names to release for beta:
jallib-2.0.0beta4.zip
jallib_full-2.0.0beta4.zip
jallib_full_win_setup-2.0.0beta4.exe

Example file names to release for final:
jallib-2.0.0.zip
jallib_full-2.0.0.zip
jallib_full_win_setup-2.0.0.exe