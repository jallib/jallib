-- Title: GLCD Nokia 3310/5110 demo sample, text and pixel based stuff
-- Author: Sï¿½bastien Lelong, Copyright (c) 2011..2019, all rights reserved.
-- Adapted-by: Rob Hamerling, Rob Jansen
-- Compiler: 2.5r3
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: simple demo showing how to use GLCD Nokia 3310/5110. This is
-- a graphic LCD, widely commonly in DIY projects. This sample shows writing 
-- pixel in combination with text. The text shows the coordinate of the pixel
-- and the cache location used for testing purposes.
--
-- This file has been generated by hand (manually maintained)
--

include 18f4550
pragma target clock 48_000_000
-- magical statements: using a 20MHz Xtal, you can run @48MHz !
pragma target PLLDIV    P5
pragma target CPUDIV    P1
pragma target USBDIV    P2
pragma target OSC       HS_PLL

pragma target WDT  control         -- watchdog
WDTCON_SWDTEN = off                -- no watchdog

pragma target LVP  enabled         -- allow Low Voltage Programming
pragma target MCLR external        -- reset externally

enable_digital_io()

include delay

alias nokia_sclk       is pin_b6    --  assign nokia clock
alias nokia_sda        is pin_b4    --  assign nokia serial data in
alias nokia_res        is pin_c0    --  assign nokia reset
alias nokia_dc         is pin_c2    --  assign nokia data/commant
-- The chip select for the Nokia can be connected to ground to save a pin. If
-- to be controlled by the library then it can be defined here but all the 
-- library does is enable the chip select when nokia_init() is called. If
-- used then define the following:
--    alias nokia_cs         is pin_c1    --  assign nokia chip select
--    pin_c1_direction = output

pin_b6_direction = output
pin_b4_direction = output
pin_c2_direction = output
pin_c0_direction = output


include glcd_5x7_font
include glcd_font
glcd_font_use(FONT_5X7)

-- GLCD lib
include glcd_nokia_5110
nokia_init()
glcd_clear_cache()
include glcd_common

include print

const byte t1[] = "coord "
const byte t2[] = "cache "
 
var word index
var byte x
var byte y

forever loop
   x = 0
   y = 0
   glcd_clear_cache()
   nokia_clear_screen()
   nokia_goto(x,y)
   while y <= GLCD_Y_PIXELS loop
      glcd_write_pixel(x,y)
      nokia_goto(0,10)
      print_string(glcd,t1)
      print_byte_dec(glcd,x)
      glcd = " "
      print_byte_dec(glcd,y)

      -- reset watermark pointers
      glcd_hi_watermark = cache_size - 1
      glcd_lo_watermark = 0

      index = word((word(y/8) * GLCD_X_PIXELS)) + x  
      nokia_goto(0,20)
      print_string(glcd,t2)
      print_word_dec(glcd,index)

      nokia_goto(x,y)
      delay_100ms(10)
      y = y + 1
      x = x + 1
      glcd_cache_update()
   end loop
end loop

