-- Title: GLCD Nokia 3310/5110 demo sample
-- Author: Sï¿½bastien Lelong, Copyright (c) 2011...2019, all rights reserved.
-- Adapted-by: Rob Hamerling, Rob Jansen
-- Compiler: 2.5r3
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: simple demo showing how to use GLCD Nokia 3310/5110. This is
-- a graphic LCD, widely commonly in DIY projects. This sample shows some
-- basic usage, like printing characters using 2 font types.
--
-- This file has been generated by hand (manually maintained)
--

include 18f4550
pragma target clock 48_000_000
-- magical statements: using a 20MHz Xtal, you can run @48MHz !
pragma target PLLDIV    P5
pragma target CPUDIV    P1
pragma target USBDIV    P2
pragma target OSC       HS_PLL

pragma target WDT  control         -- watchdog
WDTCON_SWDTEN = off                -- no watchdog

pragma target LVP  enabled         -- allow Low Voltage Programming
pragma target MCLR external        -- reset externally

enable_digital_io()

include delay

-- Pins to control the Nokia LCD.
alias nokia_sclk       is pin_b6    --  assign nokia clock
alias nokia_sda        is pin_b4    --  assign nokia serial data in
alias nokia_res        is pin_c0    --  assign nokia reset
alias nokia_dc         is pin_c2    --  assign nokia data/command
-- The chip select for the Nokia can be connected to ground to save a pin. If
-- to be controlled by the library then it can be defined here but all the 
-- library does is enable the chip select when nokia_init() is called. If
-- used then define the following:
--    alias nokia_cs         is pin_c1    --  assign nokia chip select
--    pin_c1_direction = output

pin_b6_direction = output
pin_b4_direction = output
pin_c2_direction = output
pin_c0_direction = output

-- font libraries
include glcd_5x7_font
include glcd_6x8_font
include glcd_font

-- GLCD lib
include glcd_nokia_5110
nokia_init()
include glcd_common

include print
const byte font5x7[] = "Font 5x7"
const byte font6x8[] = "Font 6x8"

var byte x
var bit use_font_1 = false
forever loop

   -- each time we've printed numbers and letters,
   -- we want to have the screen cleared and we
   -- want to start at the beginning
   nokia_clear_screen()
   nokia_goto(0,0)

   -- switch fonts and inform user
   use_font_1 = !use_font_1
   if use_font_1 then
      glcd_font_use(FONT_5X7)
      print_string(glcd,font5x7)
      delay_1s(1)
   else
      glcd_font_use(FONT_6X8)
      print_string(glcd,font6x8)
      delay_1s(1)
   end if

   nokia_clear_screen()
   nokia_goto(0,0)

   -- we'll print numbers starting with "0"
   x = 48
   -- numbers are printed inverted
   glcd_background_color = GLCD_BLACK
   while x <= 57 loop
      glcd = x
      delay_100ms(1)
      x = x + 1
   end loop
   
   -- now print capital letters and small letters
   x = 65  -- this is "A"
   -- not inverted (ie. normal)
   glcd_background_color = GLCD_WHITE
   while x <= 122 loop
      glcd = x
      delay_100ms(1)
      x = x + 1
   end loop

   delay_1s(3)
   
end loop

