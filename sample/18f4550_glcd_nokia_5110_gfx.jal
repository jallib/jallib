-- Title: GLCD Nokia 3310/5110 demo sample, pixel based stuff
-- Author: Sï¿½bastien Lelong, Copyright (c) 2011..2019, all rights reserved.
-- Adapted-by: Rob Jansen
-- Compiler: 2.5r3 
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: simple demo showing how to use GLCD Nokia 3310/5110. This is
-- a graphic LCD, widely commonly in DIY projects. This sample shows some
-- basic usage with pixels related stuff demo like: plotting pixels, lines, etc...
--
-- This file has been generated by hand (manually maintained)
--

include 18f4550
pragma target clock 48_000_000
-- magical statements: using a 20MHz Xtal, you can run @48MHz !
pragma target PLLDIV    P5
pragma target CPUDIV    P1
pragma target USBDIV    P2
pragma target OSC       HS_PLL

pragma target WDT  control         -- watchdog
WDTCON_SWDTEN = off                -- no watchdog

pragma target LVP  enabled         -- allow Low Voltage Programming
pragma target MCLR external        -- reset externally

enable_digital_io()

include delay

-- Pins to control the Nokia LCD.
alias nokia_sclk       is pin_b6    --  assign nokia clock
alias nokia_sda        is pin_b4    --  assign nokia serial data in
alias nokia_res        is pin_c0    --  assign nokia reset
alias nokia_dc         is pin_c2    --  assign nokia data/commant
-- The chip select for the Nokia can be connected to ground to save a pin. If
-- to be controlled by the library then it can be defined here but all the 
-- library does is enable the chip select when nokia_init() is called. If
-- used then define the following:                                     
--    alias nokia_cs         is pin_c1    --  assign nokia chip select
--    pin_c1_direction = output

pin_b6_direction = output
pin_b4_direction = output
pin_c2_direction = output
pin_c0_direction = output

include print

include glcd_5x7_font
include glcd_font
glcd_font_use(FONT_5X7)

-- GLCD lib
include glcd_nokia_5110
nokia_init()
include glcd_common

const byte tline[] = "Line"
const byte tbox[] = "Box"
const byte tcircle[] = "Circle"
const byte tellipse[] = "Ellipse"

forever loop
   glcd_clear_cache()
   nokia_clear_screen()
   nokia_goto(0,0)
   print_string(glcd,tline)
   delay_1s(2)
   glcd_line(10,10,60,40)
   glcd_cache_update()
   delay_1s(2)

   glcd_clear_cache()
   nokia_clear_screen()
   nokia_goto(0,0)
   print_string(glcd,tbox)
   delay_1s(2)
   glcd_box(4,4,80,40)
   glcd_cache_update()
   delay_1s(2)

   glcd_clear_cache()
   nokia_clear_screen()
   nokia_goto(0,0)
   print_string(glcd,tcircle)
   delay_1s(2)
   glcd_circle(40,25,20)
   glcd_cache_update()
   delay_1s(2)

   glcd_clear_cache()
   nokia_clear_screen()
   nokia_goto(0,0)
   print_string(glcd,tellipse)
   delay_1s(2)
   glcd_ellipse(40,20,30,10)
   glcd_cache_update()
   delay_1s(2)

end loop


