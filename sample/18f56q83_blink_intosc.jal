-- ------------------------------------------------------
-- Title: Blink-a-led of the Microchip pic18f56q83
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2025 all rights reserved.
--
-- Adapted-by: N/A (generated file, do not change!)
--
-- Compiler: 2.5r9
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Simple blink-a-led program for Microchip pic18f56q83
--    using the internal oscillator.
--    The LED should be flashing twice a second!
--
-- Sources:
--
-- Notes:
--    - This file is generated by <blink-a-led.py> script version 2.0
--    - File creation date/time: Sat Mar 22 19:16:32 2025
--
-- ------------------------------------------------------
--
include 18f56q83                     -- target PICmicro
--
-- This program uses the internal oscillator at 4 MHz.
pragma target clock    4_000_000       -- oscillator frequency
--
pragma target OSC      OFF                       -- internal oscillator
pragma target RSTOSC   HFINTOSC_64MHZ            -- select 64 MHz
pragma target CLKOUTEN DISABLED                  -- no clock output
pragma target WDT      DISABLED                  -- watchdog
pragma target XINST    DISABLED                  -- do not use extended instructionset
pragma target BROWNOUT DISABLED                  -- no brownout reset
pragma target FCMEN    DISABLED                  -- no clock monitoring
pragma target CSWEN    ENABLED                   -- allow writing OSCCON1 NOSC and NDIV
pragma target LVP      ENABLED                   -- low voltage programming
pragma target MCLR     EXTERNAL                  -- external reset
pragma target MVECEN   DISABLED                  -- Do not use multi vectored interrupts
pragma target JTAGEN   DISABLED                  -- no JTAG to enable all I/O pins
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program. Other programs may need more or different settings.
--
OSCFRQ_HFFRQ = 0b0010               -- Fosc 64 -> 4 MHz
--
enable_digital_io()                 -- make all pins digital I/O
--
-- A low current (2 mA) led with 2.2K series resistor is recommended
-- since the chosen pin may not be able to drive an ordinary 20mA led.
--
alias  led       is pin_A0          -- alias for pin with LED
--
pin_A0_direction = OUTPUT
--
forever loop
   led = ON
   _usec_delay(100_000)
   led = OFF
   _usec_delay(400_000)
end loop
--
